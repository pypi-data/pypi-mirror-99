environment:
  matrix:
  - PYTHON: "C:\\PYTHON38-x64"
build: off
install:
- set PATH=C:\msys64\usr\bin;%PATH%
# Load PGP Keys for Msys64
- bash -lc "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
- bash -lc "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
- bash -lc "pacman-key --verify msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
- bash -lc "pacman -U --noconfirm --config <(echo) msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
# Kill gpg-agent due to bug in MSYS
- TaskKill /IM gpg-agent.exe /F
# Download and unpack zstd for win64 to unpack MSYS packages
- appveyor DownloadFile https://github.com/facebook/zstd/releases/download/v1.4.8/zstd-v1.4.8-win64.zip
- 7z e zstd-v1.4.8-win64.zip -ozstd -y
# Download and install zstd for MSYS due to bug in MSYS
- appveyor DownloadFile http://repo.msys2.org/mingw/x86_64/mingw-w64-x86_64-zstd-1.4.8-2-any.pkg.tar.zst
- zstd\zstd.exe -d mingw-w64-x86_64-zstd-1.4.8-2-any.pkg.tar.zst
- dir
- 7z a -tgzip mingw-w64-x86_64-zstd-1.4.8-2-any.pkg.tar.gz mingw-w64-x86_64-zstd-1.4.8-2-any.pkg.tar
- bash -lc "cd /c/projects/python-tkextrafont; ls -l; pacman --noconfirm -U mingw-w64-x86_64-zstd-1.4.8-2-any.pkg.tar.gz"
# Download and install pacman for MSYS due to bug in MSYS
- appveyor DownloadFile http://repo.msys2.org/msys/x86_64/pacman-5.2.2-9-x86_64.pkg.tar.zst
- 7z e zstd-v1.4.8-win64.zip -ozstd -y
- zstd\zstd.exe -d pacman-5.2.2-9-x86_64.pkg.tar.zst
- dir
- 7z a -tgzip pacman-5.2.2-9-x86_64.pkg.tar.gz pacman-5.2.2-9-x86_64.pkg.tar
- bash -lc "cd /c/projects/python-tkextrafont; ls -l; pacman --noconfirm --nodeps --nodeps -U pacman-5.2.2-9-x86_64.pkg.tar.gz"
# Cleanup after bug workarounds
- bash -lc "rm -rf zstd"
- bash -lc "rm -rf *.tar *.zst"
# Update known packages
- bash -lc "pacman --needed --noconfirm -Syu"
- bash -lc "pacman --needed --noconfirm -Sy"
# Install Python build dependencies
- "%PYTHON%\\python.exe -m pip install scikit-build nose"
# Now using MinGW pkg-config and related executables
- set PATH=C:\msys64\mingw64\bin;%PATH%
# Download Dependencies (dependency walker)
- appveyor DownloadFile https://github.com/lucasg/Dependencies/releases/download/v1.10/Dependencies_x64_Release.zip
- 7z e Dependencies_x64_Release.zip -odeps -y
# Add %PYTHON% to the path for libffi-7.dll
- set PATH=%PYTHON%;C:\msys64\mingw64\lib;%PATH%
build_script:
- "%PYTHON%\\python.exe setup.py build bdist_wheel"
# Simplify PATH so as to test binary distribution
- set PATH=C:\WINDOWS\system32;C:\WINDOWS
test_script:
- "%PYTHON%\\python.exe -m nose"
artifacts:
  - path: "/dist/*.whl"
deploy:
  provider: GitHub
  auth_token:
    secure: w1pwzVAnkw938lSYuIKnVbkHtid9YphEEZuHsvftTV5f5KjBAQH3283q7Um5j3xU
  artifact: /.*\.whl/
  draft: false
  prerelease: false
  on:
    branch: master
    APPVEYOR_REPO_TAG: true
