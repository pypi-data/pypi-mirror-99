"validate-source-extfield-details"
**********************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

test extended fields


Usage
=====

   oci log-analytics source validate-source-extfield-details [OPTIONS]


Required Parameters
===================

--namespace-name [text]

The Logging Analytics namespace used for the request.


Optional Parameters
===================

--assoc-count [text]

Association count

--assoc-entity [text]

Association entity

--data-filter-definitions [complex type]

data filter definitions

This option is a JSON list with items of type
LogAnalyticsSourceDataFilter.  For documentation on
LogAnalyticsSourceDataFilter please see our API reference: https://do
cs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnaly
ticsSourceDataFilter. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--database-credential [text]

DB credential

--description [text]

description

--display-name [text]

display name

--edit-version [integer]

source edit version

--entity-types [complex type]

Entity types

This option is a JSON list with items of type
LogAnalyticsSourceEntityType.  For documentation on
LogAnalyticsSourceEntityType please see our API reference: https://do
cs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnaly
ticsSourceEntityType. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--event-types [complex type]

An array of event types.

This option is a JSON list with items of type EventType.  For
documentation on EventType please see our API reference: https://docs
.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/EventType.
This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--extfield-defs [text]

Extended Field Definitions

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--functions [complex type]

source functions

This option is a JSON list with items of type
LogAnalyticsSourceFunction.  For documentation on
LogAnalyticsSourceFunction please see our API reference: https://docs
.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyti
csSourceFunction. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--is-auto-assoc-enabled [text]

Auto associaton enabled flag

--is-auto-assoc-override [text]

Auto associaton override flag

--is-for-cloud [boolean]

is for cloud flag

--is-secure-content [boolean]

is secure content flag

--is-system [boolean]

is system flag

--is-timezone-override [boolean]

time zone override

--label-conditions [complex type]

alert conditions

This option is a JSON list with items of type
LogAnalyticsSourceLabelCondition.  For documentation on
LogAnalyticsSourceLabelCondition please see our API reference: https:
//docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogA
nalyticsSourceLabelCondition. This is a complex type whose value must
be valid JSON. The value can be provided as a string on the command
line or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--label-definitions [complex type]

tags

This option is a JSON list with items of type
LogAnalyticsLabelDefinition.  For documentation on
LogAnalyticsLabelDefinition please see our API reference: https://doc
s.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalyt
icsLabelDefinition. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--labels [complex type]

labels

This option is a JSON list with items of type LogAnalyticsLabelView.
For documentation on LogAnalyticsLabelView please see our API
reference: https://docs.cloud.oracle.com/api/#/en/loganalytics/202006
01/datatypes/LogAnalyticsLabelView. This is a complex type whose value
must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--metadata-fields [complex type]

source metadata fields

This option is a JSON list with items of type
LogAnalyticsSourceMetadataField.  For documentation on
LogAnalyticsSourceMetadataField please see our API reference: https:/
/docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAn
alyticsSourceMetadataField. This is a complex type whose value must be
valid JSON. The value can be provided as a string on the command line
or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--metric-definitions [complex type]

metric definitions

This option is a JSON list with items of type LogAnalyticsMetric.  For
documentation on LogAnalyticsMetric please see our API reference: htt
ps://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/L
ogAnalyticsMetric. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--metrics [complex type]

metric source map

This option is a JSON list with items of type
LogAnalyticsSourceMetric.  For documentation on
LogAnalyticsSourceMetric please see our API reference: https://docs.c
loud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalytics
SourceMetric. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--name [text]

source internal name

--oob-parsers [complex type]

out-of-the-box source parser list

This option is a JSON list with items of type LogAnalyticsParser.  For
documentation on LogAnalyticsParser please see our API reference: htt
ps://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/L
ogAnalyticsParser. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--parameters [complex type]

parameters

This option is a JSON list with items of type LogAnalyticsParameter.
For documentation on LogAnalyticsParameter please see our API
reference: https://docs.cloud.oracle.com/api/#/en/loganalytics/202006
01/datatypes/LogAnalyticsParameter. This is a complex type whose value
must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--parsers [complex type]

parser list

This option is a JSON list with items of type LogAnalyticsParser.  For
documentation on LogAnalyticsParser please see our API reference: htt
ps://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/L
ogAnalyticsParser. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--pattern-count [integer]

pattern count

--patterns [complex type]

patterns

This option is a JSON list with items of type
LogAnalyticsSourcePattern.  For documentation on
LogAnalyticsSourcePattern please see our API reference: https://docs.
cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/LogAnalytic
sSourcePattern. This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--rule-id [integer]

rule Id

--source-id [integer]

source Id

--time-updated [datetime]

timeUpdated

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400

--type-display-name [text]

source type name

--type-name [text]

source type internal name

--user-parsers [complex type]

source parser list

This option is a JSON list with items of type LogAnalyticsParser.  For
documentation on LogAnalyticsParser please see our API reference: htt
ps://docs.cloud.oracle.com/api/#/en/loganalytics/20200601/datatypes/L
ogAnalyticsParser. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--warning-config [integer]

source warning configuration


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
