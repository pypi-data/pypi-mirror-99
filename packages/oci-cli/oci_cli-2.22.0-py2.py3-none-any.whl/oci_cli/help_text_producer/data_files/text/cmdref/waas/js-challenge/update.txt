"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Updates the JavaScript challenge settings in the Web Application
Firewall configuration for a WAAS policy. JavaScript Challenge
validates that the client can accept JavaScript with a binary
decision. For more information, see Bot Management.


Usage
=====

   oci waas js-challenge update [OPTIONS]


Required Parameters
===================

--is-enabled [boolean]

Enables or disables the JavaScript challenge Web Application Firewall
feature.

--waas-policy-id [text]

The OCID of the WAAS policy.


Optional Parameters
===================

--action [text]

The action to take against requests from detected bots. If
unspecified, defaults to *DETECT*.

Accepted values are:

   BLOCK, DETECT

--action-expiration-in-seconds [integer]

The number of seconds between challenges from the same IP address. If
unspecified, defaults to *60*.

--are-redirects-challenged [boolean]

When enabled, redirect responses from the origin will also be
challenged. This will change HTTP 301/302 responses from origin to
HTTP 200 with an HTML body containing JavaScript page redirection.

--challenge-settings [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--criteria [complex type]

When defined, the JavaScript Challenge would be applied only for the
requests that matched all the listed conditions.

This option is a JSON list with items of type AccessRuleCriteria.  For
documentation on AccessRuleCriteria please see our API reference: htt
ps://docs.cloud.oracle.com/api/#/en/waas/20181116/datatypes/AccessRul
eCriteria. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--failure-threshold [integer]

The number of failed requests before taking action. If unspecified,
defaults to *10*.

--force

Perform update without prompting for confirmation.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the *PUT* or *DELETE* call for
a resource, set the *if-match* parameter to the value of the etag from
a previous *GET* or *POST* response for that resource. The resource
will be updated or deleted only if the etag provided matches the
resource's current etag value.

--is-nat-enabled [boolean]

When enabled, the user is identified not only by the IP address but
also by an unique additional hash, which prevents blocking visitors
with shared IP addresses.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--set-http-header [complex type]

Adds an additional HTTP header to requests that fail the challenge
before being passed to the origin. Only applicable when the *action*
is set to *DETECT*. This is a complex type whose value must be valid
JSON. The value can be provided as a string on the command line or
passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
to see if it has reached the state defined by "--wait-for-state".
Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
