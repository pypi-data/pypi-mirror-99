"update-browser-monitor"
************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Updates the monitor.


Usage
=====

   oci apm-synthetics monitor update-browser-monitor [OPTIONS]


Required Parameters
===================

--apm-domain-id [text]

The APM domain ID the request is intended for.

--monitor-id [text]

The OCID of the monitor.


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{"foo-namespace": {"bar-key": "value"}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

Unique name that can be edited. The name should not contain any
confidential information.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{"bar-
key": "value"}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.

--is-certificate-validation-enabled [boolean]

If validation enabled, then call will fail for certificate errors.

--is-failure-retried [boolean]

If isFailureRetried enabled, then if call is failed then it will be
retried.

--repeat-interval-in-seconds [integer]

Interval in seconds after the start time when the job should be
repeated. Minimum repeatIntervalInSeconds should be 300 seconds.

--script-id [text]

The OCID of the script. scriptId is mandatory for creation of
SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor
types, it should be set to null.

--script-parameters [complex type]

List of script parameters in the monitor. This is valid only for
SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor
types, it should be set to null. Example: *[{"paramName": "userid",
"paramValue":"testuser"}]*

This option is a JSON list with items of type MonitorScriptParameter.
For documentation on MonitorScriptParameter please see our API
reference: https://docs.cloud.oracle.com/api/#/en/apmsynthetic/202006
30/datatypes/MonitorScriptParameter. This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--status [text]

Enables or disables the monitor.

Accepted values are:

   DISABLED, ENABLED, INVALID

--target [text]

Specify the endpoint on which to run the monitor. For BROWSER and REST
monitor types, target is mandatory. If target is specified in the
SCRIPTED_BROWSER monitor type, then the monitor will run the selected
script (specified by scriptId in monitor) against the specified target
endpoint. If target is not specified in the SCRIPTED_BROWSER monitor
type, then the monitor will run the selected script as it is.

--timeout-in-seconds [integer]

Timeout in seconds. Timeout cannot be more than 30% of
repeatIntervalInSeconds time for monitors. Also, timeoutInSeconds
should be a multiple of 60. Monitor will be allowed to run only for
timeoutInSeconds time. It would be terminated after that.

--vantage-points [complex type]

A list of vantage points from which to execute the monitor. Use
/publicVantagePoints to fetch public vantage points. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--verify-texts [complex type]

Verify all the search strings present in response. If any search
string is not present in the response, then it will be considered as a
failure.

This option is a JSON list with items of type VerifyText.  For
documentation on VerifyText please see our API reference: https://doc
s.cloud.oracle.com/api/#/en/apmsynthetic/20200630/datatypes/VerifyTex
t. This is a complex type whose value must be valid JSON. The value
can be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
