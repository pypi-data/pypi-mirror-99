"summarize-database-insight-resource-usage-trend"
*************************************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Returns response with time series data (endTimestamp, usage, capacity)
for the time period specified. The maximum time range for analysis is
2 years, hence this is intentionally not paginated.


Usage
=====

   oci opsi database-insights summarize-database-insight-resource-usage-trend [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment.

--resource-metric [text]

Filter by resource metric. Supported values are CPU and STORAGE.


Optional Parameters
===================

--analysis-time-interval [text]

Specify time period in ISO 8601 format with respect to current time.
Default is last 30 days represented by P30D. If timeInterval is
specified, then timeIntervalStart and timeIntervalEnd will be ignored.
Examples  P90D (last 90 days), P4W (last 4 weeks), P2M (last 2
months), P1Y (last 12 months), . Maximum value allowed is 25 months
prior to current time (P25M).

--database-id [text]

Optional list of database OCIDs.

--database-type [text]

Filter by one or more database type. Possible values are ADW-S, ATP-S,
ADW-D, ATP-D

Accepted values are:

   ADW-D, ADW-S, ATP-D, ATP-S

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--page [text]

For list pagination. The value of the *opc-next-page* response header
from the previous "List" call. For important details about how
pagination works, see List Pagination.

--sort-by [text]

Sorts using end timestamp, usage or capacity

Accepted values are:

   capacity, endTimestamp, usage

--sort-order [text]

The sort order to use, either ascending (*ASC*) or descending
(*DESC*).

Accepted values are:

   ASC, DESC

--time-interval-end [datetime]

Analysis end time in UTC in ISO 8601 format(exclusive). Example
2019-10-30T00:00:00Z (yyyy-MM-ddThh:mm:ssZ). timeIntervalStart and
timeIntervalEnd are used together. If timeIntervalEnd is not
specified, current time is used as timeIntervalEnd.

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400

--time-interval-start [datetime]

Analysis start time in UTC in ISO 8601 format(inclusive). Example
2019-10-30T00:00:00Z (yyyy-MM-ddThh:mm:ssZ). The minimum allowed value
is 2 years prior to the current day. timeIntervalStart and
timeIntervalEnd parameters are used together. If analysisTimeInterval
is specified, this parameter is ignored.

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
