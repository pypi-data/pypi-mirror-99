.\" Man page generated from reStructuredText.
.
.TH "KMS_CRYPTO" "1" "Mar 23, 2021" "2.22.0" "OCI CLI Command Reference"
.SH NAME
kms_crypto \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Operations for performing data encryption, decryption and generation of data encryption keys.
.SH AVAILABLE COMMANDS
.INDENT 0.0
.IP \(bu 2
decrypt
.IP \(bu 2
encrypt
.IP \(bu 2
generate\-data\-encryption\-key
.IP \(bu 2
key
.INDENT 2.0
.IP \(bu 2
export
.UNINDENT
.IP \(bu 2
signed\-data
.INDENT 2.0
.IP \(bu 2
sign
.UNINDENT
.IP \(bu 2
verified\-data
.INDENT 2.0
.IP \(bu 2
verify
.UNINDENT
.UNINDENT
.SS \fBdecrypt\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.UNINDENT
.SS Description
.sp
Decrypts data using the given \fI\%DecryptDataDetails\fP <\fBhttps://docs.cloud.oracle.com/api/#/en/key/latest/datatypes/DecryptDataDetails\fP> resource.
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto decrypt [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-ciphertext [text]
.UNINDENT
.sp
The encrypted data to decrypt.
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the key used to encrypt the ciphertext.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-associated\-data [complex type]
.UNINDENT
.sp
Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-encryption\-algorithm [text]
.UNINDENT
.sp
Encryption algorithm to be used while encrypting/decrypting data using a customer key AES_256_GCM is the supported value AES keys and uses GCM mode of operation RSA_OAEP_SHA_1 and RSA_OAEP_SHA_256 are supported for RSA keys and use OAEP padding.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
AES_256_GCM, RSA_OAEP_SHA_1, RSA_OAEP_SHA_256
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-key\-version\-id [text]
.UNINDENT
.sp
The OCID of the keyVersion used to encrypt the ciphertext.
.INDENT 0.0
.TP
.B \-\-logging\-context [complex type]
.UNINDENT
.sp
Information that provides context for audit logging. You can provide this additional data as key\-value pairs to include in audit logs when audit logging is enabled.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SS \fBencrypt\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.UNINDENT
.SS Description
.sp
Encrypts data using the given \fI\%EncryptDataDetails\fP <\fBhttps://docs.cloud.oracle.com/api/#/en/key/latest/datatypes/EncryptDataDetails\fP> resource. Plaintext included in the example request is a base64\-encoded value of a UTF\-8 string.
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto encrypt [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the key to encrypt with.
.INDENT 0.0
.TP
.B \-\-plaintext [text]
.UNINDENT
.sp
The plaintext data to encrypt.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-associated\-data [complex type]
.UNINDENT
.sp
Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-encryption\-algorithm [text]
.UNINDENT
.sp
Encryption algorithm to be used while encrypting/decrypting data using a customer key AES_256_GCM is the supported value AES keys and uses GCM mode of operation RSA_OAEP_SHA_1 and RSA_OAEP_SHA_256 are supported for RSA keys and use OAEP padding.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
AES_256_GCM, RSA_OAEP_SHA_1, RSA_OAEP_SHA_256
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-key\-version\-id [text]
.UNINDENT
.sp
The OCID of the keyVersion used to encrypt the ciphertext.
.INDENT 0.0
.TP
.B \-\-logging\-context [complex type]
.UNINDENT
.sp
Information that provides context for audit logging. You can provide this additional data as key\-value pairs to include in the audit logs when audit logging is enabled.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SS \fBgenerate\-data\-encryption\-key\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.UNINDENT
.SS Description
.sp
Generates a key that you can use to encrypt or decrypt data.
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto generate\-data\-encryption\-key [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-include\-plaintext\-key [boolean]
.UNINDENT
.sp
If true, the generated key is also returned unencrypted.
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the master encryption key to encrypt the generated data encryption key with.
.INDENT 0.0
.TP
.B \-\-key\-shape [complex type]
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-associated\-data [complex type]
.UNINDENT
.sp
Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-logging\-context [complex type]
.UNINDENT
.sp
Information that provides context for audit logging. You can provide this additional data by formatting it as key\-value pairs to include in audit logs when audit logging is enabled.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SS key
.SS Description
.sp
The response to a request to export key material.
.SS Available Commands
.INDENT 0.0
.IP \(bu 2
export
.UNINDENT
.SS \fBexport\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.UNINDENT
.SS Description
.sp
Exports a specific version of a master encryption key according to the details of the request. For their protection, keys that you create and store on a hardware security module (HSM) can never leave the HSM. You can only export keys stored on the server. For export, the key version is encrypted by an RSA public key that you provide.
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto key export [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-algorithm [text]
.UNINDENT
.sp
The encryption algorithm to use to encrypt exportable key material from a software\-backed key. Specifying \fIRSA_OAEP_AES_SHA256\fP invokes the RSA AES key wrap mechanism, which generates a temporary AES key. The temporary AES key is wrapped by the RSA public wrapping key provided along with the request, creating a wrapped temporary AES key. The temporary AES key is also used to wrap the exportable key material. The wrapped temporary AES key and the wrapped exportable key material are concatenated, producing concatenated blob output that jointly represents them. Specifying \fIRSA_OAEP_SHA256\fP means that the software key is wrapped by the RSA public wrapping key provided along with the request.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
RSA_OAEP_AES_SHA256, RSA_OAEP_SHA256
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the master encryption key associated with the key version you want to export.
.INDENT 0.0
.TP
.B \-\-public\-key [text]
.UNINDENT
.sp
The PEM format of the 2048\-bit, 3072\-bit, or 4096\-bit RSA wrapping key in your possession that you want to use to encrypt the key.
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-key\-version\-id [text]
.UNINDENT
.sp
The OCID of the specific key version to export. If not specified, the service exports the current key version.
.INDENT 0.0
.TP
.B \-\-logging\-context [complex type]
.UNINDENT
.sp
Information that provides context for audit logging. You can provide this additional data as key\-value pairs to include in the audit logs when audit logging is enabled.
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SS signed\-data
.SS Description
.SS Available Commands
.INDENT 0.0
.IP \(bu 2
sign
.UNINDENT
.SS \fBsign\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.UNINDENT
.SS Description
.sp
Creates a digital signature for a message or message digest by using the private key in an asymmetric key. To verify the generated signature, you can use the Verify operation or use the public key in the same asymmetric key outside of KMS
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto signed\-data sign [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the key used to sign the message
.INDENT 0.0
.TP
.B \-\-message [text]
.UNINDENT
.sp
The Base64\-encoded binary data object denoting the message or message digest to be signed. Message can be upto 4096 size in bytes. To sign a larger message, provide the message digest.
.INDENT 0.0
.TP
.B \-\-signing\-algorithm [text]
.UNINDENT
.sp
The algorithm to be used for signing the message or message digest For RSA keys, there are two supported Signature Schemes: PKCS1 and PSS along with different Hashing algorithms. For ECDSA keys, ECDSA is the supported signature scheme with different hashing algorithms. In case of passing digest for signing, make sure the same hashing algorithm is specified as used for created for digest.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ECDSA_SHA_256, ECDSA_SHA_384, ECDSA_SHA_512, SHA_224_RSA_PKCS1_V1_5, SHA_224_RSA_PKCS_PSS, SHA_256_RSA_PKCS1_V1_5, SHA_256_RSA_PKCS_PSS, SHA_384_RSA_PKCS1_V1_5, SHA_384_RSA_PKCS_PSS, SHA_512_RSA_PKCS1_V1_5, SHA_512_RSA_PKCS_PSS
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-key\-version\-id [text]
.UNINDENT
.sp
The OCID of the keyVersion used to sign the message.
.INDENT 0.0
.TP
.B \-\-message\-type [text]
.UNINDENT
.sp
Denotes whether the value of the message parameter is a raw message or a message digest. The default value, RAW, indicates a message. To indicate a message digest, use DIGEST.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DIGEST, RAW
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SS verified\-data
.SS Description
.SS Available Commands
.INDENT 0.0
.IP \(bu 2
verify
.UNINDENT
.SS \fBverify\fP
.INDENT 0.0
.IP \(bu 2
\fI\%Description\fP
.IP \(bu 2
\fI\%Usage\fP
.IP \(bu 2
\fI\%Required Parameters\fP
.IP \(bu 2
\fI\%Optional Parameters\fP
.IP \(bu 2
\fI\%Global Parameters\fP
.UNINDENT
.SS Description
.sp
Verifies a digital signature that was generated by the Sign operation using the public key in the same asymmetric key. You can also verify the digital signature by using the public key in the asymmetric key outside of KMS
.sp
The top level \-\-endpoint parameter must be supplied for this operation.
.SS Usage
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci kms crypto verified\-data verify [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Required Parameters
.INDENT 0.0
.TP
.B \-\-key\-id [text]
.UNINDENT
.sp
The OCID of the key used to sign the message
.INDENT 0.0
.TP
.B \-\-key\-version\-id [text]
.UNINDENT
.sp
The OCID of the keyVersion used to sign the message
.INDENT 0.0
.TP
.B \-\-message [text]
.UNINDENT
.sp
The Base64\-encoded binary data object denoting the message or message digest to be signed. Message can be upto 4096 size in bytes. To sign a larger message, provide the message digest.
.INDENT 0.0
.TP
.B \-\-signature [text]
.UNINDENT
.sp
The Base64\-encoded binary data object denoting the cryptographic signature that was generated for the message.
.INDENT 0.0
.TP
.B \-\-signing\-algorithm [text]
.UNINDENT
.sp
The algorithm to be used for signing the message or message digest For RSA keys, there are two supported Signature Schemes: PKCS1 and PSS along with different Hashing algorithms. For ECDSA keys, ECDSA is the supported signature scheme with different hashing algorithms. In case of passing digest for signing, make sure the same hashing algorithm is specified as used for created for digest.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ECDSA_SHA_256, ECDSA_SHA_384, ECDSA_SHA_512, SHA_224_RSA_PKCS1_V1_5, SHA_224_RSA_PKCS_PSS, SHA_256_RSA_PKCS1_V1_5, SHA_256_RSA_PKCS_PSS, SHA_384_RSA_PKCS1_V1_5, SHA_384_RSA_PKCS_PSS, SHA_512_RSA_PKCS1_V1_5, SHA_512_RSA_PKCS_PSS
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Optional Parameters
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-message\-type [text]
.UNINDENT
.sp
Denotes whether the value of the message parameter is a raw message or a message digest. The default value, RAW, indicates a message. To indicate a message digest, enter DIGEST.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DIGEST, RAW
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Global Parameters
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\-purpose\fP, \fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-latest\-version\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-release\-info\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2021, Oracle
.\" Generated by docutils manpage writer.
.
