"create"
********

* Description

* Usage

* Optional Parameters

* Global Parameters


Description
===========

Creates a new volume in the specified compartment. Volumes can be
created in sizes ranging from 50 GB (51200 MB) to 16 TB (16777216 MB),
in 1 GB (1024 MB) increments. By default, volumes are 1 TB (1048576
MB). For general information about block volumes, see Overview of
Block Volume Service.

A volume and instance can be in separate compartments but must be in
the same Availability Domain. For information about access control and
compartments, see Overview of the IAM Service. For information about
Availability Domains, see Regions and Availability Domains. To get a
list of Availability Domains, use the *ListAvailabilityDomains*
operation in the Identity and Access Management Service API.

You may optionally specify a *display name* for the volume, which is
simply a friendly name or description. It does not have to be unique,
and you can change it. Avoid entering confidential information.


Usage
=====

   oci bv volume create [OPTIONS]


Optional Parameters
===================

--availability-domain [text]

The Availability Domain of the volume.

Example:

   Uocm:PHX-AD-1

--backup-policy-id [text]

If provided, specifies the ID of the volume backup policy to assign to
the newly created volume. If omitted, no policy will be assigned.

--compartment-id, -c [text]

The OCID of the compartment that contains the volume.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A user-friendly name. Does not have to be unique, and it's changeable.
Avoid entering confidential information.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--is-auto-tune-enabled [boolean]

Specifies whether the auto-tune performance is enabled for this
volume.

--kms-key-id [text]

The OCID of the Key Management key to assign as the master encryption
key for the volume.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--size-in-gbs [integer]

The size of the volume in GBs.

--size-in-mbs [integer]

[DEPRECATED] The size of the volume in MBs. The value must be a
multiple of 1024. This field is deprecated. Use --size-in-gbs instead.

--source-volume-id [text]

The OCID of a Block volume in the same Availability Domain from which
the data should be cloned to the newly created volume. You can specify
either this or --volume-backup-id but not both. If neither is
specified then the new Block volume will be empty.

--volume-backup-id [text]

The OCID of the volume backup from which the data should be restored
on the newly created volume. You can specify either this or --source-
volume-id but not both. If neither is specified then the new Block
volume will be empty.

--vpus-per-gb [integer]

The number of volume performance units (VPUs) that will be applied to
this volume per GB, representing the Block Volume service's elastic
performance options. See Block Volume Elastic Performance for more
information.

Allowed values:

   * *0*: Represents Lower Cost option.

   * *10*: Represents Balanced option.

   * *20*: Represents Higher Performance option.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   AVAILABLE, FAULTY, PROVISIONING, RESTORING, TERMINATED, TERMINATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource to
see if it has reached the lifecycle state defined by "--wait-for-
state". Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
