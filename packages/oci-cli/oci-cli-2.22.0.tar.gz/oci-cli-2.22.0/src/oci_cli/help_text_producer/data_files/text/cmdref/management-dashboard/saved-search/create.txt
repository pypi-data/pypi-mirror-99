"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Creates a new saved search.


Usage
=====

   oci management-dashboard saved-search create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

OCID of the compartment in which the saved search resides.

--data-config [complex type]

Array of JSON that contain data source options. This is a complex type
whose value must be valid JSON. The value can be provided as a string
on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

Description of the saved search.

--display-name [text]

Display name of the saved search.

--is-oob-saved-search [boolean]

Determines whether the saved search is an Out-of-the-Box (OOB) saved
search. Note that OOB saved searches are only provided by Oracle and
cannot be modified.

--metadata-version [text]

Version of the metadata.

--nls [complex type]

JSON that contains internationalization options. This is a complex
type whose value must be valid JSON. The value can be provided as a
string on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--provider-id [text]

ID of the service (for example log-analytics) that owns the saved
search. Each service has a unique ID.

--provider-name [text]

Name of the service (for example, Logging Analytics) that owns the
saved search.

--provider-version [text]

Version of the service that owns this saved search.

--screen-image [text]

Screen image of the saved search.

--type [text]

Determines how the saved search is displayed in a dashboard.

Accepted values are:

   SEARCH_DONT_SHOW_IN_DASHBOARD, SEARCH_SHOW_IN_DASHBOARD, WIDGET_DONT_SHOW_IN_DASHBOARD, WIDGET_SHOW_IN_DASHBOARD

--ui-config [complex type]

JSON that contains user interface options. This is a complex type
whose value must be valid JSON. The value can be provided as a string
on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--widget-template [text]

Reference to the HTML file of the widget.

--widget-vm [text]

Reference to the view model of the widget.


Optional Parameters
===================

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{"foo-namespace": {"bar-key": "value"}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{"bar-
key": "value"}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--id [text]

ID of the saved search, which must only be provided for Out-of-the-Box
(OOB) saved search.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
