"estimate-purge-data-size"
**************************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

This API estimates the size of data to be purged based based on time
interval, purge query etc.


Usage
=====

   oci log-analytics storage estimate-purge-data-size [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

This is the compartment OCID under which the data will be purged

--namespace-name [text]

The Logging Analytics namespace used for the request.

--time-data-ended [datetime]

This is the time before which data will be purged

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400


Optional Parameters
===================

--compartment-id-in-subtree [boolean]

If true, purge child compartments data

--data-type [text]

This is the type of the log data to be purged

Accepted values are:

   LOG, LOOKUP

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.

--purge-query-string [text]

This is the solr data filter query, '*' means all


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
