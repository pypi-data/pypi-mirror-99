"get"
*****

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Returns messages from the specified stream using the specified cursor
as the starting point for consumption. By default, the number of
messages returned is undefined, but the service returns as many as
possible. To get messages, you must first obtain a cursor using the
CreateCursor operation. In the response, retrieve the value of the
'opc-next-cursor' header to pass as a parameter to get the next batch
of messages in the stream.

The top level --endpoint parameter must be supplied for this
operation.


Usage
=====

   oci streaming stream message get [OPTIONS]


Required Parameters
===================

--cursor [text]

The cursor used to consume the stream.

--stream-id [text]

The OCID of the stream.


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--limit [integer]

The maximum number of messages to return. You can specify any value up
to 10000. By default, the service returns as many messages as
possible. Consider your average message size to help avoid exceeding
throughput on the stream.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
