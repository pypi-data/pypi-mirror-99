"reencrypt"
***********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Re-encrypts the unique data encryption key that encrypts each object
written to the bucket by using the most recent version of the master
encryption key assigned to the bucket. (All data encryption keys are
encrypted by a master encryption key. Master encryption keys are
assigned to buckets and managed by Oracle by default, but you can
assign a key that you created and control through the Oracle Cloud
Infrastructure Key Management service.) The kmsKeyId property of the
bucket determines which master encryption key is assigned to the
bucket. If you assigned a different Key Management master encryption
key to the bucket, you can call this API to re-encrypt all data
encryption keys with the newly assigned key. Similarly, you might want
to re-encrypt all data encryption keys if the assigned key has been
rotated to a new key version since objects were last added to the
bucket. If you call this API and there is no kmsKeyId associated with
the bucket, the call will fail.

Calling this API starts a work request task to re-encrypt the data
encryption key of all objects in the bucket. Only objects created
before the time of the API call will be re-encrypted. The call can
take a long time, depending on how many objects are in the bucket and
how big they are. This API returns a work request ID that you can use
to retrieve the status of the work request task. All the versions of
objects will be re-encrypted whether versioning is enabled or
suspended at the bucket.


Usage
=====

   oci os bucket reencrypt [OPTIONS]


Required Parameters
===================

--bucket-name, -bn [text]

The name of the bucket. Avoid entering confidential information.
Example: *my-new-bucket1*


Optional Parameters
===================

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--namespace-name, --namespace, -ns [text]

The Object Storage namespace used for the request. If not provided,
this parameter will be obtained internally using a call to 'oci os ns
get'

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, COMPLETED, FAILED, IN_PROGRESS

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
to see if it has reached the state defined by "--wait-for-state".
Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
