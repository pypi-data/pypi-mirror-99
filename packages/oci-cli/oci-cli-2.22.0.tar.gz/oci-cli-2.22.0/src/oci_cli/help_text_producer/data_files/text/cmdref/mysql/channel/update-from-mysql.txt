"update-from-mysql"
*******************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Updates the properties of the specified Channel. If the Channel is
Active the Update operation will asynchronously apply the new
configuration parameters to the Channel and the Channel may become
temporarily unavailable. Otherwise, the new configuration will be
applied the next time the Channel becomes Active.


Usage
=====

   oci mysql channel update-from-mysql [OPTIONS]


Required Parameters
===================

--channel-id [text]

The Channel OCID.


Optional Parameters
===================

--defined-tags [complex type]

Usage of predefined tag keys. These predefined keys are scoped to
namespaces. Example: *{"foo-namespace": {"bar-key": "value"}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

User provided description of the Channel.

--display-name [text]

The user-friendly name for the Channel. It does not have to be unique.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Simple key-value pair applied without any predefined name, type or
scope. Exists for cross-compatibility only. Example: *{"bar-key":
"value"}* This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *If-Match* header to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource's
current etag value.

--is-enabled [boolean]

Whether the Channel should be enabled or disabled. Enabling a
previously disabled Channel will cause the Channel to be started.
Conversely, disabling a previously enabled Channel will stop the
Channel. Both operations are executed asynchronously.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--source-hostname [text]

The network address of the MySQL instance.

--source-password [text]

The password for the replication user. The password must be between 8
and 32 characters long, and must contain at least 1 numeric character,
1 lowercase character, 1 uppercase character, and 1 special
(nonalphanumeric) character.

--source-port [integer]

The port the source MySQL instance listens on.

--source-ssl-ca-certificate [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--source-ssl-mode [text]

The SSL mode of the Channel.

--source-username [text]

The name of the replication user on the source MySQL instance. The
username has a maximum length of 96 characters. For more information,
please see the MySQL documentation

--target-applier-username [text]

The username for the replication applier of the target MySQL DB
System.

--target-channel-name [text]

The case-insensitive name that identifies the replication channel.
Channel names must follow the rules defined for MySQL identifiers. The
names of non-Deleted Channels must be unique for each DB System.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
to see if it has reached the state defined by "--wait-for-state".
Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
