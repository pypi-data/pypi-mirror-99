"list"
******

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Returns a list of all Problems identified by the Cloud Guard

The ListProblems operation returns only the problems in
*compartmentId* passed. The list does not include any subcompartments
of the compartmentId passed.

The parameter *accessLevel* specifies whether to return only those
compartments for which the requestor has INSPECT permissions on at
least one resource directly or indirectly (ACCESSIBLE) (the resource
can be in a subcompartment) or to return Not Authorized if Principal
doesn't have access to even one of the child compartments. This is
valid only when *compartmentIdInSubtree* is set to *true*.

The parameter *compartmentIdInSubtree* applies when you perform
ListProblems on the *compartmentId* passed and when it is set to true,
the entire hierarchy of compartments can be returned. To get a full
list of all compartments and subcompartments in the tenancy (root
compartment), set the parameter *compartmentIdInSubtree* to true and
*accessLevel* to ACCESSIBLE.


Usage
=====

   oci cloud-guard problem list [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The ID of the compartment in which to list resources.


Optional Parameters
===================

--access-level [text]

Valid values are *RESTRICTED* and *ACCESSIBLE*. Default is
*RESTRICTED*. Setting this to *ACCESSIBLE* returns only those
compartments for which the user has INSPECT permissions directly or
indirectly (permissions can be on a resource in a subcompartment).
When set to *RESTRICTED* permissions are checked and no partial
results are displayed.

Accepted values are:

   ACCESSIBLE, RESTRICTED

--all

Fetches all pages of results. If you provide this option, then you
cannot provide the "--limit" option.

--city [text]

City of the problem.

--compartment-id-in-subtree [boolean]

Default is false. When set to true, the hierarchy of compartments is
traversed and all compartments and subcompartments in the tenancy are
returned depending on the the setting of *accessLevel*.

--country [text]

Country of the problem.

--detector-rule-id-list [text]

Comma seperated list of detector rule ids to be passed in to match
against Problems.

--detector-type [text]

The field to list the Problems by Detector Type. Valid values are
IAAS_ACTIVITY_DETECTOR and IAAS_CONFIGURATION_DETECTOR

Accepted values are:

   IAAS_ACTIVITY_DETECTOR, IAAS_CONFIGURATION_DETECTOR

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--label [text]

Label associated with the Problem.

--lifecycle-detail [text]

The field life cycle state. Only one state can be provided. Default
value for state is active. If no value is specified state is active.

Accepted values are:

   DISMISSED, OPEN, RESOLVED

--lifecycle-state [text]

The field life cycle state. Only one state can be provided. Default
value for state is active. If no value is specified state is active.

Accepted values are:

   ACTIVE, INACTIVE

--limit [integer]

The maximum number of items to return.

--page [text]

The page token representing the page at which to start retrieving
results. This is usually retrieved from a previous list call.

--page-size [integer]

When fetching results, the number of results to fetch per call. Only
valid when used with "--all" or "--limit", and ignored otherwise.

--problem-region [text]

OCI Monitoring region.

--resource-id [text]

The ID of the resource associated with the problem.

--resource-type [text]

Resource Type associated with the resource.

--risk-level [text]

Risk level of the Problem.

--sort-by [text]

The field to sort by. Only one sort order may be provided. Default
order for riskLevel, timeLastDetected and resourceName is descending.
Default order for riskLevel and resourceName is ascending. If no value
is specified timeLastDetected is default.

Accepted values are:

   resourceName, riskLevel, timeLastDetected

--sort-order [text]

The sort order to use, either 'asc' or 'desc'.

Accepted values are:

   ASC, DESC

--state [text]

State of the problem.

--target-id [text]

The ID of the target in which to list resources.

--time-first-detected-greater-than-or-equal-to [datetime]

Start time for a filter. If start time is not specified, start time
will be set to today's current time - 30 days.

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400

--time-first-detected-less-than-or-equal-to [datetime]

End time for a filter. If end time is not specified, end time will be
set to today's current time.

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400

--time-last-detected-greater-than-or-equal-to [datetime]

Start time for a filter. If start time is not specified, start time
will be set to today's current time - 30 days.

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400

--time-last-detected-less-than-or-equal-to [datetime]

End time for a filter. If end time is not specified, end time will be
set to today's current time.

   The following datetime formats are supported:

      Format: YYYY-MM-DDTHH:mm:ss.sssTZD
      Example: 2017-09-15T20:30:00.123Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T20:30:00Z

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T20:30Z

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

      Format: YYYY-MM-DDTHH:mm:ssTZD
      Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

      Format: YYYY-MM-DDTHH:mmTZD
      Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   The timezone for this date and time will be taken as UTC (Needs to
   be surrounded by single or double quotes)

      Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
      Example: '2017-09-15 17:25'

   This date will be taken as midnight UTC of that day

      Format: YYYY-MM-DD
      Example: 2017-09-15

      Example: 1412195400


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
