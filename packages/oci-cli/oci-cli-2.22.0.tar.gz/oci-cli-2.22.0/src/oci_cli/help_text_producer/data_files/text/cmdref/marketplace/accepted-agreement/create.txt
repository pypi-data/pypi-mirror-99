"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Accepts a terms of use agreement for a specific package version of a
listing. You must accept all terms of use for a package before you can
deploy the package.


Usage
=====

   oci marketplace accepted-agreement create [OPTIONS]


Required Parameters
===================

--agreement-id [text]

The agreement to accept.

--compartment-id, -c [text]

The unique identifier for the compartment where the agreement will be
accepted.

--listing-id [text]

The unique identifier for the listing associated with the agreement.

--package-version [text]

The package version associated with the agreement.

--signature [text]

A signature generated for the listing package agreements that you can
retrieve with GetAgreement.


Optional Parameters
===================

--defined-tags [complex type]

The defined tags associated with this resource, if any. Each key is
predefined and scoped to namespaces. For more information, see
Resource Tags. Example: *{"Operations": {"CostCenter": "42"}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--display-name [text]

A display name for the accepted agreement.

--freeform-tags [complex type]

The freeform tags associated with this resource, if any. Each tag is a
simple key-value pair with no predefined name, type, or namespace. For
more information, see Resource Tags. Example: *{"Department":
"Finance"}* This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
