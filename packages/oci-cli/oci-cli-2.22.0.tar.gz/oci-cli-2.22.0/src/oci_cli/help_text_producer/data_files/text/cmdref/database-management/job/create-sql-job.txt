"create-sql-job"
****************

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters


Description
===========

Creates a job to be executed on a Managed Database or Managed Database
Group. Only one of the parameters, managedDatabaseId or
managedDatabaseGroupId should be provided as input in CreateJobDetails
resource in request body.


Usage
=====

   oci database-management job create-sql-job [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the compartment in which the job resides.

--name [text]

The name of the job. Valid characters are uppercase or lowercase
letters, numbers, and "_". The name of the job cannot be modified. It
must be unique in the compartment and must begin with an alphabetic
character.

--operation-type [text]

The SQL operation type.

--schedule-type [text]

The schedule type of the job.


Optional Parameters
===================

--database-sub-type [text]

The subtype of the Oracle Database where the job has to be executed.
Only applicable when managedDatabaseGroupId is provided.

Accepted values are:

   CDB, NON_CDB, PDB

--description [text]

The description of the job.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--managed-database-group-id [text]

The OCID of the Managed Database Group where the job has to be
executed.

--managed-database-id [text]

The OCID of the Managed Database where the job has to be executed.

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--password [text]

The password for the database user name used to execute the SQL job.

--result-location [complex type]

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--role [text]

The role of the database user. Indicates whether the database user is
a normal user or sysdba.

--sql-text [text]

The SQL text to be executed as part of the job.

--sql-type [text]

--timeout [text]

The job timeout duration, which is expressed like "1h 10m 15s".

--user-name [text]

The database user name used to execute the SQL job. If the job is
being executed on a Managed Database Group, then the user name should
exist on all the databases in the group with the same password.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, INACTIVE

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource to
see if it has reached the lifecycle state defined by "--wait-for-
state". Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-rc-file", "--
config-file", "--debug", "--defaults-file", "--endpoint", "--generate-
full-command-json-input", "--generate-param-json-input", "--help", "--
latest-version", "--no-retry", "--opc-client-request-id", "--opc-
request-id", "--output", "--profile", "--query", "--raw-output", "--
region", "--release-info", "--request-id", "--version", "-?", "-d",
"-h", "-v"
