[DATA_ITERATOR]
# Cache file format
#
# DataSourceWithFileCache creates cache files with the data format.
#
# Default value is .npy
cache_file_format = .npy

# Number of threads when creating file cache
#
# DataSourceWithFileCache get data with this number of threads.
#
# Default value is 10
data_source_file_cache_num_of_threads = 10

# Number of threads when loading file cache
#
# CacheDataSrouce get data with this number of threads.
#
# Default value is 4
cache_file_cache_num_of_threads = 4

# File cache size.
#
# DataSourceWithFileCache store this number of data into cache file.
#
# Default value is 100
data_source_file_cache_size = 100

# Cache file location(directory)
#
# If this entry is not empty and cache_dir does not specified,
# DataSourceWithFileCache will use this directory instead of system
# default temporary directory.
#
# Default value is EMPTY
data_source_file_cache_location =

# Max size of memory cache buffer size.
#
# If total data size is smaller
# than this value, DataSourceWithMemoryCache will store all data into
# cache buffer.
#
# Default value is 1G bytes.
data_source_buffer_max_size = 1073741824

[LOG]
# Log file name.
#
# If this entry is empty, file log does not store. Only console log will output.
#
# Default value is EMPTY
log_file_name =

# Log level for file.
# Default value is DEBUG
log_file_level = DEBUG

# Log format for file.
log_file_format = %(asctime)s [%(name)s][%(levelname)s]: %(pathname)s : %(funcName)s : %(lineno)s : %(message)s

# Log level for console.
# Default value is INFO
log_console_level = INFO

# Log format for console.
log_console_format = %(asctime)s [%(name)s][%(levelname)s]: %(message)s

[MISC]
# Miscellaneous settings

# Show progress on CLI
# Default value is True
misc_show_progress = True

# NNP_PARAM_FORMAT
nnp_param_format = .h5


[CALLBACK]
# Callback module for Utilities
# Default value is EMPTY
util_callback_module =

[CHECKPOINT]
# Frequency of saving optimizers' states during training process
# Default value is 5
optimizer_interval = 5

[MULTINODE]
# For multi node training
# Frequency of info collecting at training iteration level
# Default value is 20
analyse_gpu_status_interval = 20

# When any node is slower than average by a factor of {gpu_slowing_warning_threshold}, log warning
gpu_slowing_warning_threshold = 2

# When any node is slower than average by a factor of {gpu_slowing_error_threshold}, log error and raise Excepttion
gpu_slowing_error_threshold = 10
