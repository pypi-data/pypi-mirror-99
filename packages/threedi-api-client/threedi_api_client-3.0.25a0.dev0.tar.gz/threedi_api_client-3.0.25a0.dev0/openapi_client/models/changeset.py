# coding: utf-8

"""
    3Di API

    3Di simulation API (latest version: 3.0)   Framework release: 1.0.16   3Di core release: 2.0.11  deployed on:  07:33AM (UTC) on September 04, 2020  # noqa: E501

    The version of the OpenAPI document: 3.0
    Contact: info@nelen-schuurmans.nl
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class Changeset(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'url': 'str',
        'id': 'int',
        'details': 'object',
        'revision': 'str',
        'file': 'FileReadOnly'
    }

    attribute_map = {
        'url': 'url',
        'id': 'id',
        'details': 'details',
        'revision': 'revision',
        'file': 'file'
    }

    def __init__(self, url=None, id=None, details=None, revision=None, file=None, local_vars_configuration=None):  # noqa: E501
        """Changeset - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._url = None
        self._id = None
        self._details = None
        self._revision = None
        self._file = None
        self.discriminator = None

        if url is not None:
            self.url = url
        if id is not None:
            self.id = id
        self.details = details
        self.revision = revision
        if file is not None:
            self.file = file

    @property
    def url(self):
        """Gets the url of this Changeset.  # noqa: E501


        :return: The url of this Changeset.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Changeset.


        :param url: The url of this Changeset.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def id(self):
        """Gets the id of this Changeset.  # noqa: E501


        :return: The id of this Changeset.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Changeset.


        :param id: The id of this Changeset.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def details(self):
        """Gets the details of this Changeset.  # noqa: E501


        :return: The details of this Changeset.  # noqa: E501
        :rtype: object
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this Changeset.


        :param details: The details of this Changeset.  # noqa: E501
        :type: object
        """

        self._details = details

    @property
    def revision(self):
        """Gets the revision of this Changeset.  # noqa: E501


        :return: The revision of this Changeset.  # noqa: E501
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this Changeset.


        :param revision: The revision of this Changeset.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and revision is None:  # noqa: E501
            raise ValueError("Invalid value for `revision`, must not be `None`")  # noqa: E501

        self._revision = revision

    @property
    def file(self):
        """Gets the file of this Changeset.  # noqa: E501


        :return: The file of this Changeset.  # noqa: E501
        :rtype: FileReadOnly
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this Changeset.


        :param file: The file of this Changeset.  # noqa: E501
        :type: FileReadOnly
        """

        self._file = file

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Changeset):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Changeset):
            return True

        return self.to_dict() != other.to_dict()
