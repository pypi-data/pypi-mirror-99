Metadata-Version: 2.1
Name: mypy-boto3-emr
Version: 1.17.34.0
Summary: Type annotations for boto3.EMR 1.17.34 service, generated by mypy-boto3-buider 4.4.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Keywords: boto3 emr type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: typing-extensions ; python_version < "3.8"

# mypy-boto3-emr

[![PyPI - mypy-boto3-emr](https://img.shields.io/pypi/v/mypy-boto3-emr.svg?color=blue)](https://pypi.org/project/mypy-boto3-emr)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-emr.svg?color=blue)](https://pypi.org/project/mypy-boto3-emr)
[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)

![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/master/logo.png)

Type annotations for
[boto3.EMR 1.17.34](https://boto3.amazonaws.com/v1/documentation/api/1.17.34/reference/services/emr.html#EMR) service
compatible with
[VSCode](https://code.visualstudio.com/),
[PyCharm](https://www.jetbrains.com/pycharm/),
[Emacs](https://www.gnu.org/software/emacs/),
[Sublime Text](https://www.sublimetext.com/),
[mypy](https://github.com/python/mypy),
[pyright](https://github.com/microsoft/pyright)
and other tools.

Generated by [mypy-boto3-buider 4.4.0](https://github.com/vemel/mypy_boto3_builder).

More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.

See how it helps to find and fix potential bugs:

![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/master/demo.gif)

- [mypy-boto3-emr](#mypy-boto3-emr)
  - [How to install](#how-to-install)
  - [Usage](#usage)
    - [VSCode](#vscode)
    - [PyCharm](#pycharm)
    - [Other IDEs](#other-ides)
    - [mypy](#mypy)
    - [pyright](#pyright)
  - [Explicit type annotations](#explicit-type-annotations)
    - [Client annotations](#client-annotations)
    - [Paginators annotations](#paginators-annotations)
    - [Waiters annotations](#waiters-annotations)
    - [Service Resource annotations](#service-resource-annotations)
    - [Other resources annotations](#other-resources-annotations)
    - [Collections annotations](#collections-annotations)
    - [Typed dictionations](#typed-dictionations)

## How to install

Install `boto3-stubs` for `EMR` service.

```bash
python -m pip install boto3-stubs[emr]
```

## Usage

### VSCode

- Install [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
- Install [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
- Set `Pylance` as your Python Language Server
- Install `boto-stubs[emr]` in your environment: `python -m pip install 'boto3-stubs[emr]'`

Both type checking and auto-complete should work for `EMR` service.
No explicit type annotations required, write your `boto3` code as usual.

### PyCharm

- Install `boto-stubs[emr]` in your environment: `python -m pip install 'boto3-stubs[emr]'`

Both type checking and auto-complete should work for `EMR` service.
No explicit type annotations required, write your `boto3` code as usual.
Auto-complete can be slow on big projects or if you have a lot of installed `boto3-stubs` submodules.

### Other IDEs

Not tested, but as long as your IDE support `mypy` or `pyright`, everything should work.

### mypy

- Install `mypy`: `python -m pip install mypy`
- Install `boto-stubs[emr]` in your environment: `python -m pip install 'boto3-stubs[emr]'`
- Run `mypy` as usual

Type checking should work for `EMR` service.
No explicit type annotations required, write your `boto3` code as usual.

### pyright

- Install `pyright`: `yarn global add pyright`
- Install `boto-stubs[emr]` in your environment: `python -m pip install 'boto3-stubs[emr]'`
- Optionally, you can install `boto3-stubs` to `typings` folder.

Type checking should work for `EMR` service.
No explicit type annotations required, write your `boto3` code as usual.

## Explicit type annotations

### Client annotations

`EMRClient` provides annotations for `boto3.client("emr")`.

```python
import boto3

from mypy_boto3_emr import EMRClient

client: EMRClient = boto3.client("emr")

# now client usage is checked by mypy and IDE should provide code auto-complete

# works for session as well
session = boto3.session.Session(region="us-west-1")
session_client: EMRClient = session.client("emr")
```

### Paginators annotations

`mypy_boto3_emr.paginator` module contains type annotations for all paginators.

```python
from mypy_boto3_emr import EMRClient
from mypy_boto3_emr.paginator import (
    ListBootstrapActionsPaginator,
    ListClustersPaginator,
    ListInstanceFleetsPaginator,
    ListInstanceGroupsPaginator,
    ListInstancesPaginator,
    ListNotebookExecutionsPaginator,
    ListSecurityConfigurationsPaginator,
    ListStepsPaginator,
    ListStudioSessionMappingsPaginator,
    ListStudiosPaginator,
)

client: EMRClient = boto3.client("emr")

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
# VSCode requires explicit type annotations
list_bootstrap_actions_paginator: ListBootstrapActionsPaginator = client.get_paginator("list_bootstrap_actions")
list_clusters_paginator: ListClustersPaginator = client.get_paginator("list_clusters")
list_instance_fleets_paginator: ListInstanceFleetsPaginator = client.get_paginator("list_instance_fleets")
list_instance_groups_paginator: ListInstanceGroupsPaginator = client.get_paginator("list_instance_groups")
list_instances_paginator: ListInstancesPaginator = client.get_paginator("list_instances")
list_notebook_executions_paginator: ListNotebookExecutionsPaginator = client.get_paginator("list_notebook_executions")
list_security_configurations_paginator: ListSecurityConfigurationsPaginator = client.get_paginator("list_security_configurations")
list_steps_paginator: ListStepsPaginator = client.get_paginator("list_steps")
list_studio_session_mappings_paginator: ListStudioSessionMappingsPaginator = client.get_paginator("list_studio_session_mappings")
list_studios_paginator: ListStudiosPaginator = client.get_paginator("list_studios")
```


### Waiters annotations

`mypy_boto3_emr.waiter` module contains type annotations for all waiters.

```python
from mypy_boto3_emr import EMRClient
from mypy_boto3_emr.waiter import (
    ClusterRunningWaiter,
    ClusterTerminatedWaiter,
    StepCompleteWaiter,
)

client: EMRClient = boto3.client("emr")

# Explicit type annotations are optional here
# Type should be correctly discovered by mypy and IDEs
# VSCode requires explicit type annotations
cluster_running_waiter: ClusterRunningWaiter = client.get_waiter("cluster_running")
cluster_terminated_waiter: ClusterTerminatedWaiter = client.get_waiter("cluster_terminated")
step_complete_waiter: StepCompleteWaiter = client.get_waiter("step_complete")
```





### Typed dictionations

`mypy_boto3_emr.type_defs` module contains structures and shapes assembled
to typed dictionaries for additional type checking.

```python
from mypy_boto3_emr.type_defs import (
    ApplicationTypeDef,
    AutoScalingPolicyDescriptionTypeDef,
    AutoScalingPolicyStateChangeReasonTypeDef,
    AutoScalingPolicyStatusTypeDef,
    AutoScalingPolicyTypeDef,
    BlockPublicAccessConfigurationMetadataTypeDef,
    BlockPublicAccessConfigurationTypeDef,
    BootstrapActionConfigTypeDef,
    BootstrapActionDetailTypeDef,
    CancelStepsInfoTypeDef,
    CloudWatchAlarmDefinitionTypeDef,
    ClusterStateChangeReasonTypeDef,
    ClusterStatusTypeDef,
    ClusterSummaryTypeDef,
    ClusterTimelineTypeDef,
    ClusterTypeDef,
    CommandTypeDef,
    ComputeLimitsTypeDef,
    EbsBlockDeviceConfigTypeDef,
    EbsBlockDeviceTypeDef,
    EbsConfigurationTypeDef,
    EbsVolumeTypeDef,
    Ec2InstanceAttributesTypeDef,
    ExecutionEngineConfigTypeDef,
    FailureDetailsTypeDef,
    HadoopJarStepConfigTypeDef,
    HadoopStepConfigTypeDef,
    InstanceFleetConfigTypeDef,
    InstanceFleetProvisioningSpecificationsTypeDef,
    InstanceFleetStateChangeReasonTypeDef,
    InstanceFleetStatusTypeDef,
    InstanceFleetTimelineTypeDef,
    InstanceFleetTypeDef,
    InstanceGroupConfigTypeDef,
    InstanceGroupDetailTypeDef,
    InstanceGroupStateChangeReasonTypeDef,
    InstanceGroupStatusTypeDef,
    InstanceGroupTimelineTypeDef,
    InstanceGroupTypeDef,
    InstanceResizePolicyTypeDef,
    InstanceStateChangeReasonTypeDef,
    InstanceStatusTypeDef,
    InstanceTimelineTypeDef,
    InstanceTypeConfigTypeDef,
    InstanceTypeDef,
    InstanceTypeSpecificationTypeDef,
    JobFlowDetailTypeDef,
    JobFlowExecutionStatusDetailTypeDef,
    JobFlowInstancesDetailTypeDef,
    KerberosAttributesTypeDef,
    KeyValueTypeDef,
    ManagedScalingPolicyTypeDef,
    MetricDimensionTypeDef,
    NotebookExecutionSummaryTypeDef,
    NotebookExecutionTypeDef,
    OnDemandCapacityReservationOptionsTypeDef,
    OnDemandProvisioningSpecificationTypeDef,
    PlacementGroupConfigTypeDef,
    PlacementTypeTypeDef,
    PortRangeTypeDef,
    ResponseMetadata,
    ScalingActionTypeDef,
    ScalingConstraintsTypeDef,
    ScalingRuleTypeDef,
    ScalingTriggerTypeDef,
    ScriptBootstrapActionConfigTypeDef,
    SecurityConfigurationSummaryTypeDef,
    SessionMappingDetailTypeDef,
    SessionMappingSummaryTypeDef,
    ShrinkPolicyTypeDef,
    SimpleScalingPolicyConfigurationTypeDef,
    SpotProvisioningSpecificationTypeDef,
    StepConfigTypeDef,
    StepDetailTypeDef,
    StepExecutionStatusDetailTypeDef,
    StepStateChangeReasonTypeDef,
    StepStatusTypeDef,
    StepSummaryTypeDef,
    StepTimelineTypeDef,
    StepTypeDef,
    StudioSummaryTypeDef,
    StudioTypeDef,
    TagTypeDef,
    VolumeSpecificationTypeDef,
    AddInstanceFleetOutputTypeDef,
    AddInstanceGroupsOutputTypeDef,
    AddJobFlowStepsOutputTypeDef,
    CancelStepsOutputTypeDef,
    CreateSecurityConfigurationOutputTypeDef,
    CreateStudioOutputTypeDef,
    DescribeClusterOutputTypeDef,
    DescribeJobFlowsOutputTypeDef,
    DescribeNotebookExecutionOutputTypeDef,
    DescribeSecurityConfigurationOutputTypeDef,
    DescribeStepOutputTypeDef,
    DescribeStudioOutputTypeDef,
    ConfigurationTypeDef,
    GetBlockPublicAccessConfigurationOutputTypeDef,
    GetManagedScalingPolicyOutputTypeDef,
    GetStudioSessionMappingOutputTypeDef,
    InstanceFleetModifyConfigTypeDef,
    InstanceGroupModifyConfigTypeDef,
    JobFlowInstancesConfigTypeDef,
    ListBootstrapActionsOutputTypeDef,
    ListClustersOutputTypeDef,
    ListInstanceFleetsOutputTypeDef,
    ListInstanceGroupsOutputTypeDef,
    ListInstancesOutputTypeDef,
    ListNotebookExecutionsOutputTypeDef,
    ListSecurityConfigurationsOutputTypeDef,
    ListStepsOutputTypeDef,
    ListStudioSessionMappingsOutputTypeDef,
    ListStudiosOutputTypeDef,
    ModifyClusterOutputTypeDef,
    PaginatorConfigTypeDef,
    PutAutoScalingPolicyOutputTypeDef,
    RunJobFlowOutputTypeDef,
    StartNotebookExecutionOutputTypeDef,
    SupportedProductConfigTypeDef,
    WaiterConfigTypeDef,
)

def get_structure() -> ApplicationTypeDef:
    return {
      ...
    }
```


