"""Autogenerated API"""
from argus_api import session



def update_instance_status2(
    id: int,
    containerID: str = None,
    identifiers: dict = None,
    state: str = None,
    components: dict = None,
    instanceID: int = None,
    runningInstanceRevision: int = None,
    runningTemplateRevision: int = None,
    json: bool = True,
    verify: bool = None,
    proxies: dict = None,
    apiKey: str = None,
    authentication: dict = {},
    server_url: str = None,
    body: dict = None,
  ) -> dict:
    """null (DEV)
    
    :param int id: ID of instance
    :param str containerID: ID of the currently running container 
    :param dict identifiers: Any identifiers for this instance container 
    :param str state: The state of this instance container 
    :param list components: An optional list of component updates for the root container 
    :param int instanceID: The instanceID of this container 
    :param int runningInstanceRevision: The instance revision of the running container 
    :param int runningTemplateRevision: The template revision of the running container 
    :param json:
    :param verify: path to a certificate bundle or boolean indicating whether SSL
    verification should be performed.
    :param apiKey: Argus API key.
    :param authentication: authentication override
    :param server_url: API base URL override
    :param body: body of the request. other parameters will override keys defined in the body.
    :returns dictionary translated from JSON
    """

    route = "/componentadmin/v2/instance/{id}/status".format(id=id)

    headers = {
        'User-Agent': 'ArgusToolbelt/',
    }

    body = body or {}
    # Only send containerID if the argument was provided, dont send null values
    if containerID is not None:
        body.update({"containerID": containerID})
    # Only send identifiers if the argument was provided, dont send null values
    if identifiers is not None:
        body.update({"identifiers": identifiers})
    # Only send state if the argument was provided, dont send null values
    if state is not None:
        body.update({"state": state})
    # Only send components if the argument was provided, dont send null values
    if components is not None:
        body.update({"components": components})
    # Only send instanceID if the argument was provided, dont send null values
    if instanceID is not None:
        body.update({"instanceID": instanceID})
    # Only send runningInstanceRevision if the argument was provided, dont send null values
    if runningInstanceRevision is not None:
        body.update({"runningInstanceRevision": runningInstanceRevision})
    # Only send runningTemplateRevision if the argument was provided, dont send null values
    if runningTemplateRevision is not None:
        body.update({"runningTemplateRevision": runningTemplateRevision})

    query_parameters = {}

    

    response = session.put(
        route,
        params=query_parameters or None,
        json=body,
        verify=verify,
        apiKey=apiKey,
        authentication=authentication,
        server_url=server_url,
        headers=headers,
        proxies=proxies,
    )
    return response.json()

