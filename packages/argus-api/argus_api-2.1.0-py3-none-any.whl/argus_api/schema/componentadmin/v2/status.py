"""Autogenerated API schema"""
from argus_api import session


get_component_status = {'tags': ['componentadmin/v2'], 'summary': 'Fetch status for specified component (INTERNAL)', 'description': '', 'operationId': 'getComponentStatus', 'produces': ['application/json'], 'parameters': [{'name': 'componentID', 'in': 'path', 'description': 'Component ID', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['componentID', 'componentType', 'hostID', 'timestamp'], 'properties': {'componentID': {'type': 'str', 'position': 0, 'description': 'ID of this component '}, 'containerID': {'type': 'str', 'position': 0, 'description': 'ID of the container this component runs in '}, 'componentIdentifiers': {'type': 'dict', 'position': 0, 'description': 'The identifiers set on this component ', 'additionalProperties': {'type': 'string'}}, 'componentType': {'type': 'str', 'position': 0, 'description': 'The class name of this component '}, 'componentName': {'type': 'str', 'position': 0, 'description': 'The name of this component '}, 'hostID': {'type': 'int', 'position': 0, 'description': 'The ID of the host this component belongs to '}, 'instanceID': {'type': 'int', 'position': 0, 'description': 'The ID of the instance this component belongs to, or null if it belongs to the root container '}, 'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp of the last status update for this component '}, 'status': {'type': 'str', 'position': 0, 'description': 'The last reported text status for this component '}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'All interfaces implemented by this component ', 'uniqueItems': True, 'items': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
get_host_instances = {'tags': ['componentadmin/v2'], 'summary': 'Request status for all instances on specified host (INTERNAL)', 'description': '', 'operationId': 'getHostInstances', 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or name of host to request instance status for', 'required': True, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'template': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'parentID': {'type': 'int', 'position': 0, 'description': 'If set, this instance is run as a child of the instance with this ID '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Container identifier properties ', 'additionalProperties': {'type': 'string'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Instance status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Request status for specific host (INTERNAL)', 'description': '', 'operationId': 'getHostStatus', 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'ID or name of host to request status for', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Host name '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for host container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Host status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_instance_status_1 = {'tags': ['componentadmin/v2'], 'summary': 'Request status for specific instance (INTERNAL)', 'description': '', 'operationId': 'getInstanceStatus_1', 'produces': ['application/json'], 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance to request status for', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'template': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'parentID': {'type': 'int', 'position': 0, 'description': 'If set, this instance is run as a child of the instance with this ID '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Container identifier properties ', 'additionalProperties': {'type': 'string'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Instance status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_status_overview = {'tags': ['componentadmin/v2'], 'summary': 'Request status overview (INTERNAL)', 'description': '', 'operationId': 'getStatusOverview', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'hosts': {'type': 'dict', 'properties': {'total': {'type': 'int'}, 'missing': {'type': 'int'}, 'running': {'type': 'int'}, 'scheduledDowntime': {'type': 'int'}, 'disabledMonitoring': {'type': 'int'}}}, 'instances': {'type': 'dict', 'properties': {'total': {'type': 'int'}, 'running': {'type': 'int'}, 'scheduledDowntime': {'type': 'int'}, 'disabledMonitoring': {'type': 'int'}, 'missing': {'type': 'int'}, 'outdatedConfig': {'type': 'int'}, 'outdatedRuntime': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_component_status = {'tags': ['componentadmin/v2'], 'summary': 'List component status (INTERNAL)', 'description': '', 'operationId': 'listComponentStatus', 'produces': ['application/json'], 'parameters': [{'name': 'componentType', 'in': 'query', 'description': 'Component type', 'required': False, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['componentID', 'componentType', 'hostID', 'timestamp'], 'properties': {'componentID': {'type': 'str', 'position': 0, 'description': 'ID of this component '}, 'containerID': {'type': 'str', 'position': 0, 'description': 'ID of the container this component runs in '}, 'componentIdentifiers': {'type': 'dict', 'position': 0, 'description': 'The identifiers set on this component ', 'additionalProperties': {'type': 'string'}}, 'componentType': {'type': 'str', 'position': 0, 'description': 'The class name of this component '}, 'componentName': {'type': 'str', 'position': 0, 'description': 'The name of this component '}, 'hostID': {'type': 'int', 'position': 0, 'description': 'The ID of the host this component belongs to '}, 'instanceID': {'type': 'int', 'position': 0, 'description': 'The ID of the instance this component belongs to, or null if it belongs to the root container '}, 'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp of the last status update for this component '}, 'status': {'type': 'str', 'position': 0, 'description': 'The last reported text status for this component '}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'All interfaces implemented by this component ', 'uniqueItems': True, 'items': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Simple host status search (INTERNAL)', 'description': '', 'operationId': 'listHostStatus', 'produces': ['application/json'], 'parameters': [{'name': 'instanceState', 'in': 'query', 'description': 'Filter result by instance state', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing']}, 'collectionFormat': 'multi'}, {'name': 'hostState', 'in': 'query', 'description': 'Filter result by host state', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing']}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort ordering. Default is sort by name ascending.', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Host name '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for host container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Host status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Simple instance status search (INTERNAL)', 'description': '', 'operationId': 'listInstanceStatus', 'produces': ['application/json'], 'parameters': [{'name': 'instanceState', 'in': 'query', 'description': 'Filter result by instance state', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['started', 'missing']}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of results, or 0 for unlimited. Default is 25.', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'offset', 'in': 'query', 'description': 'Skip this number of results.', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'template': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'parentID': {'type': 'int', 'position': 0, 'description': 'If set, this instance is run as a child of the instance with this ID '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Container identifier properties ', 'additionalProperties': {'type': 'string'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Instance status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_component_status = {'tags': ['componentadmin/v2'], 'summary': 'Advanced component status search (INTERNAL)', 'description': '', 'operationId': 'searchComponentStatus', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request object', 'required': False, 'schema': {'type': 'object', 'properties': {'componentType': {'type': 'str', 'position': 0, 'description': 'Type of components to invoke '}, 'componentIdentifiers': {'type': 'dict', 'position': 0, 'description': 'Identifiers of components to invoke ', 'additionalProperties': {'type': 'string'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, result set size is 25. (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. ', 'minimum': 0}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['componentID', 'componentType', 'hostID', 'timestamp'], 'properties': {'componentID': {'type': 'str', 'position': 0, 'description': 'ID of this component '}, 'containerID': {'type': 'str', 'position': 0, 'description': 'ID of the container this component runs in '}, 'componentIdentifiers': {'type': 'dict', 'position': 0, 'description': 'The identifiers set on this component ', 'additionalProperties': {'type': 'string'}}, 'componentType': {'type': 'str', 'position': 0, 'description': 'The class name of this component '}, 'componentName': {'type': 'str', 'position': 0, 'description': 'The name of this component '}, 'hostID': {'type': 'int', 'position': 0, 'description': 'The ID of the host this component belongs to '}, 'instanceID': {'type': 'int', 'position': 0, 'description': 'The ID of the instance this component belongs to, or null if it belongs to the root container '}, 'timestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp of the last status update for this component '}, 'status': {'type': 'str', 'position': 0, 'description': 'The last reported text status for this component '}, 'interfaces': {'type': 'list', 'position': 0, 'description': 'All interfaces implemented by this component ', 'uniqueItems': True, 'items': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Advanced host status search (INTERNAL)', 'description': '', 'operationId': 'searchHostStatus', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request object', 'required': False, 'schema': {'type': 'object', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against hosts. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to hosts in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against hosts. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to hosts in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against hosts. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to hosts in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': []}, 'instanceCriteria': {'type': 'list', 'position': 0, 'description': 'Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'instanceCriteria': {'type': 'list', 'position': 0, 'description': 'Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'instanceCriteria': {'type': 'list', 'position': 0, 'description': 'Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, result set size is 25. (default 25)', 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Specify sort ordering for returned host status. Default is sort by host name. (default [name])', 'items': {'type': 'str', 'enum': ['id', 'name']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Host name '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for host container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Host status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Advanced instance status search (INTERNAL)', 'description': '', 'operationId': 'searchInstanceStatus', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search request object', 'required': False, 'schema': {'type': 'object', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against instances, or their template or host. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'host': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances for any of these hosts (by id or hostname). ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'template': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances of any of these templates (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'state': {'type': 'list', 'position': 0, 'description': 'If set, limit result to instances in one of these states. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['started', 'missing']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'If set, include only results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'If set, exclude all results where all these flags are set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'outdatedConfig', 'outdatedRuntime']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias (by default applied using a logical OR, unless required/excluded is set). ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}}}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, result set size is 25. (default 25)', 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'template': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}, 'parentID': {'type': 'int', 'position': 0, 'description': 'If set, this instance is run as a child of the instance with this ID '}, 'state': {'type': 'str', 'position': 0, 'description': 'Current state for instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped', 'missing']}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Container identifier properties ', 'additionalProperties': {'type': 'string'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Instance status flags ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['monitoringDisabled', 'inDowntime', 'installedConfig', 'outdatedConfig', 'outdatedRuntime']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_host_status = {'tags': ['componentadmin/v2'], 'summary': 'Submit status update for a host which may also have running containers. The host will be resolved by agent using the current user. (DEV)', 'description': '', 'operationId': 'updateHostStatus', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Status  update request', 'required': False, 'schema': {'type': 'object', 'required': ['components', 'containers', 'identifiers', 'installedContainers', 'state'], 'properties': {'containerID': {'type': 'str', 'position': 0, 'description': 'ID of the currently running container '}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Any identifiers for this instance container ', 'additionalProperties': {'type': 'string'}}, 'state': {'type': 'str', 'position': 0, 'description': 'The state of this instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped']}, 'components': {'type': 'list', 'position': 0, 'description': 'An optional list of component updates for the root container ', 'items': {'type': 'dict', 'required': ['id'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The component UUID '}, 'type': 'str', 'interfaces': {'type': 'list', 'position': 0, 'description': 'Implementing interfaces ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'str', 'position': 0, 'description': 'The component name '}, 'status': {'type': 'str', 'position': 0, 'description': 'The component status '}}}}, 'containers': {'type': 'list', 'position': 0, 'description': 'A set of instance container status records ', 'items': {'type': 'dict', 'required': ['components', 'identifiers', 'state'], 'properties': {'containerID': {'type': 'str', 'position': 0, 'description': 'ID of the currently running container '}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Any identifiers for this instance container ', 'additionalProperties': {'type': 'string'}}, 'state': {'type': 'str', 'position': 0, 'description': 'The state of this instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped']}, 'components': {'type': 'list', 'position': 0, 'description': 'An optional list of component updates for the root container ', 'items': {'type': 'dict', 'required': ['id'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The component UUID '}, 'type': 'str', 'interfaces': {'type': 'list', 'position': 0, 'description': 'Implementing interfaces ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'str', 'position': 0, 'description': 'The component name '}, 'status': {'type': 'str', 'position': 0, 'description': 'The component status '}}}}, 'instanceID': {'type': 'int', 'position': 0, 'description': 'The instanceID of this container '}, 'runningInstanceRevision': {'type': 'int', 'position': 0, 'description': 'The instance revision of the running container '}, 'runningTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The template revision of the running container '}}}}, 'installedContainers': {'type': 'list', 'position': 0, 'description': 'A set of installed instance descriptors ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'instanceID': {'type': 'int', 'position': 0, 'description': 'ID of installed instance '}, 'templateID': {'type': 'int', 'position': 0, 'description': 'ID of template of installed instance '}, 'instanceRevision': {'type': 'int', 'position': 0, 'description': 'Revision of installed instance '}, 'templateRevision': {'type': 'int', 'position': 0, 'description': 'Revision of template of installed instance '}}}}}}}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}}}
update_instance_status = {'tags': ['componentadmin/v2'], 'summary': 'Submit status update for a specific component. The host will be resolved by agent using the current user.The instanceID must be a valid instance for the current users host. (DEV)', 'description': '', 'operationId': 'updateInstanceStatus', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instanceID', 'in': 'path', 'description': 'ID of instance', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Status update request', 'required': False, 'schema': {'type': 'object', 'required': ['components', 'identifiers', 'state'], 'properties': {'containerID': {'type': 'str', 'position': 0, 'description': 'ID of the currently running container '}, 'identifiers': {'type': 'dict', 'position': 0, 'description': 'Any identifiers for this instance container ', 'additionalProperties': {'type': 'string'}}, 'state': {'type': 'str', 'position': 0, 'description': 'The state of this instance container ', 'enum': ['initializing', 'started', 'shuttingDown', 'stopped']}, 'components': {'type': 'list', 'position': 0, 'description': 'An optional list of component updates for the root container ', 'items': {'type': 'dict', 'required': ['id'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'The component UUID '}, 'type': 'str', 'interfaces': {'type': 'list', 'position': 0, 'description': 'Implementing interfaces ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'name': {'type': 'str', 'position': 0, 'description': 'The component name '}, 'status': {'type': 'str', 'position': 0, 'description': 'The component status '}}}}, 'instanceID': {'type': 'int', 'position': 0, 'description': 'The instanceID of this container '}, 'runningInstanceRevision': {'type': 'int', 'position': 0, 'description': 'The instance revision of the running container '}, 'runningTemplateRevision': {'type': 'int', 'position': 0, 'description': 'The template revision of the running container '}}}}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}}}