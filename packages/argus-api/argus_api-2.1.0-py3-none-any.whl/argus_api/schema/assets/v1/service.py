"""Autogenerated API schema"""
from argus_api import session


add_service_asset = {'tags': ['assets/v1'], 'summary': 'Creates a new ServiceAsset. (PUBLIC)', 'description': '', 'operationId': 'addServiceAsset', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'ServiceAsset add request', 'required': False, 'schema': {'type': 'object', 'required': ['customerID', 'name'], 'properties': {'ownerID': {'type': 'int', 'position': 0, 'description': 'User who owns the asset. '}, 'customerID': {'type': 'int', 'position': 0, 'description': 'Customer the asset belongs to. ', 'minimum': 1}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the asset.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'Description of the asset.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Custom user-defined properties.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*', 'additionalProperties': {'type': 'string'}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
attach_hosts_to_service = {'tags': ['assets/v1'], 'summary': 'Adds multiple HostAssets to a ServiceAsset. (PUBLIC)', 'description': '', 'operationId': 'attachHostsToService', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ServiceAsset ID', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Attach hosts to service request', 'required': False, 'schema': {'type': 'object', 'required': ['hostAssetIDs'], 'properties': {'hostAssetIDs': {'type': 'list', 'position': 0, 'description': 'Specify hosts to add to service. ', 'uniqueItems': True, 'items': {'type': 'str'}, 'maxItems': 2147483647, 'minItems': 1}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_service_asset = {'tags': ['assets/v1'], 'summary': 'Marks a ServiceAsset as deleted. (PUBLIC)', 'description': '', 'operationId': 'deleteServiceAsset', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ServiceAsset ID', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
detach_hosts_from_service = {'tags': ['assets/v1'], 'summary': 'Removes multiple HostAssets from a ServiceAsset. (PUBLIC)', 'description': '', 'operationId': 'detachHostsFromService', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ServiceAsset ID', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Detach hosts from service request', 'required': False, 'schema': {'type': 'object', 'required': ['hostAssetIDs'], 'properties': {'hostAssetIDs': {'type': 'list', 'position': 0, 'description': 'Specify hosts to detach from service. ', 'uniqueItems': True, 'items': {'type': 'str'}, 'maxItems': 2147483647, 'minItems': 1}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_service_asset = {'tags': ['assets/v1'], 'summary': 'Returns a ServiceAsset identified by its ID. (PUBLIC)', 'description': '', 'operationId': 'getServiceAsset', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ServiceAsset ID', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_service_asset_statistics = {'tags': ['assets/v1'], 'summary': 'Fetch service asset statistics base on criteria (DEV)', 'description': '', 'operationId': 'searchServiceAssetStatistics', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Statistics search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'name': {'type': 'list', 'description': 'Restrict search to specific asset name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (start timestamp).'}, 'endTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (end timestamp).'}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'hostID': {'type': 'list', 'description': 'Restrict search to specific host UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'serviceID': {'type': 'list', 'description': 'Restrict search to specific service UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'businessProcessID': {'type': 'list', 'description': 'Restrict search to specific business process UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'ipRange': {'type': 'str', 'example': '{"ipRange": ["10.0.5.1-10.0.5.30", "10.0.5.0/24", "10.0.5.1"]}', 'description': 'Restrict search to entities related to these IP-addresses (may specify single IPs, IP networks or IP ranges.'}, 'applicationPort': {'type': 'list', 'description': 'Restrict to applications listening on specific ports.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'applicationProtocol': {'type': 'list', 'description': 'Restrict to applications by transport protocol name.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['icmp', 'ip', 'tcp', 'udp', 'esp', 'unknown']}}, 'cpe': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications or hosts by CPE.'}, 'hostCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to hosts by CPE.'}, 'applicationCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications by CPE.'}, 'countTimeout': {'type': 'int', 'example': 0, 'description': 'Max wait in seconds for count query, if max wait passed and count query still executing the query; or -1 is set to indicate do not count, then the query will be cancelled and return count -1. Default value 0 means execute as long as service allows, -1 means do not count, max value is 30 (seconds).', 'minimum': -1, 'maximum': 30}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'name': {'type': 'list', 'description': 'Restrict search to specific asset name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (start timestamp).'}, 'endTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (end timestamp).'}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'hostID': {'type': 'list', 'description': 'Restrict search to specific host UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'serviceID': {'type': 'list', 'description': 'Restrict search to specific service UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'businessProcessID': {'type': 'list', 'description': 'Restrict search to specific business process UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'ipRange': {'type': 'str', 'example': '{"ipRange": ["10.0.5.1-10.0.5.30", "10.0.5.0/24", "10.0.5.1"]}', 'description': 'Restrict search to entities related to these IP-addresses (may specify single IPs, IP networks or IP ranges.'}, 'applicationPort': {'type': 'list', 'description': 'Restrict to applications listening on specific ports.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'applicationProtocol': {'type': 'list', 'description': 'Restrict to applications by transport protocol name.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['icmp', 'ip', 'tcp', 'udp', 'esp', 'unknown']}}, 'cpe': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications or hosts by CPE.'}, 'hostCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to hosts by CPE.'}, 'applicationCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications by CPE.'}, 'countTimeout': {'type': 'int', 'example': 0, 'description': 'Max wait in seconds for count query, if max wait passed and count query still executing the query; or -1 is set to indicate do not count, then the query will be cancelled and return count -1. Default value 0 means execute as long as service allows, -1 means do not count, max value is 30 (seconds).', 'minimum': -1, 'maximum': 30}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'name': {'type': 'list', 'description': 'Restrict search to specific asset name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (start timestamp).'}, 'endTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (end timestamp).'}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'hostID': {'type': 'list', 'description': 'Restrict search to specific host UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'serviceID': {'type': 'list', 'description': 'Restrict search to specific service UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'businessProcessID': {'type': 'list', 'description': 'Restrict search to specific business process UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'ipRange': {'type': 'str', 'example': '{"ipRange": ["10.0.5.1-10.0.5.30", "10.0.5.0/24", "10.0.5.1"]}', 'description': 'Restrict search to entities related to these IP-addresses (may specify single IPs, IP networks or IP ranges.'}, 'applicationPort': {'type': 'list', 'description': 'Restrict to applications listening on specific ports.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'applicationProtocol': {'type': 'list', 'description': 'Restrict to applications by transport protocol name.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['icmp', 'ip', 'tcp', 'udp', 'esp', 'unknown']}}, 'cpe': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications or hosts by CPE.'}, 'hostCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to hosts by CPE.'}, 'applicationCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications by CPE.'}, 'countTimeout': {'type': 'int', 'example': 0, 'description': 'Max wait in seconds for count query, if max wait passed and count query still executing the query; or -1 is set to indicate do not count, then the query will be cancelled and return count -1. Default value 0 means execute as long as service allows, -1 means do not count, max value is 30 (seconds).', 'minimum': -1, 'maximum': 30}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'customerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to data belonging to specified customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'ownerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific ownerIDs ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'criticality': {'type': 'list', 'position': 0, 'description': 'Restrict search to a range of criticality levels (add multiple CriticalitySearch objects to specify OR criteria). ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['dimension', 'severities'], 'properties': {'dimension': {'type': 'str', 'position': 0, 'description': 'Which criticality dimention to search for ', 'enum': ['CONFIDENTIALITY', 'AVAILABILITY', 'INTEGRITY']}, 'severities': {'type': 'list', 'position': 0, 'description': 'Which severities to filter for specified dimension ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'maxItems': 2147483647, 'minItems': 1}}}}, 'minimumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a minimum total CVSS score. '}, 'maximumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a maximum total CVSS score. '}, 'vulnerabilityReference': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability reference. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability ID. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'applicationRole': {'type': 'list', 'position': 0, 'description': 'Restrict to applications with specific roles (list of role IDs). ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp on service). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'lastEventTimestamp', 'deletedTimestamp', 'all']}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['name', 'description', 'hostAlias', 'hostName', 'vulnerabilityID', 'vulnerabilityName', 'vulnerabilityReference', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['owner', 'customer', 'name', 'totalCvss', 'vulnerabilitiesCount', 'createdTimestamp', 'lastEventTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'customerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to data belonging to specified customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'ownerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific ownerIDs ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'criticality': {'type': 'list', 'position': 0, 'description': 'Restrict search to a range of criticality levels (add multiple CriticalitySearch objects to specify OR criteria). ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['dimension', 'severities'], 'properties': {'dimension': {'type': 'str', 'position': 0, 'description': 'Which criticality dimention to search for ', 'enum': ['CONFIDENTIALITY', 'AVAILABILITY', 'INTEGRITY']}, 'severities': {'type': 'list', 'position': 0, 'description': 'Which severities to filter for specified dimension ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'maxItems': 2147483647, 'minItems': 1}}}}, 'minimumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a minimum total CVSS score. '}, 'maximumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a maximum total CVSS score. '}, 'vulnerabilityReference': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability reference. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability ID. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'applicationRole': {'type': 'list', 'position': 0, 'description': 'Restrict to applications with specific roles (list of role IDs). ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp on service). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'lastEventTimestamp', 'deletedTimestamp', 'all']}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['name', 'description', 'hostAlias', 'hostName', 'vulnerabilityID', 'vulnerabilityName', 'vulnerabilityReference', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['owner', 'customer', 'name', 'totalCvss', 'vulnerabilitiesCount', 'createdTimestamp', 'lastEventTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'customerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to data belonging to specified customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'ownerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific ownerIDs ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'criticality': {'type': 'list', 'position': 0, 'description': 'Restrict search to a range of criticality levels (add multiple CriticalitySearch objects to specify OR criteria). ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['dimension', 'severities'], 'properties': {'dimension': {'type': 'str', 'position': 0, 'description': 'Which criticality dimention to search for ', 'enum': ['CONFIDENTIALITY', 'AVAILABILITY', 'INTEGRITY']}, 'severities': {'type': 'list', 'position': 0, 'description': 'Which severities to filter for specified dimension ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'maxItems': 2147483647, 'minItems': 1}}}}, 'minimumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a minimum total CVSS score. '}, 'maximumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a maximum total CVSS score. '}, 'vulnerabilityReference': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability reference. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability ID. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'applicationRole': {'type': 'list', 'position': 0, 'description': 'Restrict to applications with specific roles (list of role IDs). ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp on service). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'lastEventTimestamp', 'deletedTimestamp', 'all']}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['name', 'description', 'hostAlias', 'hostName', 'vulnerabilityID', 'vulnerabilityName', 'vulnerabilityReference', 'all']}}, 'groupBy': {'type': 'list', 'position': 0, 'description': 'Specify which fields will be grouped by in stats ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'businessProcess', 'integrity', 'confidentiality', 'availability']}}, 'values': {'type': 'list', 'position': 0, 'description': 'Specify which values will be included in stats (default services) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['services', 'hosts', 'totalCvss']}, 'maxItems': 2147483647, 'minItems': 1}, 'resolution': {'type': 'int', 'position': 0, 'description': 'Stats resolution period in milliseconds, if is 0 means to generate non-timeline statistics ', 'minimum': 0}, 'cutoff': {'type': 'int', 'position': 0, 'description': 'Reduce stats keys to the cutoff amount of keys that has largest hit count, default 0 means no reduce ', 'minimum': 0}, 'cutoffValue': {'type': 'str', 'position': 0, 'description': 'Specify which value to be cutoff on (default services) ', 'enum': ['services', 'hosts', 'totalCvss']}, 'includeOthers': {'type': 'bool', 'position': 0, 'description': 'If reduce (cutoff >0), true means remaining keys (other than cutoff keys) are collected into an "other" key, default false '}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['owner', 'customer', 'name', 'totalCvss', 'vulnerabilitiesCount', 'createdTimestamp', 'lastEventTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'statsID': {'type': 'int', 'position': 0, 'description': 'Statistics ID '}, 'customerID': {'type': 'int', 'position': 0, 'description': 'Customer ID '}, 'resolution': {'type': 'int', 'position': 0, 'description': 'Statistics time frame period length '}, 'records': {'type': 'int', 'position': 0, 'description': 'Amount of records '}, 'hitCount': {'type': 'dict', 'position': 0, 'description': 'Total amount of hits per value ', 'additionalProperties': {'type': 'int'}}, 'keyNames': {'type': 'list', 'position': 0, 'description': 'List of key names ', 'items': {'type': 'string'}}, 'valueNames': {'type': 'list', 'position': 0, 'description': 'List of value names ', 'items': {'type': 'string'}}, 'keys': {'type': 'list', 'position': 0, 'description': 'List of statistics keys e.g. {"id":1, "key1Name":"key1", "key2Name":"key2"} ', 'items': {'type': 'dict', 'additionalProperties': {'type': 'object'}}}, 'timeFrames': {'type': 'list', 'position': 0, 'description': 'List of statistics records grouped by time frame ', 'items': {'type': 'dict', 'properties': {'records': {'type': 'list', 'items': {'type': 'dict', 'properties': {'keyID': {'type': 'int'}, 'value': {'type': 'dict', 'additionalProperties': {'type': 'int'}}}}}, 'timeFrame': {'type': 'dict', 'properties': {'startTime': {'type': 'int'}, 'endTime': {'type': 'int'}}}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation failed'}}}
search_service_assets = {'tags': ['assets/v1'], 'summary': 'Returns a set of ServiceAssets defined by a ServiceAssetSearchCriteria. (PUBLIC)', 'description': '', 'operationId': 'searchServiceAssets', 'consumes': ['application/json'], 'produces': ['application/json', 'text/csv'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'name': {'type': 'list', 'description': 'Restrict search to specific asset name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (start timestamp).'}, 'endTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (end timestamp).'}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'hostID': {'type': 'list', 'description': 'Restrict search to specific host UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'serviceID': {'type': 'list', 'description': 'Restrict search to specific service UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'businessProcessID': {'type': 'list', 'description': 'Restrict search to specific business process UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'ipRange': {'type': 'str', 'example': '{"ipRange": ["10.0.5.1-10.0.5.30", "10.0.5.0/24", "10.0.5.1"]}', 'description': 'Restrict search to entities related to these IP-addresses (may specify single IPs, IP networks or IP ranges.'}, 'applicationPort': {'type': 'list', 'description': 'Restrict to applications listening on specific ports.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'applicationProtocol': {'type': 'list', 'description': 'Restrict to applications by transport protocol name.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['icmp', 'ip', 'tcp', 'udp', 'esp', 'unknown']}}, 'cpe': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications or hosts by CPE.'}, 'hostCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to hosts by CPE.'}, 'applicationCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications by CPE.'}, 'countTimeout': {'type': 'int', 'example': 0, 'description': 'Max wait in seconds for count query, if max wait passed and count query still executing the query; or -1 is set to indicate do not count, then the query will be cancelled and return count -1. Default value 0 means execute as long as service allows, -1 means do not count, max value is 30 (seconds).', 'minimum': -1, 'maximum': 30}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'name': {'type': 'list', 'description': 'Restrict search to specific asset name', 'uniqueItems': True, 'items': {'type': 'string'}}, 'startTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (start timestamp).'}, 'endTimestamp': {'type': 'int', 'description': 'Restrict search to a time frame based on the set TimeFieldStrategy (end timestamp).'}, 'keywords': {'type': 'list', 'description': 'Search for keywords.', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'description': 'Defines the MatchStrategy for keywords (default match all keywords).', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any)', 'enum': ['all', 'any']}, 'hostID': {'type': 'list', 'description': 'Restrict search to specific host UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'serviceID': {'type': 'list', 'description': 'Restrict search to specific service UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'businessProcessID': {'type': 'list', 'description': 'Restrict search to specific business process UUIDs.', 'uniqueItems': True, 'items': {'type': 'str'}}, 'ipRange': {'type': 'str', 'example': '{"ipRange": ["10.0.5.1-10.0.5.30", "10.0.5.0/24", "10.0.5.1"]}', 'description': 'Restrict search to entities related to these IP-addresses (may specify single IPs, IP networks or IP ranges.'}, 'applicationPort': {'type': 'list', 'description': 'Restrict to applications listening on specific ports.', 'uniqueItems': True, 'items': {'type': 'int'}}, 'applicationProtocol': {'type': 'list', 'description': 'Restrict to applications by transport protocol name.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['icmp', 'ip', 'tcp', 'udp', 'esp', 'unknown']}}, 'cpe': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications or hosts by CPE.'}, 'hostCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to hosts by CPE.'}, 'applicationCPE': {'type': 'str', 'example': 'cpe:2.3:o:microsoft:windows:2008:r2', 'description': 'Restrict to applications by CPE.'}, 'countTimeout': {'type': 'int', 'example': 0, 'description': 'Max wait in seconds for count query, if max wait passed and count query still executing the query; or -1 is set to indicate do not count, then the query will be cancelled and return count -1. Default value 0 means execute as long as service allows, -1 means do not count, max value is 30 (seconds).', 'minimum': -1, 'maximum': 30}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'customerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to data belonging to specified customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'ownerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific ownerIDs ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'criticality': {'type': 'list', 'position': 0, 'description': 'Restrict search to a range of criticality levels (add multiple CriticalitySearch objects to specify OR criteria). ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['dimension', 'severities'], 'properties': {'dimension': {'type': 'str', 'position': 0, 'description': 'Which criticality dimention to search for ', 'enum': ['CONFIDENTIALITY', 'AVAILABILITY', 'INTEGRITY']}, 'severities': {'type': 'list', 'position': 0, 'description': 'Which severities to filter for specified dimension ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'maxItems': 2147483647, 'minItems': 1}}}}, 'minimumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a minimum total CVSS score. '}, 'maximumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a maximum total CVSS score. '}, 'vulnerabilityReference': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability reference. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability ID. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'applicationRole': {'type': 'list', 'position': 0, 'description': 'Restrict to applications with specific roles (list of role IDs). ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp on service). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'lastEventTimestamp', 'deletedTimestamp', 'all']}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['name', 'description', 'hostAlias', 'hostName', 'vulnerabilityID', 'vulnerabilityName', 'vulnerabilityReference', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['owner', 'customer', 'name', 'totalCvss', 'vulnerabilitiesCount', 'createdTimestamp', 'lastEventTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'customerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to data belonging to specified customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'ownerID': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific ownerIDs ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'criticality': {'type': 'list', 'position': 0, 'description': 'Restrict search to a range of criticality levels (add multiple CriticalitySearch objects to specify OR criteria). ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['dimension', 'severities'], 'properties': {'dimension': {'type': 'str', 'position': 0, 'description': 'Which criticality dimention to search for ', 'enum': ['CONFIDENTIALITY', 'AVAILABILITY', 'INTEGRITY']}, 'severities': {'type': 'list', 'position': 0, 'description': 'Which severities to filter for specified dimension ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'maxItems': 2147483647, 'minItems': 1}}}}, 'minimumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a minimum total CVSS score. '}, 'maximumTotalCvss': {'type': 'float', 'position': 0, 'description': 'Restrict search to a maximum total CVSS score. '}, 'vulnerabilityReference': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability reference. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'vulnerabilityID': {'type': 'list', 'position': 0, 'description': 'Restrict to vulnerabilities identified by vulnerability ID. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'applicationRole': {'type': 'list', 'position': 0, 'description': 'Restrict to applications with specific roles (list of role IDs). ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which timestamps will be included in the search (default lastUpdatedTimestamp on service). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createdTimestamp', 'lastUpdatedTimestamp', 'lastEventTimestamp', 'deletedTimestamp', 'all']}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Defines which fields will be searched by keywords (default all supported fields). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['name', 'description', 'hostAlias', 'hostName', 'vulnerabilityID', 'vulnerabilityName', 'vulnerabilityReference', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['owner', 'customer', 'name', 'totalCvss', 'vulnerabilitiesCount', 'createdTimestamp', 'lastEventTimestamp', 'lastUpdatedTimestamp', 'deletedTimestamp']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_service_assets_simplified = {'tags': ['assets/v1'], 'summary': 'Returns as set of ServiceAssets defined by query parameters. (PUBLIC)', 'description': '', 'operationId': 'searchServiceAssetsSimplified', 'produces': ['application/json', 'text/csv'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywordMatch', 'in': 'query', 'description': 'Set match strategy for keyword search', 'required': False, 'type': 'str', 'default': 'all', 'enum': ['all', 'any']}, {'name': 'keywordField', 'in': 'query', 'description': 'Set field strategy for keyword search', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'all', 'enum': ['name', 'description', 'hostAlias', 'hostName', 'vulnerabilityID', 'vulnerabilityName', 'vulnerabilityReference', 'all']}, 'collectionFormat': 'multi'}, {'name': 'name', 'in': 'query', 'description': 'Search by name', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'hostID', 'in': 'query', 'description': 'Search by HostAsset ID', 'required': False, 'type': 'list', 'items': {'type': 'str'}, 'collectionFormat': 'multi'}, {'name': 'serviceID', 'in': 'query', 'description': 'Search by ServiceAsset ID', 'required': False, 'type': 'list', 'items': {'type': 'str'}, 'collectionFormat': 'multi'}, {'name': 'businessProcessID', 'in': 'query', 'description': 'Search by BusinessProcess ID', 'required': False, 'type': 'list', 'items': {'type': 'str'}, 'collectionFormat': 'multi'}, {'name': 'customerID', 'in': 'query', 'description': 'Search by customer ID', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'ip', 'in': 'query', 'description': 'Search by IP range', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'port', 'in': 'query', 'description': 'Search by application port', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'protocol', 'in': 'query', 'description': 'Search by application protocol', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['icmp', 'ip', 'tcp', 'udp', 'esp', 'unknown']}, 'collectionFormat': 'multi'}, {'name': 'cpe', 'in': 'query', 'description': 'Search by CPE', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'vulnID', 'in': 'query', 'description': 'Search by vulnerability ID', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'vulnRef', 'in': 'query', 'description': 'Search by vulnerability reference', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'includeFlag', 'in': 'query', 'description': 'Include certain ServiceAssets in the search result based on set flags', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}, 'collectionFormat': 'multi'}, {'name': 'excludeFlag', 'in': 'query', 'description': 'Exclude certain ServiceAssets from the search result based on set flags', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'countTimeout', 'in': 'query', 'description': 'Max wait in seconds for count query. Value 0 means execute as long as service allows, -1 means do not count, max value is 30 (seconds).', 'required': False, 'type': 'int', 'maximum': 30, 'minimum': -1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_service_asset = {'tags': ['assets/v1'], 'summary': 'Updates an existing ServiceAsset. (PUBLIC)', 'description': '', 'operationId': 'updateServiceAsset', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ServiceAsset ID', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'ServiceAsset update request', 'required': False, 'schema': {'type': 'object', 'properties': {'ownerID': {'type': 'int', 'position': 0, 'description': 'Change user who owns the asset. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Change name of asset.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'Change description of asset.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'enum': ['UNKNOWN', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'unknown', 'low', 'medium', 'high', 'critical']}}}, 'addProperties': {'type': 'dict', 'position': 0, 'description': 'Add custom properties (updates a property if key already exists).  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*', 'additionalProperties': {'type': 'string'}}, 'deleteProperties': {'type': 'list', 'position': 0, 'description': 'Delete custom properties by key. ', 'uniqueItems': True, 'items': {'type': 'string'}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'str'}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'str', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'dict', 'properties': {'confidentiality': {'type': 'str', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'str', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'str', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'float', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'int', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'list', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'list', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['name'], 'properties': {'id': {'type': 'str'}, 'name': {'type': 'str', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '220': {'description': 'No value to be updated', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': {'type': 'string', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'integer', 'format': 'int64'}}}}, 'data': {'type': 'object', 'required': ['createdByUser', 'createdTimestamp', 'criticality', 'customer', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'properties', 'totalCvss', 'vulnerabilitiesCount'], 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'ownedByUser': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}}}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'name': {'type': 'string', 'position': 0, 'description': 'The authorative name of the asset '}, 'description': {'type': 'string', 'position': 0, 'description': 'Asset description '}, 'criticality': {'type': 'object', 'properties': {'confidentiality': {'type': 'string', 'position': 0, 'description': 'The confidentiality criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'integrity': {'type': 'string', 'position': 0, 'description': 'The integrity criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}, 'availability': {'type': 'string', 'position': 0, 'description': 'The availability criticality level ', 'enum': ['unknown', 'low', 'medium', 'high', 'critical']}}}, 'totalCvss': {'type': 'number', 'format': 'double', 'position': 0, 'description': 'The total CVSS score for this asset '}, 'vulnerabilitiesCount': {'type': 'integer', 'format': 'int32', 'position': 0, 'description': 'The total number of active vulnerabilities for this asset '}, 'createdTimestamp': {'type': 'integer', 'format': 'int64', 'position': 0, 'description': 'The timestamp when this asset was created '}, 'createdByUser': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}}}, 'lastUpdatedTimestamp': {'type': 'integer', 'format': 'int64', 'position': 0, 'description': 'The timestamp when this asset was last updated '}, 'lastUpdatedByUser': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}}}, 'deletedTimestamp': {'type': 'integer', 'format': 'int64', 'position': 0, 'description': 'The timestamp when this asset was deleted '}, 'deletedByUser': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'customer': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int64'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'object', 'properties': {'id': {'type': 'integer', 'format': 'int32'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'integer', 'format': 'int64'}}}, 'flags': {'type': 'array', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'string', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'CREATED_BY_CVM', 'UPDATED_BY_CVM', 'DETECTED_BY_CVM', 'MISSING_FROM_CVM', 'DELETED_FROM_CVM', 'HAS_HIGH_VULN', 'HAS_CRITICAL_VULN', 'MERGED']}}, 'properties': {'type': 'object', 'position': 0, 'description': 'Properties set for this asset ', 'additionalProperties': {'type': 'string'}}, 'businessProcesses': {'type': 'array', 'position': 0, 'description': 'The processes this service is bound to ', 'uniqueItems': True, 'items': {'type': 'object', 'required': ['name'], 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'position': 0, 'description': 'The authorative name of the asset '}}}}, 'hosts': {'type': 'array', 'position': 0, 'description': 'The hosts bound to this service ', 'uniqueItems': True, 'items': {'type': 'object', 'required': ['name'], 'properties': {'id': {'type': 'string', 'format': 'uuid'}, 'name': {'type': 'string', 'position': 0, 'description': 'The authorative name of the asset '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}