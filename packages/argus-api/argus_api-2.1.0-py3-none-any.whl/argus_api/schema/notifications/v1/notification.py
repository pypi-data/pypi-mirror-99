"""Autogenerated API schema"""
from argus_api import session


prepare_notification = {'tags': ['notifications/v1/notification'], 'summary': 'Prepare a new notification (DEV)', 'description': '', 'operationId': 'prepareNotification', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Notification request', 'required': False, 'schema': {'type': 'object', 'required': ['event', 'recipients'], 'properties': {'customerID': {'type': 'int', 'position': 0, 'description': 'Set the customer context of this notification request. If not set, it should default to the current users customer. ', 'minimum': 0}, 'event': {'type': 'str', 'position': 0, 'description': 'The name of the notification event to trigger. This will determine notification behaviour and rules. '}, 'recipients': {'type': 'list', 'position': 0, 'description': 'Recipients to notify, either user or non-user. ', 'items': {'type': 'dict', 'required': ['format', 'language', 'type'], 'properties': {'userID': {'type': 'int', 'position': 0, 'description': 'If set, this ID referse to the user to notify ', 'minimum': 0}, 'type': 'str', 'language': {'type': 'str', 'position': 0, 'description': 'Type specifies the preferred notification language for this recipient. Defaults to english. ', 'enum': ['english', 'norwegian']}, 'role': {'type': 'str', 'position': 0, 'description': 'This specifies the role this recipient has (why is the recipient being notified). Default is undefined. ', 'enum': ['serviceContact', 'watcher', 'copy', 'currentUser']}, 'name': {'type': 'str', 'position': 0, 'description': 'This specifies the name of the recipient. Only applicable if the recipient is not referring to a user. '}, 'email': {'type': 'str', 'position': 0, 'description': 'This specifies the notification email of the recipient. Only applicable for recipients of type email, which is not connected to a user. '}, 'phone': {'type': 'str', 'position': 0, 'description': 'This specifies the notification phone number of the recipient. Only applicable for recipients of type sms, which is not connected to a user. '}, 'options': ['sms', 'email']}}, 'maxItems': 2147483647, 'minItems': 1}, 'attachments': {'type': 'list', 'position': 0, 'description': 'Attachments to process in this notification. The notification rules and destinations will determine how these are used. ', 'items': {'type': 'dict', 'required': ['contentType', 'data', 'fileName'], 'properties': {'contentType': {'type': 'str', 'position': 0, 'description': 'MIME Content type of this attachment. '}, 'fileName': {'type': 'str', 'position': 0, 'description': 'Filename of this attachment. '}, 'data': {'type': 'str', 'position': 0, 'description': 'The raw bytes of this attachment. '}}}}, 'context': {'type': 'dict', 'position': 0, 'description': 'The notification context objects. The notification event determines which context objects are expected. Each object should be JSON serializable. ', 'additionalProperties': {'type': 'object'}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'recipients': {'type': 'list', 'position': 0, 'description': 'The recipients that this notification sends to ', 'items': {'type': 'dict', 'properties': {'type': 'str', 'name': {'type': 'str', 'position': 0, 'description': 'Name of this recipient '}, 'destination': {'type': 'str', 'position': 0, 'description': 'The destination of this recipient (email, sms or other) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'The flags of this recipient ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['verbose']}}, 'userID': {'type': 'int', 'position': 0, 'description': 'The ID of the user this notification is bound to, or 0 if not a user '}, 'options': ['email', 'sms', 'app']}}}, 'state': {'type': 'str', 'position': 0, 'description': 'The state of this notification. ', 'enum': ['prepared', 'sent']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
prepare_notification_1 = {'tags': ['notifications/v1/notification'], 'summary': 'Send a pending notification (DEV)', 'description': '', 'operationId': 'prepareNotification_1', 'produces': ['application/json'], 'parameters': [{'name': 'notificationID', 'in': 'path', 'description': 'Notification ID', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'recipients': {'type': 'list', 'position': 0, 'description': 'The recipients that this notification sends to ', 'items': {'type': 'dict', 'properties': {'type': 'str', 'name': {'type': 'str', 'position': 0, 'description': 'Name of this recipient '}, 'destination': {'type': 'str', 'position': 0, 'description': 'The destination of this recipient (email, sms or other) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'The flags of this recipient ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['verbose']}}, 'userID': {'type': 'int', 'position': 0, 'description': 'The ID of the user this notification is bound to, or 0 if not a user '}, 'options': ['email', 'sms', 'app']}}}, 'state': {'type': 'str', 'position': 0, 'description': 'The state of this notification. ', 'enum': ['prepared', 'sent']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}