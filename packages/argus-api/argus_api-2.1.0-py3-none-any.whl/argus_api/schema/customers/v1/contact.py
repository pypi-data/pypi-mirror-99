"""Autogenerated API schema"""
from argus_api import session


add_contact = {'tags': ['customers/v1/contact'], 'summary': 'Create a new customer contact. (DEV)', 'description': '', 'operationId': 'addContact', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Add request', 'required': False, 'schema': {'type': 'object', 'required': ['customer'], 'properties': {'customer': {'type': 'str', 'position': 0, 'description': 'Customer this contact is bound to '}, 'language': {'type': 'str', 'position': 0, 'description': 'Language this contact should receive notifications in. Disregarded if subject is specified. Defaults to english. ', 'enum': ['english', 'norwegian']}, 'user': {'type': 'str', 'position': 0, 'description': 'User ID or shortname for user to bind this contact to. If not specified, name and contact settings must be specified. '}, 'name': {'type': 'str', 'position': 0, 'description': 'The displayName of this contact. If user is set, this is disregarded. '}, 'email': {'type': 'str', 'position': 0, 'description': 'The email address of this contact. If user is set, this is disregarded.  => format:email'}, 'workPhone': {'type': 'str', 'position': 0, 'description': 'The work phone number of this contact. If user is set, this is disregarded.  => format:phone'}, 'mobilePhone': {'type': 'str', 'position': 0, 'description': 'The mobile phone number of this contact. If user is set, this is disregarded.  => format:phone'}, 'description': {'type': 'str', 'position': 0, 'description': 'A description of this contact. If user is set, this is disregarded. '}, 'services': {'type': 'list', 'position': 0, 'description': 'A list of service shortnames or IDs for services that this contact should be notified on. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable these settings. Default is specified by parent request. '}, 'verbose': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable verbose notification. Default is specified by parent request. '}, 'action': {'type': 'list', 'position': 0, 'description': 'If set, specify on which actions these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'position': 0, 'description': 'If set, specify on which priorities these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'position': 0, 'description': 'If set, specify on which input these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['soc', 'customer']}}, 'caseType': {'type': 'list', 'position': 0, 'description': 'If set, specify on which case types these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable these settings. Default is specified by parent request. '}, 'verbose': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable verbose notification. Default is specified by parent request. '}, 'action': {'type': 'list', 'position': 0, 'description': 'If set, specify on which actions these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'position': 0, 'description': 'If set, specify on which priorities these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'position': 0, 'description': 'If set, specify on which input these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['soc', 'customer']}}, 'caseType': {'type': 'list', 'position': 0, 'description': 'If set, specify on which case types these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'workPhone': {'type': 'string'}, 'mobilePhone': {'type': 'string'}, 'description': {'type': 'string'}, 'services': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
add_contact_service = {'tags': ['customers/v1/contact'], 'summary': 'Enable a service for a customer contact. (DEV)', 'description': '', 'operationId': 'addContactService', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'contactID', 'in': 'path', 'description': 'ID of contact', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Add request', 'required': False, 'schema': {'type': 'object', 'required': ['service'], 'properties': {'service': {'type': 'str', 'position': 0, 'description': 'The service to enable for this contact '}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_contact = {'tags': ['customers/v1/contact'], 'summary': 'Delete an existing customer contact. (DEV)', 'description': '', 'operationId': 'deleteContact', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Contact ID', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'workPhone': {'type': 'string'}, 'mobilePhone': {'type': 'string'}, 'description': {'type': 'string'}, 'services': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_contact = {'tags': ['customers/v1/contact'], 'summary': 'Returns a customer contact identified by its ID. (DEV)', 'description': '', 'operationId': 'getContact', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Contact ID', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'workPhone': {'type': 'string'}, 'mobilePhone': {'type': 'string'}, 'description': {'type': 'string'}, 'services': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_contacts = {'tags': ['customers/v1/contact'], 'summary': 'Returns all customer contacts matching criteria. (DEV)', 'description': '', 'operationId': 'listContacts', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Filter by customer ID or shortname', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'service', 'in': 'query', 'description': 'Filter by service ID or shortname', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'user', 'in': 'query', 'description': 'Filter by user ID or shortname', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Limit search to contacts matching these keywords (for either name, email or description). Note: will not search on associated user.', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Skip results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'workPhone': {'type': 'string'}, 'mobilePhone': {'type': 'string'}, 'description': {'type': 'string'}, 'services': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
remove_contact_service = {'tags': ['customers/v1/contact'], 'summary': 'Disable a service for a customer contact. (DEV)', 'description': '', 'operationId': 'removeContactService', 'produces': ['application/json'], 'parameters': [{'name': 'contactID', 'in': 'path', 'description': 'ID of contact', 'required': True, 'type': 'int'}, {'name': 'service', 'in': 'path', 'description': 'Name of service to disable', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_contacts = {'tags': ['customers/v1/contact'], 'summary': 'Returns all customer contacts matching criteria. (DEV)', 'description': '', 'operationId': 'searchContacts', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'ID or shortname of customers of contacts to search for. Customer groups will return contacts for all subcustomers. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'service': {'type': 'list', 'position': 0, 'description': 'ID or shortname of services of contacts to search for. Will return contacts which are bound to any of these services. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'user': {'type': 'list', 'position': 0, 'description': 'ID or shortname of users of contacts to search for. Will return contacts which is bound to any of these users. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Limit search to contacts matching these keywords (for either name, email or description). Note: will not search on associated user. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit search results (default 25)', 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip search results (default 0)', 'default': 0}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'workPhone': {'type': 'string'}, 'mobilePhone': {'type': 'string'}, 'description': {'type': 'string'}, 'services': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_contact = {'tags': ['customers/v1/contact'], 'summary': 'Update an existing customer contact. (DEV)', 'description': '', 'operationId': 'updateContact', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Contact ID', 'required': True, 'type': 'int'}, {'in': 'body', 'name': 'body', 'description': 'Update request', 'required': False, 'schema': {'type': 'object', 'properties': {'language': {'type': 'str', 'position': 0, 'description': 'If set, change the language this contact should receive notifications in. If the contact is bound to a user, this field is invalid. ', 'enum': ['english', 'norwegian']}, 'name': {'type': 'str', 'position': 0, 'description': 'If set, change the displayName of this contact. If the contact is bound to a user, this field is invalid. '}, 'email': {'type': 'str', 'position': 0, 'description': 'If set, change the email address of this contact. If the contact is bound to a user, this field is invalid.  => format:email'}, 'workPhone': {'type': 'str', 'position': 0, 'description': 'If set, change the work phone number of this contact. If the contact is bound to a user, this field is invalid.  => format:phone'}, 'mobilePhone': {'type': 'str', 'position': 0, 'description': 'If set, change the mobile phone number of this contact. If the contact is bound to a user, this field is invalid.  => format:phone'}, 'description': {'type': 'str', 'position': 0, 'description': 'If set, change the description of this contact. If the contact is bound to a user, this field is invalid. '}, 'services': {'type': 'list', 'position': 0, 'description': 'If set, overwrite the list of service shortnames or IDs which this contact is enabled for. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable these settings. Default is specified by parent request. '}, 'verbose': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable verbose notification. Default is specified by parent request. '}, 'action': {'type': 'list', 'position': 0, 'description': 'If set, specify on which actions these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'position': 0, 'description': 'If set, specify on which priorities these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'position': 0, 'description': 'If set, specify on which input these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['soc', 'customer']}}, 'caseType': {'type': 'list', 'position': 0, 'description': 'If set, specify on which case types these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable these settings. Default is specified by parent request. '}, 'verbose': {'type': 'bool', 'position': 0, 'description': 'If set, specify to disable or enable verbose notification. Default is specified by parent request. '}, 'action': {'type': 'list', 'position': 0, 'description': 'If set, specify on which actions these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'position': 0, 'description': 'If set, specify on which priorities these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'position': 0, 'description': 'If set, specify on which input these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['soc', 'customer']}}, 'caseType': {'type': 'list', 'position': 0, 'description': 'If set, specify on which case types these settings apply. Default is specified by parent request. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'language': {'type': 'str', 'enum': ['english', 'norwegian']}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'workPhone': {'type': 'string'}, 'mobilePhone': {'type': 'string'}, 'description': {'type': 'string'}, 'services': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'localizedName': {'type': 'string'}}}}, 'mailSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'smsSettings': {'type': 'dict', 'properties': {'disabled': {'type': 'boolean'}, 'verbose': {'type': 'boolean'}, 'action': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['createCase', 'updateCase', 'closeCase']}}, 'priority': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['high', 'medium', 'low']}}, 'input': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['customer', 'soc']}}, 'caseType': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['change', 'informational', 'operationalIncident', 'securityIncident']}}}}, 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}