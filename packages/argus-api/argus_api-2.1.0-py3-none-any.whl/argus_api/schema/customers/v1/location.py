"""Autogenerated API schema"""
from argus_api import session


get_customer_locations = {'tags': ['customers/v1/customer'], 'summary': 'Deprecated! Use the equivalent end point in the Sensor Service. Search locations by criteria. (PUBLIC)', 'description': '', 'operationId': 'getCustomerLocations', 'produces': ['application/json'], 'parameters': [{'name': 'customerID', 'in': 'query', 'description': 'Search by customerIDs', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Search by keywords', 'required': False, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit result', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset result', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'timeZone': {'type': 'dict', 'properties': {'description': {'type': 'string'}}}, 'zone': {'type': 'str', 'enum': ['INTERNAL', 'EXTERNAL', 'DMZ', 'UNKNOWN']}, 'external': {'type': 'boolean'}, 'internal': {'type': 'boolean'}, 'globalCustomer': {'type': 'boolean'}, 'dmz': {'type': 'boolean'}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ZONE_DMZ', 'ZONE_EXTERNAL', 'ZONE_INTERNAL']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}, 'deprecated': True}