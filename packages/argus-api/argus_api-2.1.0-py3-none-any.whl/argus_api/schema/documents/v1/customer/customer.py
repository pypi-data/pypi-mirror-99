"""Autogenerated API schema"""
from argus_api import session


get_customer_root_folder = {'tags': ['documents/v1'], 'summary': 'Fetch customer root folder. This endpoint is deprecated, suggest to use /folder/path/meta/?customer=<customer> instead. (PUBLIC)', 'description': '', 'operationId': 'getCustomerRootFolder', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'path', 'description': 'ID of customer to fetch root folder for', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'Unique identifier of the folder/document '}, 'parentElements': {'type': 'list', 'position': 0, 'description': "Full path of the folder's/document's parent folders (ordered from root to parent folder; empty if root folder) ", 'items': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'Unique identifier of the folder '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the folder '}, 'accessMode': {'type': 'str', 'position': 0, 'description': 'The configured access mode set on this folder ', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}}}}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the folder/document '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'ownedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'When the folder/document was created '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'When the folder/document was last updated '}, 'accessMode': {'type': 'str', 'position': 0, 'description': 'General access mode of the folder/document ', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'effectiveAccessMode': {'type': 'str', 'position': 0, 'description': 'Effective access mode of the folder/document ', 'enum': ['roleBased', 'writeRestricted', 'readRestricted', 'explicit']}, 'currentUserAccessLevel': {'type': 'str', 'position': 0, 'description': 'Access level granted to the user viewing the folder/document ', 'enum': ['none', 'folder', 'read', 'write']}, 'elementType': {'type': 'str', 'position': 0, 'description': "Will be 'folder' ", 'enum': ['document', 'folder']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'ROOT_FOLDER']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation failed'}}, 'deprecated': True}