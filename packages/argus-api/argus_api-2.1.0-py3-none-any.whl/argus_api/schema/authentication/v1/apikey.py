"""Autogenerated API schema"""
from argus_api import session


initiate_1 = {'tags': ['authentication/v1'], 'summary': 'Initiate a new apikey for current user (PUBLIC)', 'description': '', 'operationId': 'initiate_1', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'API key initialization request', 'required': False, 'schema': {'type': 'object', 'required': ['description', 'password'], 'properties': {'description': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'validSources': {'type': 'str', 'description': 'Client IP/CIDR networks which the api key will be valid for.'}, 'password': {'type': 'str', 'position': 0, 'description': 'User password to verify this request '}, 'disableSourceRestriction': {'type': 'bool', 'position': 0, 'description': 'Request API-key without source restriction. If key without source restriction is not permitted, a 412 error will be returned. (default false)', 'default': False}, 'expirationDays': {'type': 'int', 'position': 0, 'description': 'Requested expiration days, 0 means unlimited. Default is 3 months. If user does not have permissions to specify expiration period, an error will be returned. '}, 'disableExpiration': {'type': 'bool', 'position': 0, 'description': 'Request API-key with unlimited expiration. If unlimited expiration is not permitted, a 412 error will be returned. (default false)', 'default': False}, 'sessionConstraints': {'type': 'dict', 'properties': {'customerID': {'type': 'list', 'position': 0, 'description': 'List of customers to constrain this session to. Default is all available customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'function': {'type': 'list', 'position': 0, 'description': 'List of functions (by name) to constrain this session to. Default is all available functions. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'functionID': {'type': 'list', 'position': 0, 'description': 'List of functions (by ID) to constrain this session to. Default is all available functions. ', 'uniqueItems': True, 'items': {'type': 'int'}}}}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'keyDescriptor': {'type': 'dict', 'properties': {'description': {'type': 'str', 'position': 0, 'description': 'Key description '}, 'validSources': {'type': 'list', 'position': 0, 'description': 'Client IP/CIDR networks which the api key will be valid for. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'validUntil': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key expires. If value is 0, key never expires. '}, 'lastUsedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key was last used. '}, 'lastUsedIP': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'constraints': {'type': 'dict', 'properties': {'customers': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}}, 'functions': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Function name '}, 'description': {'type': 'str', 'position': 0, 'description': 'Function description '}, 'securityLevel': {'type': 'str', 'position': 0, 'description': 'Function security level ', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ROLE', 'SYSADM']}}}}}}}, 'prefix': {'type': 'str', 'position': 0, 'description': 'Key prefix '}}}, 'apiKeyString': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}
list_1 = {'tags': ['authentication/v1'], 'summary': 'List current user apikeys (PUBLIC)', 'description': '', 'operationId': 'list_1', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'keys': {'type': 'list', 'items': {'type': 'dict', 'properties': {'description': {'type': 'str', 'position': 0, 'description': 'Key description '}, 'validSources': {'type': 'list', 'position': 0, 'description': 'Client IP/CIDR networks which the api key will be valid for. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'validUntil': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key expires. If value is 0, key never expires. '}, 'lastUsedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key was last used. '}, 'lastUsedIP': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'constraints': {'type': 'dict', 'properties': {'customers': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}}, 'functions': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Function name '}, 'description': {'type': 'str', 'position': 0, 'description': 'Function description '}, 'securityLevel': {'type': 'str', 'position': 0, 'description': 'Function security level ', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ROLE', 'SYSADM']}}}}}}}, 'prefix': {'type': 'str', 'position': 0, 'description': 'Key prefix '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}
renew_2 = {'tags': ['authentication/v1'], 'summary': 'Renew an apikey for current user', 'description': 'API keys have limited validity. This operationallows the user to renew a key, to allow it to remain functional for a new validity period.', 'operationId': 'renew_2', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'prefix', 'in': 'path', 'description': 'Key prefix on the form 1ab/2c', 'required': True, 'type': 'str', 'pattern': '[a-z0-9]+/[a-z0-9]+'}, {'in': 'body', 'name': 'body', 'description': 'API key renewal request', 'required': False, 'schema': {'type': 'object', 'required': ['password'], 'properties': {'password': {'type': 'str', 'position': 0, 'description': 'User password to verify this request '}, 'expirationDays': {'type': 'int', 'position': 0, 'description': 'Requested expiration days, 0 means unlimited. Default is 3 months. If user does not have permissions to specify expiration period, an error will be returned. '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'renewedKey': {'type': 'dict', 'properties': {'description': {'type': 'str', 'position': 0, 'description': 'Key description '}, 'validSources': {'type': 'list', 'position': 0, 'description': 'Client IP/CIDR networks which the api key will be valid for. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'validUntil': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key expires. If value is 0, key never expires. '}, 'lastUsedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key was last used. '}, 'lastUsedIP': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'constraints': {'type': 'dict', 'properties': {'customers': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}}, 'functions': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Function name '}, 'description': {'type': 'str', 'position': 0, 'description': 'Function description '}, 'securityLevel': {'type': 'str', 'position': 0, 'description': 'Function security level ', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ROLE', 'SYSADM']}}}}}}}, 'prefix': {'type': 'str', 'position': 0, 'description': 'Key prefix '}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}
renew_3 = {'tags': ['authentication/v1'], 'summary': 'null (PUBLIC)', 'operationId': 'renew_3', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'keyID', 'in': 'path', 'description': 'Key ID', 'required': True, 'type': 'int', 'pattern': '[0-9]+'}, {'in': 'body', 'name': 'body', 'description': 'API key renewal request', 'required': False, 'schema': {'type': 'object', 'required': ['password'], 'properties': {'password': {'type': 'str', 'position': 0, 'description': 'User password to verify this request '}, 'expirationDays': {'type': 'int', 'position': 0, 'description': 'Requested expiration days, 0 means unlimited. Default is 3 months. If user does not have permissions to specify expiration period, an error will be returned. '}}}}], 'responses': {'default': {'description': 'successful operation'}}, 'deprecated': True}
revoke_2 = {'tags': ['authentication/v1'], 'summary': 'null (PUBLIC)', 'operationId': 'revoke_2', 'produces': ['application/json'], 'parameters': [{'name': 'keyID', 'in': 'path', 'description': 'Key ID', 'required': True, 'type': 'int', 'pattern': '[0-9]+'}], 'responses': {'default': {'description': 'successful operation'}}, 'deprecated': True}
revoke_3 = {'tags': ['authentication/v1'], 'summary': 'Revoke an apikey from current user', 'description': '', 'operationId': 'revoke_3', 'produces': ['application/json'], 'parameters': [{'name': 'prefix', 'in': 'path', 'description': 'Key prefix on the form 1ab/2c', 'required': True, 'type': 'str', 'pattern': '[a-z0-9]+/[a-z0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'keys': {'type': 'list', 'items': {'type': 'dict', 'properties': {'description': {'type': 'str', 'position': 0, 'description': 'Key description '}, 'validSources': {'type': 'list', 'position': 0, 'description': 'Client IP/CIDR networks which the api key will be valid for. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}, 'validUntil': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key expires. If value is 0, key never expires. '}, 'lastUsedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this key was last used. '}, 'lastUsedIP': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'public': {'type': 'boolean'}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'constraints': {'type': 'dict', 'properties': {'customers': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}}, 'functions': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Function name '}, 'description': {'type': 'str', 'position': 0, 'description': 'Function description '}, 'securityLevel': {'type': 'str', 'position': 0, 'description': 'Function security level ', 'enum': ['DEFAULT', 'ADMINISTRATIVE', 'EXTERNAL']}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['ROLE', 'SYSADM']}}}}}}}, 'prefix': {'type': 'str', 'position': 0, 'description': 'Key prefix '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '412': {'description': 'Validation error'}}}