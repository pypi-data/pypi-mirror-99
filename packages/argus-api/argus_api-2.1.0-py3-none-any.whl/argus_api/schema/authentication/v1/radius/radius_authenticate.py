"""Autogenerated API schema"""
from argus_api import session


legacy_radius_authentication = {'tags': ['authentication/v1'], 'summary': 'Initiate a new user session using RADIUS authentication (PUBLIC)', 'description': 'Requires RADIUS authentication to be enabled on the server, and for the user. \nUse /methods to check which authentication methods are available on the server.\n\nThis is a 2-factor authentication method, which may require additional verification. The first request should have mode AUTHENTICATION, and carry username, password and tokencode.\nIf the authentication is challenged, submit a new request with mode CHALLENGE, andinclude the state variable returned in the challenge.This endpoint is deprecated, use /radius/authentication instead.', 'operationId': 'legacyRadiusAuthentication', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'RADIUS authentication request', 'required': False, 'schema': {'type': 'object', 'required': ['domain', 'mode', 'userName'], 'properties': {'requestedAuthorizations': {'type': 'list', 'position': 0, 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['enrollPublicKey', 'setPassword']}}, 'userName': {'type': 'str', 'position': 0, 'description': 'Username to authenticate '}, 'domain': {'type': 'str', 'position': 0, 'description': 'User domain '}, 'mode': {'type': 'str', 'position': 0, 'description': 'Authentication mode. Use AUTHENTICATION for normal authentication, or CHALLENGE to respond to a challenge request ', 'enum': ['AUTHENTICATION', 'CHALLENGE']}, 'password': {'type': 'str', 'position': 0, 'description': 'RADIUS static password '}, 'tokenCode': {'type': 'str', 'position': 0, 'description': 'RADIUS token code '}, 'state': {'type': 'str', 'position': 0, 'description': 'When responding to a challenge, include the encoded state returned by the challenge. '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'uri': {'type': 'string'}, 'requestCredentialsType': {'type': 'str', 'enum': ['sessionToken', 'signature', 'apikey']}, 'requestCredentialsData': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Not found'}, '206': {'description': 'Authentication challenge, verification required', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': {'type': 'string', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'integer', 'format': 'int64'}}}}, 'data': {'type': 'object', 'properties': {'username': {'type': 'string'}, 'failed': {'type': 'boolean'}, 'state': {'type': 'string'}, 'authenticationMethod': {'type': 'string', 'enum': ['PASSWORD', 'SIGNATURE', 'SMS', 'RADIUS', 'TOTP', 'OTP', 'APIKEY', 'LDAP', 'IMPERSONATED']}, 'mode': {'type': 'string', 'enum': ['AUTHENTICATION', 'CHALLENGE']}, 'serverMessage': {'type': 'string'}, 'message': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': {'type': 'object', 'properties': {'cause': {'type': 'object', 'properties': {'cause': [], 'stackTrace': {'type': 'array', 'items': {'type': 'object', 'properties': {'methodName': {'type': 'string'}, 'fileName': {'type': 'string'}, 'lineNumber': {'type': 'integer', 'format': 'int32'}, 'className': {'type': 'string'}, 'nativeMethod': {'type': 'boolean'}}}}, 'message': {'type': 'string'}, 'localizedMessage': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': []}}}, 'stackTrace': {'type': 'array', 'items': {'type': 'object', 'properties': {'methodName': {'type': 'string'}, 'fileName': {'type': 'string'}, 'lineNumber': {'type': 'integer', 'format': 'int32'}, 'className': {'type': 'string'}, 'nativeMethod': {'type': 'boolean'}}}}, 'message': {'type': 'string'}, 'localizedMessage': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': {'type': 'object', 'properties': {'cause': [], 'stackTrace': {'type': 'array', 'items': {'type': 'object', 'properties': {'methodName': {'type': 'string'}, 'fileName': {'type': 'string'}, 'lineNumber': {'type': 'integer', 'format': 'int32'}, 'className': {'type': 'string'}, 'nativeMethod': {'type': 'boolean'}}}}, 'message': {'type': 'string'}, 'localizedMessage': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': []}}}}}}}}}}}}, '412': {'description': 'Validation error'}}, 'deprecated': True}
radius_authentication = {'tags': ['authentication/v1'], 'summary': 'Initiate a new user session using RADIUS authentication (PUBLIC)', 'description': 'Requires RADIUS authentication to be enabled on the server, and for the user. \nUse /methods to check which authentication methods are available on the server.\n\nThis is a 2-factor authentication method, which may require additional verification. The first request should have mode AUTHENTICATION, and carry username, password and tokencode.\nIf the authentication is challenged, submit a new request with mode CHALLENGE, andinclude the state variable returned in the challenge.', 'operationId': 'radiusAuthentication', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'RADIUS authentication request', 'required': False, 'schema': {'type': 'object', 'required': ['domain', 'mode', 'userName'], 'properties': {'requestedAuthorizations': {'type': 'list', 'position': 0, 'description': 'Allow client to request authorizations as part of the authentication transaction. The client is not guaranteed to get the requested authorizations. The setPassword authorization is only returned if the current user has the FORCE_PW_CHANGE flag set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['enrollPublicKey', 'setPassword']}}, 'userName': {'type': 'str', 'position': 0, 'description': 'Username to authenticate '}, 'domain': {'type': 'str', 'position': 0, 'description': 'User domain '}, 'mode': {'type': 'str', 'position': 0, 'description': 'Authentication mode. Use AUTHENTICATION for normal authentication, or CHALLENGE to respond to a challenge request ', 'enum': ['AUTHENTICATION', 'CHALLENGE']}, 'password': {'type': 'str', 'position': 0, 'description': 'RADIUS static password '}, 'tokenCode': {'type': 'str', 'position': 0, 'description': 'RADIUS token code '}, 'state': {'type': 'str', 'position': 0, 'description': 'When responding to a challenge, include the encoded state returned by the challenge. '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['credentials', 'sessionKey'], 'properties': {'credentials': {'type': 'dict', 'properties': {'clientIP': {'type': 'string'}, 'forwardedIP': {'type': 'string'}, 'uri': {'type': 'string'}, 'requestCredentialsType': {'type': 'str', 'enum': ['sessionToken', 'signature', 'apikey']}, 'requestCredentialsData': {'type': 'string'}}}, 'sessionKey': {'type': 'str', 'position': 0, 'description': 'The symmetric key created for this session '}, 'authorizations': {'type': 'list', 'position': 0, 'description': 'Any gratuitous authorization tokens generated during authentication, if requested by the client ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'operation': {'type': 'str', 'position': 0, 'description': 'Operation which is authorized by this token '}, 'authorization': {'type': 'str', 'position': 0, 'description': 'Authorization JWS string '}, 'nextURI': {'type': 'str', 'position': 0, 'description': 'The URI to proceed to, appending the authorization JWS as a query parameter '}, 'expires': {'type': 'int', 'position': 0, 'description': 'The timestamp when this authorization expires '}}}}}}}}}, '401': {'description': 'Authentication failed'}, '206': {'description': 'Authentication challenge, verification required', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'integer', 'format': 'int32', 'description': 'Status code returned from API'}, 'limit': {'type': 'integer', 'format': 'int64', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'integer', 'format': 'int64', 'description': 'Number of skipped results'}, 'count': {'type': 'integer', 'format': 'int64', 'description': 'Number of available results on server'}, 'size': {'type': 'integer', 'format': 'int64', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'object', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'array', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'object', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': {'type': 'string', 'enum': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}, 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'integer', 'format': 'int64'}}}}, 'data': {'type': 'object', 'properties': {'username': {'type': 'string'}, 'failed': {'type': 'boolean'}, 'state': {'type': 'string'}, 'authenticationMethod': {'type': 'string', 'enum': ['PASSWORD', 'SIGNATURE', 'SMS', 'RADIUS', 'TOTP', 'OTP', 'APIKEY', 'LDAP', 'IMPERSONATED']}, 'mode': {'type': 'string', 'enum': ['AUTHENTICATION', 'CHALLENGE']}, 'serverMessage': {'type': 'string'}, 'message': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': {'type': 'object', 'properties': {'cause': {'type': 'object', 'properties': {'cause': [], 'stackTrace': {'type': 'array', 'items': {'type': 'object', 'properties': {'methodName': {'type': 'string'}, 'fileName': {'type': 'string'}, 'lineNumber': {'type': 'integer', 'format': 'int32'}, 'className': {'type': 'string'}, 'nativeMethod': {'type': 'boolean'}}}}, 'message': {'type': 'string'}, 'localizedMessage': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': []}}}, 'stackTrace': {'type': 'array', 'items': {'type': 'object', 'properties': {'methodName': {'type': 'string'}, 'fileName': {'type': 'string'}, 'lineNumber': {'type': 'integer', 'format': 'int32'}, 'className': {'type': 'string'}, 'nativeMethod': {'type': 'boolean'}}}}, 'message': {'type': 'string'}, 'localizedMessage': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': {'type': 'object', 'properties': {'cause': [], 'stackTrace': {'type': 'array', 'items': {'type': 'object', 'properties': {'methodName': {'type': 'string'}, 'fileName': {'type': 'string'}, 'lineNumber': {'type': 'integer', 'format': 'int32'}, 'className': {'type': 'string'}, 'nativeMethod': {'type': 'boolean'}}}}, 'message': {'type': 'string'}, 'localizedMessage': {'type': 'string'}, 'suppressed': {'type': 'array', 'items': []}}}}}}}}}}}}, '412': {'description': 'Validation error'}}}