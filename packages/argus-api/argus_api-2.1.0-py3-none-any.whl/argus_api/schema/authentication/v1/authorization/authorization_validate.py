"""Autogenerated API schema"""
from argus_api import session


validate_user_authorization = {'tags': ['authentication/v1'], 'summary': 'Validate authorization token (DEV)', 'description': 'This endpoint will receive an authorization token to verify its validity.', 'operationId': 'validateUserAuthorization', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Authorization validation request', 'required': False, 'schema': {'type': 'object', 'required': ['authorization', 'operation'], 'properties': {'operation': {'type': 'str', 'position': 0, 'description': 'The name of the operation '}, 'context': {'type': 'dict', 'position': 0, 'description': 'Context variables to scope this authorization. All context variables must be present in the authorization token and their value must be equal to those provided here. ', 'additionalProperties': {'type': 'string'}}, 'authorization': {'type': 'str', 'position': 0, 'description': 'The authorization JWT token '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'object'}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}