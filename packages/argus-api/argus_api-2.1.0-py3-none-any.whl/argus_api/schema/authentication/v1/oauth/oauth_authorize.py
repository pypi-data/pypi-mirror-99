"""Autogenerated API schema"""
from argus_api import session


authorize = {'tags': ['authentication/v1'], 'summary': 'Request authorization to a OAuth client (DEV)', 'description': 'This operation authorizes the user to access a specified Oauth client, following the OAuth authorization flow. The endpoint returns an authorization token, which can be used by the client to exchange for an access and/or ID token using the token endpoint.', 'operationId': 'authorize', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Authorization request', 'required': False, 'schema': {'type': 'object', 'required': ['clientID', 'redirectURI', 'responseType'], 'properties': {'responseType': {'type': 'list', 'position': 0, 'description': 'Type of response requested. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['code', 'id_token']}, 'maxItems': 2147483647, 'minItems': 1}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The clientID of the requesting client. '}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'The redirectURI requested by the client. '}, 'state': {'type': 'str', 'position': 0, 'description': 'The state submitted by the client. This state should follow unmodified back to the redirect response after a valid client authorization. '}, 'nonce': {'type': 'str', 'position': 0, 'description': 'A nonce requested by the client. The nonce should pass through unmodified and follow the token issued for this request. '}, 'scope': {'type': 'list', 'position': 0, 'description': "The scopes requested by the client. If 'openid' is in scope, this is an OpenID request. ", 'uniqueItems': True, 'items': {'type': 'string'}}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'authorizationCode': {'type': 'str', 'position': 0, 'description': 'The authorization code provided by the authentication service. '}, 'redirectURI': {'type': 'str', 'position': 0, 'description': 'The redirectURI of the client. This should correspond to the redirectURI requested by the client. '}, 'state': {'type': 'str', 'position': 0, 'description': 'The unmodified state reported by the client in the request.. '}, 'idToken': {'type': 'str', 'position': 0, 'description': 'The OpenID token provided by the authentication service. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
create_o_auth2_client = {'tags': ['authentication/v1'], 'summary': 'Define a new OAuth2 client (DEV)', 'description': 'This operation defines a new OAuth2 client application.', 'operationId': 'createOAuth2Client', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request object defining client to add', 'required': False, 'schema': {'type': 'object', 'required': ['authenticationMethod', 'clientIPRange', 'description', 'mainURI', 'name', 'permissionScope', 'redirectURI', 'requiredFunction', 'shortName'], 'properties': {'shortName': {'type': 'str', 'description': '[a-zA-Z0-9_\\-\\.]*'}, 'name': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'description': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'domain': {'type': 'string'}, 'customer': {'type': 'string'}, 'mainURI': {'type': 'str', 'description': 'Sanitize by regex https://.*'}, 'redirectURI': {'type': 'str', 'description': 'Sanitize by regex https://.*'}, 'requiredFunction': {'type': 'string'}, 'permissionScope': {'type': 'string'}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientSecret': {'type': 'string'}, 'clientIPRange': {'type': 'list', 'description': 'format:ip', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'mainURI': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim']}}, 'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_oauth2_client = {'tags': ['authentication/v1'], 'summary': 'Delete a OAuth2 client (DEV)', 'description': '', 'operationId': 'deleteOauth2Client', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of client to delete', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'mainURI': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim']}}, 'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}}}
get_oauth2_client = {'tags': ['authentication/v1'], 'summary': 'Fetch a OAuth2 client descriptor (DEV)', 'description': '', 'operationId': 'getOauth2Client', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of client to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'mainURI': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim']}}, 'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}}}
get_token = {'tags': ['authentication/v1'], 'summary': 'Exchange a OAuth2 authorization code with an access token (DEV)', 'description': 'This operation allows an OAuth2 client to exchange an authorization code with an access token, following the OAuth authorization flow. Following the authorization code flow, a client should perform a www/form-urlencoded form POST request, on the format client_id=xxx&client_secret=yyy&grant_type=authorization_code&redirect_uri=https://my.app/callback&code=myAuthorizationCodeA refresh token request should be a www/form-urlencoded form POST request, on the format client_id=xxx&client_secret=yyy&grant_type=refresh_token&redirect_uri=https://my.app/callback&code=myRefreshToken', 'operationId': 'getToken', 'consumes': ['application/x-www-form-urlencoded'], 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'access_token': {'type': 'str', 'position': 0, 'description': 'The authorization code provided by the oauth authorization endpoint. ', 'readOnly': True}, 'id_token': {'type': 'str', 'position': 0, 'description': 'The OpenID token provided by the oauth authorization endpoint. ', 'readOnly': True}, 'refresh_token': {'type': 'str', 'position': 0, 'description': 'The refresh token provided by the oauth authorization endpoint. ', 'readOnly': True}, 'token_type': {'type': 'str', 'position': 0, 'description': 'The type of the token returned. This value is always Bearer. ', 'readOnly': True, 'enum': ['Bearer']}, 'expires_in': {'type': 'int', 'position': 0, 'description': 'The number of seconds until this token expires. ', 'readOnly': True}}}}}}, '400': {'description': 'Validation error'}}}
get_user_info = {'tags': ['authentication/v1'], 'summary': 'Return OpenID userinfo (DEV)', 'description': '', 'operationId': 'getUserInfo', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'sub': {'type': 'string'}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'picture': {'type': 'string'}, 'phone': {'type': 'string'}, 'preferred_username': {'type': 'str', 'readOnly': True}}}}}}}}
list_oauth2_clients = {'tags': ['authentication/v1'], 'summary': 'List available OAuth2 client descriptors (DEV)', 'description': '', 'operationId': 'listOauth2Clients', 'produces': ['application/json'], 'parameters': [{'name': 'customer', 'in': 'query', 'description': 'Limit results to clients for this customer (or subcustomers)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'domain', 'in': 'query', 'description': 'Limit results to clients for this domain', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywords', 'in': 'query', 'description': 'Limit results to clients matching these keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Specify sort order', 'required': False, 'type': 'list', 'items': {'type': 'str', 'default': 'shortName'}, 'collectionFormat': 'multi'}, {'name': 'limit', 'in': 'query', 'description': 'Limit number of results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'mainURI': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim']}}, 'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}, '412': {'description': 'Invalid argument'}}}
post_user_info = {'tags': ['authentication/v1'], 'summary': 'Return OpenID userinfo (DEV)', 'description': '', 'operationId': 'postUserInfo', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'sub': {'type': 'string'}, 'name': {'type': 'string'}, 'email': {'type': 'string'}, 'picture': {'type': 'string'}, 'phone': {'type': 'string'}, 'preferred_username': {'type': 'str', 'readOnly': True}}}}}}}}
search_oauth2_clients = {'tags': ['authentication/v1'], 'summary': 'Search available OAuth2 client descriptors (DEV)', 'description': '', 'operationId': 'searchOauth2Clients', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'required': False, 'schema': {'type': 'object', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these customers (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these domains (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'list', 'position': 0, 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Subcriteria for this search request ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these customers (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these domains (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'list', 'position': 0, 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Subcriteria for this search request ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'customer': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these customers (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'list', 'position': 0, 'description': 'Match clients bound to any of these domains (by id or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'requiredFunction': {'type': 'list', 'position': 0, 'description': 'Match clients having any of the specified functions (id or shortname) as requiredFunction ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Subcriteria for this search request ', 'uniqueItems': True, 'items': []}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match clients by these keywords ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search based on all keywords (AND), or based on any keyword (OR) (default Match all keywords (AND))', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'all']}}, 'required': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as AND criteria '}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as NOT criteria '}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match clients by these keywords ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search based on all keywords (AND), or based on any keyword (OR) (default Match all keywords (AND))', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'all']}}, 'required': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as AND criteria '}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'If true, treat this subrequest as NOT criteria '}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Match clients by these keywords ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search based on all keywords (AND), or based on any keyword (OR) (default Match all keywords (AND))', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['id', 'shortName', 'name', 'all']}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Limit the number of results (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first results, in sort order (default 0)', 'minimum': 0, 'default': 0}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Specify sort order (default shortName)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'createdTimestamp', 'lastUpdatedTimestamp']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'mainURI': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim']}}, 'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Specified object was not found'}, '412': {'description': 'Invalid argument'}}}
update_o_auth2_client = {'tags': ['authentication/v1'], 'summary': 'Update an existing OAuth2 client (DEV)', 'description': 'This operation updates an existing OAuth2 client application.', 'operationId': 'updateOAuth2Client', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of OAuth2 client to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Request object defining updates', 'required': False, 'schema': {'type': 'object', 'properties': {'shortName': {'type': 'str', 'description': '[a-zA-Z0-9_\\-\\.]*'}, 'name': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'description': {'type': 'str', 'description': '[\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'mainURI': {'type': 'str', 'description': 'Sanitize by regex https://.*'}, 'redirectURI': {'type': 'str', 'description': 'Sanitize by regex https://.*'}, 'requiredFunction': {'type': 'string'}, 'permissionScope': {'type': 'string'}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientSecret': {'type': 'string'}, 'clientIPRange': {'type': 'list', 'description': 'format:ip', 'uniqueItems': True, 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'shortName': {'type': 'string'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'mainURI': {'type': 'string'}, 'redirectURI': {'type': 'string'}, 'requiredFunction': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'permissionScope': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'authenticationMethod': {'type': 'str', 'enum': ['none', 'password']}, 'clientIPRange': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'flags': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'requireSameClientIP', 'enableStandardOpenIDClaims', 'enableStringGroupClaim']}}, 'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}}}}}}, '220': {'description': 'No update performed'}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}