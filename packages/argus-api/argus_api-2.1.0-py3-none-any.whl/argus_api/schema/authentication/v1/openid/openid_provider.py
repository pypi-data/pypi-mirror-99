"""Autogenerated API schema"""
from argus_api import session


add_open_id_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Define new OpenID provider (DEV)', 'description': '', 'operationId': 'addOpenIDProvider', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Request with provider specifications', 'required': False, 'schema': {'type': 'object', 'required': ['certificate', 'claimsMapping', 'clientID', 'customer', 'name', 'providerURI', 'shortName'], 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'Set a shortname for this provider  => [a-zA-Z0-9_\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'str', 'position': 0, 'description': 'The id or shortname of the customer this provider is bound to '}, 'certificate': {'type': 'str', 'position': 0, 'description': 'A valid X509 certificate which can be used to verify OpenID tokens ', 'minLength': 1, 'maxLength': 2147483647}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow  => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'claimsMapping': {'type': 'dict', 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'If set, specify which claim contains the username to map to the external Argus username '}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Invalid argument'}}}
delete_open_id_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Delete OpenID provider (DEV)', 'description': '', 'operationId': 'deleteOpenIDProvider', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to delete', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
get_open_id_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Fetch OpenID provider (DEV)', 'description': '', 'operationId': 'getOpenIDProvider', 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}}}
update_open_id_provider = {'tags': ['authentication/v1/openid'], 'summary': 'Update OpenID provider (DEV)', 'description': '', 'operationId': 'updateOpenIDProvider', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'idOrShortname', 'in': 'path', 'description': 'ID or shortname of provider to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Update request', 'required': False, 'schema': {'type': 'object', 'properties': {'shortName': {'type': 'str', 'position': 0, 'description': 'If set, update the shortname for this provider  => [a-zA-Z0-9_\\-\\.]*'}, 'name': {'type': 'str', 'position': 0, 'description': 'If set, update the name for this provider  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'clientID': {'type': 'str', 'position': 0, 'description': 'If set, update the OAuth ClientID for this provider '}, 'certificate': {'type': 'str', 'position': 0, 'description': 'If set, update the X509 certificate for this provider ', 'minLength': 1, 'maxLength': 2147483647}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'If set, update the URI for this provider  => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)'}, 'claimsMapping': {'type': 'dict', 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'If set, specify which claim contains the username to map to the external Argus username '}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'required': ['claimsMapping', 'clientID', 'createdByUser', 'createdTimestamp', 'customer', 'deletedTimestamp', 'flags', 'lastUpdatedByUser', 'lastUpdatedTimestamp', 'name', 'providerURI', 'shortName'], 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'The shortname for this provider '}, 'name': {'type': 'str', 'position': 0, 'description': 'The name of this provider '}, 'clientID': {'type': 'str', 'position': 0, 'description': 'The OAuth ClientID of this provider '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'providerURI': {'type': 'str', 'position': 0, 'description': 'The URI to redirect to to initiate OpenID authentication flow '}, 'claimsMapping': {'type': 'dict', 'required': ['userName'], 'properties': {'userName': {'type': 'str', 'position': 0, 'description': 'Specify which claim contains the username to map to the external Argus username '}}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was created '}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was last updated '}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The timestamp when this provider was deleted, or 0 '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Any flags set on this object ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Invalid arguments'}}}