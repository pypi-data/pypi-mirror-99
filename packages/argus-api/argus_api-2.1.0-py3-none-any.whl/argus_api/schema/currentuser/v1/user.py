"""Autogenerated API schema"""
from argus_api import session


get_current_user = {'tags': ['currentuser/v1'], 'summary': 'Get the object representation of the currently logged in user (PUBLIC)', 'description': '', 'operationId': 'getCurrentUser', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of subject '}, 'userName': {'type': 'str', 'position': 0, 'description': 'User name '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of subject '}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Created timestamp in ms '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Last updated timestamp in ms '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Properties of subject ', 'additionalProperties': {'type': 'string'}}, 'imageURL': {'type': 'str', 'position': 0, 'description': 'User profile picture image url '}, 'mobile': {'type': 'str', 'position': 0, 'description': 'Mobile number of user '}, 'email': {'type': 'str', 'position': 0, 'description': 'Email of user '}, 'lastLoginTimestamp': {'type': 'int', 'position': 0, 'description': 'Last authentication timestamp in ms '}, 'lastImpersonationTimestamp': {'type': 'int', 'position': 0, 'description': 'Last impersonation timestamp in ms '}, 'lastLoginIP': {'type': 'str', 'position': 0, 'description': 'Last IP the user authenticated from '}, 'timeZone': {'type': 'dict', 'properties': {'description': {'type': 'string'}}}, 'language': {'type': 'str', 'position': 0, 'description': 'Language of user ', 'enum': ['ENGLISH', 'NORWEGIAN']}, 'publicKey': {'type': 'str', 'position': 0, 'description': "User's public key "}, 'ascendantIDs': {'type': 'list', 'position': 0, 'description': 'IDs of ascendants ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DISABLED', 'AUTH_RADIUS', 'AUTH_SMS', 'AUTH_LDAP', 'AUTH_LOCAL', 'BLOCKED', 'FORCE_PWCHANGE', 'DAEMON_ACCOUNT', 'PASSWORD_NOT_SET', 'AUTH_CRYPTO', 'AUTH_TOTP', 'AUTH_APIKEY', 'ANONYMOUS_USER']}}}}}}}, '401': {'description': 'Authentication failed'}}}