"""Autogenerated API schema"""
from argus_api import session


get_current_user_methods = {'tags': ['currentuser/v1'], 'summary': 'List the current users valid authentication methods (PUBLIC)', 'description': '', 'operationId': 'getCurrentUserMethods', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'method': {'type': 'str', 'position': 0, 'description': 'Authentication method ', 'enum': ['PASSWORD', 'SIGNATURE', 'SMS', 'RADIUS', 'TOTP', 'OTP', 'APIKEY', 'LDAP', 'IMPERSONATED']}, 'lastLoginTimestamp': {'type': 'int', 'position': 0, 'description': 'Last login time in ms '}, 'lastLoginIP': {'type': 'str', 'position': 0, 'description': 'Last login IP '}, 'initialized': {'type': 'bool', 'position': 0, 'description': 'Whether method has been initialized '}, 'settings': {'type': 'dict', 'position': 0, 'description': 'Authentication method settings ', 'additionalProperties': {'type': 'object'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'User not found'}, '412': {'description': 'Validation failed'}}}