"""Autogenerated API schema"""
from argus_api import session


add_address_overrides = {'tags': ['reputation/v1'], 'summary': 'Add reputation IP override (INTERNAL)', 'description': '', 'operationId': 'addAddressOverrides', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Override add request', 'required': False, 'schema': {'type': 'object', 'properties': {'listName': {'type': 'string'}, 'listID': {'type': 'int'}, 'clear': {'type': 'boolean'}, 'overrides': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'ipRange': {'type': 'string'}}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
add_domain_override = {'tags': ['reputation/v1'], 'summary': 'Add reputation domain override (INTERNAL)', 'description': '', 'operationId': 'addDomainOverride', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Override add request', 'required': False, 'schema': {'type': 'object', 'properties': {'listID': {'type': 'int'}, 'listName': {'type': 'string'}, 'clear': {'type': 'boolean'}, 'overrides': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'domainPattern': {'type': 'string'}}}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
add_override_list = {'tags': ['reputation/v1'], 'summary': 'Add reputation override list (INTERNAL)', 'description': '', 'operationId': 'addOverrideList', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Override add request', 'required': False, 'schema': {'type': 'object', 'required': ['description', 'name'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Override list name  => [a-zA-Z0-9_\\-\\.]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'Override list description  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'useForReputationCalc': {'type': 'bool', 'position': 0, 'description': 'If true, enable use of the overrides in this list when calculating reputation values. (default false)', 'default': False}, 'useForInputFiltering': {'type': 'bool', 'position': 0, 'description': 'If true, enable use of the overrides in this list for observation input filtering. (default false)', 'default': False}, 'useForDefaultValues': {'type': 'bool', 'position': 0, 'description': 'If true, enable use of the overrides in this list as default values. (default false)', 'default': False}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'lastModified': {'type': 'int'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'defaultValues': {'type': 'boolean'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_address_override = {'tags': ['reputation/v1'], 'summary': 'Delete reputation IP override (INTERNAL)', 'description': '', 'operationId': 'deleteAddressOverride', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of override entry to remove', 'required': True, 'type': 'int', 'pattern': '[0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_address_overrides = {'tags': ['reputation/v1'], 'summary': 'Bulk delete reputation IP overrides (INTERNAL)', 'description': '', 'operationId': 'deleteAddressOverrides', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'query', 'description': 'IDs of IP overrides', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi', 'maxItems': 2147483647, 'minItems': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_domain_override = {'tags': ['reputation/v1'], 'summary': 'Delete reputation domain override (INTERNAL)', 'description': '', 'operationId': 'deleteDomainOverride', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of override entry to remove', 'required': True, 'type': 'int', 'pattern': '[0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_domain_overrides = {'tags': ['reputation/v1'], 'summary': 'Bulk delete reputation domain overrides (INTERNAL)', 'description': '', 'operationId': 'deleteDomainOverrides', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'query', 'description': 'IDs of reputation overrides', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi', 'maxItems': 2147483647, 'minItems': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_override_list = {'tags': ['reputation/v1'], 'summary': 'Delete reputation override list (INTERNAL)', 'description': '', 'operationId': 'deleteOverrideList', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of override list to remove', 'required': True, 'type': 'int', 'minimum': 1, 'pattern': '[0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'lastModified': {'type': 'int'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'defaultValues': {'type': 'boolean'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
find_address_overrides = {'tags': ['reputation/v1'], 'summary': 'Search IP overrides (INTERNAL)', 'description': '', 'operationId': 'findAddressOverrides', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'ranges': {'type': 'list', 'items': {'type': 'string'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'includeFlags': {'type': 'int', 'position': 0, 'description': 'Only include objects which have includeFlags set. '}, 'excludeFlags': {'type': 'int', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'ranges': {'type': 'list', 'items': {'type': 'string'}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'includeFlags': {'type': 'int', 'position': 0, 'description': 'Only include objects which have includeFlags set. '}, 'excludeFlags': {'type': 'int', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'listID': {'type': 'list', 'position': 0, 'description': "Collection of override lists' IDs ", 'items': {'type': 'int'}}, 'listName': {'type': 'list', 'position': 0, 'description': "Collection of override lists' names ", 'items': {'type': 'string'}}, 'includedListFlags': {'type': 'int', 'position': 0, 'description': 'Include records with flags in override list '}, 'excludedListFlags': {'type': 'int', 'position': 0, 'description': 'Exclude records with flags in override list '}, 'includeExpired': {'type': 'bool', 'position': 0, 'description': 'Whether include expired overrides, default not include expired overrides '}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Records after this timestamp against fields defined by timeFieldStrategy '}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'Records before this timestamp against fields defined by timeFieldStrategy '}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'TimeFieldStrategy to define which timestamp field(s) to match, default lastUpdatedTimestamp ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['lastUpdatedTimestamp', 'cutoff', 'all']}}, 'minValue': {'type': 'float', 'position': 0, 'description': 'Lower bound for override value range [0,1] '}, 'maxValue': {'type': 'float', 'position': 0, 'description': 'Upper bound for override data value range [0,1] '}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Set of keywords to match selected fields, depends on KeywordMatchStrategy ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Define whether all/any keywords have to be matched with selected fields ', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) ', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Define which field(s) to be matched against keywords ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['reason', 'range', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['id', 'lastModified', 'range']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'listID': {'type': 'list', 'position': 0, 'description': "Collection of override lists' IDs ", 'items': {'type': 'int'}}, 'listName': {'type': 'list', 'position': 0, 'description': "Collection of override lists' names ", 'items': {'type': 'string'}}, 'includedListFlags': {'type': 'int', 'position': 0, 'description': 'Include records with flags in override list '}, 'excludedListFlags': {'type': 'int', 'position': 0, 'description': 'Exclude records with flags in override list '}, 'includeExpired': {'type': 'bool', 'position': 0, 'description': 'Whether include expired overrides, default not include expired overrides '}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Records after this timestamp against fields defined by timeFieldStrategy '}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'Records before this timestamp against fields defined by timeFieldStrategy '}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'TimeFieldStrategy to define which timestamp field(s) to match, default lastUpdatedTimestamp ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['lastUpdatedTimestamp', 'cutoff', 'all']}}, 'minValue': {'type': 'float', 'position': 0, 'description': 'Lower bound for override value range [0,1] '}, 'maxValue': {'type': 'float', 'position': 0, 'description': 'Upper bound for override data value range [0,1] '}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Set of keywords to match selected fields, depends on KeywordMatchStrategy ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Define whether all/any keywords have to be matched with selected fields ', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) ', 'enum': ['all', 'any']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Define which field(s) to be matched against keywords ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['reason', 'range', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['id', 'lastModified', 'range']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
find_domain_overrides = {'tags': ['reputation/v1'], 'summary': 'Search domain overrides (INTERNAL)', 'description': '', 'operationId': 'findDomainOverrides', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'includeFlags': {'type': 'int', 'position': 0, 'description': 'Only include objects which have includeFlags set. '}, 'excludeFlags': {'type': 'int', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'includeFlags': {'type': 'int', 'position': 0, 'description': 'Only include objects which have includeFlags set. '}, 'excludeFlags': {'type': 'int', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'listID': {'type': 'list', 'position': 0, 'description': "Collection of override lists' IDs ", 'items': {'type': 'int'}}, 'listName': {'type': 'list', 'position': 0, 'description': "Collection of override lists' names ", 'items': {'type': 'string'}}, 'includedListFlags': {'type': 'int', 'position': 0, 'description': 'Include records with flags in override list '}, 'excludedListFlags': {'type': 'int', 'position': 0, 'description': 'Exclude records with flags in override list '}, 'includeExpired': {'type': 'bool', 'position': 0, 'description': 'Whether include expired overrides, default not include expired overrides '}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Records after this timestamp against fields defined by timeFieldStrategy '}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'Records before this timestamp against fields defined by timeFieldStrategy '}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'TimeFieldStrategy to define which timestamp field(s) to match, default lastUpdatedTimestamp ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['lastUpdatedTimestamp', 'cutoff', 'all']}}, 'minValue': {'type': 'float', 'position': 0, 'description': 'Lower bound for override value range [0,1] '}, 'maxValue': {'type': 'float', 'position': 0, 'description': 'Upper bound for override data value range [0,1] '}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Set of keywords to match selected fields, depends on KeywordMatchStrategy ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Define whether all/any keywords have to be matched with selected fields ', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) ', 'enum': ['all', 'any']}, 'domainPatternBases': {'type': 'list', 'position': 0, 'description': 'Collection of domain pattern bases ', 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Define which field(s) to be matched against keywords ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['reason', 'domainPattern', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['id', 'lastModified', 'domainPattern']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'listID': {'type': 'list', 'position': 0, 'description': "Collection of override lists' IDs ", 'items': {'type': 'int'}}, 'listName': {'type': 'list', 'position': 0, 'description': "Collection of override lists' names ", 'items': {'type': 'string'}}, 'includedListFlags': {'type': 'int', 'position': 0, 'description': 'Include records with flags in override list '}, 'excludedListFlags': {'type': 'int', 'position': 0, 'description': 'Exclude records with flags in override list '}, 'includeExpired': {'type': 'bool', 'position': 0, 'description': 'Whether include expired overrides, default not include expired overrides '}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Records after this timestamp against fields defined by timeFieldStrategy '}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'Records before this timestamp against fields defined by timeFieldStrategy '}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'TimeFieldStrategy to define which timestamp field(s) to match, default lastUpdatedTimestamp ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['lastUpdatedTimestamp', 'cutoff', 'all']}}, 'minValue': {'type': 'float', 'position': 0, 'description': 'Lower bound for override value range [0,1] '}, 'maxValue': {'type': 'float', 'position': 0, 'description': 'Upper bound for override data value range [0,1] '}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Set of keywords to match selected fields, depends on KeywordMatchStrategy ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Define whether all/any keywords have to be matched with selected fields ', 'enum': ['all', 'any']}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Defines how strict to match against different timestamps (all/any) using start and end timestamp (default any) ', 'enum': ['all', 'any']}, 'domainPatternBases': {'type': 'list', 'position': 0, 'description': 'Collection of domain pattern bases ', 'items': {'type': 'string'}}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Define which field(s) to be matched against keywords ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['reason', 'domainPattern', 'all']}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending). ', 'items': {'type': 'str', 'enum': ['id', 'lastModified', 'domainPattern']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
get_override_for_domain = {'tags': ['reputation/v1'], 'summary': 'Look up domain override value by ID (INTERNAL)', 'description': '', 'operationId': 'getOverrideForDomain', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of override object', 'required': True, 'type': 'int', 'pattern': '[0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_override_for_i_p = {'tags': ['reputation/v1'], 'summary': 'Look up IP override value by ID (INTERNAL)', 'description': '', 'operationId': 'getOverrideForIP', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of override object', 'required': True, 'type': 'int', 'pattern': '[0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_override_list_by_id = {'tags': ['reputation/v1'], 'summary': 'Get override list by ID (INTERNAL)', 'description': '', 'operationId': 'getOverrideListByID', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of OverrideList', 'required': True, 'type': 'int', 'minimum': 1, 'pattern': '[0-9]+'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'lastModified': {'type': 'int'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'defaultValues': {'type': 'boolean'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_override_lists = {'tags': ['reputation/v1'], 'summary': 'List all overrides (INTERNAL)', 'description': '', 'operationId': 'getOverrideLists', 'produces': ['application/json'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'keywords', 'in': 'query', 'description': 'Filter override lists by keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'lastModified': {'type': 'int'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'defaultValues': {'type': 'boolean'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
get_overrides_for_domain = {'tags': ['reputation/v1'], 'summary': 'Look up domain override value by IP address (INTERNAL)', 'description': '', 'operationId': 'getOverridesForDomain', 'produces': ['application/json'], 'parameters': [{'name': 'fqdn', 'in': 'path', 'description': 'Domain/domain pattern to fetch overrides for', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
get_overrides_for_i_p = {'tags': ['reputation/v1'], 'summary': 'Look up domain override value by IP address (INTERNAL)', 'description': '', 'operationId': 'getOverridesForIP', 'produces': ['application/json'], 'parameters': [{'name': 'ip', 'in': 'path', 'description': 'IP to search overrides for', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_address_overrides = {'tags': ['reputation/v1'], 'summary': 'List address overrides (INTERNAL)', 'description': '', 'operationId': 'listAddressOverrides', 'produces': ['application/json'], 'parameters': [{'name': 'list', 'in': 'query', 'description': 'Limit results to overrides from this list', 'required': False, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'range': {'type': 'dict', 'properties': {'fromAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}, 'toAddress': {'type': 'dict', 'properties': {'host': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'ipv6': {'type': 'bool', 'xml': {'attribute': True}, 'readOnly': True}, 'maskBits': {'type': 'int'}, 'multicast': {'type': 'boolean'}, 'public': {'type': 'boolean'}, 'address': {'type': 'str', 'xml': {'attribute': True}, 'readOnly': True}}}}}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_domain_overrides = {'tags': ['reputation/v1'], 'summary': 'List domain overrides (INTERNAL)', 'description': '', 'operationId': 'listDomainOverrides', 'produces': ['application/json'], 'parameters': [{'name': 'list', 'in': 'query', 'description': 'Limit results to overrides from this list', 'required': False, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit results', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset results', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'flags': {'type': 'int'}, 'listName': {'type': 'string'}, 'data': {'type': 'dict', 'properties': {'value': {'type': 'float'}, 'entryTime': {'type': 'int'}, 'reason': {'type': 'string'}, 'cutoff': {'type': 'int'}, 'userID': {'type': 'int'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}}}, 'defaultValue': {'type': 'boolean'}, 'domainPatternBase': {'type': 'string'}, 'domainPattern': {'type': 'string'}, 'wildcardMatch': {'type': 'boolean'}, 'publicPrefixMatch': {'type': 'boolean'}, 'expired': {'type': 'boolean'}, 'deleted': {'type': 'boolean'}, 'lastUpdatedTimestamp': {'type': 'int', 'readOnly': True}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_override_list = {'tags': ['reputation/v1'], 'summary': 'Update reputation override list (INTERNAL)', 'description': '', 'operationId': 'updateOverrideList', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of reputation override list', 'required': True, 'type': 'int', 'minimum': 1, 'pattern': '[0-9]+'}, {'in': 'body', 'name': 'body', 'description': 'Update override list request', 'required': False, 'schema': {'type': 'object', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'If set, update the name of this list  => [a-zA-Z0-9_\\-\\.]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'If set, update the description of this list  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'useForReputationCalc': {'type': 'bool', 'position': 0, 'description': 'If set, enable/disable use of the overrides in this list when calculating reputation values '}, 'useForInputFiltering': {'type': 'bool', 'position': 0, 'description': 'If set, enable/disable use of the overrides in this list for observation input filtering '}, 'useForDefaultValues': {'type': 'bool', 'position': 0, 'description': 'If set, enable/disable use of the overrides in this list as default values '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'lastModified': {'type': 'int'}, 'name': {'type': 'string'}, 'description': {'type': 'string'}, 'defaultValues': {'type': 'boolean'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}