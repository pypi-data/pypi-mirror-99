"""Autogenerated API schema"""
from argus_api import session


get_basic_user = {'tags': ['user/v2'], 'summary': 'Get a basic user (PUBLIC)', 'description': '', 'operationId': 'getBasicUser', 'produces': ['application/json'], 'parameters': [{'name': 'shortNameOrID', 'in': 'path', 'description': 'Short name or ID of user', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Name or ID of the domain of the user', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'type': 'str', 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags that are set for the subject ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'email': {'type': 'str', 'position': 0, 'description': "The user's email "}, 'language': {'type': 'str', 'position': 0, 'description': "The user's language ", 'enum': ['norwegian', 'english']}, 'phoneNumber': {'type': 'str', 'position': 0, 'description': "The user's phone number "}, 'options': ['user', 'group']}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_user_image = {'tags': ['user/v2'], 'summary': 'Returns user profile picture. (PUBLIC)', 'description': '', 'operationId': 'getUserImage', 'produces': ['image/*'], 'parameters': [{'name': 'shortNameOrID', 'in': 'path', 'description': 'User ID or username', 'required': True, 'type': 'str'}, {'name': 'domain', 'in': 'query', 'description': 'Domain ID or short name (optional, defaults to current user domain)', 'required': False, 'type': 'str'}, {'name': 'size', 'in': 'query', 'description': "The preferred size of the image (small, medium, large, xlarge), should not be used together with parameters 'width' and 'height', will crop the original image if it is not a square (optional)", 'required': False, 'type': 'str', 'enum': ['small', 'medium', 'large', 'xlarge']}, {'name': 'width', 'in': 'query', 'description': 'The preferred width of the image. Preserves aspect ratio if height is not set (optional)', 'required': False, 'type': 'int'}, {'name': 'height', 'in': 'query', 'description': 'The preferred height of the image. Preserves aspect ratio if width is not set (optional)', 'required': False, 'type': 'int'}, {'name': 'default', 'in': 'query', 'description': 'If true, return default avatar image if user picture not set. Default is false.', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_basic_users = {'tags': ['user/v2'], 'summary': 'Returns the basic users matching the query (PUBLIC)', 'description': '', 'operationId': 'listBasicUsers', 'produces': ['application/json'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'domain', 'in': 'query', 'description': 'Domain to search in by short name or id', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'subject', 'in': 'query', 'description': 'Subject to search for by short name or id', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'customer', 'in': 'query', 'description': 'Customer to search for by short name or id', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted subjects', 'required': False, 'type': 'bool', 'default': False}, {'name': 'excludeFlag', 'in': 'query', 'description': 'Exclude subjects with flag', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}, 'collectionFormat': 'multi'}, {'name': 'includeFlag', 'in': 'query', 'description': 'Include subjects with flag', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}, 'collectionFormat': 'multi'}, {'name': 'keyword', 'in': 'query', 'description': 'Search by keywords', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'keywordMatch', 'in': 'query', 'description': 'Set match strategy for keyword search', 'required': False, 'type': 'str', 'default': 'all', 'enum': ['any', 'all']}, {'name': 'keywordField', 'in': 'query', 'description': 'Set field strategy for keyword search', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['shortName', 'name', 'email']}, 'collectionFormat': 'multi'}, {'name': 'sortBy', 'in': 'query', 'description': 'Field to sort by', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'type': 'str', 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags that are set for the subject ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'email': {'type': 'str', 'position': 0, 'description': "The user's email "}, 'language': {'type': 'str', 'position': 0, 'description': "The user's language ", 'enum': ['norwegian', 'english']}, 'phoneNumber': {'type': 'str', 'position': 0, 'description': "The user's phone number "}, 'options': ['user', 'group']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_basic_users = {'tags': ['user/v2'], 'summary': 'Returns the basic users matching the query (PUBLIC)', 'description': '', 'operationId': 'searchBasicUsers', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'User search request', 'required': False, 'schema': {'type': 'object', 'required': ['keywordFieldStrategy', 'keywordMatchStrategy'], 'properties': {'domain': {'type': 'list', 'position': 0, 'description': 'Restrict the search to subjects in these domains, by domain ID or name. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subject': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific subjects, by ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ancestor': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all subcustomers as well. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Define sort order (default name)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'customer', 'createdTimestamp', 'lastUpdatedTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether or not to include deleted subjects. (default false)', 'default': False}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects having all of the specified flags. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude subjects with these flags from the search. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'permissions': {'type': 'list', 'position': 0, 'description': 'Limit search to subjects with one of the given permissions ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'function': {'type': 'str', 'position': 0, 'description': 'The name or id of the function the user should have '}, 'customer': {'type': 'str', 'position': 0, 'description': 'The name or id of the customer the function should belong to. Defaults to any customer '}, 'domain': {'type': 'str', 'position': 0, 'description': 'The name or id of the domain the customer should belong to. Defaults to the current users domain '}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Keywords to search for ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search strategy to use when searching (default Match all keywords)', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['shortName', 'name', 'email']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria with AND, OR or AND NOT ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['keywordFieldStrategy', 'keywordMatchStrategy'], 'properties': {'domain': {'type': 'list', 'position': 0, 'description': 'Restrict the search to subjects in these domains, by domain ID or name. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subject': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific subjects, by ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ancestor': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all subcustomers as well. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Define sort order (default name)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'customer', 'createdTimestamp', 'lastUpdatedTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether or not to include deleted subjects. (default false)', 'default': False}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects having all of the specified flags. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude subjects with these flags from the search. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'permissions': {'type': 'list', 'position': 0, 'description': 'Limit search to subjects with one of the given permissions ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'function': {'type': 'str', 'position': 0, 'description': 'The name or id of the function the user should have '}, 'customer': {'type': 'str', 'position': 0, 'description': 'The name or id of the customer the function should belong to. Defaults to any customer '}, 'domain': {'type': 'str', 'position': 0, 'description': 'The name or id of the domain the customer should belong to. Defaults to the current users domain '}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Keywords to search for ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search strategy to use when searching (default Match all keywords)', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['shortName', 'name', 'email']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria with AND, OR or AND NOT ', 'uniqueItems': True, 'items': {'type': 'dict', 'required': ['keywordFieldStrategy', 'keywordMatchStrategy'], 'properties': {'domain': {'type': 'list', 'position': 0, 'description': 'Restrict the search to subjects in these domains, by domain ID or name. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subject': {'type': 'list', 'position': 0, 'description': 'Restrict search to specific subjects, by ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'ancestor': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects descending from specific groups, by ID or shortname ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'customer': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects bound to these customers (by ID or shortname). Customer groups will resolve to all subcustomers as well. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Define sort order (default name)', 'items': {'type': 'str', 'enum': ['id', 'name', 'shortName', 'customer', 'createdTimestamp', 'lastUpdatedTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Whether or not to include deleted subjects. (default false)', 'default': False}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Restrict search to subjects having all of the specified flags. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude subjects with these flags from the search. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'permissions': {'type': 'list', 'position': 0, 'description': 'Limit search to subjects with one of the given permissions ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'function': {'type': 'str', 'position': 0, 'description': 'The name or id of the function the user should have '}, 'customer': {'type': 'str', 'position': 0, 'description': 'The name or id of the customer the function should belong to. Defaults to any customer '}, 'domain': {'type': 'str', 'position': 0, 'description': 'The name or id of the domain the customer should belong to. Defaults to the current users domain '}}}}, 'keywords': {'type': 'list', 'position': 0, 'description': 'Keywords to search for ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'keywordMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Search strategy to use when searching (default Match all keywords)', 'enum': ['any', 'all']}, 'keywordFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Which fields will be searched for the given keyword (default All supported fields)', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['shortName', 'name', 'email']}}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criteria with AND, OR or AND NOT ', 'uniqueItems': True, 'items': []}, 'required': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed (default false)', 'default': False}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed. (default false)', 'default': False}}}}, 'required': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed (default false)', 'default': False}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed. (default false)', 'default': False}}}}, 'limit': {'type': 'int', 'position': 0, 'description': 'The max amount of items to display (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'The amount of items to skip (default 0)', 'minimum': 0, 'default': 0}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'type': 'str', 'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags that are set for the subject ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted', 'daemonAccount']}}, 'email': {'type': 'str', 'position': 0, 'description': "The user's email "}, 'language': {'type': 'str', 'position': 0, 'description': "The user's language ", 'enum': ['norwegian', 'english']}, 'phoneNumber': {'type': 'str', 'position': 0, 'description': "The user's phone number "}, 'options': ['user', 'group']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}