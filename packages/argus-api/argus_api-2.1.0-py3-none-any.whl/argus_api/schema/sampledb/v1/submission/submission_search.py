"""Autogenerated API schema"""
from argus_api import session


get_submission_by_id = {'tags': ['sampledb/v1'], 'summary': 'Fetch submission info identified by id. (PUBLIC)', 'description': '', 'operationId': 'getSubmissionByID', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'Submission ID', 'required': True, 'type': 'int', 'minimum': 1}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'sha256': {'type': 'str', 'position': 0, 'description': 'SHA256 of the sample '}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp of creation of the submission '}, 'owner': {'type': 'str', 'position': 0, 'description': 'Owner of the submission '}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Metadata of the submission ', 'additionalProperties': {'type': 'string'}}, 'tlp': {'type': 'str', 'position': 0, 'description': 'TLP color of the submission ', 'readOnly': True, 'enum': ['WHITE', 'GREEN', 'AMBER', 'RED']}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_meta_submissions = {'tags': ['sampledb/v1'], 'summary': 'Search for submissions matching given search criteria (PUBLIC)', 'description': '', 'operationId': 'searchMetaSubmissions', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'required': ['customerID', 'keywords', 'tlp'], 'properties': {'customerID': {'type': 'list', 'position': 0, 'description': 'Set of customer IDs containing submissions. If not specified, search will be performed against all accessible customers. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'tlp': {'type': 'list', 'position': 0, 'description': 'Set of TLPs to search for. If not specified, search will be performed against all TLPs (WHITE, GREEN, AMBER, RED). ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['WHITE', 'GREEN', 'AMBER', 'RED']}}, 'includeAnonymousResults': {'type': 'bool', 'position': 0, 'description': 'Whether include anonymous results (default true)', 'default': True}, 'keywords': {'type': 'list', 'position': 0, 'description': 'A set of keywords matched against the metafields of the submission. ', 'items': {'type': 'string'}, 'maxItems': 2147483647, 'minItems': 1}, 'startTimestamp': {'type': 'int', 'position': 0, 'description': 'Start of time search period for submission creation date. (default 7 days before timestamp of request.)', 'minimum': 0}, 'endTimestamp': {'type': 'int', 'position': 0, 'description': 'End of time search period for submission creation date. (default Timestamp of request.)', 'minimum': 0}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. (default 0)', 'minimum': 0, 'default': 0}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'sha256': {'type': 'str', 'position': 0, 'description': 'SHA256 of the sample '}, 'customerInfo': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp of creation of the submission '}, 'owner': {'type': 'str', 'position': 0, 'description': 'Owner of the submission '}, 'properties': {'type': 'dict', 'position': 0, 'description': 'Metadata of the submission ', 'additionalProperties': {'type': 'string'}}, 'tlp': {'type': 'str', 'position': 0, 'description': 'TLP color of the submission ', 'readOnly': True, 'enum': ['WHITE', 'GREEN', 'AMBER', 'RED']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}