"""Autogenerated API schema"""
from argus_api import session


list_memberships = {'tags': ['useradmin/v2'], 'summary': 'List group memberships (PUBLIC)', 'description': '', 'operationId': 'listMemberships', 'produces': ['application/json'], 'parameters': [{'name': 'subject', 'in': 'query', 'description': 'Filter out by user or group (by ID or shortname)', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted memberships', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'group': {'type': 'dict', 'discriminator': 'type', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'member': {'type': 'dict', 'discriminator': 'type', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on the permission ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'addedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'addedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the membership was added '}, 'removedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'removedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the membership was revoked '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
search_memberships = {'tags': ['useradmin/v2'], 'summary': 'Search for group memberships (PUBLIC)', 'description': '', 'operationId': 'searchMemberships', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'The search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'startTimestamp': {'type': 'int'}, 'endTimestamp': {'type': 'int'}, 'subCriteria': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'startTimestamp': {'type': 'int'}, 'endTimestamp': {'type': 'int'}, 'subCriteria': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'startTimestamp': {'type': 'int'}, 'endTimestamp': {'type': 'int'}, 'subCriteria': {'type': 'list', 'uniqueItems': True, 'items': []}, 'subject': {'type': 'list', 'position': 0, 'description': 'Filter out memberships by subject (by ID or shortname). Se subjectFieldStrategy. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subjectFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Determine fields to search for subjects by (defaults to groups and members) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['group', 'member', 'addedByUser', 'removedByUser', 'all']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Determine fields to search for subjects by (defaults to groups and members) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['addedTimestamp', 'removedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Specify if the specified time period must match all the searched time fields, or if it will match for any field. Default is any. ', 'enum': ['any', 'all']}, 'customer': {'type': 'list', 'position': 0, 'description': 'Filter out memberships where any of these customers are owning either the group or the member (by ID or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'str', 'position': 0, 'description': 'When providing subjects or customers, lookup subjects or customers within this domain. If not specified, subjects and customers will be looked up in the current users domain. '}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field to sort result by (default groupShortName)', 'items': {'type': 'str', 'enum': ['groupShortName', 'memberShortName', 'addedTimestamp', 'removedTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Include deleted memberships (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed (default false)', 'default': False}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed. (default false)', 'default': False}}}}, 'subject': {'type': 'list', 'position': 0, 'description': 'Filter out memberships by subject (by ID or shortname). Se subjectFieldStrategy. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subjectFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Determine fields to search for subjects by (defaults to groups and members) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['group', 'member', 'addedByUser', 'removedByUser', 'all']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Determine fields to search for subjects by (defaults to groups and members) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['addedTimestamp', 'removedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Specify if the specified time period must match all the searched time fields, or if it will match for any field. Default is any. ', 'enum': ['any', 'all']}, 'customer': {'type': 'list', 'position': 0, 'description': 'Filter out memberships where any of these customers are owning either the group or the member (by ID or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'str', 'position': 0, 'description': 'When providing subjects or customers, lookup subjects or customers within this domain. If not specified, subjects and customers will be looked up in the current users domain. '}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field to sort result by (default groupShortName)', 'items': {'type': 'str', 'enum': ['groupShortName', 'memberShortName', 'addedTimestamp', 'removedTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Include deleted memberships (default false)', 'default': False}, 'required': {'type': 'bool', 'position': 0, 'description': 'Is this subcriteria required? If false it is OR-ed, if true it is AND-ed (default false)', 'default': False}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Exclude objects matching subcriteria? If true, the criteria is NOT-ed. (default false)', 'default': False}}}}, 'subject': {'type': 'list', 'position': 0, 'description': 'Filter out memberships by subject (by ID or shortname). Se subjectFieldStrategy. ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'subjectFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Determine fields to search for subjects by (defaults to groups and members) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['group', 'member', 'addedByUser', 'removedByUser', 'all']}}, 'timeFieldStrategy': {'type': 'list', 'position': 0, 'description': 'Determine fields to search for subjects by (defaults to groups and members) ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['addedTimestamp', 'removedTimestamp', 'all']}}, 'timeMatchStrategy': {'type': 'str', 'position': 0, 'description': 'Specify if the specified time period must match all the searched time fields, or if it will match for any field. Default is any. ', 'enum': ['any', 'all']}, 'customer': {'type': 'list', 'position': 0, 'description': 'Filter out memberships where any of these customers are owning either the group or the member (by ID or shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'domain': {'type': 'str', 'position': 0, 'description': 'When providing subjects or customers, lookup subjects or customers within this domain. If not specified, subjects and customers will be looked up in the current users domain. '}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'Field to sort result by (default groupShortName)', 'items': {'type': 'str', 'enum': ['groupShortName', 'memberShortName', 'addedTimestamp', 'removedTimestamp']}}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Include deleted memberships (default false)', 'default': False}, 'limit': {'type': 'int', 'position': 0, 'description': 'The max amount of items to display (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'The amount of items to skip (default 0)', 'minimum': 0, 'default': 0}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'group': {'type': 'dict', 'discriminator': 'type', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'member': {'type': 'dict', 'discriminator': 'type', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on the permission ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'addedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'addedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the membership was added '}, 'removedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'removedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the membership was revoked '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}