"""Autogenerated API schema"""
from argus_api import session


list_function_mappings = {'tags': ['useradmin/v2'], 'summary': 'Returns the mappings for functions matching the query (DEV)', 'description': '', 'operationId': 'listFunctionMappings', 'produces': ['application/json'], 'parameters': [{'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}, {'name': 'parent', 'in': 'query', 'description': 'Search by parent function name or ID', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'child', 'in': 'query', 'description': 'Search by child function name or ID', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'includeDeleted', 'in': 'query', 'description': 'Include deleted mappings', 'required': False, 'type': 'bool', 'default': False}, {'name': 'sortBy', 'in': 'query', 'description': 'Sort search result', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'child': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on the mapping ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the object was created '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the object was deleted '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_function_mappings = {'tags': ['useradmin/v2'], 'summary': 'Returns the function mappings for functions matching the query (DEV)', 'description': '', 'operationId': 'searchFunctionMappings', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Function search request', 'required': False, 'schema': {'type': 'object', 'properties': {'sortBy': {'type': 'list', 'position': 0, 'description': 'Field to sort result by (default parentName)', 'items': {'type': 'str', 'enum': ['id', 'parentName', 'childName']}}, 'limit': {'type': 'int', 'position': 0, 'description': 'The max amount of items to display (default 25)', 'minimum': 0, 'default': 25}, 'offset': {'type': 'int', 'position': 0, 'description': 'The amount of items to skip (default 0)', 'minimum': 0, 'default': 0}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Include deleted mappings in the response (requires permission) (default false)', 'default': False}, 'parent': {'type': 'list', 'position': 0, 'description': 'Search for mappings with these functions as parent (function name or id) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'child': {'type': 'list', 'position': 0, 'description': 'Search for mappings with these functions as child (function name or id) ', 'uniqueItems': True, 'items': {'type': 'string'}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'str', 'position': 0, 'description': 'ID of the response object. '}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'child': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the function. '}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags set on the mapping ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['deleted']}}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the object was created '}, 'deletedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'shortName': {'type': 'str', 'position': 0, 'description': "The subject's short name "}, 'name': {'type': 'str', 'position': 0, 'description': "The subject's name "}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer. '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer. '}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object. '}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain. '}}}}}}}, 'deletedTimestamp': {'type': 'int', 'position': 0, 'description': 'The time the object was deleted '}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}