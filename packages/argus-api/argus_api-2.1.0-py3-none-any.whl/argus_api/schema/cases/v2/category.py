"""Autogenerated API schema"""
from argus_api import session


create_category = {'tags': ['cases/v2/category'], 'summary': 'Add category (INTERNAL)', 'description': '', 'operationId': 'createCategory', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Create request', 'required': False, 'schema': {'type': 'object', 'required': ['description', 'domain', 'name', 'shortName'], 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'Descriptive name of category to add.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname for the category. This value must be unique in domain.  => [a-zA-Z0-9_\\-\\.]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'Longer description of this category.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names. If not set, locales will fallback to main name.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*', 'additionalProperties': {'type': 'string'}}, 'domain': {'type': 'str', 'position': 0, 'description': 'Name or ID of domain to create this category in. '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Category name '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Category shortname '}, 'description': {'type': 'str', 'position': 0, 'description': 'Category description '}, 'localizedName': {'type': 'str', 'position': 0, 'description': 'Localized name (current users language) '}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names ', 'additionalProperties': {'type': 'string'}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'bindings': {'type': 'list', 'position': 0, 'description': 'Bindings from this category to services ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'category': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'service': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'caseTypes': {'type': 'list', 'position': 0, 'description': 'Case types the category is bound to this service for ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'createdTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was created (in ISO-8601 time format) '}, 'lastUpdatedTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was last updated (in ISO-8601 time format) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
delete_category = {'tags': ['cases/v2/category'], 'summary': 'Delete category (INTERNAL)', 'description': '', 'operationId': 'deleteCategory', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID or shortname of category to delete', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Category name '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Category shortname '}, 'description': {'type': 'str', 'position': 0, 'description': 'Category description '}, 'localizedName': {'type': 'str', 'position': 0, 'description': 'Localized name (current users language) '}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names ', 'additionalProperties': {'type': 'string'}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'bindings': {'type': 'list', 'position': 0, 'description': 'Bindings from this category to services ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'category': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'service': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'caseTypes': {'type': 'list', 'position': 0, 'description': 'Case types the category is bound to this service for ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'createdTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was created (in ISO-8601 time format) '}, 'lastUpdatedTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was last updated (in ISO-8601 time format) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_category = {'tags': ['cases/v2/category'], 'summary': 'Fetch category (INTERNAL)', 'description': '', 'operationId': 'getCategory', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID or shortname of category to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Category name '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Category shortname '}, 'description': {'type': 'str', 'position': 0, 'description': 'Category description '}, 'localizedName': {'type': 'str', 'position': 0, 'description': 'Localized name (current users language) '}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names ', 'additionalProperties': {'type': 'string'}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'bindings': {'type': 'list', 'position': 0, 'description': 'Bindings from this category to services ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'category': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'service': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'caseTypes': {'type': 'list', 'position': 0, 'description': 'Case types the category is bound to this service for ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'createdTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was created (in ISO-8601 time format) '}, 'lastUpdatedTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was last updated (in ISO-8601 time format) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_categories = {'tags': ['cases/v2/category'], 'summary': 'List categories (INTERNAL)', 'description': '', 'operationId': 'listCategories', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'query', 'description': 'List of category IDs to match', 'required': False, 'type': 'list', 'items': {'type': 'int'}, 'collectionFormat': 'multi'}, {'name': 'shortName', 'in': 'query', 'description': 'List of category shortnames to match', 'required': False, 'type': 'list', 'items': {'type': 'string'}, 'collectionFormat': 'multi'}, {'name': 'offset', 'in': 'query', 'description': 'Skip a number of results', 'required': False, 'type': 'int', 'default': 0, 'minimum': 0}, {'name': 'limit', 'in': 'query', 'description': 'Maximum number of returned results', 'required': False, 'type': 'int', 'default': 25, 'minimum': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Category name '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Category shortname '}, 'description': {'type': 'str', 'position': 0, 'description': 'Category description '}, 'localizedName': {'type': 'str', 'position': 0, 'description': 'Localized name (current users language) '}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names ', 'additionalProperties': {'type': 'string'}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'bindings': {'type': 'list', 'position': 0, 'description': 'Bindings from this category to services ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'category': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'service': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'caseTypes': {'type': 'list', 'position': 0, 'description': 'Case types the category is bound to this service for ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'createdTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was created (in ISO-8601 time format) '}, 'lastUpdatedTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was last updated (in ISO-8601 time format) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_categories = {'tags': ['cases/v2/category'], 'summary': 'Search categories (INTERNAL)', 'description': '', 'operationId': 'searchCategories', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['id', 'name', 'localizedName', 'shortName']}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'sortBy': {'type': 'list', 'items': {'type': 'str', 'enum': ['id', 'name', 'localizedName', 'shortName']}}, 'limit': {'type': 'int', 'position': 0, 'description': 'Set this value to set max number of results. By default, no restriction on result set size. '}, 'offset': {'type': 'int', 'position': 0, 'description': 'Set this value to skip the first (offset) objects. By default, return result from first object. '}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects. '}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR. ', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'id': {'type': 'list', 'position': 0, 'description': 'Limit search to categories with the specified numeric ID`s. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'shortName': {'type': 'list', 'position': 0, 'description': 'Limit search to categories with the specified shortnames ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'service': {'type': 'list', 'position': 0, 'description': 'Limit search to categories bound to one of these services (by ID or service shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'caseType': {'type': 'list', 'position': 0, 'description': 'Limit search to categories bound to one of these case types ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded. '}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria). '}, 'id': {'type': 'list', 'position': 0, 'description': 'Limit search to categories with the specified numeric ID`s. ', 'uniqueItems': True, 'items': {'type': 'int'}}, 'shortName': {'type': 'list', 'position': 0, 'description': 'Limit search to categories with the specified shortnames ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'service': {'type': 'list', 'position': 0, 'description': 'Limit search to categories bound to one of these services (by ID or service shortname) ', 'uniqueItems': True, 'items': {'type': 'string'}}, 'caseType': {'type': 'list', 'position': 0, 'description': 'Limit search to categories bound to one of these case types ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}, 'includeFlags': {'type': 'list', 'position': 0, 'description': 'Only include objects which have includeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}, 'excludeFlags': {'type': 'list', 'position': 0, 'description': 'Exclude objects which have excludeFlags set. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Category name '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Category shortname '}, 'description': {'type': 'str', 'position': 0, 'description': 'Category description '}, 'localizedName': {'type': 'str', 'position': 0, 'description': 'Localized name (current users language) '}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names ', 'additionalProperties': {'type': 'string'}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'bindings': {'type': 'list', 'position': 0, 'description': 'Bindings from this category to services ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'category': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'service': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'caseTypes': {'type': 'list', 'position': 0, 'description': 'Case types the category is bound to this service for ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'createdTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was created (in ISO-8601 time format) '}, 'lastUpdatedTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was last updated (in ISO-8601 time format) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
update_category = {'tags': ['cases/v2/category'], 'summary': 'Update category (INTERNAL)', 'description': '', 'operationId': 'updateCategory', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID or shortname of category to update', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Update request', 'required': False, 'schema': {'type': 'object', 'properties': {'name': {'type': 'str', 'position': 0, 'description': 'If set, change the descriptive name for this category.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'If set, change the shortname name for this category. WARNING: This may affect scripts using the category name.  => [a-zA-Z0-9_\\-\\.]*'}, 'description': {'type': 'str', 'position': 0, 'description': 'If set, change the long description for this category.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*'}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Set localized names to override name for specified language. Only specified languages are changed.  => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]"\\\'_/\\\\,\\*\\+\\#:@!?;=]*', 'additionalProperties': {'type': 'string'}}, 'deprecated': {'type': 'bool', 'position': 0, 'description': 'If set, enable/disable the deprecated flag for this category. Default is no change. '}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'position': 0, 'description': 'Category name '}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Category shortname '}, 'description': {'type': 'str', 'position': 0, 'description': 'Category description '}, 'localizedName': {'type': 'str', 'position': 0, 'description': 'Localized name (current users language) '}, 'localizedNames': {'type': 'dict', 'position': 0, 'description': 'Localized names ', 'additionalProperties': {'type': 'string'}}, 'createdTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was created '}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int', 'position': 0, 'description': 'Timestamp when this category was last updated '}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'bindings': {'type': 'list', 'position': 0, 'description': 'Bindings from this category to services ', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'id': {'type': 'str'}, 'category': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'service': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'localizedName': {'type': 'str', 'readOnly': True}}}, 'caseTypes': {'type': 'list', 'position': 0, 'description': 'Case types the category is bound to this service for ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['securityIncident', 'operationalIncident', 'informational', 'change']}}}}}, 'createdTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was created (in ISO-8601 time format) '}, 'lastUpdatedTime': {'type': 'str', 'position': 0, 'description': 'Time when this category was last updated (in ISO-8601 time format) '}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object. ', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'DEPRECATED']}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}