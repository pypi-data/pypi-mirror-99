The numbers module
==================

    >>> from pysyte.types import numbers
    >>> assert 'handles numbers' in numbers.__doc__

Nearly a number
---------------

Methods to convert strings to numbers
    >>> assert numbers.inty(77) == 77 == numbers.inty('77')
    >>> assert numbers.floaty(77.7) == 77.7 == numbers.floaty('77.7')
    >>> assert numbers.inty([7, 8, 9]) == 3

If they can't convert, then give back what they got
    >>> assert numbers.inty('seventy seven') == 'seventy seven'
    >>> assert numbers.floaty('seventy seven') == 'seventy seven'

The as_...() methods will also convert if possible
    >>> assert numbers.as_int(77) == 77 == numbers.as_int('77')
    >>> assert numbers.as_float(77.7) == 77.7 == numbers.as_float('77.7')

If not, they give None
    >>> numbers.as_int('seventy seven')
    >>> assert numbers.as_int('seventy seven') is None
    >>> assert numbers.as_float('seventy seven') is None

If they really can't convert an error is raised
    >>> try:
    ...     numbers.inty(numbers)
    ...     print('fail')
    ... except numbers.NAN:
    ...     pass
