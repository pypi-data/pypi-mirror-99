
    >>> from pysyte import similarities
    >>> assert 'popular similarity measures' in similarities.__doc__

    >>> similar = similarities.similar
    >>> assert not similar(0, 1)
    >>> assert similar(1, 1)

    >>> class Fred(object):
    ...     def __init__(self, i):
    ...         self .i = i
    ...
    ...     def __len___(self):
    ...          return self.i
    ...
    ...     def __eq__(self, other):
    ...         return self.i == getattr(other, 'i', 0)


    >>> a = Fred(3)
    >>> b = Fred(7)
    >>> assert a != b
    >>> assert not similar(a, b)
    >>> assert hasattr(a, 'similar')
    >>> assert not a.similar(b)
    >>> c = Fred(3)
    >>> assert a.similar(c)
    >>> assert not a.similar(b)
    >>> assert not b.similar(a)
    >>> assert not b.similar(c)
    >>> assert c.similar(a)
    >>> assert not c.similar(b)

    >>> assert round(similarities.euclidean([0,3,4,5],[7,6,3,-1]), 1) == 9.7
    >>> assert round(similarities.manhattan([10,20,10],[10,20,20]), 1) == 10
    >>> assert round(similarities.minkowski([0,3,4,5],[7,6,3,-1], 3), 1) == 8.4
