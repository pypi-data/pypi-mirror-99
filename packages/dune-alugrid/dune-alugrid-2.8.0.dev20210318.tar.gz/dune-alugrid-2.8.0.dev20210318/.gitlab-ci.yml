---
workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_ID && $CI_MERGE_REQUEST_TITLE !~ /^WIP/'   # Execute jobs in merge request context and not in WIP status
    - if: $CI_COMMIT_BRANCH == 'master'      # Execute jobs when a new commit is pushed to master branch

variables:
  # remove some unused 3rd party packages to speed up tests.
  DUNECI_CMAKE_FLAGS: "-DCMAKE_DISABLE_FIND_PACKAGE_Alberta=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Vc=TRUE -DCMAKE_DISABLE_DOCUMENTATION=TRUE -DENABLE_HEADERCHECK=ON"
  
before_script:
  - duneci-install-module https://gitlab.dune-project.org/core/dune-common.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-geometry.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-grid.git


ubuntu:20.04-clang-10-17:
  image: registry.dune-project.org/docker/ci/ubuntu:20.04
  script: duneci-standard-test
  variables:
    DUNECI_TOOLCHAIN: clang-10-17
    # cmake flags we use for all dune moudle - important is that build shared libs is set (need some better way of doi
    DUNECI_CMAKE_FLAGS: $DUNE_CMAKE_FLAGS
  tags: [duneci]

debian:11--gcc-9-17-python:
  image: registry.dune-project.org/docker/ci/debian:11
  script: duneci-standard-test
  variables:
    DUNECI_TOOLCHAIN:   gcc-9-17
    # so we need some variables to build the dune-py module during execution of the first python test:
    # we need to find the dune mdoule
    DUNE_CONTROL_PATH:  /duneci/modules:$CI_PROJECT_DIR
    # the position for the dune-py module
    DUNE_PY_DIR:        /duneci/modules/dune-py
    # during dune-py build this variable is used - do know a way to access
    # the CMAKE_FLAGS used to build the modules...
    DUNE_CMAKE_FLAGS:   "CC=gcc-9 CXX=g++-9 -DCMAKE_CXX_FLAGS='-std=c++17 -O2 -g -Wall -fdiagnostics-color=always' -DDUNE_ENABLE_PYTHONBINDINGS=ON -DDUNE_MAX_TEST_CORES=4 -DBUILD_SHARED_LIBS=TRUE -DDUNE_PYTHON_INSTALL_LOCATION=none -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_LATEX=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Alberta=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Vc=TRUE -DCMAKE_DISABLE_DOCUMENTATION=TRUE"
    # cmake flags we use for all dune moudle - important is that build shared libs is set (need some better way of doing this)
    DUNECI_CMAKE_FLAGS: $DUNE_CMAKE_FLAGS
    # finally set the python path to all modules
    PYTHONPATH:         /duneci/modules/dune-common/build-cmake/python:/duneci/modules/dune-geometry/build-cmake/python:/duneci/modules/dune-grid/build-cmake/python:$CI_PROJECT_DIR/build-cmake/python
  tags: [duneci]

debian:11--gcc-9-17:headercheck:
  image: registry.dune-project.org/docker/ci/debian:11
  script:
    - duneci-install-module https://gitlab.dune-project.org/extensions/dune-alugrid.git
    - cd /duneci/modules/dune-alugrid/build-cmake
    - make headercheck
  variables:
    DUNECI_TOOLCHAIN: gcc-9-17
  tags: [duneci]
