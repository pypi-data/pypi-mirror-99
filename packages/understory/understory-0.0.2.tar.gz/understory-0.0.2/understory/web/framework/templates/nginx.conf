$def with (root_hash)
user              gaea;
daemon            off;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    types_hash_max_size  2048;

    sendfile     on;
    tcp_nopush   on;
    tcp_nodelay  on;

    keepalive_timeout  65;

    server_tokens  off;

    # server_name_in_redirect        off;
    # server_names_hash_bucket_size  64;

    gzip  on;
    gzip_disable  "msie6";
    # gzip_vary  on;
    # gzip_proxied  any;
    # gzip_comp_level  6;
    # gzip_buffers  16 8k;
    # gzip_http_version  1.1;
    # gzip_types  text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # TODO FIXME XXX figure out what to do here...
    access_log  /home/gaea/detritus/nginx/logs/access.log;
    error_log   /home/gaea/detritus/nginx/logs/error.log;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html;
        }

        # error_page  404              /404.html;

        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }
    }

    log_format  $root_hash  '$$remote_addr [$$time_local] "$$request" $$status '
        '$$request_time $$bytes_sent "$$http_referer" '
        '"$$http_user_agent" "$$sent_http_set_cookie"';

    include /home/gaea/detritus/nginx/conf/conf.d/*.conf;
}

rtmp {
    hls  on;
    hls_path  /home/gaea/canopy/var/streams/;
    hls_fragment  5s;

    record all;
    record_path  /home/gaea/canopy/var/streams/rec;
    record_suffix  _%Y-%m-%d_%H-%M-%S.flv;
    record_lock  on;

    # exec_publish  /path/to/publish.sh;  # setup
    # exec_record_done  /path/to/finished.sh $$path $$basename.mp4;  # teardown

    access_log  /home/gaea/canopy/var/streams/rtmp_access.log  combined;
    access_log  on;

    server {
        listen 1935;
        chunk_size 4096;

        application rtmp {
            live on;
            record all;
        }
    }
}
