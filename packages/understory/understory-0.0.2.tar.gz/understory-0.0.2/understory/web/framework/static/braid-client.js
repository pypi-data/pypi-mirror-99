var BraidClient;BraidClient=(()=>{var e={10:e=>{e.exports=class{constructor(...e){this.endpoint=e.length?e:"",this.subscribe=this.subscribe.bind(this),this.publish=this.publish.bind(this)}subscribe(e){fetch(this.endpoint,{headers:{credentials:"same-origin",subscribe:"keep-alive"}}).then((t=>{const n=t.body.getReader(),s=new TextDecoder("utf-8");let i="";n.read().then((function t({done:o,value:r}){if(o)return void console.log("BRAID: end of stream");i+=s.decode(r);const c={},h=i.split("\n\n");if(h[0].split("\n").forEach((e=>{const t=e.slice(0,e.indexOf(":")).toLowerCase(),n=e.slice(e.indexOf(":")+1);c[t]=n})),Number(c["content-length"])===h[1].length){i="";const t=c["content-range"].split("=")[1],n=JSON.parse(h[1]);console.log("BRAID: patch received: ",t,n),e(t,n)}return n.read().then(t)}))})).catch((e=>{console.error("BRAID: ",e)}))}publish(e,t){const n=JSON.stringify(t);fetch(this.endpoint,{method:"PUT",headers:{credentials:"same-origin",patches:1},body:`Content-Length: ${n.length}\nContent-Range: json=${e}\n\n${n}`}).then((()=>{console.log("BRAID: patch sent: ",e,t)}))}}}},t={};return function n(s){if(t[s])return t[s].exports;var i=t[s]={exports:{}};return e[s](i,i.exports,n),i.exports}(10)})();