# coding: utf-8

"""
    Bedrock

    API documentation for Bedrock platform  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class CreateModelArtefactSchema(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict):       The key is attribute name
                                  and the value is attribute type.
      attribute_map (dict):       The key is attribute name
                                  and the value is json key in definition.
      readonly_attributes (dict): Set of readonly attributes (will not be
                                  serialised in request body).
    """
    openapi_types = {
        'artefact_file_listing_json': 'str',
        'artefact_file_listing_rendered': 'str',
        'object': 'str',
        'pipeline_id': 'str',
        'pipeline_run_id': 'int'
    }

    attribute_map = {
        'artefact_file_listing_json': 'artefact_file_listing_json',
        'artefact_file_listing_rendered': 'artefact_file_listing_rendered',
        'object': 'object',
        'pipeline_id': 'pipeline_id',
        'pipeline_run_id': 'pipeline_run_id'
    }

    readonly_attributes = {
        'object',
    }

    def __init__(self, artefact_file_listing_json='null', artefact_file_listing_rendered='null', object='createModelArtefactSchema', pipeline_id=None, pipeline_run_id=None, **kwargs):  # noqa: E501
        """CreateModelArtefactSchema - a model defined in OpenAPI"""  # noqa: E501

        self._artefact_file_listing_json = None
        self._artefact_file_listing_rendered = None
        self._object = None
        self._pipeline_id = None
        self._pipeline_run_id = None
        self.discriminator = None

        self.artefact_file_listing_json = artefact_file_listing_json
        self.artefact_file_listing_rendered = artefact_file_listing_rendered
        if pipeline_id is not None:
            self.pipeline_id = pipeline_id
        if pipeline_run_id is not None:
            self.pipeline_run_id = pipeline_run_id

    @classmethod
    def from_response(cls, artefact_file_listing_json='null', artefact_file_listing_rendered='null', object='createModelArtefactSchema', pipeline_id=None, pipeline_run_id=None, **kwargs):  # noqa: E501
        """Instantiate CreateModelArtefactSchema from response"""  # noqa: E501
        self = cls.__new__(cls)

        self._artefact_file_listing_json = None
        self._artefact_file_listing_rendered = None
        self._object = None
        self._pipeline_id = None
        self._pipeline_run_id = None
        self.discriminator = None

        if object is not None:
            self.object = object
        return self

    @property
    def artefact_file_listing_json(self):
        """Gets the artefact_file_listing_json of this CreateModelArtefactSchema.  # noqa: E501


        :return: The artefact_file_listing_json of this CreateModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._artefact_file_listing_json

    @artefact_file_listing_json.setter
    def artefact_file_listing_json(self, artefact_file_listing_json):
        """Sets the artefact_file_listing_json of this CreateModelArtefactSchema.


        :param artefact_file_listing_json: The artefact_file_listing_json of this CreateModelArtefactSchema.  # noqa: E501
        :type: str
        """
        if artefact_file_listing_json is not None and len(artefact_file_listing_json) > 1048576:
            raise ValueError("Invalid value for `artefact_file_listing_json`, length must be less than or equal to `1048576`")  # noqa: E501

        self._artefact_file_listing_json = artefact_file_listing_json

    @property
    def artefact_file_listing_rendered(self):
        """Gets the artefact_file_listing_rendered of this CreateModelArtefactSchema.  # noqa: E501


        :return: The artefact_file_listing_rendered of this CreateModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._artefact_file_listing_rendered

    @artefact_file_listing_rendered.setter
    def artefact_file_listing_rendered(self, artefact_file_listing_rendered):
        """Sets the artefact_file_listing_rendered of this CreateModelArtefactSchema.


        :param artefact_file_listing_rendered: The artefact_file_listing_rendered of this CreateModelArtefactSchema.  # noqa: E501
        :type: str
        """
        if artefact_file_listing_rendered is not None and len(artefact_file_listing_rendered) > 1048576:
            raise ValueError("Invalid value for `artefact_file_listing_rendered`, length must be less than or equal to `1048576`")  # noqa: E501

        self._artefact_file_listing_rendered = artefact_file_listing_rendered

    @property
    def object(self):
        """Gets the object of this CreateModelArtefactSchema.  # noqa: E501


        :return: The object of this CreateModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this CreateModelArtefactSchema.


        :param object: The object of this CreateModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._object = object

    @property
    def pipeline_id(self):
        """Gets the pipeline_id of this CreateModelArtefactSchema.  # noqa: E501


        :return: The pipeline_id of this CreateModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._pipeline_id

    @pipeline_id.setter
    def pipeline_id(self, pipeline_id):
        """Sets the pipeline_id of this CreateModelArtefactSchema.


        :param pipeline_id: The pipeline_id of this CreateModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._pipeline_id = pipeline_id

    @property
    def pipeline_run_id(self):
        """Gets the pipeline_run_id of this CreateModelArtefactSchema.  # noqa: E501


        :return: The pipeline_run_id of this CreateModelArtefactSchema.  # noqa: E501
        :rtype: int
        """
        return self._pipeline_run_id

    @pipeline_run_id.setter
    def pipeline_run_id(self, pipeline_run_id):
        """Sets the pipeline_run_id of this CreateModelArtefactSchema.


        :param pipeline_run_id: The pipeline_run_id of this CreateModelArtefactSchema.  # noqa: E501
        :type: int
        """

        self._pipeline_run_id = pipeline_run_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateModelArtefactSchema):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
