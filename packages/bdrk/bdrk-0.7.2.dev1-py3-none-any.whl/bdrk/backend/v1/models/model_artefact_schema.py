# coding: utf-8

"""
    Bedrock

    API documentation for Bedrock platform  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ModelArtefactSchema(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict):       The key is attribute name
                                  and the value is attribute type.
      attribute_map (dict):       The key is attribute name
                                  and the value is json key in definition.
      readonly_attributes (dict): Set of readonly attributes (will not be
                                  serialised in request body).
    """
    openapi_types = {
        'artefact_file_listing_json': 'str',
        'artefact_file_listing_rendered': 'str',
        'artefact_file_name': 'str',
        'created_at': 'datetime',
        'created_by': 'UserSchema',
        'download_url': 'str',
        'entity_id': 'str',
        'entity_number': 'int',
        'environment_id': 'str',
        'model_id': 'str',
        'model_version_id': 'int',
        'object': 'str',
        'pipeline_run_id': 'str',
        'updated_at': 'datetime'
    }

    attribute_map = {
        'artefact_file_listing_json': 'artefact_file_listing_json',
        'artefact_file_listing_rendered': 'artefact_file_listing_rendered',
        'artefact_file_name': 'artefact_file_name',
        'created_at': 'created_at',
        'created_by': 'created_by',
        'download_url': 'download_url',
        'entity_id': 'entity_id',
        'entity_number': 'entity_number',
        'environment_id': 'environment_id',
        'model_id': 'model_id',
        'model_version_id': 'model_version_id',
        'object': 'object',
        'pipeline_run_id': 'pipeline_run_id',
        'updated_at': 'updated_at'
    }

    readonly_attributes = {
        'artefact_file_listing_json',
        'artefact_file_listing_rendered',
        'artefact_file_name',
        'created_at',
        'created_by',
        'download_url',
        'entity_id',
        'entity_number',
        'model_id',
        'model_version_id',
        'object',
        'updated_at'
    }

    def __init__(self, artefact_file_listing_json=None, artefact_file_listing_rendered=None, artefact_file_name=None, created_at=None, created_by=None, download_url=None, entity_id=None, entity_number=None, environment_id=None, model_id=None, model_version_id=None, object='modelArtefact', pipeline_run_id=None, updated_at=None, **kwargs):  # noqa: E501
        """ModelArtefactSchema - a model defined in OpenAPI"""  # noqa: E501

        self._artefact_file_listing_json = None
        self._artefact_file_listing_rendered = None
        self._artefact_file_name = None
        self._created_at = None
        self._created_by = None
        self._download_url = None
        self._entity_id = None
        self._entity_number = None
        self._environment_id = None
        self._model_id = None
        self._model_version_id = None
        self._object = None
        self._pipeline_run_id = None
        self._updated_at = None
        self.discriminator = None

        self.environment_id = environment_id
        if pipeline_run_id is not None:
            self.pipeline_run_id = pipeline_run_id

    @classmethod
    def from_response(cls, artefact_file_listing_json=None, artefact_file_listing_rendered=None, artefact_file_name=None, created_at=None, created_by=None, download_url=None, entity_id=None, entity_number=None, environment_id=None, model_id=None, model_version_id=None, object='modelArtefact', pipeline_run_id=None, updated_at=None, **kwargs):  # noqa: E501
        """Instantiate ModelArtefactSchema from response"""  # noqa: E501
        self = cls.__new__(cls)

        self._artefact_file_listing_json = None
        self._artefact_file_listing_rendered = None
        self._artefact_file_name = None
        self._created_at = None
        self._created_by = None
        self._download_url = None
        self._entity_id = None
        self._entity_number = None
        self._environment_id = None
        self._model_id = None
        self._model_version_id = None
        self._object = None
        self._pipeline_run_id = None
        self._updated_at = None
        self.discriminator = None

        if artefact_file_listing_json is not None:
            self.artefact_file_listing_json = artefact_file_listing_json
        if artefact_file_listing_rendered is not None:
            self.artefact_file_listing_rendered = artefact_file_listing_rendered
        if artefact_file_name is not None:
            self.artefact_file_name = artefact_file_name
        if created_at is not None:
            self.created_at = created_at
        if created_by is not None:
            self.created_by = created_by
        if download_url is not None:
            self.download_url = download_url
        if entity_id is not None:
            self.entity_id = entity_id
        if entity_number is not None:
            self.entity_number = entity_number
        self.environment_id = environment_id
        if model_id is not None:
            self.model_id = model_id
        if model_version_id is not None:
            self.model_version_id = model_version_id
        if object is not None:
            self.object = object
        if pipeline_run_id is not None:
            self.pipeline_run_id = pipeline_run_id
        if updated_at is not None:
            self.updated_at = updated_at
        return self

    @property
    def artefact_file_listing_json(self):
        """Gets the artefact_file_listing_json of this ModelArtefactSchema.  # noqa: E501


        :return: The artefact_file_listing_json of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._artefact_file_listing_json

    @artefact_file_listing_json.setter
    def artefact_file_listing_json(self, artefact_file_listing_json):
        """Sets the artefact_file_listing_json of this ModelArtefactSchema.


        :param artefact_file_listing_json: The artefact_file_listing_json of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._artefact_file_listing_json = artefact_file_listing_json

    @property
    def artefact_file_listing_rendered(self):
        """Gets the artefact_file_listing_rendered of this ModelArtefactSchema.  # noqa: E501


        :return: The artefact_file_listing_rendered of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._artefact_file_listing_rendered

    @artefact_file_listing_rendered.setter
    def artefact_file_listing_rendered(self, artefact_file_listing_rendered):
        """Sets the artefact_file_listing_rendered of this ModelArtefactSchema.


        :param artefact_file_listing_rendered: The artefact_file_listing_rendered of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._artefact_file_listing_rendered = artefact_file_listing_rendered

    @property
    def artefact_file_name(self):
        """Gets the artefact_file_name of this ModelArtefactSchema.  # noqa: E501


        :return: The artefact_file_name of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._artefact_file_name

    @artefact_file_name.setter
    def artefact_file_name(self, artefact_file_name):
        """Sets the artefact_file_name of this ModelArtefactSchema.


        :param artefact_file_name: The artefact_file_name of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._artefact_file_name = artefact_file_name

    @property
    def created_at(self):
        """Gets the created_at of this ModelArtefactSchema.  # noqa: E501


        :return: The created_at of this ModelArtefactSchema.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ModelArtefactSchema.


        :param created_at: The created_at of this ModelArtefactSchema.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def created_by(self):
        """Gets the created_by of this ModelArtefactSchema.  # noqa: E501


        :return: The created_by of this ModelArtefactSchema.  # noqa: E501
        :rtype: UserSchema
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ModelArtefactSchema.


        :param created_by: The created_by of this ModelArtefactSchema.  # noqa: E501
        :type: UserSchema
        """

        self._created_by = created_by

    @property
    def download_url(self):
        """Gets the download_url of this ModelArtefactSchema.  # noqa: E501


        :return: The download_url of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this ModelArtefactSchema.


        :param download_url: The download_url of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def entity_id(self):
        """Gets the entity_id of this ModelArtefactSchema.  # noqa: E501


        :return: The entity_id of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this ModelArtefactSchema.


        :param entity_id: The entity_id of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._entity_id = entity_id

    @property
    def entity_number(self):
        """Gets the entity_number of this ModelArtefactSchema.  # noqa: E501


        :return: The entity_number of this ModelArtefactSchema.  # noqa: E501
        :rtype: int
        """
        return self._entity_number

    @entity_number.setter
    def entity_number(self, entity_number):
        """Sets the entity_number of this ModelArtefactSchema.


        :param entity_number: The entity_number of this ModelArtefactSchema.  # noqa: E501
        :type: int
        """

        self._entity_number = entity_number

    @property
    def environment_id(self):
        """Gets the environment_id of this ModelArtefactSchema.  # noqa: E501


        :return: The environment_id of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._environment_id

    @environment_id.setter
    def environment_id(self, environment_id):
        """Sets the environment_id of this ModelArtefactSchema.


        :param environment_id: The environment_id of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """
        if environment_id is None:
            raise ValueError("Invalid value for `environment_id`, must not be `None`")  # noqa: E501
        if environment_id is not None and not re.search(r'^([a-zA-Z0-9\-]+)$', environment_id):  # noqa: E501
            raise ValueError(r"Invalid value for `environment_id`, must be a follow pattern or equal to `/^([a-zA-Z0-9\-]+)$/`")  # noqa: E501

        self._environment_id = environment_id

    @property
    def model_id(self):
        """Gets the model_id of this ModelArtefactSchema.  # noqa: E501


        :return: The model_id of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this ModelArtefactSchema.


        :param model_id: The model_id of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._model_id = model_id

    @property
    def model_version_id(self):
        """Gets the model_version_id of this ModelArtefactSchema.  # noqa: E501


        :return: The model_version_id of this ModelArtefactSchema.  # noqa: E501
        :rtype: int
        """
        return self._model_version_id

    @model_version_id.setter
    def model_version_id(self, model_version_id):
        """Sets the model_version_id of this ModelArtefactSchema.


        :param model_version_id: The model_version_id of this ModelArtefactSchema.  # noqa: E501
        :type: int
        """

        self._model_version_id = model_version_id

    @property
    def object(self):
        """Gets the object of this ModelArtefactSchema.  # noqa: E501


        :return: The object of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ModelArtefactSchema.


        :param object: The object of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._object = object

    @property
    def pipeline_run_id(self):
        """Gets the pipeline_run_id of this ModelArtefactSchema.  # noqa: E501


        :return: The pipeline_run_id of this ModelArtefactSchema.  # noqa: E501
        :rtype: str
        """
        return self._pipeline_run_id

    @pipeline_run_id.setter
    def pipeline_run_id(self, pipeline_run_id):
        """Sets the pipeline_run_id of this ModelArtefactSchema.


        :param pipeline_run_id: The pipeline_run_id of this ModelArtefactSchema.  # noqa: E501
        :type: str
        """

        self._pipeline_run_id = pipeline_run_id

    @property
    def updated_at(self):
        """Gets the updated_at of this ModelArtefactSchema.  # noqa: E501


        :return: The updated_at of this ModelArtefactSchema.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ModelArtefactSchema.


        :param updated_at: The updated_at of this ModelArtefactSchema.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModelArtefactSchema):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
