{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "id": "https://inveniosoftware.org/schemas/rdm/records/record-v2.0.0.json",
  "title": "InvenioRDM Record Schema v2.0.0",
  "type": "object",
  "additionalProperties": false,

  "definitions": {

    "nameType": {
      "description": "Type of name.",
      "type": "string",
      "enum": [
        "personal",
        "organizational"
      ]
    },

    "titleType": {
      "description": "Type of title.",
      "type": "string"
    },

    "contributorType": {
      "type": "string"
    },

    "dateType": {
      "description": "Type of the date.",
      "type": "string"
    },

    "relationType": {
      "type": "string"
    },

    "descriptionType": {
      "type": "string"
    },

    "language": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },

    "longitude": {
      "type": "number",
      "minimum": -180,
      "maximum": 180
    },

    "latitude": {
      "type": "number",
      "minimum": -90,
      "maximum": 90
    },

    "scheme": {
      "description": "A scheme.",
      "type": "string"
    },

    "identifier": {
      "description": "An identifier.",
      "type": "string"
    },

    "identifiers": {
      "description": "Identifiers object (keys being scheme, value being the identifier).",
      "type": "object",
      "additionalProperties": {"$ref": "#/definitions/identifier"}
    },

    "identifiers_with_scheme": {
      "description": "Identifiers object with identifier value and scheme in separate keys.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "identifier": {"$ref": "#/definitions/identifier"},
        "scheme": {"$ref": "#/definitions/scheme"}
      }
    },

    "internal-pid": {
      "type": "object",
      "description": "An internal persistent identifier object.",
      "additionalProperties": false,
      "required": ["pk", "status"],
      "properties": {
        "pk": {
          "description": "Primary key of the PID object.",
          "type": "integer"
        },
        "status": {
          "description": "The status of the PID (from Invenio-PIDStore).",
          "type": "string",
          "enum": [
            "N",
            "K",
            "R",
            "M",
            "D"
          ]
        },
        "pid_type": {
          "description": "The type of the persistent identifier.",
          "type": "string"
        },
        "obj_type": {
          "description": "The type of the associated object.",
          "type": "string"
        }
      }
    },

    "external-pid": {
      "type": "object",
      "description": "An external persistent identifier object.",
      "additionalProperties": false,
      "required": ["identifier", "provider"],
      "properties": {
        "identifier": {"$ref": "#/definitions/identifier"},
        "provider": {
          "description": "The provider of the persistent identifier.",
          "type": "string"
        },
        "client": {
          "description": "Client identifier for the specific PID.",
          "type": "string"
        }
      }
    },

    "resource_type": {
      "type": "object",
      "additionalProperties": false,
      "description": "A resource type.",
      "properties": {
        "type": {
          "description": "The general resource type identifier.",
          "type": "string"
        },
        "subtype": {
          "description": "The specific resource type identifier.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },

    "person_or_org": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "name": {"type": "string"},
        "type": {"$ref": "#/definitions/nameType"},
        "given_name": {"type": "string"},
        "family_name": {"type": "string"},
        "identifiers": {
          "type": "array",
          "items": {"$ref": "#/definitions/identifiers_with_scheme"},
          "uniqueItems": true
        }
      }
    },

    "affiliations": {
      "type": "array",
      "uniqueItems": true,
      "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {"type": "string"},
            "identifiers": {
              "type": "array",
              "items": {"$ref": "#/definitions/identifiers_with_scheme"},
              "uniqueItems": true
            }
          },
          "required": ["name"]
      }
    },

    "file": {
      "type": "object",
      "additionalProperties": false,
      "description": "A file object.",
      "properties": {
        "version_id": {
          "description": "Object version ID.",
          "type": "string"
        },
        "bucket_id": {
          "description": "Object verison bucket ID.",
          "type": "string"
        },
        "mimetype": {
          "description": "File MIMEType.",
          "type": "string"
        },
        "uri": {
          "description": "File URI.",
          "type": "string"
        },
        "storage_class": {
          "description": "File storage class.",
          "type": "string"
        },
        "checksum": {
          "description": "Checksum of the file.",
          "type": "string"
        },
        "size": {
          "description": "Size of the file in bytes.",
          "type": "number"
        },
        "key": {
          "description": "Key (filename) of the file.",
          "type": "string"
        },
        "file_id": {"$ref": "#/definitions/identifier"}
      }
    },

    "user": {
      "type": "object",
      "description": "A user, referenced by their ID",
      "additionalProperties": false,
      "properties": {
        "user": {
          "type": "integer"
        }
      }
    },

    "agent": {
      "description": "An agent (user, software process, community, ...).",
      "oneOf": [
        {"$ref": "#/definitions/user"}
      ]
    },

    "GeoJSON-Geometry": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$id": "https://geojson.org/schema/Geometry.json",
      "title": "GeoJSON Geometry",
      "oneOf": [
        {
          "title": "GeoJSON Point",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Point"
              ]
            },
            "coordinates": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON LineString",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LineString"
              ]
            },
            "coordinates": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON Polygon",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Polygon"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 4,
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON MultiPoint",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MultiPoint"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "number"
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON MultiLineString",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MultiLineString"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "title": "GeoJSON MultiPolygon",
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MultiPolygon"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "array",
                  "minItems": 4,
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "bbox": {
              "type": "array",
              "minItems": 4,
              "items": {
                "type": "number"
              }
            }
          }
        }
      ]
    }
  },

  "properties": {
    "$schema": {
      "description": "JSONSchema declaration.",
      "type": "string"
    },
    "id": {
      "description": "Persistent record identifier (alphanumeric).",
      "type": "string"
    },
    "pid": {"$ref": "#/definitions/internal-pid"},

    "pids": {
      "additionalProperties": {"$ref": "#/definitions/external-pid"},
      "description": "Managed persistent identifiers for a record including e.g. OAI-PMH identifier, minted DOIs and more. Managed PIDs are registered in the PIDStore"
    },

    "metadata": {
      "type": "object",
      "description": "Resource metadata.",
      "additionalProperties": false,
      "properties": {

        "resource_type": {"$ref": "#/definitions/resource_type"},

        "creators": {
          "description": "Creators of the resource.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["person_or_org"],
            "properties": {
                "person_or_org": {"$ref": "#/definitions/person_or_org"},
                "role": {"type": "string"},
                "affiliations": {"$ref": "#/definitions/affiliations"}
            }
          }
        },

        "title": {
          "description": "Primary title of the record.",
          "type": "string"
        },

        "additional_titles": {
          "description": "Additional record titles.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "title": {
                  "description": "Additional title of the record.",
                  "type": "string"
                },
                "type": {"$ref": "#/definitions/titleType"},
                "lang": {"ref": "#/definitions/language"}
            }
          }
        },

        "publisher": {
          "type": "string"
        },

        "publication_date": {
          "description": "Record publication date (EDTF level 0 format).",
          "type": "string"
        },

        "subjects": {
          "type": "array",
          "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                  "subject": {"type": "string"},
                  "identifier": {"$ref": "#/definitions/identifier"},
                  "scheme": {"$ref": "#/definitions/scheme"}
              },
              "required": ["subject"]
          }
        },

        "contributors": {
          "description": "Contributors in order of importance.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["person_or_org", "role"],
            "properties": {
              "person_or_org": {"$ref": "#/definitions/person_or_org"},
              "role": {"$ref": "#/definitions/contributorType"},
              "affiliations": {"$ref": "#/definitions/affiliations"}
            }
          }
        },

        "dates": {
          "description": "Date or date interval.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "date": {
                "description": "Date or date interval in EDTF level 0 format",
                "type": "string"
              },
              "type": {"$ref": "#/definitions/dateType"},
              "description": {
                "description": "Description of the date or date interval e.g. 'Accepted' or 'Available' (CV).",
                "type": "string"
              }
            }
          }
        },

        "languages": {
          "description": "The primary languages of the resource. ISO 639-3 language code.",
          "type": "array",
          "items": {"$ref": "#/definitions/language"}
        },

        "identifiers": {
          "description": "Alternate identifiers for the record.",
          "type": "array",
          "items": {"$ref": "#/definitions/identifiers_with_scheme"},
          "uniqueItems": true
        },

        "related_identifiers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "identifier": {"$ref": "#/definitions/identifier"},
                "scheme": {"$ref": "#/definitions/scheme"},
                "relation_type": {"$ref": "#/definitions/relationType"},
                "resource_type": {"$ref": "#/definitions/resource_type"}
              }
          }
        },

        "sizes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },

        "formats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },

        "version": {
          "description": "Record version tag.",
          "type": "string"
        },

        "rights": {
          "description": "Any license or copyright information for this resource.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {"$ref": "#/definitions/identifier"},
              "title": {
                "description": "The license name or license itself. Free text.",
                "type": "string"
              },
              "description": {
                "description": "The license description Free text.",
                "type": "string"
              },
              "link": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        },

        "description": {
          "description": "Description for record (may contain HTML).",
          "type": "string"
        },

        "additional_descriptions": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "description": {
                  "description": "Description for record.",
                  "type": "string"
                },
                "type": {"$ref": "#/definitions/descriptionType"},
                "lang": {"ref": "#/definitions/language"}
            }
          }
        },

        "locations": {
          "description": "Geographical locations relevant to this record.",
          "$comment": "This part of the schema is modelled on GeoJSON, but without the scope to embed arbitrary metadata.\n\nWe nest `features` within `locations` to give scope later to say something about the locations as a whole.",
          "type": "object",
          "additionalProperties": false,
          "required": ["features"],
          "properties": {
            "features": {
              "type": "array",
              "minItems": 1,
              "items": {
                "allOf": [{
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "geometry": {
                    "allOf": [{
                      "$ref": "#/definitions/GeoJSON-Geometry"
                    }, {
                      "$comment": "Bounding boxes (`bbox`) are forbidden on our geometries, even though they're allowed on GeoJSON geometries",
                      "properties": {
                        "type": {},
                        "coordinates": {}
                      },
                      "additionalProperties": false
                    }]
                  },
                  "identifiers": {
                    "type": "array",
                    "items": {"$ref": "#/definitions/identifiers_with_scheme"},
                    "uniqueItems": true
                  },
                  "place": {
                    "description": "Place of the location",
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "description": "Description of the location",
                    "type": "string",
                    "minLength": 1
                  }
                }
                }, {
                  "anyOf": [
                    {"required": ["geometry"]},
                    {"required": ["identifiers"]},
                    {"required": ["place"]},
                    {"required": ["description"]}
                  ]
                }]
              }
            }
          }
        },
        "funding": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "funder": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {"type": "string"},
                  "identifier": {"$ref": "#/definitions/identifier"},
                  "scheme": {"$ref": "#/definitions/scheme"}
                }
              },
              "award": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "title": {"type": "string"},
                  "number": {"type": "string"},
                  "identifier": {"$ref": "#/definitions/identifier"},
                  "scheme": {"$ref": "#/definitions/scheme"}
                }
              }
            }
          }
        },

        "references": {
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "reference": {
                "type": "string",
                "description": "A reference string."
              },
              "identifier": {"$ref": "#/definitions/identifier"},
              "scheme": {"$ref": "#/definitions/scheme"}
            }
          }
        }
      }
    },

    "ext": {
      "type": "object",
      "description": "Configured additional metadata"
    },

    "tombstone": {
      "type": "object",
      "description": "Tombstone for the record.",
      "additionalProperties": false,
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason for removal."
        },
        "category": {
          "type": "string",
          "description": "Category for the removal."
        },
        "removed_by": {"$ref": "#/definitions/agent"},
        "timestamp": {
          "type": "string",
          "description": "ISO8601 formatted timestamp in UTC.",
          "format": "date-time"
        }
      }
    },

    "provenance": {
      "type": "object",
      "description": "Record provenance.",
      "additionalProperties": false,
      "properties": {
        "created_by": {"$ref": "#/definitions/agent"},
        "on_behalf_of": {"$ref": "#/definitions/agent"}
      }
    },

    "access": {
      "type": "object",
      "description": "Record access control and ownership.",
      "additionalProperties": false,
      "properties": {

        "record": {
          "description": "Record visibility (public or restricted)",
          "type": "string",
          "enum": ["public", "restricted"]
        },

        "files": {
          "description": "Files visibility (public or restricted)",
          "type": "string",
          "enum": ["public", "restricted"]
        },

        "embargo": {
          "description": "Description of the embargo on the record.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "active": {
              "description": "Whether or not the embargo is (still) active.",
              "type": ["boolean", "null"]
            },
            "until": {
              "description": "Embargo date of record (ISO8601 formatted date time in UTC). At this time both metadata and files will be made public.",
              "type": ["string", "null"],
              "format": "date"
            },
            "reason": {
              "description": "The reason why the record is under embargo.",
              "type": ["string", "null"]
            }
          }
        }
      }
    },

    "files": {
      "type": "object",
      "description": "Files associated with the record",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to false for metadata only records."
        },
        "default_preview": {
          "type": "string",
          "description": "Key of the default previewed file."
        },
        "order": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entries": {
          "type": "object",
          "additionalProperties": {"$ref": "#/definitions/file"}
        },
        "meta": {
          "type": "object",
          "additionalProperties": {"type": "object"}
        }
      }
    },

    "notes": {
      "type": "array",
      "items":{
          "type": "string"
      }
    }
  }
}
