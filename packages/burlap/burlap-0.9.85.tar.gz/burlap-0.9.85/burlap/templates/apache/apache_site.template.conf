<VirtualHost *:{% if apache_ssl %}{{ apache_ssl_port }}{% else %}80{% endif %}>
    ServerName {{ apache_server_name }}
    {% if apache_server_aliases %}ServerAlias {{ apache_server_aliases }}{% endif %}
    {% if apache_server_admin_email %}ServerAdmin {{ apache_server_admin_email }}{% endif %}
    DocumentRoot {{ apache_docroot }}
    
    AllowEncodedSlashes On
    
    Alias /media/ {{ apache_docroot }}/media{{ s3_media_postfix }}/
    Alias /static/ {{ apache_docroot }}/static/
    
    {% if apache_ssl %}
        SSLEngine On{% for cert_type, _, cert_file in apache_ssl_certificates %}
        {{ cert_type }} {{ cert_file }}{% endfor %}
        SSLProtocol all
        SSLCipherSuite HIGH:MEDIUM
        SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
    {% endif %}
    
    <Directory {{ apache_docroot }}>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride None
        Order allow,deny
        Allow from all
        
        # Required in Apache >=2.4.3.
        Require all granted
        
    </Directory>
    
    {% if apache_auth_basic %}
    <Location />
        Deny from all
        AuthUserFile {{ apache_auth_basic_authuserfile }}
        AuthName authorization
        AuthType Basic
        Satisfy Any
        require valid-user
    </Location>
    {% endif %}
    
    <Directory />
        Options FollowSymLinks
        AllowOverride None
    </Directory>
    
    <Location /server-status>
        SetHandler server-status
        Order Deny,Allow
        Deny from all
        Allow from 127.0.0.1
    </Location>
    
    LogLevel {{ apache_log_level }}
    ErrorLog ${APACHE_LOG_DIR}/{{ apache_application_name }}-error.log
    CustomLog ${APACHE_LOG_DIR}/{{ apache_application_name }}-access.log combined
    
    RewriteEngine On
    #LogLevel warn rewrite:trace3
    #LogLevel warn
    #RewriteLog ${APACHE_LOG_DIR}/{{ apache_application_name }}-rewrite.log
    #RewriteLogLevel 0

    RewriteCond %{DOCUMENT_ROOT}/maintenance.html -f
    RewriteCond %{SCRIPT_FILENAME} !maintenance.html
    RewriteRule ^.*$ /maintenance.html [L]
    
    {% if apache_enforce_subdomain and apache_domain_with_sub and apache_domain_without_sub %}
        # Redirect domain.com to www.domain.com.
        RewriteCond %{HTTP_HOST} ^{{ apache_domain_without_sub }}(.*)$ [NC]
        RewriteCond %{HTTPS}s ^on(s)|
        RewriteRule ^(.*)$ http%1://{{ apache_domain_with_sub }}$1 [R=301,L]
    {% endif %}
    
    {% for secure_path in apache_ssl_secure_paths %}
        RewriteCond %{HTTP:X-Forwarded-Proto} !https
        RewriteCond %{HTTPS} off
        RewriteRule {{ secure_path }} https://%{SERVER_NAME}%{REQUEST_URI} [L,R=301]
    {% endfor %}
    
    {# Redirect the wrong domain to the right domain.#}
    {#RewriteCond %{HTTP_HOST} !={{ apache_domain_with_sub }} [NC]#}
    {#RewriteRule ^(.*)$ http://{{ apache_domain_with_sub }}%{REQUEST_URI} [L,R=301]#}
    
    {% for wrong_domain, right_domain in apache_domain_redirects %}
        RewriteCond %{HTTP_HOST} {{ wrong_domain }} [NC]
        RewriteRule ^(.*)$ http://{{ right_domain }}/$1 [R=permanent,L]
    {% endfor %}
    
    {{ apache_extra_rewrite_rules|safe }}

    # Stop GIL deadlocks from crashing Python/Modwsgi due to Python C-extensions?
    # Without this, you may get a "Premature end of script" error.
    # https://code.google.com/p/modwsgi/wiki/ApplicationIssues#Python_Simplified_GIL_State_API
    WSGIApplicationGroup %{GLOBAL}
    
    WSGIDaemonProcess {{ apache_server_name }}{% if apache_ssl %}-secure{% endif %} python-path={{ apache_wsgi_python_path }} processes={{ apache_wsgi_processes }} {% if apache_wsgi_threads %}threads={{ apache_wsgi_threads }}{% endif %} display-name=%{GROUP} user={{ apache_wsgi_user }} group={{ apache_wsgi_group }}
    WSGIProcessGroup {{ apache_server_name }}{% if apache_ssl %}-secure{% endif %}
    WSGIScriptAlias / {{ apache_django_wsgi }}

    <Directory {{ apache_wsgi_dir }}>
        Order allow,deny
        Allow from all
    </Directory>
    
</VirtualHost>
