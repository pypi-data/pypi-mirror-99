# ./binding.py
# -*- coding: utf-8 -*-
# PyXB bindings for NM:442a1f87df33708349cf81bf3be1cf6b91abb565
# Generated 2020-03-31 17:43:21.314201 by PyXB version 1.2.6 using Python 3.8.2.final.0
# Namespace http://www.stibosystems.com/step

from __future__ import unicode_literals
import pyxb
import pyxb.binding
import pyxb.binding.saxer
import io
import pyxb.utils.utility
import pyxb.utils.domutils
import sys
import pyxb.utils.six as _six
# Unique identifier for bindings created at the same time
_GenerationUID = pyxb.utils.utility.UniqueIdentifier('urn:uuid:e90af89e-731a-11ea-a754-80e65012546e')

# Version of PyXB used to generate the bindings
_PyXBVersion = '1.2.6'
# Generated bindings are not compatible across PyXB versions
if pyxb.__version__ != _PyXBVersion:
    raise pyxb.PyXBVersionError(_PyXBVersion)

# A holder for module-level binding classes so we can access them from
# inside class definitions where property names may conflict.
_module_typeBindings = pyxb.utils.utility.Object()

# Import bindings for namespaces imported into schema
import pyxb.binding.datatypes

# NOTE: All namespace declarations are reserved within the binding
Namespace = pyxb.namespace.NamespaceForURI('http://www.stibosystems.com/step', create_if_missing=True)
Namespace.configureCategories(['typeBinding', 'elementBinding'])

def CreateFromDocument (xml_text, default_namespace=None, location_base=None):
    """Parse the given XML and use the document element to create a
    Python instance.

    @param xml_text An XML document.  This should be data (Python 2
    str or Python 3 bytes), or a text (Python 2 unicode or Python 3
    str) in the L{pyxb._InputEncoding} encoding.

    @keyword default_namespace The L{pyxb.Namespace} instance to use as the
    default namespace where there is no default namespace in scope.
    If unspecified or C{None}, the namespace of the module containing
    this function will be used.

    @keyword location_base: An object to be recorded as the base of all
    L{pyxb.utils.utility.Location} instances associated with events and
    objects handled by the parser.  You might pass the URI from which
    the document was obtained.
    """

    if pyxb.XMLStyle_saxer != pyxb._XMLStyle:
        dom = pyxb.utils.domutils.StringToDOM(xml_text)
        return CreateFromDOM(dom.documentElement, default_namespace=default_namespace)
    if default_namespace is None:
        default_namespace = Namespace.fallbackNamespace()
    saxer = pyxb.binding.saxer.make_parser(fallback_namespace=default_namespace, location_base=location_base)
    handler = saxer.getContentHandler()
    xmld = xml_text
    if isinstance(xmld, _six.text_type):
        xmld = xmld.encode(pyxb._InputEncoding)
    saxer.parse(io.BytesIO(xmld))
    instance = handler.rootObject()
    return instance

def CreateFromDOM (node, default_namespace=None):
    """Create a Python instance from the given DOM node.
    The node tag must correspond to an element declaration in this module.

    @deprecated: Forcing use of DOM interface is unnecessary; use L{CreateFromDocument}."""
    if default_namespace is None:
        default_namespace = Namespace.fallbackNamespace()
    return pyxb.binding.basis.element.AnyCreateFromDOM(node, default_namespace)


# Atomic simple type: [anonymous]
class STD_ANON (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 145, 16)
    _Documentation = None
STD_ANON._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON, enum_prefix=None)
STD_ANON.CLEAR_ENTIRE_TERMSLISTS = STD_ANON._CF_enumeration.addEnumeration(unicode_value='CLEAR_ENTIRE_TERMSLISTS', tag='CLEAR_ENTIRE_TERMSLISTS')
STD_ANON.CLEAR_ONLY_FOR_IMPORTED_PRODUCTS = STD_ANON._CF_enumeration.addEnumeration(unicode_value='CLEAR_ONLY_FOR_IMPORTED_PRODUCTS', tag='CLEAR_ONLY_FOR_IMPORTED_PRODUCTS')
STD_ANON._InitializeFacetMap(STD_ANON._CF_enumeration)
_module_typeBindings.STD_ANON = STD_ANON

# Atomic simple type: {http://www.stibosystems.com/step}StepID
class StepID (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 242, 4)
    _Documentation = None
StepID._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(40))
StepID._InitializeFacetMap(StepID._CF_maxLength)
Namespace.addCategoryObject('typeBinding', 'StepID', StepID)
_module_typeBindings.StepID = StepID

# Atomic simple type: {http://www.stibosystems.com/step}YesNoType
class YesNoType (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'YesNoType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 275, 4)
    _Documentation = None
YesNoType._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=YesNoType, enum_prefix=None)
YesNoType.Y = YesNoType._CF_enumeration.addEnumeration(unicode_value='Y', tag='Y')
YesNoType.N = YesNoType._CF_enumeration.addEnumeration(unicode_value='N', tag='N')
YesNoType._InitializeFacetMap(YesNoType._CF_enumeration)
Namespace.addCategoryObject('typeBinding', 'YesNoType', YesNoType)
_module_typeBindings.YesNoType = YesNoType

# Atomic simple type: {http://www.stibosystems.com/step}TrueFalseType
class TrueFalseType (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TrueFalseType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 282, 4)
    _Documentation = None
TrueFalseType._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=TrueFalseType, enum_prefix=None)
TrueFalseType.true = TrueFalseType._CF_enumeration.addEnumeration(unicode_value='true', tag='true')
TrueFalseType.false = TrueFalseType._CF_enumeration.addEnumeration(unicode_value='false', tag='false')
TrueFalseType._InitializeFacetMap(TrueFalseType._CF_enumeration)
Namespace.addCategoryObject('typeBinding', 'TrueFalseType', TrueFalseType)
_module_typeBindings.TrueFalseType = TrueFalseType

# Atomic simple type: {http://www.stibosystems.com/step}ReferenceTargetLockPolicyType
class ReferenceTargetLockPolicyType (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReferenceTargetLockPolicyType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 289, 4)
    _Documentation = None
ReferenceTargetLockPolicyType._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=ReferenceTargetLockPolicyType, enum_prefix=None)
ReferenceTargetLockPolicyType.Strict = ReferenceTargetLockPolicyType._CF_enumeration.addEnumeration(unicode_value='Strict', tag='Strict')
ReferenceTargetLockPolicyType.Relaxed = ReferenceTargetLockPolicyType._CF_enumeration.addEnumeration(unicode_value='Relaxed', tag='Relaxed')
ReferenceTargetLockPolicyType._InitializeFacetMap(ReferenceTargetLockPolicyType._CF_enumeration)
Namespace.addCategoryObject('typeBinding', 'ReferenceTargetLockPolicyType', ReferenceTargetLockPolicyType)
_module_typeBindings.ReferenceTargetLockPolicyType = ReferenceTargetLockPolicyType

# Atomic simple type: {http://www.stibosystems.com/step}EntityRevisabilityType
class EntityRevisabilityType (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntityRevisabilityType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 296, 4)
    _Documentation = None
EntityRevisabilityType._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=EntityRevisabilityType, enum_prefix=None)
EntityRevisabilityType.Global = EntityRevisabilityType._CF_enumeration.addEnumeration(unicode_value='Global', tag='Global')
EntityRevisabilityType.Workspace = EntityRevisabilityType._CF_enumeration.addEnumeration(unicode_value='Workspace', tag='Workspace')
EntityRevisabilityType._InitializeFacetMap(EntityRevisabilityType._CF_enumeration)
Namespace.addCategoryObject('typeBinding', 'EntityRevisabilityType', EntityRevisabilityType)
_module_typeBindings.EntityRevisabilityType = EntityRevisabilityType

# Atomic simple type: {http://www.stibosystems.com/step}ParentChildRelationType
class ParentChildRelationType (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ParentChildRelationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 318, 4)
    _Documentation = None
ParentChildRelationType._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=ParentChildRelationType, enum_prefix=None)
ParentChildRelationType.NONE = ParentChildRelationType._CF_enumeration.addEnumeration(unicode_value='NONE', tag='NONE')
ParentChildRelationType.TARGETASCHILD = ParentChildRelationType._CF_enumeration.addEnumeration(unicode_value='TARGETASCHILD', tag='TARGETASCHILD')
ParentChildRelationType.SOURCEASCHILD = ParentChildRelationType._CF_enumeration.addEnumeration(unicode_value='SOURCEASCHILD', tag='SOURCEASCHILD')
ParentChildRelationType._InitializeFacetMap(ParentChildRelationType._CF_enumeration)
Namespace.addCategoryObject('typeBinding', 'ParentChildRelationType', ParentChildRelationType)
_module_typeBindings.ParentChildRelationType = ParentChildRelationType

# Atomic simple type: [anonymous]
class STD_ANON_ (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 346, 12)
    _Documentation = None
STD_ANON_._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_, enum_prefix=None)
STD_ANON_.setup = STD_ANON_._CF_enumeration.addEnumeration(unicode_value='setup', tag='setup')
STD_ANON_.user = STD_ANON_._CF_enumeration.addEnumeration(unicode_value='user', tag='user')
STD_ANON_._InitializeFacetMap(STD_ANON_._CF_enumeration)
_module_typeBindings.STD_ANON_ = STD_ANON_

# Atomic simple type: {http://www.stibosystems.com/step}SelectedType
class SelectedType (pyxb.binding.datatypes.boolean):

    """
                When exporting from STEP, this flag indicates if this object was explicitly or implicitly part of the selected export set (ie. selected or children).
                Notice the default value true, which must be respected when Selected is not present in the file
            """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SelectedType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 633, 4)
    _Documentation = '\n                When exporting from STEP, this flag indicates if this object was explicitly or implicitly part of the selected export set (ie. selected or children).\n                Notice the default value true, which must be respected when Selected is not present in the file\n            '
SelectedType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'SelectedType', SelectedType)
_module_typeBindings.SelectedType = SelectedType

# Atomic simple type: [anonymous]
class STD_ANON_2 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 896, 12)
    _Documentation = None
STD_ANON_2._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_2, enum_prefix=None)
STD_ANON_2.Normal = STD_ANON_2._CF_enumeration.addEnumeration(unicode_value='Normal', tag='Normal')
STD_ANON_2.Property = STD_ANON_2._CF_enumeration.addEnumeration(unicode_value='Property', tag='Property')
STD_ANON_2.ClassValidated = STD_ANON_2._CF_enumeration.addEnumeration(unicode_value='ClassValidated', tag='ClassValidated')
STD_ANON_2._InitializeFacetMap(STD_ANON_2._CF_enumeration)
_module_typeBindings.STD_ANON_2 = STD_ANON_2

# Atomic simple type: [anonymous]
class STD_ANON_3 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1389, 12)
    _Documentation = None
STD_ANON_3._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_3, enum_prefix=None)
STD_ANON_3.n1 = STD_ANON_3._CF_enumeration.addEnumeration(unicode_value='1', tag='n1')
STD_ANON_3._InitializeFacetMap(STD_ANON_3._CF_enumeration)
_module_typeBindings.STD_ANON_3 = STD_ANON_3

# Atomic simple type: {http://www.stibosystems.com/step}ConfigurationType
class ConfigurationType (pyxb.binding.datatypes.base64Binary):

    """
                A configuration is not human readable, as it has been zipped and encoded in BASE64. The content
                of the configuration is a contract between the exporter and the importer, and must not be altered
                in between.
            """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1865, 4)
    _Documentation = '\n                A configuration is not human readable, as it has been zipped and encoded in BASE64. The content\n                of the configuration is a contract between the exporter and the importer, and must not be altered\n                in between.\n            '
ConfigurationType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'ConfigurationType', ConfigurationType)
_module_typeBindings.ConfigurationType = ConfigurationType

# Atomic simple type: {http://www.stibosystems.com/step}NonEmptyStringType
class NonEmptyStringType (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'NonEmptyStringType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1953, 4)
    _Documentation = None
NonEmptyStringType._CF_pattern = pyxb.binding.facets.CF_pattern()
NonEmptyStringType._CF_pattern.addPattern(pattern='.+')
NonEmptyStringType._InitializeFacetMap(NonEmptyStringType._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'NonEmptyStringType', NonEmptyStringType)
_module_typeBindings.NonEmptyStringType = NonEmptyStringType

# Atomic simple type: [anonymous]
class STD_ANON_4 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2055, 12)
    _Documentation = None
STD_ANON_4._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_4, enum_prefix=None)
STD_ANON_4.n1 = STD_ANON_4._CF_enumeration.addEnumeration(unicode_value='1', tag='n1')
STD_ANON_4._InitializeFacetMap(STD_ANON_4._CF_enumeration)
_module_typeBindings.STD_ANON_4 = STD_ANON_4

# Atomic simple type: [anonymous]
class STD_ANON_5 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2328, 12)
    _Documentation = None
STD_ANON_5._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_5, enum_prefix=None)
STD_ANON_5.C = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='C', tag='C')
STD_ANON_5.CA = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='CA', tag='CA')
STD_ANON_5.CP = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='CP', tag='CP')
STD_ANON_5.CCR = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='CCR', tag='CCR')
STD_ANON_5.P = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='P', tag='P')
STD_ANON_5.PPR = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='PPR', tag='PPR')
STD_ANON_5.PCR = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='PCR', tag='PCR')
STD_ANON_5.PA = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='PA', tag='PA')
STD_ANON_5.ACR = STD_ANON_5._CF_enumeration.addEnumeration(unicode_value='ACR', tag='ACR')
STD_ANON_5._InitializeFacetMap(STD_ANON_5._CF_enumeration)
_module_typeBindings.STD_ANON_5 = STD_ANON_5

# Atomic simple type: [anonymous]
class STD_ANON_6 (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2356, 16)
    _Documentation = None
STD_ANON_6._InitializeFacetMap()
_module_typeBindings.STD_ANON_6 = STD_ANON_6

# Atomic simple type: [anonymous]
class STD_ANON_7 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2374, 12)
    _Documentation = None
STD_ANON_7._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_7, enum_prefix=None)
STD_ANON_7.Read = STD_ANON_7._CF_enumeration.addEnumeration(unicode_value='Read', tag='Read')
STD_ANON_7.Discard = STD_ANON_7._CF_enumeration.addEnumeration(unicode_value='Discard', tag='Discard')
STD_ANON_7._InitializeFacetMap(STD_ANON_7._CF_enumeration)
_module_typeBindings.STD_ANON_7 = STD_ANON_7

# Atomic simple type: {http://www.stibosystems.com/step}GUISetupAdvancedType
class GUISetupAdvancedType (pyxb.binding.datatypes.string):

    """
                Puts the GUI menu item in the advanced sub menu.
            """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GUISetupAdvancedType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2439, 4)
    _Documentation = '\n                Puts the GUI menu item in the advanced sub menu.\n            '
GUISetupAdvancedType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'GUISetupAdvancedType', GUISetupAdvancedType)
_module_typeBindings.GUISetupAdvancedType = GUISetupAdvancedType

# Atomic simple type: {http://www.stibosystems.com/step}GUISetupDisabledType
class GUISetupDisabledType (pyxb.binding.datatypes.string):

    """
                Disables a menu item.
            """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GUISetupDisabledType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2448, 4)
    _Documentation = '\n                Disables a menu item.\n            '
GUISetupDisabledType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'GUISetupDisabledType', GUISetupDisabledType)
_module_typeBindings.GUISetupDisabledType = GUISetupDisabledType

# Atomic simple type: {http://www.stibosystems.com/step}GUISetupEnabledType
class GUISetupEnabledType (pyxb.binding.datatypes.string):

    """
                Enables a menu item.
            """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GUISetupEnabledType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2457, 4)
    _Documentation = '\n                Enables a menu item.\n            '
GUISetupEnabledType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'GUISetupEnabledType', GUISetupEnabledType)
_module_typeBindings.GUISetupEnabledType = GUISetupEnabledType

# Atomic simple type: {http://www.stibosystems.com/step}GUITopType
class GUITopType (pyxb.binding.datatypes.string):

    """
                A step URL, restricting the user to a top tree node in the Tree editor.
            """

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GUITopType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2466, 4)
    _Documentation = '\n                A step URL, restricting the user to a top tree node in the Tree editor.\n            '
GUITopType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'GUITopType', GUITopType)
_module_typeBindings.GUITopType = GUITopType

# Atomic simple type: [anonymous]
class STD_ANON_8 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2529, 12)
    _Documentation = None
STD_ANON_8._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_8, enum_prefix=None)
STD_ANON_8.Inactive = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='Inactive', tag='Inactive')
STD_ANON_8.PreChecking = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='PreChecking', tag='PreChecking')
STD_ANON_8.Checking = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='Checking', tag='Checking')
STD_ANON_8.PreActivating = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='PreActivating', tag='PreActivating')
STD_ANON_8.Activating = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='Activating', tag='Activating')
STD_ANON_8.Active = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='Active', tag='Active')
STD_ANON_8.PreDeactivating = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='PreDeactivating', tag='PreDeactivating')
STD_ANON_8.Deactivating = STD_ANON_8._CF_enumeration.addEnumeration(unicode_value='Deactivating', tag='Deactivating')
STD_ANON_8._InitializeFacetMap(STD_ANON_8._CF_enumeration)
_module_typeBindings.STD_ANON_8 = STD_ANON_8

# Atomic simple type: [anonymous]
class STD_ANON_9 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2570, 12)
    _Documentation = None
STD_ANON_9._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_9, enum_prefix=None)
STD_ANON_9.CA = STD_ANON_9._CF_enumeration.addEnumeration(unicode_value='CA', tag='CA')
STD_ANON_9.PA = STD_ANON_9._CF_enumeration.addEnumeration(unicode_value='PA', tag='PA')
STD_ANON_9.CP = STD_ANON_9._CF_enumeration.addEnumeration(unicode_value='CP', tag='CP')
STD_ANON_9.C1A = STD_ANON_9._CF_enumeration.addEnumeration(unicode_value='C1A', tag='C1A')
STD_ANON_9.C1P = STD_ANON_9._CF_enumeration.addEnumeration(unicode_value='C1P', tag='C1P')
STD_ANON_9._InitializeFacetMap(STD_ANON_9._CF_enumeration)
_module_typeBindings.STD_ANON_9 = STD_ANON_9

# Atomic simple type: {http://www.stibosystems.com/step}TwoDecimalValueType
class TwoDecimalValueType (pyxb.binding.datatypes.decimal):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TwoDecimalValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2942, 4)
    _Documentation = None
TwoDecimalValueType._CF_fractionDigits = pyxb.binding.facets.CF_fractionDigits(value=pyxb.binding.datatypes.nonNegativeInteger(2))
TwoDecimalValueType._InitializeFacetMap(TwoDecimalValueType._CF_fractionDigits)
Namespace.addCategoryObject('typeBinding', 'TwoDecimalValueType', TwoDecimalValueType)
_module_typeBindings.TwoDecimalValueType = TwoDecimalValueType

# Atomic simple type: [anonymous]
class STD_ANON_10 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3575, 12)
    _Documentation = None
STD_ANON_10._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_10, enum_prefix=None)
STD_ANON_10.InDesign = STD_ANON_10._CF_enumeration.addEnumeration(unicode_value='InDesign', tag='InDesign')
STD_ANON_10.Quark = STD_ANON_10._CF_enumeration.addEnumeration(unicode_value='Quark', tag='Quark')
STD_ANON_10._InitializeFacetMap(STD_ANON_10._CF_enumeration)
_module_typeBindings.STD_ANON_10 = STD_ANON_10

# Atomic simple type: {http://www.stibosystems.com/step}RuleBasedLayoutType
class RuleBasedLayoutType (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayoutType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4196, 4)
    _Documentation = None
RuleBasedLayoutType._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'RuleBasedLayoutType', RuleBasedLayoutType)
_module_typeBindings.RuleBasedLayoutType = RuleBasedLayoutType

# Atomic simple type: {http://www.stibosystems.com/step}TagID
class TagID (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TagID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5018, 4)
    _Documentation = None
TagID._CF_maxLength = pyxb.binding.facets.CF_maxLength(value=pyxb.binding.datatypes.nonNegativeInteger(2000))
TagID._InitializeFacetMap(TagID._CF_maxLength)
Namespace.addCategoryObject('typeBinding', 'TagID', TagID)
_module_typeBindings.TagID = TagID

# Atomic simple type: [anonymous]
class STD_ANON_11 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5394, 12)
    _Documentation = None
STD_ANON_11._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_11, enum_prefix=None)
STD_ANON_11.Local = STD_ANON_11._CF_enumeration.addEnumeration(unicode_value='Local', tag='Local')
STD_ANON_11.Global = STD_ANON_11._CF_enumeration.addEnumeration(unicode_value='Global', tag='Global')
STD_ANON_11._InitializeFacetMap(STD_ANON_11._CF_enumeration)
_module_typeBindings.STD_ANON_11 = STD_ANON_11

# Atomic simple type: [anonymous]
class STD_ANON_12 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5414, 12)
    _Documentation = None
STD_ANON_12._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_12, enum_prefix=None)
STD_ANON_12.Condition = STD_ANON_12._CF_enumeration.addEnumeration(unicode_value='Condition', tag='Condition')
STD_ANON_12.Action = STD_ANON_12._CF_enumeration.addEnumeration(unicode_value='Action', tag='Action')
STD_ANON_12.Library = STD_ANON_12._CF_enumeration.addEnumeration(unicode_value='Library', tag='Library')
STD_ANON_12.Function = STD_ANON_12._CF_enumeration.addEnumeration(unicode_value='Function', tag='Function')
STD_ANON_12._InitializeFacetMap(STD_ANON_12._CF_enumeration)
_module_typeBindings.STD_ANON_12 = STD_ANON_12

# Atomic simple type: [anonymous]
class STD_ANON_13 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5488, 12)
    _Documentation = None
STD_ANON_13._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_13, enum_prefix=None)
STD_ANON_13.Local = STD_ANON_13._CF_enumeration.addEnumeration(unicode_value='Local', tag='Local')
STD_ANON_13.Global = STD_ANON_13._CF_enumeration.addEnumeration(unicode_value='Global', tag='Global')
STD_ANON_13._InitializeFacetMap(STD_ANON_13._CF_enumeration)
_module_typeBindings.STD_ANON_13 = STD_ANON_13

# Atomic simple type: [anonymous]
class STD_ANON_14 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5501, 12)
    _Documentation = None
STD_ANON_14._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_14, enum_prefix=None)
STD_ANON_14.Condition = STD_ANON_14._CF_enumeration.addEnumeration(unicode_value='Condition', tag='Condition')
STD_ANON_14.Action = STD_ANON_14._CF_enumeration.addEnumeration(unicode_value='Action', tag='Action')
STD_ANON_14._InitializeFacetMap(STD_ANON_14._CF_enumeration)
_module_typeBindings.STD_ANON_14 = STD_ANON_14

# Atomic simple type: [anonymous]
class STD_ANON_15 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5584, 12)
    _Documentation = None
STD_ANON_15._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_15, enum_prefix=None)
STD_ANON_15.Never = STD_ANON_15._CF_enumeration.addEnumeration(unicode_value='Never', tag='Never')
STD_ANON_15.Trigger = STD_ANON_15._CF_enumeration.addEnumeration(unicode_value='Trigger', tag='Trigger')
STD_ANON_15.ValidateBefore = STD_ANON_15._CF_enumeration.addEnumeration(unicode_value='ValidateBefore', tag='ValidateBefore')
STD_ANON_15.ValidateAfter = STD_ANON_15._CF_enumeration.addEnumeration(unicode_value='ValidateAfter', tag='ValidateAfter')
STD_ANON_15.ValidateBeforeAndAfter = STD_ANON_15._CF_enumeration.addEnumeration(unicode_value='ValidateBeforeAndAfter', tag='ValidateBeforeAndAfter')
STD_ANON_15._InitializeFacetMap(STD_ANON_15._CF_enumeration)
_module_typeBindings.STD_ANON_15 = STD_ANON_15

# Atomic simple type: [anonymous]
class STD_ANON_16 (pyxb.binding.datatypes.NMTOKEN, pyxb.binding.basis.enumeration_mixin):

    """An atomic simple type."""

    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6488, 12)
    _Documentation = None
STD_ANON_16._CF_enumeration = pyxb.binding.facets.CF_enumeration(value_datatype=STD_ANON_16, enum_prefix=None)
STD_ANON_16.Unit = STD_ANON_16._CF_enumeration.addEnumeration(unicode_value='Unit', tag='Unit')
STD_ANON_16.Dates = STD_ANON_16._CF_enumeration.addEnumeration(unicode_value='Dates', tag='Dates')
STD_ANON_16.Quantities = STD_ANON_16._CF_enumeration.addEnumeration(unicode_value='Quantities', tag='Quantities')
STD_ANON_16.LotSize = STD_ANON_16._CF_enumeration.addEnumeration(unicode_value='LotSize', tag='LotSize')
STD_ANON_16.LeadTime = STD_ANON_16._CF_enumeration.addEnumeration(unicode_value='LeadTime', tag='LeadTime')
STD_ANON_16._InitializeFacetMap(STD_ANON_16._CF_enumeration)
_module_typeBindings.STD_ANON_16 = STD_ANON_16

# Atomic simple type: {http://www.stibosystems.com/step}StepAttributeID
class StepAttributeID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepAttributeID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 248, 4)
    _Documentation = None
StepAttributeID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepAttributeID', StepAttributeID)
_module_typeBindings.StepAttributeID = StepAttributeID

# Atomic simple type: {http://www.stibosystems.com/step}StepUnitID
class StepUnitID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepUnitID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 249, 4)
    _Documentation = None
StepUnitID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepUnitID', StepUnitID)
_module_typeBindings.StepUnitID = StepUnitID

# Atomic simple type: {http://www.stibosystems.com/step}StepObjectTypeID
class StepObjectTypeID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepObjectTypeID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 250, 4)
    _Documentation = None
StepObjectTypeID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepObjectTypeID', StepObjectTypeID)
_module_typeBindings.StepObjectTypeID = StepObjectTypeID

# Atomic simple type: {http://www.stibosystems.com/step}StepDataContainerTypeID
class StepDataContainerTypeID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepDataContainerTypeID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 251, 4)
    _Documentation = None
StepDataContainerTypeID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepDataContainerTypeID', StepDataContainerTypeID)
_module_typeBindings.StepDataContainerTypeID = StepDataContainerTypeID

# Atomic simple type: {http://www.stibosystems.com/step}StepLOVID
class StepLOVID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepLOVID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 252, 4)
    _Documentation = None
StepLOVID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepLOVID', StepLOVID)
_module_typeBindings.StepLOVID = StepLOVID

# Atomic simple type: {http://www.stibosystems.com/step}StepQualifierID
class StepQualifierID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepQualifierID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 253, 4)
    _Documentation = None
StepQualifierID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepQualifierID', StepQualifierID)
_module_typeBindings.StepQualifierID = StepQualifierID

# Atomic simple type: {http://www.stibosystems.com/step}StepLinkTypeID
class StepLinkTypeID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepLinkTypeID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 254, 4)
    _Documentation = None
StepLinkTypeID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepLinkTypeID', StepLinkTypeID)
_module_typeBindings.StepLinkTypeID = StepLinkTypeID

# Atomic simple type: {http://www.stibosystems.com/step}StepReferenceTypeID
class StepReferenceTypeID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepReferenceTypeID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 255, 4)
    _Documentation = None
StepReferenceTypeID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepReferenceTypeID', StepReferenceTypeID)
_module_typeBindings.StepReferenceTypeID = StepReferenceTypeID

# Atomic simple type: {http://www.stibosystems.com/step}StepInboundEndPointID
class StepInboundEndPointID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepInboundEndPointID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 256, 4)
    _Documentation = None
StepInboundEndPointID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepInboundEndPointID', StepInboundEndPointID)
_module_typeBindings.StepInboundEndPointID = StepInboundEndPointID

# Atomic simple type: {http://www.stibosystems.com/step}StepOutboundEndPointID
class StepOutboundEndPointID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepOutboundEndPointID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 257, 4)
    _Documentation = None
StepOutboundEndPointID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepOutboundEndPointID', StepOutboundEndPointID)
_module_typeBindings.StepOutboundEndPointID = StepOutboundEndPointID

# Atomic simple type: {http://www.stibosystems.com/step}StepGatewayEndPointID
class StepGatewayEndPointID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepGatewayEndPointID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 258, 4)
    _Documentation = None
StepGatewayEndPointID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepGatewayEndPointID', StepGatewayEndPointID)
_module_typeBindings.StepGatewayEndPointID = StepGatewayEndPointID

# Atomic simple type: {http://www.stibosystems.com/step}StepSetupGroupID
class StepSetupGroupID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepSetupGroupID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 259, 4)
    _Documentation = None
StepSetupGroupID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepSetupGroupID', StepSetupGroupID)
_module_typeBindings.StepSetupGroupID = StepSetupGroupID

# Atomic simple type: {http://www.stibosystems.com/step}StepBusinessRuleID
class StepBusinessRuleID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepBusinessRuleID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 260, 4)
    _Documentation = None
StepBusinessRuleID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepBusinessRuleID', StepBusinessRuleID)
_module_typeBindings.StepBusinessRuleID = StepBusinessRuleID

# Atomic simple type: {http://www.stibosystems.com/step}StepWorkflowID
class StepWorkflowID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepWorkflowID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 261, 4)
    _Documentation = None
StepWorkflowID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepWorkflowID', StepWorkflowID)
_module_typeBindings.StepWorkflowID = StepWorkflowID

# Atomic simple type: {http://www.stibosystems.com/step}StepEventQueueID
class StepEventQueueID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepEventQueueID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 262, 4)
    _Documentation = None
StepEventQueueID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepEventQueueID', StepEventQueueID)
_module_typeBindings.StepEventQueueID = StepEventQueueID

# Atomic simple type: {http://www.stibosystems.com/step}StepAssetPushConfigurationID
class StepAssetPushConfigurationID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepAssetPushConfigurationID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 263, 4)
    _Documentation = None
StepAssetPushConfigurationID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepAssetPushConfigurationID', StepAssetPushConfigurationID)
_module_typeBindings.StepAssetPushConfigurationID = StepAssetPushConfigurationID

# Atomic simple type: {http://www.stibosystems.com/step}StepKeyID
class StepKeyID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepKeyID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 264, 4)
    _Documentation = None
StepKeyID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepKeyID', StepKeyID)
_module_typeBindings.StepKeyID = StepKeyID

# Atomic simple type: {http://www.stibosystems.com/step}StepMatchingAlgorithmID
class StepMatchingAlgorithmID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepMatchingAlgorithmID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 265, 4)
    _Documentation = None
StepMatchingAlgorithmID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepMatchingAlgorithmID', StepMatchingAlgorithmID)
_module_typeBindings.StepMatchingAlgorithmID = StepMatchingAlgorithmID

# Atomic simple type: {http://www.stibosystems.com/step}StepMatchCodeID
class StepMatchCodeID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepMatchCodeID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 266, 4)
    _Documentation = None
StepMatchCodeID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepMatchCodeID', StepMatchCodeID)
_module_typeBindings.StepMatchCodeID = StepMatchCodeID

# Atomic simple type: {http://www.stibosystems.com/step}StepEventProcessorID
class StepEventProcessorID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepEventProcessorID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 267, 4)
    _Documentation = None
StepEventProcessorID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepEventProcessorID', StepEventProcessorID)
_module_typeBindings.StepEventProcessorID = StepEventProcessorID

# Atomic simple type: {http://www.stibosystems.com/step}StepSetupEntityID
class StepSetupEntityID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepSetupEntityID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 268, 4)
    _Documentation = None
StepSetupEntityID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepSetupEntityID', StepSetupEntityID)
_module_typeBindings.StepSetupEntityID = StepSetupEntityID

# Atomic simple type: {http://www.stibosystems.com/step}StepPortalConfigurationID
class StepPortalConfigurationID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepPortalConfigurationID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 269, 4)
    _Documentation = None
StepPortalConfigurationID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepPortalConfigurationID', StepPortalConfigurationID)
_module_typeBindings.StepPortalConfigurationID = StepPortalConfigurationID

# Atomic simple type: {http://www.stibosystems.com/step}StepUserID
class StepUserID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepUserID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 270, 4)
    _Documentation = None
StepUserID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepUserID', StepUserID)
_module_typeBindings.StepUserID = StepUserID

# Atomic simple type: {http://www.stibosystems.com/step}StepUserGroupID
class StepUserGroupID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepUserGroupID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 271, 4)
    _Documentation = None
StepUserGroupID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepUserGroupID', StepUserGroupID)
_module_typeBindings.StepUserGroupID = StepUserGroupID

# Atomic simple type: {http://www.stibosystems.com/step}StepActionSetID
class StepActionSetID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepActionSetID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 272, 4)
    _Documentation = None
StepActionSetID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepActionSetID', StepActionSetID)
_module_typeBindings.StepActionSetID = StepActionSetID

# Atomic simple type: {http://www.stibosystems.com/step}StepActionID
class StepActionID (StepID):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StepActionID')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 273, 4)
    _Documentation = None
StepActionID._InitializeFacetMap()
Namespace.addCategoryObject('typeBinding', 'StepActionID', StepActionID)
_module_typeBindings.StepActionID = StepActionID

# Complex type {http://www.stibosystems.com/step}ActionSetListType with content type ELEMENT_ONLY
class ActionSetListType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of action sets.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ActionSetListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 357, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ActionSet uses Python identifier ActionSet
    __ActionSet = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ActionSet'), 'ActionSet', '__httpwww_stibosystems_comstep_ActionSetListType_httpwww_stibosystems_comstepActionSet', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 364, 12), )

    
    ActionSet = property(__ActionSet.value, __ActionSet.set, None, None)

    _ElementMap.update({
        __ActionSet.name() : __ActionSet
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ActionSetListType = ActionSetListType
Namespace.addCategoryObject('typeBinding', 'ActionSetListType', ActionSetListType)


# Complex type {http://www.stibosystems.com/step}AnalyzerItemsType with content type ELEMENT_ONLY
class AnalyzerItemsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Contains all AnalyzerItems.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItemsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 446, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AnalyzerItem uses Python identifier AnalyzerItem
    __AnalyzerItem = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItem'), 'AnalyzerItem', '__httpwww_stibosystems_comstep_AnalyzerItemsType_httpwww_stibosystems_comstepAnalyzerItem', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 453, 12), )

    
    AnalyzerItem = property(__AnalyzerItem.value, __AnalyzerItem.set, None, None)

    _ElementMap.update({
        __AnalyzerItem.name() : __AnalyzerItem
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AnalyzerItemsType = AnalyzerItemsType
Namespace.addCategoryObject('typeBinding', 'AnalyzerItemsType', AnalyzerItemsType)


# Complex type {http://www.stibosystems.com/step}AnalyzerListType with content type ELEMENT_ONLY
class AnalyzerListType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a list of items in one of the analyzer result lists. The ‘name’ identifies the list, e.g.
                “item.modified”, “items.referencing.added” etc
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 458, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AnalyzerElement uses Python identifier AnalyzerElement
    __AnalyzerElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerElement'), 'AnalyzerElement', '__httpwww_stibosystems_comstep_AnalyzerListType_httpwww_stibosystems_comstepAnalyzerElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 466, 12), )

    
    AnalyzerElement = property(__AnalyzerElement.value, __AnalyzerElement.set, None, None)

    
    # Attribute name uses Python identifier name
    __name = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'name'), 'name', '__httpwww_stibosystems_comstep_AnalyzerListType_name', pyxb.binding.datatypes.string)
    __name._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 468, 8)
    __name._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 468, 8)
    
    name = property(__name.value, __name.set, None, '\n                    Identifies the result list.\n                ')

    _ElementMap.update({
        __AnalyzerElement.name() : __AnalyzerElement
    })
    _AttributeMap.update({
        __name.name() : __name
    })
_module_typeBindings.AnalyzerListType = AnalyzerListType
Namespace.addCategoryObject('typeBinding', 'AnalyzerListType', AnalyzerListType)


# Complex type {http://www.stibosystems.com/step}AnalyzerListsType with content type ELEMENT_ONLY
class AnalyzerListsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents lists of AnalyzerList.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerListsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 478, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AnalyzerList uses Python identifier AnalyzerList
    __AnalyzerList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerList'), 'AnalyzerList', '__httpwww_stibosystems_comstep_AnalyzerListsType_httpwww_stibosystems_comstepAnalyzerList', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 485, 12), )

    
    AnalyzerList = property(__AnalyzerList.value, __AnalyzerList.set, None, None)

    _ElementMap.update({
        __AnalyzerList.name() : __AnalyzerList
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AnalyzerListsType = AnalyzerListsType
Namespace.addCategoryObject('typeBinding', 'AnalyzerListsType', AnalyzerListsType)


# Complex type {http://www.stibosystems.com/step}AnalyzerResultType with content type ELEMENT_ONLY
class AnalyzerResultType (pyxb.binding.basis.complexTypeDefinition):
    """
                Contains AnalyzerLists and AnalyzerItems.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerResultType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 507, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AnalyzerLists uses Python identifier AnalyzerLists
    __AnalyzerLists = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerLists'), 'AnalyzerLists', '__httpwww_stibosystems_comstep_AnalyzerResultType_httpwww_stibosystems_comstepAnalyzerLists', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 514, 12), )

    
    AnalyzerLists = property(__AnalyzerLists.value, __AnalyzerLists.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AnalyzerItems uses Python identifier AnalyzerItems
    __AnalyzerItems = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItems'), 'AnalyzerItems', '__httpwww_stibosystems_comstep_AnalyzerResultType_httpwww_stibosystems_comstepAnalyzerItems', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 515, 12), )

    
    AnalyzerItems = property(__AnalyzerItems.value, __AnalyzerItems.set, None, None)

    _ElementMap.update({
        __AnalyzerLists.name() : __AnalyzerLists,
        __AnalyzerItems.name() : __AnalyzerItems
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AnalyzerResultType = AnalyzerResultType
Namespace.addCategoryObject('typeBinding', 'AnalyzerResultType', AnalyzerResultType)


# Complex type {http://www.stibosystems.com/step}AssetContentType with content type ELEMENT_ONLY
class AssetContentType (pyxb.binding.basis.complexTypeDefinition):
    """
                Holds all the conversion information for a single asset for a single context.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetContentType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 589, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AssetContentSpecification uses Python identifier AssetContentSpecification
    __AssetContentSpecification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetContentSpecification'), 'AssetContentSpecification', '__httpwww_stibosystems_comstep_AssetContentType_httpwww_stibosystems_comstepAssetContentSpecification', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 597, 12), )

    
    AssetContentSpecification = property(__AssetContentSpecification.value, __AssetContentSpecification.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_AssetContentType_QualifierID', pyxb.binding.datatypes.string)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 600, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 600, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __AssetContentSpecification.name() : __AssetContentSpecification
    })
    _AttributeMap.update({
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.AssetContentType = AssetContentType
Namespace.addCategoryObject('typeBinding', 'AssetContentType', AssetContentType)


# Complex type {http://www.stibosystems.com/step}AssetContentSpecificationType with content type EMPTY
class AssetContentSpecificationType (pyxb.binding.basis.complexTypeDefinition):
    """
                Holds all the asset conversion information for a single asset in a single context.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetContentSpecificationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 604, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ImageConversionConfigurationID uses Python identifier ImageConversionConfigurationID
    __ImageConversionConfigurationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ImageConversionConfigurationID'), 'ImageConversionConfigurationID', '__httpwww_stibosystems_comstep_AssetContentSpecificationType_ImageConversionConfigurationID', pyxb.binding.datatypes.string)
    __ImageConversionConfigurationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 611, 8)
    __ImageConversionConfigurationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 611, 8)
    
    ImageConversionConfigurationID = property(__ImageConversionConfigurationID.value, __ImageConversionConfigurationID.set, None, None)

    
    # Attribute IncludesBinaryContents uses Python identifier IncludesBinaryContents
    __IncludesBinaryContents = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IncludesBinaryContents'), 'IncludesBinaryContents', '__httpwww_stibosystems_comstep_AssetContentSpecificationType_IncludesBinaryContents', pyxb.binding.datatypes.boolean)
    __IncludesBinaryContents._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 612, 8)
    __IncludesBinaryContents._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 612, 8)
    
    IncludesBinaryContents = property(__IncludesBinaryContents.value, __IncludesBinaryContents.set, None, None)

    
    # Attribute RelativeURL uses Python identifier RelativeURL
    __RelativeURL = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RelativeURL'), 'RelativeURL', '__httpwww_stibosystems_comstep_AssetContentSpecificationType_RelativeURL', pyxb.binding.datatypes.string)
    __RelativeURL._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 613, 8)
    __RelativeURL._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 613, 8)
    
    RelativeURL = property(__RelativeURL.value, __RelativeURL.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ImageConversionConfigurationID.name() : __ImageConversionConfigurationID,
        __IncludesBinaryContents.name() : __IncludesBinaryContents,
        __RelativeURL.name() : __RelativeURL
    })
_module_typeBindings.AssetContentSpecificationType = AssetContentSpecificationType
Namespace.addCategoryObject('typeBinding', 'AssetContentSpecificationType', AssetContentSpecificationType)


# Complex type {http://www.stibosystems.com/step}AssetBinaryContentType with content type ELEMENT_ONLY
class AssetBinaryContentType (pyxb.binding.basis.complexTypeDefinition):
    """
                Holds the base64 encoded binary asset data for a single asset conversion for a single context
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetBinaryContentType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 617, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Checksum uses Python identifier Checksum
    __Checksum = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Checksum'), 'Checksum', '__httpwww_stibosystems_comstep_AssetBinaryContentType_httpwww_stibosystems_comstepChecksum', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 624, 12), )

    
    Checksum = property(__Checksum.value, __Checksum.set, None, None)

    
    # Element {http://www.stibosystems.com/step}BinaryContent uses Python identifier BinaryContent
    __BinaryContent = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BinaryContent'), 'BinaryContent', '__httpwww_stibosystems_comstep_AssetBinaryContentType_httpwww_stibosystems_comstepBinaryContent', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 625, 12), )

    
    BinaryContent = property(__BinaryContent.value, __BinaryContent.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_AssetBinaryContentType_QualifierID', pyxb.binding.datatypes.string)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 628, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 628, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute ImageConversionConfigurationID uses Python identifier ImageConversionConfigurationID
    __ImageConversionConfigurationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ImageConversionConfigurationID'), 'ImageConversionConfigurationID', '__httpwww_stibosystems_comstep_AssetBinaryContentType_ImageConversionConfigurationID', pyxb.binding.datatypes.string)
    __ImageConversionConfigurationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 629, 8)
    __ImageConversionConfigurationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 629, 8)
    
    ImageConversionConfigurationID = property(__ImageConversionConfigurationID.value, __ImageConversionConfigurationID.set, None, None)

    
    # Attribute MIMEType uses Python identifier MIMEType
    __MIMEType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MIMEType'), 'MIMEType', '__httpwww_stibosystems_comstep_AssetBinaryContentType_MIMEType', pyxb.binding.datatypes.string)
    __MIMEType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 630, 8)
    __MIMEType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 630, 8)
    
    MIMEType = property(__MIMEType.value, __MIMEType.set, None, None)

    _ElementMap.update({
        __Checksum.name() : __Checksum,
        __BinaryContent.name() : __BinaryContent
    })
    _AttributeMap.update({
        __QualifierID.name() : __QualifierID,
        __ImageConversionConfigurationID.name() : __ImageConversionConfigurationID,
        __MIMEType.name() : __MIMEType
    })
_module_typeBindings.AssetBinaryContentType = AssetBinaryContentType
Namespace.addCategoryObject('typeBinding', 'AssetBinaryContentType', AssetBinaryContentType)


# Complex type {http://www.stibosystems.com/step}AttributeSequenceType with content type ELEMENT_ONLY
class AttributeSequenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                The sequence of attributes in a manually sorted attribute group. On import then any attributes not mentioned in the sequence will be left in the beginning of the sequence.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeSequenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 950, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_AttributeSequenceType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 957, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    _ElementMap.update({
        __AttributeLink.name() : __AttributeLink
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AttributeSequenceType = AttributeSequenceType
Namespace.addCategoryObject('typeBinding', 'AttributeSequenceType', AttributeSequenceType)


# Complex type {http://www.stibosystems.com/step}AttributeGroupListType with content type ELEMENT_ONLY
class AttributeGroupListType (pyxb.binding.basis.complexTypeDefinition):
    """
                The list of all attribute group.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1037, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AttributeGroup uses Python identifier AttributeGroup
    __AttributeGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroup'), 'AttributeGroup', '__httpwww_stibosystems_comstep_AttributeGroupListType_httpwww_stibosystems_comstepAttributeGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1044, 12), )

    
    AttributeGroup = property(__AttributeGroup.value, __AttributeGroup.set, None, None)

    _ElementMap.update({
        __AttributeGroup.name() : __AttributeGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AttributeGroupListType = AttributeGroupListType
Namespace.addCategoryObject('typeBinding', 'AttributeGroupListType', AttributeGroupListType)


# Complex type {http://www.stibosystems.com/step}AttributeListType with content type ELEMENT_ONLY
class AttributeListType (pyxb.binding.basis.complexTypeDefinition):
    """
                The list of attributes.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1174, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Attribute uses Python identifier Attribute
    __Attribute = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Attribute'), 'Attribute', '__httpwww_stibosystems_comstep_AttributeListType_httpwww_stibosystems_comstepAttribute', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1182, 12), )

    
    Attribute = property(__Attribute.value, __Attribute.set, None, None)

    _ElementMap.update({
        __Attribute.name() : __Attribute
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AttributeListType = AttributeListType
Namespace.addCategoryObject('typeBinding', 'AttributeListType', AttributeListType)


# Complex type {http://www.stibosystems.com/step}AttributeTransformationGroupsType with content type ELEMENT_ONLY
class AttributeTransformationGroupsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of attribute transformation groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroupsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1231, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AttributeTransformationGroup uses Python identifier AttributeTransformationGroup
    __AttributeTransformationGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroup'), 'AttributeTransformationGroup', '__httpwww_stibosystems_comstep_AttributeTransformationGroupsType_httpwww_stibosystems_comstepAttributeTransformationGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1238, 12), )

    
    AttributeTransformationGroup = property(__AttributeTransformationGroup.value, __AttributeTransformationGroup.set, None, None)

    _ElementMap.update({
        __AttributeTransformationGroup.name() : __AttributeTransformationGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AttributeTransformationGroupsType = AttributeTransformationGroupsType
Namespace.addCategoryObject('typeBinding', 'AttributeTransformationGroupsType', AttributeTransformationGroupsType)


# Complex type {http://www.stibosystems.com/step}BasketType with content type ELEMENT_ONLY
class BasketType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}BasketType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BasketType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1244, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ClassificationBasketLink uses Python identifier ClassificationBasketLink
    __ClassificationBasketLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationBasketLink'), 'ClassificationBasketLink', '__httpwww_stibosystems_comstep_BasketType_httpwww_stibosystems_comstepClassificationBasketLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1246, 12), )

    
    ClassificationBasketLink = property(__ClassificationBasketLink.value, __ClassificationBasketLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductBasketLink uses Python identifier ProductBasketLink
    __ProductBasketLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductBasketLink'), 'ProductBasketLink', '__httpwww_stibosystems_comstep_BasketType_httpwww_stibosystems_comstepProductBasketLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1247, 12), )

    
    ProductBasketLink = property(__ProductBasketLink.value, __ProductBasketLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetBasketLink uses Python identifier AssetBasketLink
    __AssetBasketLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetBasketLink'), 'AssetBasketLink', '__httpwww_stibosystems_comstep_BasketType_httpwww_stibosystems_comstepAssetBasketLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1248, 12), )

    
    AssetBasketLink = property(__AssetBasketLink.value, __AssetBasketLink.set, None, None)

    _ElementMap.update({
        __ClassificationBasketLink.name() : __ClassificationBasketLink,
        __ProductBasketLink.name() : __ProductBasketLink,
        __AssetBasketLink.name() : __AssetBasketLink
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.BasketType = BasketType
Namespace.addCategoryObject('typeBinding', 'BasketType', BasketType)


# Complex type {http://www.stibosystems.com/step}BulkUpdateConfigurationsType with content type ELEMENT_ONLY
class BulkUpdateConfigurationsType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all bulk update configurations."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfigurationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1275, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}BulkUpdateConfiguration uses Python identifier BulkUpdateConfiguration
    __BulkUpdateConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfiguration'), 'BulkUpdateConfiguration', '__httpwww_stibosystems_comstep_BulkUpdateConfigurationsType_httpwww_stibosystems_comstepBulkUpdateConfiguration', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1280, 12), )

    
    BulkUpdateConfiguration = property(__BulkUpdateConfiguration.value, __BulkUpdateConfiguration.set, None, None)

    _ElementMap.update({
        __BulkUpdateConfiguration.name() : __BulkUpdateConfiguration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.BulkUpdateConfigurationsType = BulkUpdateConfigurationsType
Namespace.addCategoryObject('typeBinding', 'BulkUpdateConfigurationsType', BulkUpdateConfigurationsType)


# Complex type {http://www.stibosystems.com/step}ClassificationTemplateType with content type ELEMENT_ONLY
class ClassificationTemplateType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationTemplateType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationTemplateType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1673, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_ClassificationTemplateType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1675, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    _ElementMap.update({
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ClassificationTemplateType = ClassificationTemplateType
Namespace.addCategoryObject('typeBinding', 'ClassificationTemplateType', ClassificationTemplateType)


# Complex type {http://www.stibosystems.com/step}PublicationTypeValidityType with content type ELEMENT_ONLY
class PublicationTypeValidityType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PublicationTypeValidityType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidityType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1742, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}IncludedPublicationType uses Python identifier IncludedPublicationType
    __IncludedPublicationType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IncludedPublicationType'), 'IncludedPublicationType', '__httpwww_stibosystems_comstep_PublicationTypeValidityType_httpwww_stibosystems_comstepIncludedPublicationType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1744, 12), )

    
    IncludedPublicationType = property(__IncludedPublicationType.value, __IncludedPublicationType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ExcludedPublicationType uses Python identifier ExcludedPublicationType
    __ExcludedPublicationType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ExcludedPublicationType'), 'ExcludedPublicationType', '__httpwww_stibosystems_comstep_PublicationTypeValidityType_httpwww_stibosystems_comstepExcludedPublicationType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1745, 12), )

    
    ExcludedPublicationType = property(__ExcludedPublicationType.value, __ExcludedPublicationType.set, None, None)

    
    # Attribute IsInNewPublicationTypes uses Python identifier IsInNewPublicationTypes
    __IsInNewPublicationTypes = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IsInNewPublicationTypes'), 'IsInNewPublicationTypes', '__httpwww_stibosystems_comstep_PublicationTypeValidityType_IsInNewPublicationTypes', pyxb.binding.datatypes.boolean)
    __IsInNewPublicationTypes._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1747, 8)
    __IsInNewPublicationTypes._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1747, 8)
    
    IsInNewPublicationTypes = property(__IsInNewPublicationTypes.value, __IsInNewPublicationTypes.set, None, None)

    _ElementMap.update({
        __IncludedPublicationType.name() : __IncludedPublicationType,
        __ExcludedPublicationType.name() : __ExcludedPublicationType
    })
    _AttributeMap.update({
        __IsInNewPublicationTypes.name() : __IsInNewPublicationTypes
    })
_module_typeBindings.PublicationTypeValidityType = PublicationTypeValidityType
Namespace.addCategoryObject('typeBinding', 'PublicationTypeValidityType', PublicationTypeValidityType)


# Complex type {http://www.stibosystems.com/step}ColumnTypesType with content type ELEMENT_ONLY
class ColumnTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ColumnTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ColumnTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1782, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ColumnType uses Python identifier ColumnType
    __ColumnType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ColumnType'), 'ColumnType', '__httpwww_stibosystems_comstep_ColumnTypesType_httpwww_stibosystems_comstepColumnType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1784, 12), )

    
    ColumnType = property(__ColumnType.value, __ColumnType.set, None, None)

    _ElementMap.update({
        __ColumnType.name() : __ColumnType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ColumnTypesType = ColumnTypesType
Namespace.addCategoryObject('typeBinding', 'ColumnTypesType', ColumnTypesType)


# Complex type {http://www.stibosystems.com/step}ContextListType with content type ELEMENT_ONLY
class ContextListType (pyxb.binding.basis.complexTypeDefinition):
    """
                Lists the contexts in the system.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ContextListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1911, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Context uses Python identifier Context
    __Context = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Context'), 'Context', '__httpwww_stibosystems_comstep_ContextListType_httpwww_stibosystems_comstepContext', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1918, 12), )

    
    Context = property(__Context.value, __Context.set, None, None)

    _ElementMap.update({
        __Context.name() : __Context
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ContextListType = ContextListType
Namespace.addCategoryObject('typeBinding', 'ContextListType', ContextListType)


# Complex type {http://www.stibosystems.com/step}CrossContextsType with content type ELEMENT_ONLY
class CrossContextsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}CrossContextsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CrossContextsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1923, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Context uses Python identifier Context
    __Context = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Context'), 'Context', '__httpwww_stibosystems_comstep_CrossContextsType_httpwww_stibosystems_comstepContext', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1926, 12), )

    
    Context = property(__Context.value, __Context.set, None, None)

    _ElementMap.update({
        __Context.name() : __Context
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.CrossContextsType = CrossContextsType
Namespace.addCategoryObject('typeBinding', 'CrossContextsType', CrossContextsType)


# Complex type {http://www.stibosystems.com/step}DeleteAssetsType with content type ELEMENT_ONLY
class DeleteAssetsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteAssetsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1995, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteAsset uses Python identifier DeleteAsset
    __DeleteAsset = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAsset'), 'DeleteAsset', '__httpwww_stibosystems_comstep_DeleteAssetsType_httpwww_stibosystems_comstepDeleteAsset', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1998, 12), )

    
    DeleteAsset = property(__DeleteAsset.value, __DeleteAsset.set, None, None)

    _ElementMap.update({
        __DeleteAsset.name() : __DeleteAsset
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteAssetsType = DeleteAssetsType
Namespace.addCategoryObject('typeBinding', 'DeleteAssetsType', DeleteAssetsType)


# Complex type {http://www.stibosystems.com/step}DeleteEntitiesType with content type ELEMENT_ONLY
class DeleteEntitiesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteEntitiesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteEntitiesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2025, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteEntity uses Python identifier DeleteEntity
    __DeleteEntity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntity'), 'DeleteEntity', '__httpwww_stibosystems_comstep_DeleteEntitiesType_httpwww_stibosystems_comstepDeleteEntity', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2027, 12), )

    
    DeleteEntity = property(__DeleteEntity.value, __DeleteEntity.set, None, None)

    _ElementMap.update({
        __DeleteEntity.name() : __DeleteEntity
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteEntitiesType = DeleteEntitiesType
Namespace.addCategoryObject('typeBinding', 'DeleteEntitiesType', DeleteEntitiesType)


# Complex type {http://www.stibosystems.com/step}DeleteClassificationsType with content type ELEMENT_ONLY
class DeleteClassificationsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteClassificationsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2092, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteClassification uses Python identifier DeleteClassification
    __DeleteClassification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassification'), 'DeleteClassification', '__httpwww_stibosystems_comstep_DeleteClassificationsType_httpwww_stibosystems_comstepDeleteClassification', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2094, 12), )

    
    DeleteClassification = property(__DeleteClassification.value, __DeleteClassification.set, None, None)

    _ElementMap.update({
        __DeleteClassification.name() : __DeleteClassification
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteClassificationsType = DeleteClassificationsType
Namespace.addCategoryObject('typeBinding', 'DeleteClassificationsType', DeleteClassificationsType)


# Complex type {http://www.stibosystems.com/step}DeleteProductsType with content type ELEMENT_ONLY
class DeleteProductsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteProductsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteProductsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2140, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteProduct uses Python identifier DeleteProduct
    __DeleteProduct = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteProduct'), 'DeleteProduct', '__httpwww_stibosystems_comstep_DeleteProductsType_httpwww_stibosystems_comstepDeleteProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2142, 12), )

    
    DeleteProduct = property(__DeleteProduct.value, __DeleteProduct.set, None, None)

    _ElementMap.update({
        __DeleteProduct.name() : __DeleteProduct
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteProductsType = DeleteProductsType
Namespace.addCategoryObject('typeBinding', 'DeleteProductsType', DeleteProductsType)


# Complex type {http://www.stibosystems.com/step}DeleteAttributesType with content type ELEMENT_ONLY
class DeleteAttributesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteAttributesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2147, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteAttributeOrGroup uses Python identifier DeleteAttributeOrGroup
    __DeleteAttributeOrGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeOrGroup'), 'DeleteAttributeOrGroup', '__httpwww_stibosystems_comstep_DeleteAttributesType_httpwww_stibosystems_comstepDeleteAttributeOrGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2149, 12), )

    
    DeleteAttributeOrGroup = property(__DeleteAttributeOrGroup.value, __DeleteAttributeOrGroup.set, None, None)

    _ElementMap.update({
        __DeleteAttributeOrGroup.name() : __DeleteAttributeOrGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteAttributesType = DeleteAttributesType
Namespace.addCategoryObject('typeBinding', 'DeleteAttributesType', DeleteAttributesType)


# Complex type {http://www.stibosystems.com/step}DeleteUnitsType with content type ELEMENT_ONLY
class DeleteUnitsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteUnitsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteUnitsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2154, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteUnitOrFamily uses Python identifier DeleteUnitOrFamily
    __DeleteUnitOrFamily = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteUnitOrFamily'), 'DeleteUnitOrFamily', '__httpwww_stibosystems_comstep_DeleteUnitsType_httpwww_stibosystems_comstepDeleteUnitOrFamily', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2156, 12), )

    
    DeleteUnitOrFamily = property(__DeleteUnitOrFamily.value, __DeleteUnitOrFamily.set, None, None)

    _ElementMap.update({
        __DeleteUnitOrFamily.name() : __DeleteUnitOrFamily
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteUnitsType = DeleteUnitsType
Namespace.addCategoryObject('typeBinding', 'DeleteUnitsType', DeleteUnitsType)


# Complex type {http://www.stibosystems.com/step}DeleteListOfValuesType with content type ELEMENT_ONLY
class DeleteListOfValuesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteListOfValuesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValuesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2161, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DeleteListOfValue uses Python identifier DeleteListOfValue
    __DeleteListOfValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValue'), 'DeleteListOfValue', '__httpwww_stibosystems_comstep_DeleteListOfValuesType_httpwww_stibosystems_comstepDeleteListOfValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2163, 12), )

    
    DeleteListOfValue = property(__DeleteListOfValue.value, __DeleteListOfValue.set, None, None)

    _ElementMap.update({
        __DeleteListOfValue.name() : __DeleteListOfValue
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DeleteListOfValuesType = DeleteListOfValuesType
Namespace.addCategoryObject('typeBinding', 'DeleteListOfValuesType', DeleteListOfValuesType)


# Complex type {http://www.stibosystems.com/step}DimensionListType with content type ELEMENT_ONLY
class DimensionListType (pyxb.binding.basis.complexTypeDefinition):
    """
                Lists the dimensions in the system.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DimensionListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2215, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Dimension uses Python identifier Dimension
    __Dimension = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Dimension'), 'Dimension', '__httpwww_stibosystems_comstep_DimensionListType_httpwww_stibosystems_comstepDimension', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2222, 12), )

    
    Dimension = property(__Dimension.value, __Dimension.set, None, None)

    _ElementMap.update({
        __Dimension.name() : __Dimension
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DimensionListType = DimensionListType
Namespace.addCategoryObject('typeBinding', 'DimensionListType', DimensionListType)


# Complex type {http://www.stibosystems.com/step}ECatalogsType with content type ELEMENT_ONLY
class ECatalogsType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all top level eCatalogs."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ECatalogsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2312, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ECatalog uses Python identifier ECatalog
    __ECatalog = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ECatalog'), 'ECatalog', '__httpwww_stibosystems_comstep_ECatalogsType_httpwww_stibosystems_comstepECatalog', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2317, 12), )

    
    ECatalog = property(__ECatalog.value, __ECatalog.set, None, None)

    _ElementMap.update({
        __ECatalog.name() : __ECatalog
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ECatalogsType = ECatalogsType
Namespace.addCategoryObject('typeBinding', 'ECatalogsType', ECatalogsType)


# Complex type {http://www.stibosystems.com/step}EdgeTypesType with content type ELEMENT_ONLY
class EdgeTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EdgeTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EdgeTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2345, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}EdgeType uses Python identifier EdgeType
    __EdgeType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EdgeType'), 'EdgeType', '__httpwww_stibosystems_comstep_EdgeTypesType_httpwww_stibosystems_comstepEdgeType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2348, 12), )

    
    EdgeType = property(__EdgeType.value, __EdgeType.set, None, None)

    _ElementMap.update({
        __EdgeType.name() : __EdgeType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.EdgeTypesType = EdgeTypesType
Namespace.addCategoryObject('typeBinding', 'EdgeTypesType', EdgeTypesType)


# Complex type {http://www.stibosystems.com/step}DerivedEventTypesType with content type ELEMENT_ONLY
class DerivedEventTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DerivedEventTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DerivedEventTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2352, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DerivedEventType uses Python identifier DerivedEventType
    __DerivedEventType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DerivedEventType'), 'DerivedEventType', '__httpwww_stibosystems_comstep_DerivedEventTypesType_httpwww_stibosystems_comstepDerivedEventType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2355, 12), )

    
    DerivedEventType = property(__DerivedEventType.value, __DerivedEventType.set, None, None)

    _ElementMap.update({
        __DerivedEventType.name() : __DerivedEventType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DerivedEventTypesType = DerivedEventTypesType
Namespace.addCategoryObject('typeBinding', 'DerivedEventTypesType', DerivedEventTypesType)


# Complex type {http://www.stibosystems.com/step}EventQueuesType with content type ELEMENT_ONLY
class EventQueuesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EventQueuesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EventQueuesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2384, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}EventQueue uses Python identifier EventQueue
    __EventQueue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EventQueue'), 'EventQueue', '__httpwww_stibosystems_comstep_EventQueuesType_httpwww_stibosystems_comstepEventQueue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2386, 12), )

    
    EventQueue = property(__EventQueue.value, __EventQueue.set, None, None)

    _ElementMap.update({
        __EventQueue.name() : __EventQueue
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.EventQueuesType = EventQueuesType
Namespace.addCategoryObject('typeBinding', 'EventQueuesType', EventQueuesType)


# Complex type {http://www.stibosystems.com/step}ExportConfigurationsType with content type ELEMENT_ONLY
class ExportConfigurationsType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all export configurations."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ExportConfigurationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2413, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ExportConfiguration uses Python identifier ExportConfiguration
    __ExportConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ExportConfiguration'), 'ExportConfiguration', '__httpwww_stibosystems_comstep_ExportConfigurationsType_httpwww_stibosystems_comstepExportConfiguration', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2418, 12), )

    
    ExportConfiguration = property(__ExportConfiguration.value, __ExportConfiguration.set, None, None)

    _ElementMap.update({
        __ExportConfiguration.name() : __ExportConfiguration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ExportConfigurationsType = ExportConfigurationsType
Namespace.addCategoryObject('typeBinding', 'ExportConfigurationsType', ExportConfigurationsType)


# Complex type {http://www.stibosystems.com/step}GUISetupType with content type ELEMENT_ONLY
class GUISetupType (pyxb.binding.basis.complexTypeDefinition):
    """
                The elements of the GUISetup, used to enable or disable menu items, workspaces and contexts for users and groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GUISetupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2423, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}GUISetupEnabled uses Python identifier GUISetupEnabled
    __GUISetupEnabled = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUISetupEnabled'), 'GUISetupEnabled', '__httpwww_stibosystems_comstep_GUISetupType_httpwww_stibosystems_comstepGUISetupEnabled', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2431, 16), )

    
    GUISetupEnabled = property(__GUISetupEnabled.value, __GUISetupEnabled.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GUISetupDisabled uses Python identifier GUISetupDisabled
    __GUISetupDisabled = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUISetupDisabled'), 'GUISetupDisabled', '__httpwww_stibosystems_comstep_GUISetupType_httpwww_stibosystems_comstepGUISetupDisabled', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2432, 16), )

    
    GUISetupDisabled = property(__GUISetupDisabled.value, __GUISetupDisabled.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GUISetupAdvanced uses Python identifier GUISetupAdvanced
    __GUISetupAdvanced = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUISetupAdvanced'), 'GUISetupAdvanced', '__httpwww_stibosystems_comstep_GUISetupType_httpwww_stibosystems_comstepGUISetupAdvanced', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2433, 16), )

    
    GUISetupAdvanced = property(__GUISetupAdvanced.value, __GUISetupAdvanced.set, None, None)

    _ElementMap.update({
        __GUISetupEnabled.name() : __GUISetupEnabled,
        __GUISetupDisabled.name() : __GUISetupDisabled,
        __GUISetupAdvanced.name() : __GUISetupAdvanced
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.GUISetupType = GUISetupType
Namespace.addCategoryObject('typeBinding', 'GUISetupType', GUISetupType)


# Complex type {http://www.stibosystems.com/step}ImportConfigurationsType with content type ELEMENT_ONLY
class ImportConfigurationsType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all import configurations."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ImportConfigurationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2497, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ImportConfiguration uses Python identifier ImportConfiguration
    __ImportConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ImportConfiguration'), 'ImportConfiguration', '__httpwww_stibosystems_comstep_ImportConfigurationsType_httpwww_stibosystems_comstepImportConfiguration', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2502, 12), )

    
    ImportConfiguration = property(__ImportConfiguration.value, __ImportConfiguration.set, None, None)

    _ElementMap.update({
        __ImportConfiguration.name() : __ImportConfiguration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ImportConfigurationsType = ImportConfigurationsType
Namespace.addCategoryObject('typeBinding', 'ImportConfigurationsType', ImportConfigurationsType)


# Complex type {http://www.stibosystems.com/step}KeyFormulaType with content type MIXED
class KeyFormulaType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}KeyFormulaType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'KeyFormulaType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2545, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.KeyFormulaType = KeyFormulaType
Namespace.addCategoryObject('typeBinding', 'KeyFormulaType', KeyFormulaType)


# Complex type {http://www.stibosystems.com/step}KeysType with content type ELEMENT_ONLY
class KeysType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}KeysType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'KeysType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2547, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Key uses Python identifier Key
    __Key = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Key'), 'Key', '__httpwww_stibosystems_comstep_KeysType_httpwww_stibosystems_comstepKey', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2550, 12), )

    
    Key = property(__Key.value, __Key.set, None, None)

    _ElementMap.update({
        __Key.name() : __Key
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.KeysType = KeysType
Namespace.addCategoryObject('typeBinding', 'KeysType', KeysType)


# Complex type {http://www.stibosystems.com/step}ListOfValuesGroupListType with content type ELEMENT_ONLY
class ListOfValuesGroupListType (pyxb.binding.basis.complexTypeDefinition):
    """
                Holds all LOV Groups in the system.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroupListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2612, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ListOfValuesGroup uses Python identifier ListOfValuesGroup
    __ListOfValuesGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroup'), 'ListOfValuesGroup', '__httpwww_stibosystems_comstep_ListOfValuesGroupListType_httpwww_stibosystems_comstepListOfValuesGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2619, 12), )

    
    ListOfValuesGroup = property(__ListOfValuesGroup.value, __ListOfValuesGroup.set, None, None)

    _ElementMap.update({
        __ListOfValuesGroup.name() : __ListOfValuesGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ListOfValuesGroupListType = ListOfValuesGroupListType
Namespace.addCategoryObject('typeBinding', 'ListOfValuesGroupListType', ListOfValuesGroupListType)


# Complex type {http://www.stibosystems.com/step}ListsOfValuesType with content type ELEMENT_ONLY
class ListsOfValuesType (pyxb.binding.basis.complexTypeDefinition):
    """
                Holds all LOVs in the system.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ListsOfValuesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2730, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ListOfValue uses Python identifier ListOfValue
    __ListOfValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ListOfValue'), 'ListOfValue', '__httpwww_stibosystems_comstep_ListsOfValuesType_httpwww_stibosystems_comstepListOfValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2737, 12), )

    
    ListOfValue = property(__ListOfValue.value, __ListOfValue.set, None, None)

    _ElementMap.update({
        __ListOfValue.name() : __ListOfValue
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ListsOfValuesType = ListsOfValuesType
Namespace.addCategoryObject('typeBinding', 'ListsOfValuesType', ListsOfValuesType)


# Complex type {http://www.stibosystems.com/step}MetaDataType with content type ELEMENT_ONLY
class MetaDataType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents metadata for its parent element
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MetaDataType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2742, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Value uses Python identifier Value
    __Value = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Value'), 'Value', '__httpwww_stibosystems_comstep_MetaDataType_httpwww_stibosystems_comstepValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2750, 12), )

    
    Value = property(__Value.value, __Value.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MultiValue uses Python identifier MultiValue
    __MultiValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MultiValue'), 'MultiValue', '__httpwww_stibosystems_comstep_MetaDataType_httpwww_stibosystems_comstepMultiValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2751, 12), )

    
    MultiValue = property(__MultiValue.value, __MultiValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueGroup uses Python identifier ValueGroup
    __ValueGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), 'ValueGroup', '__httpwww_stibosystems_comstep_MetaDataType_httpwww_stibosystems_comstepValueGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2752, 12), )

    
    ValueGroup = property(__ValueGroup.value, __ValueGroup.set, None, None)

    _ElementMap.update({
        __Value.name() : __Value,
        __MultiValue.name() : __MultiValue,
        __ValueGroup.name() : __ValueGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MetaDataType = MetaDataType
Namespace.addCategoryObject('typeBinding', 'MetaDataType', MetaDataType)


# Complex type {http://www.stibosystems.com/step}MIMETypeType with content type MIXED
class MIMETypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}MIMETypeType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MIMETypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2757, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MIMETypeType = MIMETypeType
Namespace.addCategoryObject('typeBinding', 'MIMETypeType', MIMETypeType)


# Complex type {http://www.stibosystems.com/step}MissingObjectsType with content type ELEMENT_ONLY
class MissingObjectsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}MissingObjectsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MissingObjectsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2759, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Classifications uses Python identifier Classifications
    __Classifications = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classifications'), 'Classifications', '__httpwww_stibosystems_comstep_MissingObjectsType_httpwww_stibosystems_comstepClassifications', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2761, 12), )

    
    Classifications = property(__Classifications.value, __Classifications.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Products uses Python identifier Products
    __Products = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Products'), 'Products', '__httpwww_stibosystems_comstep_MissingObjectsType_httpwww_stibosystems_comstepProducts', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2762, 12), )

    
    Products = property(__Products.value, __Products.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Assets uses Python identifier Assets
    __Assets = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Assets'), 'Assets', '__httpwww_stibosystems_comstep_MissingObjectsType_httpwww_stibosystems_comstepAssets', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2763, 12), )

    
    Assets = property(__Assets.value, __Assets.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationGroups uses Python identifier PublicationGroups
    __PublicationGroups = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroups'), 'PublicationGroups', '__httpwww_stibosystems_comstep_MissingObjectsType_httpwww_stibosystems_comstepPublicationGroups', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2764, 12), )

    
    PublicationGroups = property(__PublicationGroups.value, __PublicationGroups.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Publication uses Python identifier Publication
    __Publication = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Publication'), 'Publication', '__httpwww_stibosystems_comstep_MissingObjectsType_httpwww_stibosystems_comstepPublication', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2765, 12), )

    
    Publication = property(__Publication.value, __Publication.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PlannedPage uses Python identifier PlannedPage
    __PlannedPage = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlannedPage'), 'PlannedPage', '__httpwww_stibosystems_comstep_MissingObjectsType_httpwww_stibosystems_comstepPlannedPage', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2766, 12), )

    
    PlannedPage = property(__PlannedPage.value, __PlannedPage.set, None, None)

    _ElementMap.update({
        __Classifications.name() : __Classifications,
        __Products.name() : __Products,
        __Assets.name() : __Assets,
        __PublicationGroups.name() : __PublicationGroups,
        __Publication.name() : __Publication,
        __PlannedPage.name() : __PlannedPage
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MissingObjectsType = MissingObjectsType
Namespace.addCategoryObject('typeBinding', 'MissingObjectsType', MissingObjectsType)


# Complex type {http://www.stibosystems.com/step}NoteRecordType with content type MIXED
class NoteRecordType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}NoteRecordType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'NoteRecordType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2828, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Username uses Python identifier Username
    __Username = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Username'), 'Username', '__httpwww_stibosystems_comstep_NoteRecordType_Username', pyxb.binding.datatypes.string)
    __Username._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2829, 8)
    __Username._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2829, 8)
    
    Username = property(__Username.value, __Username.set, None, None)

    
    # Attribute Timestamp uses Python identifier Timestamp
    __Timestamp = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Timestamp'), 'Timestamp', '__httpwww_stibosystems_comstep_NoteRecordType_Timestamp', pyxb.binding.datatypes.string)
    __Timestamp._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2830, 8)
    __Timestamp._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2830, 8)
    
    Timestamp = property(__Timestamp.value, __Timestamp.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Username.name() : __Username,
        __Timestamp.name() : __Timestamp
    })
_module_typeBindings.NoteRecordType = NoteRecordType
Namespace.addCategoryObject('typeBinding', 'NoteRecordType', NoteRecordType)


# Complex type {http://www.stibosystems.com/step}PageContentsType with content type ELEMENT_ONLY
class PageContentsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PageContentsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PageContentsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2890, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Frame uses Python identifier Frame
    __Frame = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Frame'), 'Frame', '__httpwww_stibosystems_comstep_PageContentsType_httpwww_stibosystems_comstepFrame', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2892, 12), )

    
    Frame = property(__Frame.value, __Frame.set, None, None)

    
    # Element {http://www.stibosystems.com/step}NoteFrame uses Python identifier NoteFrame
    __NoteFrame = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'NoteFrame'), 'NoteFrame', '__httpwww_stibosystems_comstep_PageContentsType_httpwww_stibosystems_comstepNoteFrame', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2893, 12), )

    
    NoteFrame = property(__NoteFrame.value, __NoteFrame.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GalleyFrame uses Python identifier GalleyFrame
    __GalleyFrame = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GalleyFrame'), 'GalleyFrame', '__httpwww_stibosystems_comstep_PageContentsType_httpwww_stibosystems_comstepGalleyFrame', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2894, 12), )

    
    GalleyFrame = property(__GalleyFrame.value, __GalleyFrame.set, None, None)

    _ElementMap.update({
        __Frame.name() : __Frame,
        __NoteFrame.name() : __NoteFrame,
        __GalleyFrame.name() : __GalleyFrame
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.PageContentsType = PageContentsType
Namespace.addCategoryObject('typeBinding', 'PageContentsType', PageContentsType)


# Complex type {http://www.stibosystems.com/step}PagesType with content type ELEMENT_ONLY
class PagesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PagesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PagesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2948, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Page uses Python identifier Page
    __Page = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Page'), 'Page', '__httpwww_stibosystems_comstep_PagesType_httpwww_stibosystems_comstepPage', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2950, 12), )

    
    Page = property(__Page.value, __Page.set, None, None)

    _ElementMap.update({
        __Page.name() : __Page
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.PagesType = PagesType
Namespace.addCategoryObject('typeBinding', 'PagesType', PagesType)


# Complex type {http://www.stibosystems.com/step}ProductTemplateType with content type ELEMENT_ONLY
class ProductTemplateType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductTemplateType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductTemplateType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3315, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_ProductTemplateType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3317, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    _ElementMap.update({
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ProductTemplateType = ProductTemplateType
Namespace.addCategoryObject('typeBinding', 'ProductTemplateType', ProductTemplateType)


# Complex type {http://www.stibosystems.com/step}PublicationGroupsType with content type ELEMENT_ONLY
class PublicationGroupsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PublicationGroupsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PublicationGroupsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3600, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}PublicationGroup uses Python identifier PublicationGroup
    __PublicationGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup'), 'PublicationGroup', '__httpwww_stibosystems_comstep_PublicationGroupsType_httpwww_stibosystems_comstepPublicationGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3602, 12), )

    
    PublicationGroup = property(__PublicationGroup.value, __PublicationGroup.set, None, None)

    
    # Attribute ClearExistingBasketContent uses Python identifier ClearExistingBasketContent
    __ClearExistingBasketContent = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClearExistingBasketContent'), 'ClearExistingBasketContent', '__httpwww_stibosystems_comstep_PublicationGroupsType_ClearExistingBasketContent', pyxb.binding.datatypes.boolean)
    __ClearExistingBasketContent._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3604, 8)
    __ClearExistingBasketContent._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3604, 8)
    
    ClearExistingBasketContent = property(__ClearExistingBasketContent.value, __ClearExistingBasketContent.set, None, '\n                    If set to true, the existing content of imported baskets will be cleared.\n                ')

    _ElementMap.update({
        __PublicationGroup.name() : __PublicationGroup
    })
    _AttributeMap.update({
        __ClearExistingBasketContent.name() : __ClearExistingBasketContent
    })
_module_typeBindings.PublicationGroupsType = PublicationGroupsType
Namespace.addCategoryObject('typeBinding', 'PublicationGroupsType', PublicationGroupsType)


# Complex type {http://www.stibosystems.com/step}QualifiersType with content type ELEMENT_ONLY
class QualifiersType (pyxb.binding.basis.complexTypeDefinition):
    """
               The list of qualifiers used the XML file.
           """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'QualifiersType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3677, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Qualifier uses Python identifier Qualifier
    __Qualifier = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Qualifier'), 'Qualifier', '__httpwww_stibosystems_comstep_QualifiersType_httpwww_stibosystems_comstepQualifier', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3684, 12), )

    
    Qualifier = property(__Qualifier.value, __Qualifier.set, None, None)

    _ElementMap.update({
        __Qualifier.name() : __Qualifier
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.QualifiersType = QualifiersType
Namespace.addCategoryObject('typeBinding', 'QualifiersType', QualifiersType)


# Complex type {http://www.stibosystems.com/step}ReplacementRulesType with content type ELEMENT_ONLY
class ReplacementRulesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplacementRulesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplacementRulesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3694, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Attributes uses Python identifier Attributes
    __Attributes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Attributes'), 'Attributes', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepAttributes', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3696, 12), )

    
    Attributes = property(__Attributes.value, __Attributes.set, None, '\n                        Replacement rules for attribute definitions\n                    ')

    
    # Element {http://www.stibosystems.com/step}LinkTypes uses Python identifier LinkTypes
    __LinkTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LinkTypes'), 'LinkTypes', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepLinkTypes', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3703, 12), )

    
    LinkTypes = property(__LinkTypes.value, __LinkTypes.set, None, '\n                        Replacement rules for link type definitions, i.e. reference type and classification product link type definitions\n                    ')

    
    # Element {http://www.stibosystems.com/step}UserTypes uses Python identifier UserTypes
    __UserTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypes'), 'UserTypes', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepUserTypes', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3710, 12), )

    
    UserTypes = property(__UserTypes.value, __UserTypes.set, None, '\n                        Replacement rules for user type a.k.a. object type definitions\n                    ')

    
    # Element {http://www.stibosystems.com/step}UserGroups uses Python identifier UserGroups
    __UserGroups = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserGroups'), 'UserGroups', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepUserGroups', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3717, 12), )

    
    UserGroups = property(__UserGroups.value, __UserGroups.set, None, '\n                        Replacement rules for user group definitions\n                    ')

    
    # Element {http://www.stibosystems.com/step}Products uses Python identifier Products
    __Products = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Products'), 'Products', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepProducts', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3724, 12), )

    
    Products = property(__Products.value, __Products.set, None, '\n                        Replacement rules for products\n                    ')

    
    # Element {http://www.stibosystems.com/step}Classifications uses Python identifier Classifications
    __Classifications = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classifications'), 'Classifications', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepClassifications', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3731, 12), )

    
    Classifications = property(__Classifications.value, __Classifications.set, None, '\n                        Replacement rules for classifications\n                    ')

    
    # Element {http://www.stibosystems.com/step}Entities uses Python identifier Entities
    __Entities = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Entities'), 'Entities', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepEntities', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3738, 12), )

    
    Entities = property(__Entities.value, __Entities.set, None, '\n                        Replacement rules for entities\n                    ')

    
    # Element {http://www.stibosystems.com/step}Assets uses Python identifier Assets
    __Assets = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Assets'), 'Assets', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepAssets', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3745, 12), )

    
    Assets = property(__Assets.value, __Assets.set, None, '\n                        Replacement rules for assets\n                    ')

    
    # Element {http://www.stibosystems.com/step}ReplaceProductValuesForAttributeGroup uses Python identifier ReplaceProductValuesForAttributeGroup
    __ReplaceProductValuesForAttributeGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductValuesForAttributeGroup'), 'ReplaceProductValuesForAttributeGroup', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepReplaceProductValuesForAttributeGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3752, 12), )

    
    ReplaceProductValuesForAttributeGroup = property(__ReplaceProductValuesForAttributeGroup.value, __ReplaceProductValuesForAttributeGroup.set, None, '\n                        @Deprecated Replaced by ReplaceValues in ReplacementRules structure.\n                        This only works for products.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ReplaceProductToProductCrossReference uses Python identifier ReplaceProductToProductCrossReference
    __ReplaceProductToProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToProductCrossReference'), 'ReplaceProductToProductCrossReference', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepReplaceProductToProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3761, 12), )

    
    ReplaceProductToProductCrossReference = property(__ReplaceProductToProductCrossReference.value, __ReplaceProductToProductCrossReference.set, None, '\n                        @Deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ReplaceProductToAssetCrossReference uses Python identifier ReplaceProductToAssetCrossReference
    __ReplaceProductToAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToAssetCrossReference'), 'ReplaceProductToAssetCrossReference', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepReplaceProductToAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3769, 12), )

    
    ReplaceProductToAssetCrossReference = property(__ReplaceProductToAssetCrossReference.value, __ReplaceProductToAssetCrossReference.set, None, '\n                        @Deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ReplaceClassificationReference uses Python identifier ReplaceClassificationReference
    __ReplaceClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReference'), 'ReplaceClassificationReference', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepReplaceClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3777, 12), )

    
    ReplaceClassificationReference = property(__ReplaceClassificationReference.value, __ReplaceClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceCrossReference uses Python identifier ReplaceCrossReference
    __ReplaceCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReference'), 'ReplaceCrossReference', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepReplaceCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3779, 12), )

    
    ReplaceCrossReference = property(__ReplaceCrossReference.value, __ReplaceCrossReference.set, None, '\n                        @Deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ReplaceDataContainer uses Python identifier ReplaceDataContainer
    __ReplaceDataContainer = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainer'), 'ReplaceDataContainer', '__httpwww_stibosystems_comstep_ReplacementRulesType_httpwww_stibosystems_comstepReplaceDataContainer', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3787, 12), )

    
    ReplaceDataContainer = property(__ReplaceDataContainer.value, __ReplaceDataContainer.set, None, None)

    _ElementMap.update({
        __Attributes.name() : __Attributes,
        __LinkTypes.name() : __LinkTypes,
        __UserTypes.name() : __UserTypes,
        __UserGroups.name() : __UserGroups,
        __Products.name() : __Products,
        __Classifications.name() : __Classifications,
        __Entities.name() : __Entities,
        __Assets.name() : __Assets,
        __ReplaceProductValuesForAttributeGroup.name() : __ReplaceProductValuesForAttributeGroup,
        __ReplaceProductToProductCrossReference.name() : __ReplaceProductToProductCrossReference,
        __ReplaceProductToAssetCrossReference.name() : __ReplaceProductToAssetCrossReference,
        __ReplaceClassificationReference.name() : __ReplaceClassificationReference,
        __ReplaceCrossReference.name() : __ReplaceCrossReference,
        __ReplaceDataContainer.name() : __ReplaceDataContainer
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplacementRulesType = ReplacementRulesType
Namespace.addCategoryObject('typeBinding', 'ReplacementRulesType', ReplacementRulesType)


# Complex type {http://www.stibosystems.com/step}ReplaceAttributesType with content type ELEMENT_ONLY
class ReplaceAttributesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceAttributesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3792, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceAttributeGroupLinks uses Python identifier ReplaceAttributeGroupLinks
    __ReplaceAttributeGroupLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeGroupLinks'), 'ReplaceAttributeGroupLinks', '__httpwww_stibosystems_comstep_ReplaceAttributesType_httpwww_stibosystems_comstepReplaceAttributeGroupLinks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3794, 12), )

    
    ReplaceAttributeGroupLinks = property(__ReplaceAttributeGroupLinks.value, __ReplaceAttributeGroupLinks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceUserTypeLinks uses Python identifier ReplaceUserTypeLinks
    __ReplaceUserTypeLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks'), 'ReplaceUserTypeLinks', '__httpwww_stibosystems_comstep_ReplaceAttributesType_httpwww_stibosystems_comstepReplaceUserTypeLinks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3795, 12), )

    
    ReplaceUserTypeLinks = property(__ReplaceUserTypeLinks.value, __ReplaceUserTypeLinks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceUnitLinks uses Python identifier ReplaceUnitLinks
    __ReplaceUnitLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUnitLinks'), 'ReplaceUnitLinks', '__httpwww_stibosystems_comstep_ReplaceAttributesType_httpwww_stibosystems_comstepReplaceUnitLinks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3796, 12), )

    
    ReplaceUnitLinks = property(__ReplaceUnitLinks.value, __ReplaceUnitLinks.set, None, None)

    _ElementMap.update({
        __ReplaceAttributeGroupLinks.name() : __ReplaceAttributeGroupLinks,
        __ReplaceUserTypeLinks.name() : __ReplaceUserTypeLinks,
        __ReplaceUnitLinks.name() : __ReplaceUnitLinks
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceAttributesType = ReplaceAttributesType
Namespace.addCategoryObject('typeBinding', 'ReplaceAttributesType', ReplaceAttributesType)


# Complex type {http://www.stibosystems.com/step}ReplaceAttributeGroupLinksType with content type EMPTY
class ReplaceAttributeGroupLinksType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing attribute group links should be replaced with the ones present in the import file
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeGroupLinksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3800, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceAttributeGroupLinksType = ReplaceAttributeGroupLinksType
Namespace.addCategoryObject('typeBinding', 'ReplaceAttributeGroupLinksType', ReplaceAttributeGroupLinksType)


# Complex type {http://www.stibosystems.com/step}ReplaceUserTypeLinksType with content type EMPTY
class ReplaceUserTypeLinksType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing user type links (links that express which other user types, i.e. object types,
                a user type/object type is valid below) should be replaced with the ones present in the import file.
                Notice that user type links that are in use in present revisions in any context/workspace cannot be replaced.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3809, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceUserTypeLinksType = ReplaceUserTypeLinksType
Namespace.addCategoryObject('typeBinding', 'ReplaceUserTypeLinksType', ReplaceUserTypeLinksType)


# Complex type {http://www.stibosystems.com/step}ReplaceUnitLinksType with content type EMPTY
class ReplaceUnitLinksType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing unit links (units valid for an attribute) should be replaced with the ones present in the import file.
                Notice that a unit link cannot be replaced if there are present values in any context/workspace using the unit.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceUnitLinksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3820, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceUnitLinksType = ReplaceUnitLinksType
Namespace.addCategoryObject('typeBinding', 'ReplaceUnitLinksType', ReplaceUnitLinksType)


# Complex type {http://www.stibosystems.com/step}ReplaceLinkTypesType with content type ELEMENT_ONLY
class ReplaceLinkTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceLinkTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceLinkTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3830, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceUserTypeLinks uses Python identifier ReplaceUserTypeLinks
    __ReplaceUserTypeLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks'), 'ReplaceUserTypeLinks', '__httpwww_stibosystems_comstep_ReplaceLinkTypesType_httpwww_stibosystems_comstepReplaceUserTypeLinks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3832, 12), )

    
    ReplaceUserTypeLinks = property(__ReplaceUserTypeLinks.value, __ReplaceUserTypeLinks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceTargetUserTypeLinks uses Python identifier ReplaceTargetUserTypeLinks
    __ReplaceTargetUserTypeLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceTargetUserTypeLinks'), 'ReplaceTargetUserTypeLinks', '__httpwww_stibosystems_comstep_ReplaceLinkTypesType_httpwww_stibosystems_comstepReplaceTargetUserTypeLinks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3833, 12), )

    
    ReplaceTargetUserTypeLinks = property(__ReplaceTargetUserTypeLinks.value, __ReplaceTargetUserTypeLinks.set, None, None)

    _ElementMap.update({
        __ReplaceUserTypeLinks.name() : __ReplaceUserTypeLinks,
        __ReplaceTargetUserTypeLinks.name() : __ReplaceTargetUserTypeLinks
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceLinkTypesType = ReplaceLinkTypesType
Namespace.addCategoryObject('typeBinding', 'ReplaceLinkTypesType', ReplaceLinkTypesType)


# Complex type {http://www.stibosystems.com/step}ReplaceSourceUserTypeLinksType with content type EMPTY
class ReplaceSourceUserTypeLinksType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing user types links (i.e. valid source object types) should be replaced with the ones present in the import file.
                Notice that for classification product link type definitions, this instruction will cause valid product object types to be replaced
                regardless of whether links of the type are owned by the product or the classification side. Further notice that it is not possible
                to replace user type links if these are used by present references/links in any context/workspace.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceSourceUserTypeLinksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3837, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceSourceUserTypeLinksType = ReplaceSourceUserTypeLinksType
Namespace.addCategoryObject('typeBinding', 'ReplaceSourceUserTypeLinksType', ReplaceSourceUserTypeLinksType)


# Complex type {http://www.stibosystems.com/step}ReplaceTargetUserTypeLinksType with content type EMPTY
class ReplaceTargetUserTypeLinksType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing target user types links (i.e. valid target object types) should be replaced with the ones present in the import file.
                Notice that for classification product link type definitions, this instruction will cause valid classification object types to be replaced
                regardless of whether links of the type are owned by the product or the classification side. Further notice that it is not possible
                to replace target user type links if these are used by present references/links in any context/workspace.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceTargetUserTypeLinksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3849, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceTargetUserTypeLinksType = ReplaceTargetUserTypeLinksType
Namespace.addCategoryObject('typeBinding', 'ReplaceTargetUserTypeLinksType', ReplaceTargetUserTypeLinksType)


# Complex type {http://www.stibosystems.com/step}ReplaceUserTypesType with content type ELEMENT_ONLY
class ReplaceUserTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceUserTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3861, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceUserTypeLinks uses Python identifier ReplaceUserTypeLinks
    __ReplaceUserTypeLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks'), 'ReplaceUserTypeLinks', '__httpwww_stibosystems_comstep_ReplaceUserTypesType_httpwww_stibosystems_comstepReplaceUserTypeLinks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3863, 12), )

    
    ReplaceUserTypeLinks = property(__ReplaceUserTypeLinks.value, __ReplaceUserTypeLinks.set, None, None)

    _ElementMap.update({
        __ReplaceUserTypeLinks.name() : __ReplaceUserTypeLinks
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceUserTypesType = ReplaceUserTypesType
Namespace.addCategoryObject('typeBinding', 'ReplaceUserTypesType', ReplaceUserTypesType)


# Complex type {http://www.stibosystems.com/step}ReplaceUserGroupsType with content type ELEMENT_ONLY
class ReplaceUserGroupsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceUserGroupsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserGroupsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3867, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplacePrivilegeRules uses Python identifier ReplacePrivilegeRules
    __ReplacePrivilegeRules = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplacePrivilegeRules'), 'ReplacePrivilegeRules', '__httpwww_stibosystems_comstep_ReplaceUserGroupsType_httpwww_stibosystems_comstepReplacePrivilegeRules', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3869, 12), )

    
    ReplacePrivilegeRules = property(__ReplacePrivilegeRules.value, __ReplacePrivilegeRules.set, None, None)

    _ElementMap.update({
        __ReplacePrivilegeRules.name() : __ReplacePrivilegeRules
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceUserGroupsType = ReplaceUserGroupsType
Namespace.addCategoryObject('typeBinding', 'ReplaceUserGroupsType', ReplaceUserGroupsType)


# Complex type {http://www.stibosystems.com/step}ReplacePrivilegeRulesType with content type EMPTY
class ReplacePrivilegeRulesType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing privilege rules should be replaced with the ones present in the import file
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplacePrivilegeRulesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3873, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplacePrivilegeRulesType = ReplacePrivilegeRulesType
Namespace.addCategoryObject('typeBinding', 'ReplacePrivilegeRulesType', ReplacePrivilegeRulesType)


# Complex type {http://www.stibosystems.com/step}ReplaceProductsType with content type ELEMENT_ONLY
class ReplaceProductsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceProductsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3882, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceValues uses Python identifier ReplaceValues
    __ReplaceValues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), 'ReplaceValues', '__httpwww_stibosystems_comstep_ReplaceProductsType_httpwww_stibosystems_comstepReplaceValues', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3884, 12), )

    
    ReplaceValues = property(__ReplaceValues.value, __ReplaceValues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceCrossReferences uses Python identifier ReplaceCrossReferences
    __ReplaceCrossReferences = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), 'ReplaceCrossReferences', '__httpwww_stibosystems_comstep_ReplaceProductsType_httpwww_stibosystems_comstepReplaceCrossReferences', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3885, 12), )

    
    ReplaceCrossReferences = property(__ReplaceCrossReferences.value, __ReplaceCrossReferences.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceAttributeLinks uses Python identifier ReplaceAttributeLinks
    __ReplaceAttributeLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinks'), 'ReplaceAttributeLinks', '__httpwww_stibosystems_comstep_ReplaceProductsType_httpwww_stibosystems_comstepReplaceAttributeLinks', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3886, 12), )

    
    ReplaceAttributeLinks = property(__ReplaceAttributeLinks.value, __ReplaceAttributeLinks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceOverrideSubProducts uses Python identifier ReplaceOverrideSubProducts
    __ReplaceOverrideSubProducts = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceOverrideSubProducts'), 'ReplaceOverrideSubProducts', '__httpwww_stibosystems_comstep_ReplaceProductsType_httpwww_stibosystems_comstepReplaceOverrideSubProducts', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3887, 12), )

    
    ReplaceOverrideSubProducts = property(__ReplaceOverrideSubProducts.value, __ReplaceOverrideSubProducts.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceClassificationReferences uses Python identifier ReplaceClassificationReferences
    __ReplaceClassificationReferences = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReferences'), 'ReplaceClassificationReferences', '__httpwww_stibosystems_comstep_ReplaceProductsType_httpwww_stibosystems_comstepReplaceClassificationReferences', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3888, 12), )

    
    ReplaceClassificationReferences = property(__ReplaceClassificationReferences.value, __ReplaceClassificationReferences.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceDataContainers uses Python identifier ReplaceDataContainers
    __ReplaceDataContainers = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainers'), 'ReplaceDataContainers', '__httpwww_stibosystems_comstep_ReplaceProductsType_httpwww_stibosystems_comstepReplaceDataContainers', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3889, 12), )

    
    ReplaceDataContainers = property(__ReplaceDataContainers.value, __ReplaceDataContainers.set, None, None)

    _ElementMap.update({
        __ReplaceValues.name() : __ReplaceValues,
        __ReplaceCrossReferences.name() : __ReplaceCrossReferences,
        __ReplaceAttributeLinks.name() : __ReplaceAttributeLinks,
        __ReplaceOverrideSubProducts.name() : __ReplaceOverrideSubProducts,
        __ReplaceClassificationReferences.name() : __ReplaceClassificationReferences,
        __ReplaceDataContainers.name() : __ReplaceDataContainers
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceProductsType = ReplaceProductsType
Namespace.addCategoryObject('typeBinding', 'ReplaceProductsType', ReplaceProductsType)


# Complex type {http://www.stibosystems.com/step}ReplaceClassificationsType with content type ELEMENT_ONLY
class ReplaceClassificationsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceClassificationsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3893, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceValues uses Python identifier ReplaceValues
    __ReplaceValues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), 'ReplaceValues', '__httpwww_stibosystems_comstep_ReplaceClassificationsType_httpwww_stibosystems_comstepReplaceValues', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3895, 12), )

    
    ReplaceValues = property(__ReplaceValues.value, __ReplaceValues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceCrossReferences uses Python identifier ReplaceCrossReferences
    __ReplaceCrossReferences = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), 'ReplaceCrossReferences', '__httpwww_stibosystems_comstep_ReplaceClassificationsType_httpwww_stibosystems_comstepReplaceCrossReferences', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3896, 12), )

    
    ReplaceCrossReferences = property(__ReplaceCrossReferences.value, __ReplaceCrossReferences.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceAttributeLinks uses Python identifier ReplaceAttributeLinks
    __ReplaceAttributeLinks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinks'), 'ReplaceAttributeLinks', '__httpwww_stibosystems_comstep_ReplaceClassificationsType_httpwww_stibosystems_comstepReplaceAttributeLinks', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3897, 12), )

    
    ReplaceAttributeLinks = property(__ReplaceAttributeLinks.value, __ReplaceAttributeLinks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceProductReferences uses Python identifier ReplaceProductReferences
    __ReplaceProductReferences = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductReferences'), 'ReplaceProductReferences', '__httpwww_stibosystems_comstep_ReplaceClassificationsType_httpwww_stibosystems_comstepReplaceProductReferences', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3898, 12), )

    
    ReplaceProductReferences = property(__ReplaceProductReferences.value, __ReplaceProductReferences.set, None, None)

    _ElementMap.update({
        __ReplaceValues.name() : __ReplaceValues,
        __ReplaceCrossReferences.name() : __ReplaceCrossReferences,
        __ReplaceAttributeLinks.name() : __ReplaceAttributeLinks,
        __ReplaceProductReferences.name() : __ReplaceProductReferences
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceClassificationsType = ReplaceClassificationsType
Namespace.addCategoryObject('typeBinding', 'ReplaceClassificationsType', ReplaceClassificationsType)


# Complex type {http://www.stibosystems.com/step}ReplaceEntitiesType with content type ELEMENT_ONLY
class ReplaceEntitiesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceEntitiesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceEntitiesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3902, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceValues uses Python identifier ReplaceValues
    __ReplaceValues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), 'ReplaceValues', '__httpwww_stibosystems_comstep_ReplaceEntitiesType_httpwww_stibosystems_comstepReplaceValues', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3904, 12), )

    
    ReplaceValues = property(__ReplaceValues.value, __ReplaceValues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceCrossReferences uses Python identifier ReplaceCrossReferences
    __ReplaceCrossReferences = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), 'ReplaceCrossReferences', '__httpwww_stibosystems_comstep_ReplaceEntitiesType_httpwww_stibosystems_comstepReplaceCrossReferences', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3905, 12), )

    
    ReplaceCrossReferences = property(__ReplaceCrossReferences.value, __ReplaceCrossReferences.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceDataContainers uses Python identifier ReplaceDataContainers
    __ReplaceDataContainers = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainers'), 'ReplaceDataContainers', '__httpwww_stibosystems_comstep_ReplaceEntitiesType_httpwww_stibosystems_comstepReplaceDataContainers', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3906, 12), )

    
    ReplaceDataContainers = property(__ReplaceDataContainers.value, __ReplaceDataContainers.set, None, None)

    _ElementMap.update({
        __ReplaceValues.name() : __ReplaceValues,
        __ReplaceCrossReferences.name() : __ReplaceCrossReferences,
        __ReplaceDataContainers.name() : __ReplaceDataContainers
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceEntitiesType = ReplaceEntitiesType
Namespace.addCategoryObject('typeBinding', 'ReplaceEntitiesType', ReplaceEntitiesType)


# Complex type {http://www.stibosystems.com/step}ReplaceAssetsType with content type ELEMENT_ONLY
class ReplaceAssetsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceAssetsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceAssetsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3910, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ReplaceValues uses Python identifier ReplaceValues
    __ReplaceValues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), 'ReplaceValues', '__httpwww_stibosystems_comstep_ReplaceAssetsType_httpwww_stibosystems_comstepReplaceValues', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3912, 12), )

    
    ReplaceValues = property(__ReplaceValues.value, __ReplaceValues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplaceCrossReferences uses Python identifier ReplaceCrossReferences
    __ReplaceCrossReferences = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), 'ReplaceCrossReferences', '__httpwww_stibosystems_comstep_ReplaceAssetsType_httpwww_stibosystems_comstepReplaceCrossReferences', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3913, 12), )

    
    ReplaceCrossReferences = property(__ReplaceCrossReferences.value, __ReplaceCrossReferences.set, None, None)

    _ElementMap.update({
        __ReplaceValues.name() : __ReplaceValues,
        __ReplaceCrossReferences.name() : __ReplaceCrossReferences
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceAssetsType = ReplaceAssetsType
Namespace.addCategoryObject('typeBinding', 'ReplaceAssetsType', ReplaceAssetsType)


# Complex type {http://www.stibosystems.com/step}ReplaceOverrideSubProductsType with content type EMPTY
class ReplaceOverrideSubProductsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing products "adopted" for a product override should be replaced with the ones present in the import file
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceOverrideSubProductsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3998, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ReplaceOverrideSubProductsType = ReplaceOverrideSubProductsType
Namespace.addCategoryObject('typeBinding', 'ReplaceOverrideSubProductsType', ReplaceOverrideSubProductsType)


# Complex type {http://www.stibosystems.com/step}ReplaceDataContainersType with content type EMPTY
class ReplaceDataContainersType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing data container objects should be replaced with the ones present in the import file.
                The instruction can either match all data container types or a specific type (DataContainerTypeID attribute).
                If a data container type is matched by multiple rules, the most specific rule will be used.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainersType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4060, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute DataContainerTypeID uses Python identifier DataContainerTypeID
    __DataContainerTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DataContainerTypeID'), 'DataContainerTypeID', '__httpwww_stibosystems_comstep_ReplaceDataContainersType_DataContainerTypeID', pyxb.binding.datatypes.string)
    __DataContainerTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4068, 8)
    __DataContainerTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4068, 8)
    
    DataContainerTypeID = property(__DataContainerTypeID.value, __DataContainerTypeID.set, None, '\n                    Makes the instruction apply only for a specific data container type\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __DataContainerTypeID.name() : __DataContainerTypeID
    })
_module_typeBindings.ReplaceDataContainersType = ReplaceDataContainersType
Namespace.addCategoryObject('typeBinding', 'ReplaceDataContainersType', ReplaceDataContainersType)


# Complex type {http://www.stibosystems.com/step}RowTypesType with content type ELEMENT_ONLY
class RowTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}RowTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'RowTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4189, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}RowType uses Python identifier RowType
    __RowType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RowType'), 'RowType', '__httpwww_stibosystems_comstep_RowTypesType_httpwww_stibosystems_comstepRowType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4191, 12), )

    
    RowType = property(__RowType.value, __RowType.set, None, None)

    _ElementMap.update({
        __RowType.name() : __RowType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.RowTypesType = RowTypesType
Namespace.addCategoryObject('typeBinding', 'RowTypesType', RowTypesType)


# Complex type {http://www.stibosystems.com/step}SystemSetupType with content type ELEMENT_ONLY
class SystemSetupType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SystemSetupType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SystemSetupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4389, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SystemSetupValue uses Python identifier SystemSetupValue
    __SystemSetupValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SystemSetupValue'), 'SystemSetupValue', '__httpwww_stibosystems_comstep_SystemSetupType_httpwww_stibosystems_comstepSystemSetupValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4391, 12), )

    
    SystemSetupValue = property(__SystemSetupValue.value, __SystemSetupValue.set, None, None)

    _ElementMap.update({
        __SystemSetupValue.name() : __SystemSetupValue
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.SystemSetupType = SystemSetupType
Namespace.addCategoryObject('typeBinding', 'SystemSetupType', SystemSetupType)


# Complex type {http://www.stibosystems.com/step}TablesType with content type ELEMENT_ONLY
class TablesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TablesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TablesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4437, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TableDefinition uses Python identifier TableDefinition
    __TableDefinition = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableDefinition'), 'TableDefinition', '__httpwww_stibosystems_comstep_TablesType_httpwww_stibosystems_comstepTableDefinition', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4439, 12), )

    
    TableDefinition = property(__TableDefinition.value, __TableDefinition.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Table uses Python identifier Table
    __Table = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Table'), 'Table', '__httpwww_stibosystems_comstep_TablesType_httpwww_stibosystems_comstepTable', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4440, 12), )

    
    Table = property(__Table.value, __Table.set, None, None)

    _ElementMap.update({
        __TableDefinition.name() : __TableDefinition,
        __Table.name() : __Table
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TablesType = TablesType
Namespace.addCategoryObject('typeBinding', 'TablesType', TablesType)


# Complex type {http://www.stibosystems.com/step}TableDefinitionType with content type ELEMENT_ONLY
class TableDefinitionType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableDefinitionType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableDefinitionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4444, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TableXML uses Python identifier TableXML
    __TableXML = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableXML'), 'TableXML', '__httpwww_stibosystems_comstep_TableDefinitionType_httpwww_stibosystems_comstepTableXML', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4446, 12), )

    
    TableXML = property(__TableXML.value, __TableXML.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableFreeTextXML uses Python identifier TableFreeTextXML
    __TableFreeTextXML = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableFreeTextXML'), 'TableFreeTextXML', '__httpwww_stibosystems_comstep_TableDefinitionType_httpwww_stibosystems_comstepTableFreeTextXML', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4447, 12), )

    
    TableFreeTextXML = property(__TableFreeTextXML.value, __TableFreeTextXML.set, None, None)

    _ElementMap.update({
        __TableXML.name() : __TableXML,
        __TableFreeTextXML.name() : __TableFreeTextXML
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TableDefinitionType = TableDefinitionType
Namespace.addCategoryObject('typeBinding', 'TableDefinitionType', TableDefinitionType)


# Complex type {http://www.stibosystems.com/step}TableConfigurationType with content type ELEMENT_ONLY
class TableConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """
                The configuration of a table definition or table plugin. e.g. table transformations or header repeating pagination plugin settings.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4451, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_TableConfigurationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4458, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        The configuration is an internal format.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_TableConfigurationType_ID', pyxb.binding.datatypes.string, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4466, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4466, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID (table ID or table plugin name) that this configuration is for.\n                ')

    _ElementMap.update({
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.TableConfigurationType = TableConfigurationType
Namespace.addCategoryObject('typeBinding', 'TableConfigurationType', TableConfigurationType)


# Complex type {http://www.stibosystems.com/step}TableColorsType with content type ELEMENT_ONLY
class TableColorsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableColorsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableColorsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4522, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TableColor uses Python identifier TableColor
    __TableColor = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableColor'), 'TableColor', '__httpwww_stibosystems_comstep_TableColorsType_httpwww_stibosystems_comstepTableColor', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4524, 12), )

    
    TableColor = property(__TableColor.value, __TableColor.set, None, None)

    _ElementMap.update({
        __TableColor.name() : __TableColor
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TableColorsType = TableColorsType
Namespace.addCategoryObject('typeBinding', 'TableColorsType', TableColorsType)


# Complex type {http://www.stibosystems.com/step}TableColorType with content type EMPTY
class TableColorType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableColorType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableColorType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4528, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Name uses Python identifier Name
    __Name = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Name'), 'Name', '__httpwww_stibosystems_comstep_TableColorType_Name', pyxb.binding.datatypes.string, required=True)
    __Name._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4529, 8)
    __Name._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4529, 8)
    
    Name = property(__Name.value, __Name.set, None, '\n                    The name of the color\n                ')

    
    # Attribute Color uses Python identifier Color
    __Color = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Color'), 'Color', '__httpwww_stibosystems_comstep_TableColorType_Color', pyxb.binding.datatypes.integer, required=True)
    __Color._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4536, 8)
    __Color._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4536, 8)
    
    Color = property(__Color.value, __Color.set, None, '\n                    The RGB value of the color in integer form. (Bits 24-31 are alpha, 16-23 are red, 8-15 are green, 0-7 are\n                    * blue).\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Name.name() : __Name,
        __Color.name() : __Color
    })
_module_typeBindings.TableColorType = TableColorType
Namespace.addCategoryObject('typeBinding', 'TableColorType', TableColorType)


# Complex type {http://www.stibosystems.com/step}TableRulesType with content type ELEMENT_ONLY
class TableRulesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableRulesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableRulesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4546, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TableRule uses Python identifier TableRule
    __TableRule = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableRule'), 'TableRule', '__httpwww_stibosystems_comstep_TableRulesType_httpwww_stibosystems_comstepTableRule', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4548, 12), )

    
    TableRule = property(__TableRule.value, __TableRule.set, None, None)

    _ElementMap.update({
        __TableRule.name() : __TableRule
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TableRulesType = TableRulesType
Namespace.addCategoryObject('typeBinding', 'TableRulesType', TableRulesType)


# Complex type {http://www.stibosystems.com/step}TableRuleType with content type EMPTY
class TableRuleType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableRuleType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableRuleType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4552, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Name uses Python identifier Name
    __Name = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Name'), 'Name', '__httpwww_stibosystems_comstep_TableRuleType_Name', pyxb.binding.datatypes.string, required=True)
    __Name._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4553, 8)
    __Name._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4553, 8)
    
    Name = property(__Name.value, __Name.set, None, '\n                    The name of the rule\n                ')

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_TableRuleType_Width', pyxb.binding.datatypes.integer, required=True)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4560, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4560, 8)
    
    Width = property(__Width.value, __Width.set, None, '\n                    The width of the rule\n                ')

    
    # Attribute Color uses Python identifier Color
    __Color = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Color'), 'Color', '__httpwww_stibosystems_comstep_TableRuleType_Color', pyxb.binding.datatypes.string, required=True)
    __Color._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4567, 8)
    __Color._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4567, 8)
    
    Color = property(__Color.value, __Color.set, None, '\n                    The name of the color to use for the rule.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Name.name() : __Name,
        __Width.name() : __Width,
        __Color.name() : __Color
    })
_module_typeBindings.TableRuleType = TableRuleType
Namespace.addCategoryObject('typeBinding', 'TableRuleType', TableRuleType)


# Complex type {http://www.stibosystems.com/step}RowColumnTableGroupListType with content type ELEMENT_ONLY
class RowColumnTableGroupListType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}RowColumnTableGroupListType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroupListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4576, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}RowColumnTableGroup uses Python identifier RowColumnTableGroup
    __RowColumnTableGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroup'), 'RowColumnTableGroup', '__httpwww_stibosystems_comstep_RowColumnTableGroupListType_httpwww_stibosystems_comstepRowColumnTableGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4578, 12), )

    
    RowColumnTableGroup = property(__RowColumnTableGroup.value, __RowColumnTableGroup.set, None, None)

    _ElementMap.update({
        __RowColumnTableGroup.name() : __RowColumnTableGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.RowColumnTableGroupListType = RowColumnTableGroupListType
Namespace.addCategoryObject('typeBinding', 'RowColumnTableGroupListType', RowColumnTableGroupListType)


# Complex type {http://www.stibosystems.com/step}TableTypesType with content type ELEMENT_ONLY
class TableTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4605, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TableType uses Python identifier TableType
    __TableType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableType'), 'TableType', '__httpwww_stibosystems_comstep_TableTypesType_httpwww_stibosystems_comstepTableType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4607, 12), )

    
    TableType = property(__TableType.value, __TableType.set, None, None)

    _ElementMap.update({
        __TableType.name() : __TableType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TableTypesType = TableTypesType
Namespace.addCategoryObject('typeBinding', 'TableTypesType', TableTypesType)


# Complex type {http://www.stibosystems.com/step}TagGroupListType with content type ELEMENT_ONLY
class TagGroupListType (pyxb.binding.basis.complexTypeDefinition):
    """
                The list of all tag groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TagGroupListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4757, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}StyleTagGroup uses Python identifier StyleTagGroup
    __StyleTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroup'), 'StyleTagGroup', '__httpwww_stibosystems_comstep_TagGroupListType_httpwww_stibosystems_comstepStyleTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4764, 12), )

    
    StyleTagGroup = property(__StyleTagGroup.value, __StyleTagGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SpecialCharacterTagGroup uses Python identifier SpecialCharacterTagGroup
    __SpecialCharacterTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroup'), 'SpecialCharacterTagGroup', '__httpwww_stibosystems_comstep_TagGroupListType_httpwww_stibosystems_comstepSpecialCharacterTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4765, 12), )

    
    SpecialCharacterTagGroup = property(__SpecialCharacterTagGroup.value, __SpecialCharacterTagGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CharacterTagGroup uses Python identifier CharacterTagGroup
    __CharacterTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroup'), 'CharacterTagGroup', '__httpwww_stibosystems_comstep_TagGroupListType_httpwww_stibosystems_comstepCharacterTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4766, 12), )

    
    CharacterTagGroup = property(__CharacterTagGroup.value, __CharacterTagGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}FootnoteTagGroup uses Python identifier FootnoteTagGroup
    __FootnoteTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroup'), 'FootnoteTagGroup', '__httpwww_stibosystems_comstep_TagGroupListType_httpwww_stibosystems_comstepFootnoteTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4767, 12), )

    
    FootnoteTagGroup = property(__FootnoteTagGroup.value, __FootnoteTagGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}HyperlinkTagGroup uses Python identifier HyperlinkTagGroup
    __HyperlinkTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroup'), 'HyperlinkTagGroup', '__httpwww_stibosystems_comstep_TagGroupListType_httpwww_stibosystems_comstepHyperlinkTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4768, 12), )

    
    HyperlinkTagGroup = property(__HyperlinkTagGroup.value, __HyperlinkTagGroup.set, None, None)

    _ElementMap.update({
        __StyleTagGroup.name() : __StyleTagGroup,
        __SpecialCharacterTagGroup.name() : __SpecialCharacterTagGroup,
        __CharacterTagGroup.name() : __CharacterTagGroup,
        __FootnoteTagGroup.name() : __FootnoteTagGroup,
        __HyperlinkTagGroup.name() : __HyperlinkTagGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TagGroupListType = TagGroupListType
Namespace.addCategoryObject('typeBinding', 'TagGroupListType', TagGroupListType)


# Complex type {http://www.stibosystems.com/step}TagListType with content type ELEMENT_ONLY
class TagListType (pyxb.binding.basis.complexTypeDefinition):
    """
                List of all tags in the system.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TagListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4774, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Tag uses Python identifier Tag
    __Tag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Tag'), 'Tag', '__httpwww_stibosystems_comstep_TagListType_httpwww_stibosystems_comstepTag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4781, 12), )

    
    Tag = property(__Tag.value, __Tag.set, None, '\n                        DEPRECATED. For backward compatibility. Contains all the step tags only.\n                    ')

    
    # Element {http://www.stibosystems.com/step}StyleTag uses Python identifier StyleTag
    __StyleTag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'StyleTag'), 'StyleTag', '__httpwww_stibosystems_comstep_TagListType_httpwww_stibosystems_comstepStyleTag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4788, 12), )

    
    StyleTag = property(__StyleTag.value, __StyleTag.set, None, '\n                        A style tag.\n                    ')

    
    # Element {http://www.stibosystems.com/step}SpecialCharacterTag uses Python identifier SpecialCharacterTag
    __SpecialCharacterTag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTag'), 'SpecialCharacterTag', '__httpwww_stibosystems_comstep_TagListType_httpwww_stibosystems_comstepSpecialCharacterTag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4795, 12), )

    
    SpecialCharacterTag = property(__SpecialCharacterTag.value, __SpecialCharacterTag.set, None, '\n                        A special character tag.\n                    ')

    
    # Element {http://www.stibosystems.com/step}CharacterTag uses Python identifier CharacterTag
    __CharacterTag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CharacterTag'), 'CharacterTag', '__httpwww_stibosystems_comstep_TagListType_httpwww_stibosystems_comstepCharacterTag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4802, 12), )

    
    CharacterTag = property(__CharacterTag.value, __CharacterTag.set, None, '\n                        A character tag.\n                    ')

    
    # Element {http://www.stibosystems.com/step}FootnoteTag uses Python identifier FootnoteTag
    __FootnoteTag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTag'), 'FootnoteTag', '__httpwww_stibosystems_comstep_TagListType_httpwww_stibosystems_comstepFootnoteTag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4809, 12), )

    
    FootnoteTag = property(__FootnoteTag.value, __FootnoteTag.set, None, '\n                        A footnote tag.\n                    ')

    
    # Element {http://www.stibosystems.com/step}HyperlinkTag uses Python identifier HyperlinkTag
    __HyperlinkTag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTag'), 'HyperlinkTag', '__httpwww_stibosystems_comstep_TagListType_httpwww_stibosystems_comstepHyperlinkTag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4816, 12), )

    
    HyperlinkTag = property(__HyperlinkTag.value, __HyperlinkTag.set, None, '\n                        A hyperlink tag.\n                    ')

    _ElementMap.update({
        __Tag.name() : __Tag,
        __StyleTag.name() : __StyleTag,
        __SpecialCharacterTag.name() : __SpecialCharacterTag,
        __CharacterTag.name() : __CharacterTag,
        __FootnoteTag.name() : __FootnoteTag,
        __HyperlinkTag.name() : __HyperlinkTag
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TagListType = TagListType
Namespace.addCategoryObject('typeBinding', 'TagListType', TagListType)


# Complex type {http://www.stibosystems.com/step}TagType with content type EMPTY
class TagType (pyxb.binding.basis.complexTypeDefinition):
    """
                DEPRECATED. For backward compatibility. Contains all the step tags only.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4826, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Start uses Python identifier Start
    __Start = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Start'), 'Start', '__httpwww_stibosystems_comstep_TagType_Start', pyxb.binding.datatypes.string, required=True)
    __Start._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4832, 8)
    __Start._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4832, 8)
    
    Start = property(__Start.value, __Start.set, None, None)

    
    # Attribute Stop uses Python identifier Stop
    __Stop = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Stop'), 'Stop', '__httpwww_stibosystems_comstep_TagType_Stop', pyxb.binding.datatypes.string)
    __Stop._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4833, 8)
    __Stop._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4833, 8)
    
    Stop = property(__Stop.value, __Stop.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Start.name() : __Start,
        __Stop.name() : __Stop
    })
_module_typeBindings.TagType = TagType
Namespace.addCategoryObject('typeBinding', 'TagType', TagType)


# Complex type {http://www.stibosystems.com/step}TagFormatType with content type ELEMENT_ONLY
class TagFormatType (pyxb.binding.basis.complexTypeDefinition):
    """
                Tag output conversions. Describes how tag is outputted to a given format.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TagFormatType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5025, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}FormattingStart uses Python identifier FormattingStart
    __FormattingStart = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FormattingStart'), 'FormattingStart', '__httpwww_stibosystems_comstep_TagFormatType_httpwww_stibosystems_comstepFormattingStart', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5032, 12), )

    
    FormattingStart = property(__FormattingStart.value, __FormattingStart.set, None, '\n                        How tag should be converted to given output format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}FormattingStop uses Python identifier FormattingStop
    __FormattingStop = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FormattingStop'), 'FormattingStop', '__httpwww_stibosystems_comstep_TagFormatType_httpwww_stibosystems_comstepFormattingStop', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5039, 12), )

    
    FormattingStop = property(__FormattingStop.value, __FormattingStop.set, None, '\n                        How end tag should be converted to given output format. Not relevant for character and special character tags.\n                    ')

    
    # Attribute Format uses Python identifier Format
    __Format = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Format'), 'Format', '__httpwww_stibosystems_comstep_TagFormatType_Format', pyxb.binding.datatypes.string, required=True)
    __Format._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5047, 8)
    __Format._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5047, 8)
    
    Format = property(__Format.value, __Format.set, None, '\n                    Output format.\n                ')

    _ElementMap.update({
        __FormattingStart.name() : __FormattingStart,
        __FormattingStop.name() : __FormattingStop
    })
    _AttributeMap.update({
        __Format.name() : __Format
    })
_module_typeBindings.TagFormatType = TagFormatType
Namespace.addCategoryObject('typeBinding', 'TagFormatType', TagFormatType)


# Complex type {http://www.stibosystems.com/step}FormattingType with content type MIXED
class FormattingType (pyxb.binding.basis.complexTypeDefinition):
    """
                Tag output conversions. Describes how tag is outputted to a given format.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'FormattingType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5056, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Format uses Python identifier Format
    __Format = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Format'), 'Format', '__httpwww_stibosystems_comstep_FormattingType_Format', pyxb.binding.datatypes.string, required=True)
    __Format._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5062, 8)
    __Format._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5062, 8)
    
    Format = property(__Format.value, __Format.set, None, '\n                    Output format.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Format.name() : __Format
    })
_module_typeBindings.FormattingType = FormattingType
Namespace.addCategoryObject('typeBinding', 'FormattingType', FormattingType)


# Complex type {http://www.stibosystems.com/step}TermsType with content type ELEMENT_ONLY
class TermsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TermsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TermsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5094, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Term uses Python identifier Term
    __Term = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Term'), 'Term', '__httpwww_stibosystems_comstep_TermsType_httpwww_stibosystems_comstepTerm', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5096, 12), )

    
    Term = property(__Term.value, __Term.set, None, None)

    _ElementMap.update({
        __Term.name() : __Term
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TermsType = TermsType
Namespace.addCategoryObject('typeBinding', 'TermsType', TermsType)


# Complex type {http://www.stibosystems.com/step}TextType with content type MIXED
class TextType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TextType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TextType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5106, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Image uses Python identifier Image
    __Image = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Image'), 'Image', '__httpwww_stibosystems_comstep_TextType_httpwww_stibosystems_comstepImage', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5108, 13), )

    
    Image = property(__Image.value, __Image.set, None, None)

    _ElementMap.update({
        __Image.name() : __Image
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TextType = TextType
Namespace.addCategoryObject('typeBinding', 'TextType', TextType)


# Complex type {http://www.stibosystems.com/step}TransformationLookupTableConfigurationsType with content type ELEMENT_ONLY
class TransformationLookupTableConfigurationsType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all transformation lookup table configurations."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfigurationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5141, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TransformationLookupTableConfiguration uses Python identifier TransformationLookupTableConfiguration
    __TransformationLookupTableConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfiguration'), 'TransformationLookupTableConfiguration', '__httpwww_stibosystems_comstep_TransformationLookupTableConfigurationsType_httpwww_stibosystems_comstepTransformationLookupTableConfiguration', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5146, 12), )

    
    TransformationLookupTableConfiguration = property(__TransformationLookupTableConfiguration.value, __TransformationLookupTableConfiguration.set, None, None)

    _ElementMap.update({
        __TransformationLookupTableConfiguration.name() : __TransformationLookupTableConfiguration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.TransformationLookupTableConfigurationsType = TransformationLookupTableConfigurationsType
Namespace.addCategoryObject('typeBinding', 'TransformationLookupTableConfigurationsType', TransformationLookupTableConfigurationsType)


# Complex type {http://www.stibosystems.com/step}UnitListType with content type ELEMENT_ONLY
class UnitListType (pyxb.binding.basis.complexTypeDefinition):
    """
                The list of units in the system
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5310, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}UnitFamily uses Python identifier UnitFamily
    __UnitFamily = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UnitFamily'), 'UnitFamily', '__httpwww_stibosystems_comstep_UnitListType_httpwww_stibosystems_comstepUnitFamily', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5318, 16), )

    
    UnitFamily = property(__UnitFamily.value, __UnitFamily.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Unit uses Python identifier Unit
    __Unit = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Unit'), 'Unit', '__httpwww_stibosystems_comstep_UnitListType_httpwww_stibosystems_comstepUnit', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5319, 16), )

    
    Unit = property(__Unit.value, __Unit.set, None, None)

    _ElementMap.update({
        __UnitFamily.name() : __UnitFamily,
        __Unit.name() : __Unit
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.UnitListType = UnitListType
Namespace.addCategoryObject('typeBinding', 'UnitListType', UnitListType)


# Complex type {http://www.stibosystems.com/step}CollectionListType with content type ELEMENT_ONLY
class CollectionListType (pyxb.binding.basis.complexTypeDefinition):
    """
                The CollectionList holds a list of CollectionGroups and/or Collections.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CollectionListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5324, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}CollectionGroup uses Python identifier CollectionGroup
    __CollectionGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CollectionGroup'), 'CollectionGroup', '__httpwww_stibosystems_comstep_CollectionListType_httpwww_stibosystems_comstepCollectionGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5331, 16), )

    
    CollectionGroup = property(__CollectionGroup.value, __CollectionGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Collection uses Python identifier Collection
    __Collection = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Collection'), 'Collection', '__httpwww_stibosystems_comstep_CollectionListType_httpwww_stibosystems_comstepCollection', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5332, 16), )

    
    Collection = property(__Collection.value, __Collection.set, None, None)

    _ElementMap.update({
        __CollectionGroup.name() : __CollectionGroup,
        __Collection.name() : __Collection
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.CollectionListType = CollectionListType
Namespace.addCategoryObject('typeBinding', 'CollectionListType', CollectionListType)


# Complex type {http://www.stibosystems.com/step}BusinessLibrariesType with content type ELEMENT_ONLY
class BusinessLibrariesType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Business Library configurations.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessLibrariesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5336, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}BusinessRule uses Python identifier BusinessRule
    __BusinessRule = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BusinessRule'), 'BusinessRule', '__httpwww_stibosystems_comstep_BusinessLibrariesType_httpwww_stibosystems_comstepBusinessRule', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5343, 16), )

    
    BusinessRule = property(__BusinessRule.value, __BusinessRule.set, None, None)

    _ElementMap.update({
        __BusinessRule.name() : __BusinessRule
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.BusinessLibrariesType = BusinessLibrariesType
Namespace.addCategoryObject('typeBinding', 'BusinessLibrariesType', BusinessLibrariesType)


# Complex type {http://www.stibosystems.com/step}BusinessRulesType with content type ELEMENT_ONLY
class BusinessRulesType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Business Rule configurations.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessRulesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5347, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}BusinessRule uses Python identifier BusinessRule
    __BusinessRule = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BusinessRule'), 'BusinessRule', '__httpwww_stibosystems_comstep_BusinessRulesType_httpwww_stibosystems_comstepBusinessRule', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5354, 16), )

    
    BusinessRule = property(__BusinessRule.value, __BusinessRule.set, None, None)

    _ElementMap.update({
        __BusinessRule.name() : __BusinessRule
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.BusinessRulesType = BusinessRulesType
Namespace.addCategoryObject('typeBinding', 'BusinessRulesType', BusinessRulesType)


# Complex type {http://www.stibosystems.com/step}ValidObjectTypesType with content type ELEMENT_ONLY
class ValidObjectTypesType (pyxb.binding.basis.complexTypeDefinition):
    """
                The sequence object types valid for a business rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5441, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ValidObjectType uses Python identifier ValidObjectType
    __ValidObjectType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectType'), 'ValidObjectType', '__httpwww_stibosystems_comstep_ValidObjectTypesType_httpwww_stibosystems_comstepValidObjectType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5449, 12), )

    
    ValidObjectType = property(__ValidObjectType.value, __ValidObjectType.set, None, None)

    
    # Attribute AllObjectTypesValid uses Python identifier AllObjectTypesValid
    __AllObjectTypesValid = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AllObjectTypesValid'), 'AllObjectTypesValid', '__httpwww_stibosystems_comstep_ValidObjectTypesType_AllObjectTypesValid', pyxb.binding.datatypes.boolean, required=True)
    __AllObjectTypesValid._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5452, 8)
    __AllObjectTypesValid._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5452, 8)
    
    AllObjectTypesValid = property(__AllObjectTypesValid.value, __AllObjectTypesValid.set, None, '\n                    Indicator wheter all object types a valid for a business rule or not.\n                ')

    _ElementMap.update({
        __ValidObjectType.name() : __ValidObjectType
    })
    _AttributeMap.update({
        __AllObjectTypesValid.name() : __AllObjectTypesValid
    })
_module_typeBindings.ValidObjectTypesType = ValidObjectTypesType
Namespace.addCategoryObject('typeBinding', 'ValidObjectTypesType', ValidObjectTypesType)


# Complex type {http://www.stibosystems.com/step}BusinessRuleDescriptionType with content type MIXED
class BusinessRuleDescriptionType (pyxb.binding.basis.complexTypeDefinition):
    """
                A description of a Business Rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleDescriptionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5525, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.BusinessRuleDescriptionType = BusinessRuleDescriptionType
Namespace.addCategoryObject('typeBinding', 'BusinessRuleDescriptionType', BusinessRuleDescriptionType)


# Complex type {http://www.stibosystems.com/step}PortalConfigurationsType with content type ELEMENT_ONLY
class PortalConfigurationsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of portal configurations.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PortalConfigurationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5622, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}PortalConfiguration uses Python identifier PortalConfiguration
    __PortalConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PortalConfiguration'), 'PortalConfiguration', '__httpwww_stibosystems_comstep_PortalConfigurationsType_httpwww_stibosystems_comstepPortalConfiguration', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5629, 16), )

    
    PortalConfiguration = property(__PortalConfiguration.value, __PortalConfiguration.set, None, None)

    _ElementMap.update({
        __PortalConfiguration.name() : __PortalConfiguration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.PortalConfigurationsType = PortalConfigurationsType
Namespace.addCategoryObject('typeBinding', 'PortalConfigurationsType', PortalConfigurationsType)


# Complex type {http://www.stibosystems.com/step}MatchCodesType with content type ELEMENT_ONLY
class MatchCodesType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Match Code configurations.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchCodesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5722, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}MatchCode uses Python identifier MatchCode
    __MatchCode = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MatchCode'), 'MatchCode', '__httpwww_stibosystems_comstep_MatchCodesType_httpwww_stibosystems_comstepMatchCode', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5729, 16), )

    
    MatchCode = property(__MatchCode.value, __MatchCode.set, None, None)

    _ElementMap.update({
        __MatchCode.name() : __MatchCode
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MatchCodesType = MatchCodesType
Namespace.addCategoryObject('typeBinding', 'MatchCodesType', MatchCodesType)


# Complex type {http://www.stibosystems.com/step}MatchCodeTemplateType with content type MIXED
class MatchCodeTemplateType (pyxb.binding.basis.complexTypeDefinition):
    """
                The encoded template associated with a match code
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchCodeTemplateType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5807, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MatchCodeTemplateType = MatchCodeTemplateType
Namespace.addCategoryObject('typeBinding', 'MatchCodeTemplateType', MatchCodeTemplateType)


# Complex type {http://www.stibosystems.com/step}MatchingAlgorithmsType with content type ELEMENT_ONLY
class MatchingAlgorithmsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Match Code configurations.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithmsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5815, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}MatchingAlgorithm uses Python identifier MatchingAlgorithm
    __MatchingAlgorithm = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithm'), 'MatchingAlgorithm', '__httpwww_stibosystems_comstep_MatchingAlgorithmsType_httpwww_stibosystems_comstepMatchingAlgorithm', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5822, 16), )

    
    MatchingAlgorithm = property(__MatchingAlgorithm.value, __MatchingAlgorithm.set, None, None)

    _ElementMap.update({
        __MatchingAlgorithm.name() : __MatchingAlgorithm
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MatchingAlgorithmsType = MatchingAlgorithmsType
Namespace.addCategoryObject('typeBinding', 'MatchingAlgorithmsType', MatchingAlgorithmsType)


# Complex type {http://www.stibosystems.com/step}MatchingAlgorithmConfigurationType with content type MIXED
class MatchingAlgorithmConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """
                The encoded configuration associated with a matching algorithm
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithmConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5884, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    _ElementMap.update({
        
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.MatchingAlgorithmConfigurationType = MatchingAlgorithmConfigurationType
Namespace.addCategoryObject('typeBinding', 'MatchingAlgorithmConfigurationType', MatchingAlgorithmConfigurationType)


# Complex type {http://www.stibosystems.com/step}UnitOutputTemplateType with content type ELEMENT_ONLY
class UnitOutputTemplateType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UnitOutputTemplateType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitOutputTemplateType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5892, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_UnitOutputTemplateType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5894, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    _ElementMap.update({
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.UnitOutputTemplateType = UnitOutputTemplateType
Namespace.addCategoryObject('typeBinding', 'UnitOutputTemplateType', UnitOutputTemplateType)


# Complex type {http://www.stibosystems.com/step}UserGroupListType with content type ELEMENT_ONLY
class UserGroupListType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserGroupListType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserGroupListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5982, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}UserGroup uses Python identifier UserGroup
    __UserGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserGroup'), 'UserGroup', '__httpwww_stibosystems_comstep_UserGroupListType_httpwww_stibosystems_comstepUserGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5984, 12), )

    
    UserGroup = property(__UserGroup.value, __UserGroup.set, None, None)

    _ElementMap.update({
        __UserGroup.name() : __UserGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.UserGroupListType = UserGroupListType
Namespace.addCategoryObject('typeBinding', 'UserGroupListType', UserGroupListType)


# Complex type {http://www.stibosystems.com/step}UserListType with content type ELEMENT_ONLY
class UserListType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserListType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5989, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}User uses Python identifier User
    __User = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'User'), 'User', '__httpwww_stibosystems_comstep_UserListType_httpwww_stibosystems_comstepUser', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5991, 12), )

    
    User = property(__User.value, __User.set, None, None)

    _ElementMap.update({
        __User.name() : __User
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.UserListType = UserListType
Namespace.addCategoryObject('typeBinding', 'UserListType', UserListType)


# Complex type {http://www.stibosystems.com/step}UserTypesType with content type ELEMENT_ONLY
class UserTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6061, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}UserType uses Python identifier UserType
    __UserType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserType'), 'UserType', '__httpwww_stibosystems_comstep_UserTypesType_httpwww_stibosystems_comstepUserType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6064, 12), )

    
    UserType = property(__UserType.value, __UserType.set, None, None)

    _ElementMap.update({
        __UserType.name() : __UserType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.UserTypesType = UserTypesType
Namespace.addCategoryObject('typeBinding', 'UserTypesType', UserTypesType)


# Complex type {http://www.stibosystems.com/step}DataContainerTypesType with content type ELEMENT_ONLY
class DataContainerTypesType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Data Container Types
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6068, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DataContainerType uses Python identifier DataContainerType
    __DataContainerType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainerType'), 'DataContainerType', '__httpwww_stibosystems_comstep_DataContainerTypesType_httpwww_stibosystems_comstepDataContainerType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6076, 12), )

    
    DataContainerType = property(__DataContainerType.value, __DataContainerType.set, None, None)

    _ElementMap.update({
        __DataContainerType.name() : __DataContainerType
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DataContainerTypesType = DataContainerTypesType
Namespace.addCategoryObject('typeBinding', 'DataContainerTypesType', DataContainerTypesType)


# Complex type {http://www.stibosystems.com/step}ValidationType with content type ELEMENT_ONLY
class ValidationType (pyxb.binding.basis.complexTypeDefinition):
    """
                The Validation element provides information about how values in attributes or LOV should be validated.
                The list of unit links defined allowed units to values in this attribute or LOV.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValidationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6174, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}UnitLink uses Python identifier UnitLink
    __UnitLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UnitLink'), 'UnitLink', '__httpwww_stibosystems_comstep_ValidationType_httpwww_stibosystems_comstepUnitLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6183, 12), )

    
    UnitLink = property(__UnitLink.value, __UnitLink.set, None, None)

    
    # Attribute MaxLength uses Python identifier MaxLength
    __MaxLength = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaxLength'), 'MaxLength', '__httpwww_stibosystems_comstep_ValidationType_MaxLength', pyxb.binding.datatypes.string)
    __MaxLength._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6185, 8)
    __MaxLength._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6185, 8)
    
    MaxLength = property(__MaxLength.value, __MaxLength.set, None, '\n                    For numbers this identifies the maximum value allowed.\n                ')

    
    # Attribute InputMask uses Python identifier InputMask
    __InputMask = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'InputMask'), 'InputMask', '__httpwww_stibosystems_comstep_ValidationType_InputMask', pyxb.binding.datatypes.string)
    __InputMask._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6192, 8)
    __InputMask._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6192, 8)
    
    InputMask = property(__InputMask.value, __InputMask.set, None, '\n                    A mask for restricting values to a certain syntax: ‘9’ matches a digit; ‘#’ matches\n                    a number, space, minus or plus; ‘?’ matches a letter; ‘a’ matches a letter or a\n                    digit.\n                ')

    
    # Attribute MinValue uses Python identifier MinValue
    __MinValue = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MinValue'), 'MinValue', '__httpwww_stibosystems_comstep_ValidationType_MinValue', pyxb.binding.datatypes.string)
    __MinValue._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6201, 8)
    __MinValue._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6201, 8)
    
    MinValue = property(__MinValue.value, __MinValue.set, None, '\n                    For numbers this identifies the minimum value allowed.\n                ')

    
    # Attribute BaseType uses Python identifier BaseType
    __BaseType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BaseType'), 'BaseType', '__httpwww_stibosystems_comstep_ValidationType_BaseType', pyxb.binding.datatypes.string, unicode_default='text')
    __BaseType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6208, 8)
    __BaseType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6208, 8)
    
    BaseType = property(__BaseType.value, __BaseType.set, None, '\n                    The base type of values in this attribute or LOV. Legal values for standard\n                    systems are (however customizations can be made): text, number, integer,\n                    numeric_text, embedded_number, fraction, novalidation, boolean, date,\n                    isodate, isodatetime\n                ')

    
    # Attribute MaxValue uses Python identifier MaxValue
    __MaxValue = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaxValue'), 'MaxValue', '__httpwww_stibosystems_comstep_ValidationType_MaxValue', pyxb.binding.datatypes.string)
    __MaxValue._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6218, 8)
    __MaxValue._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6218, 8)
    
    MaxValue = property(__MaxValue.value, __MaxValue.set, None, None)

    _ElementMap.update({
        __UnitLink.name() : __UnitLink
    })
    _AttributeMap.update({
        __MaxLength.name() : __MaxLength,
        __InputMask.name() : __InputMask,
        __MinValue.name() : __MinValue,
        __BaseType.name() : __BaseType,
        __MaxValue.name() : __MaxValue
    })
_module_typeBindings.ValidationType = ValidationType
Namespace.addCategoryObject('typeBinding', 'ValidationType', ValidationType)


# Complex type {http://www.stibosystems.com/step}ValueFilterType with content type ELEMENT_ONLY
class ValueFilterType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ValueFilterType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValueFilterType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6306, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Value uses Python identifier Value
    __Value = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Value'), 'Value', '__httpwww_stibosystems_comstep_ValueFilterType_httpwww_stibosystems_comstepValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6308, 12), )

    
    Value = property(__Value.value, __Value.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueGroup uses Python identifier ValueGroup
    __ValueGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), 'ValueGroup', '__httpwww_stibosystems_comstep_ValueFilterType_httpwww_stibosystems_comstepValueGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6309, 12), )

    
    ValueGroup = property(__ValueGroup.value, __ValueGroup.set, None, None)

    _ElementMap.update({
        __Value.name() : __Value,
        __ValueGroup.name() : __ValueGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ValueFilterType = ValueFilterType
Namespace.addCategoryObject('typeBinding', 'ValueFilterType', ValueFilterType)


# Complex type {http://www.stibosystems.com/step}ValuesType with content type ELEMENT_ONLY
class ValuesType (pyxb.binding.basis.complexTypeDefinition):
    """
                A set of values
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValuesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6331, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Value uses Python identifier Value
    __Value = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Value'), 'Value', '__httpwww_stibosystems_comstep_ValuesType_httpwww_stibosystems_comstepValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6338, 12), )

    
    Value = property(__Value.value, __Value.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MultiValue uses Python identifier MultiValue
    __MultiValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MultiValue'), 'MultiValue', '__httpwww_stibosystems_comstep_ValuesType_httpwww_stibosystems_comstepMultiValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6339, 12), )

    
    MultiValue = property(__MultiValue.value, __MultiValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueGroup uses Python identifier ValueGroup
    __ValueGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), 'ValueGroup', '__httpwww_stibosystems_comstep_ValuesType_httpwww_stibosystems_comstepValueGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6340, 12), )

    
    ValueGroup = property(__ValueGroup.value, __ValueGroup.set, None, None)

    _ElementMap.update({
        __Value.name() : __Value,
        __MultiValue.name() : __MultiValue,
        __ValueGroup.name() : __ValueGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ValuesType = ValuesType
Namespace.addCategoryObject('typeBinding', 'ValuesType', ValuesType)


# Complex type {http://www.stibosystems.com/step}DataContainersType with content type ELEMENT_ONLY
class DataContainersType (pyxb.binding.basis.complexTypeDefinition):
    """
                A set of Data Containers.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DataContainersType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6445, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DataContainer uses Python identifier DataContainer
    __DataContainer = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainer'), 'DataContainer', '__httpwww_stibosystems_comstep_DataContainersType_httpwww_stibosystems_comstepDataContainer', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6452, 12), )

    
    DataContainer = property(__DataContainer.value, __DataContainer.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MultiDataContainer uses Python identifier MultiDataContainer
    __MultiDataContainer = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MultiDataContainer'), 'MultiDataContainer', '__httpwww_stibosystems_comstep_DataContainersType_httpwww_stibosystems_comstepMultiDataContainer', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6453, 12), )

    
    MultiDataContainer = property(__MultiDataContainer.value, __MultiDataContainer.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteDataContainer uses Python identifier DeleteDataContainer
    __DeleteDataContainer = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainer'), 'DeleteDataContainer', '__httpwww_stibosystems_comstep_DataContainersType_httpwww_stibosystems_comstepDeleteDataContainer', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6454, 12), )

    
    DeleteDataContainer = property(__DeleteDataContainer.value, __DeleteDataContainer.set, None, None)

    _ElementMap.update({
        __DataContainer.name() : __DataContainer,
        __MultiDataContainer.name() : __MultiDataContainer,
        __DeleteDataContainer.name() : __DeleteDataContainer
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.DataContainersType = DataContainersType
Namespace.addCategoryObject('typeBinding', 'DataContainersType', DataContainersType)


# Complex type {http://www.stibosystems.com/step}LayerMappingType with content type EMPTY
class LayerMappingType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}LayerMappingType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'LayerMappingType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6474, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Template uses Python identifier Template
    __Template = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Template'), 'Template', '__httpwww_stibosystems_comstep_LayerMappingType_Template', pyxb.binding.datatypes.string, required=True)
    __Template._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6475, 8)
    __Template._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6475, 8)
    
    Template = property(__Template.value, __Template.set, None, None)

    
    # Attribute Document uses Python identifier Document
    __Document = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Document'), 'Document', '__httpwww_stibosystems_comstep_LayerMappingType_Document', pyxb.binding.datatypes.string, required=True)
    __Document._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6476, 8)
    __Document._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6476, 8)
    
    Document = property(__Document.value, __Document.set, None, None)

    
    # Attribute Owner uses Python identifier Owner
    __Owner = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Owner'), 'Owner', '__httpwww_stibosystems_comstep_LayerMappingType_Owner', pyxb.binding.datatypes.boolean, required=True)
    __Owner._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6477, 8)
    __Owner._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6477, 8)
    
    Owner = property(__Owner.value, __Owner.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Template.name() : __Template,
        __Document.name() : __Document,
        __Owner.name() : __Owner
    })
_module_typeBindings.LayerMappingType = LayerMappingType
Namespace.addCategoryObject('typeBinding', 'LayerMappingType', LayerMappingType)


# Complex type {http://www.stibosystems.com/step}VisibleTermFieldsType with content type ELEMENT_ONLY
class VisibleTermFieldsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}VisibleTermFieldsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'VisibleTermFieldsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6501, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}VisibleTermField uses Python identifier VisibleTermField
    __VisibleTermField = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'VisibleTermField'), 'VisibleTermField', '__httpwww_stibosystems_comstep_VisibleTermFieldsType_httpwww_stibosystems_comstepVisibleTermField', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6503, 12), )

    
    VisibleTermField = property(__VisibleTermField.value, __VisibleTermField.set, None, None)

    _ElementMap.update({
        __VisibleTermField.name() : __VisibleTermField
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.VisibleTermFieldsType = VisibleTermFieldsType
Namespace.addCategoryObject('typeBinding', 'VisibleTermFieldsType', VisibleTermFieldsType)


# Complex type {http://www.stibosystems.com/step}WebSitesType with content type ELEMENT_ONLY
class WebSitesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}WebSitesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'WebSitesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6528, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}WebSite uses Python identifier WebSite
    __WebSite = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'WebSite'), 'WebSite', '__httpwww_stibosystems_comstep_WebSitesType_httpwww_stibosystems_comstepWebSite', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6530, 12), )

    
    WebSite = property(__WebSite.value, __WebSite.set, None, None)

    _ElementMap.update({
        __WebSite.name() : __WebSite
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.WebSitesType = WebSitesType
Namespace.addCategoryObject('typeBinding', 'WebSitesType', WebSitesType)


# Complex type {http://www.stibosystems.com/step}CalculatedAttributeSettingsType with content type ELEMENT_ONLY
class CalculatedAttributeSettingsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Describes dimension dependencies of all templates of calculated attributes in the STEP system.
                It goes for both value and unit templates of calculated attributes.
                On import it will not remove dimension dependencies.
                On import it will only add dimension dependencies as long as all existing dimension dependencies also
                are given in import file.
                In other words, all dimension dependencies needs to be provided on import.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CalculatedAttributeSettingsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6534, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_CalculatedAttributeSettingsType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6546, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    _ElementMap.update({
        __DimensionLink.name() : __DimensionLink
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.CalculatedAttributeSettingsType = CalculatedAttributeSettingsType
Namespace.addCategoryObject('typeBinding', 'CalculatedAttributeSettingsType', CalculatedAttributeSettingsType)


# Complex type {http://www.stibosystems.com/step}AssetSettingsType with content type ELEMENT_ONLY
class AssetSettingsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Describes dimension dependencies of all assets in the STEP system.
                On import it will not remove dimension dependencies.
                On import it will only add dimension dependencies as long as all existing dimension dependencies also
                are given in import file.
                In other words, all dimension dependencies needs to be provided on import.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetSettingsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6550, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_AssetSettingsType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6561, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    _ElementMap.update({
        __DimensionLink.name() : __DimensionLink
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.AssetSettingsType = AssetSettingsType
Namespace.addCategoryObject('typeBinding', 'AssetSettingsType', AssetSettingsType)


# Complex type {http://www.stibosystems.com/step}GlobalSettingsType with content type ELEMENT_ONLY
class GlobalSettingsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Contains global settings of STEP system.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GlobalSettingsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6565, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}CalculatedAttributeSettings uses Python identifier CalculatedAttributeSettings
    __CalculatedAttributeSettings = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CalculatedAttributeSettings'), 'CalculatedAttributeSettings', '__httpwww_stibosystems_comstep_GlobalSettingsType_httpwww_stibosystems_comstepCalculatedAttributeSettings', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6572, 12), )

    
    CalculatedAttributeSettings = property(__CalculatedAttributeSettings.value, __CalculatedAttributeSettings.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetSettings uses Python identifier AssetSettings
    __AssetSettings = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetSettings'), 'AssetSettings', '__httpwww_stibosystems_comstep_GlobalSettingsType_httpwww_stibosystems_comstepAssetSettings', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6573, 12), )

    
    AssetSettings = property(__AssetSettings.value, __AssetSettings.set, None, None)

    _ElementMap.update({
        __CalculatedAttributeSettings.name() : __CalculatedAttributeSettings,
        __AssetSettings.name() : __AssetSettings
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.GlobalSettingsType = GlobalSettingsType
Namespace.addCategoryObject('typeBinding', 'GlobalSettingsType', GlobalSettingsType)


# Complex type {http://www.stibosystems.com/step}EventProcessorsType with content type ELEMENT_ONLY
class EventProcessorsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Event Processors.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EventProcessorsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6577, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}EventProcessor uses Python identifier EventProcessor
    __EventProcessor = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EventProcessor'), 'EventProcessor', '__httpwww_stibosystems_comstep_EventProcessorsType_httpwww_stibosystems_comstepEventProcessor', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6584, 12), )

    
    EventProcessor = property(__EventProcessor.value, __EventProcessor.set, None, None)

    _ElementMap.update({
        __EventProcessor.name() : __EventProcessor
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.EventProcessorsType = EventProcessorsType
Namespace.addCategoryObject('typeBinding', 'EventProcessorsType', EventProcessorsType)


# Complex type {http://www.stibosystems.com/step}SetupEntitiesType with content type ELEMENT_ONLY
class SetupEntitiesType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Setup Entities.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SetupEntitiesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6631, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupEntity uses Python identifier SetupEntity
    __SetupEntity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupEntity'), 'SetupEntity', '__httpwww_stibosystems_comstep_SetupEntitiesType_httpwww_stibosystems_comstepSetupEntity', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6638, 12), )

    
    SetupEntity = property(__SetupEntity.value, __SetupEntity.set, None, None)

    _ElementMap.update({
        __SetupEntity.name() : __SetupEntity
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.SetupEntitiesType = SetupEntitiesType
Namespace.addCategoryObject('typeBinding', 'SetupEntitiesType', SetupEntitiesType)


# Complex type {http://www.stibosystems.com/step}IntegrationEndpointsType with content type ELEMENT_ONLY
class IntegrationEndpointsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of in- and outbound Integration End Points.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'IntegrationEndpointsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6678, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}OutBoundIntegrationEndpoint uses Python identifier OutBoundIntegrationEndpoint
    __OutBoundIntegrationEndpoint = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'OutBoundIntegrationEndpoint'), 'OutBoundIntegrationEndpoint', '__httpwww_stibosystems_comstep_IntegrationEndpointsType_httpwww_stibosystems_comstepOutBoundIntegrationEndpoint', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6685, 12), )

    
    OutBoundIntegrationEndpoint = property(__OutBoundIntegrationEndpoint.value, __OutBoundIntegrationEndpoint.set, None, None)

    
    # Element {http://www.stibosystems.com/step}InBoundIntegrationEndpoint uses Python identifier InBoundIntegrationEndpoint
    __InBoundIntegrationEndpoint = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'InBoundIntegrationEndpoint'), 'InBoundIntegrationEndpoint', '__httpwww_stibosystems_comstep_IntegrationEndpointsType_httpwww_stibosystems_comstepInBoundIntegrationEndpoint', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6686, 12), )

    
    InBoundIntegrationEndpoint = property(__InBoundIntegrationEndpoint.value, __InBoundIntegrationEndpoint.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GatewayIntegrationEndpoint uses Python identifier GatewayIntegrationEndpoint
    __GatewayIntegrationEndpoint = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GatewayIntegrationEndpoint'), 'GatewayIntegrationEndpoint', '__httpwww_stibosystems_comstep_IntegrationEndpointsType_httpwww_stibosystems_comstepGatewayIntegrationEndpoint', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6687, 12), )

    
    GatewayIntegrationEndpoint = property(__GatewayIntegrationEndpoint.value, __GatewayIntegrationEndpoint.set, None, None)

    _ElementMap.update({
        __OutBoundIntegrationEndpoint.name() : __OutBoundIntegrationEndpoint,
        __InBoundIntegrationEndpoint.name() : __InBoundIntegrationEndpoint,
        __GatewayIntegrationEndpoint.name() : __GatewayIntegrationEndpoint
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.IntegrationEndpointsType = IntegrationEndpointsType
Namespace.addCategoryObject('typeBinding', 'IntegrationEndpointsType', IntegrationEndpointsType)


# Complex type {http://www.stibosystems.com/step}SetupGroupsType with content type ELEMENT_ONLY
class SetupGroupsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of Setup Groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SetupGroupsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7151, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroup uses Python identifier SetupGroup
    __SetupGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroup'), 'SetupGroup', '__httpwww_stibosystems_comstep_SetupGroupsType_httpwww_stibosystems_comstepSetupGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7158, 12), )

    
    SetupGroup = property(__SetupGroup.value, __SetupGroup.set, None, None)

    _ElementMap.update({
        __SetupGroup.name() : __SetupGroup
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.SetupGroupsType = SetupGroupsType
Namespace.addCategoryObject('typeBinding', 'SetupGroupsType', SetupGroupsType)


# Complex type {http://www.stibosystems.com/step}CurrentTasksType with content type ELEMENT_ONLY
class CurrentTasksType (pyxb.binding.basis.complexTypeDefinition):
    """
                List information of current STEP Workflow tasks for the outer Product/Classification/Entity/Asset.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CurrentTasksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7204, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Task uses Python identifier Task
    __Task = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Task'), 'Task', '__httpwww_stibosystems_comstep_CurrentTasksType_httpwww_stibosystems_comstepTask', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7211, 12), )

    
    Task = property(__Task.value, __Task.set, None, None)

    _ElementMap.update({
        __Task.name() : __Task
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.CurrentTasksType = CurrentTasksType
Namespace.addCategoryObject('typeBinding', 'CurrentTasksType', CurrentTasksType)


# Complex type {http://www.stibosystems.com/step}ChangePackagesType with content type ELEMENT_ONLY
class ChangePackagesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ChangePackagesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ChangePackagesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7280, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ChangePackage uses Python identifier ChangePackage
    __ChangePackage = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ChangePackage'), 'ChangePackage', '__httpwww_stibosystems_comstep_ChangePackagesType_httpwww_stibosystems_comstepChangePackage', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7282, 12), )

    
    ChangePackage = property(__ChangePackage.value, __ChangePackage.set, None, None)

    _ElementMap.update({
        __ChangePackage.name() : __ChangePackage
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.ChangePackagesType = ChangePackagesType
Namespace.addCategoryObject('typeBinding', 'ChangePackagesType', ChangePackagesType)


# Complex type {http://www.stibosystems.com/step}StatusFlagsType with content type ELEMENT_ONLY
class StatusFlagsType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}StatusFlagsType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StatusFlagsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7308, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}StatusFlag uses Python identifier StatusFlag
    __StatusFlag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'StatusFlag'), 'StatusFlag', '__httpwww_stibosystems_comstep_StatusFlagsType_httpwww_stibosystems_comstepStatusFlag', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7310, 12), )

    
    StatusFlag = property(__StatusFlag.value, __StatusFlag.set, None, None)

    _ElementMap.update({
        __StatusFlag.name() : __StatusFlag
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.StatusFlagsType = StatusFlagsType
Namespace.addCategoryObject('typeBinding', 'StatusFlagsType', StatusFlagsType)


# Complex type {http://www.stibosystems.com/step}AnalyzerElementType with content type EMPTY
class AnalyzerElementType (pyxb.binding.basis.complexTypeDefinition):
    """Represents an item in a result list. ItemID identifies the item and refers to the element
                AnalyzerItem. If the item refers to a step node, one of the following attributes will be present:
                AssetID, ProductID, or ClassificationID
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 369, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_AnalyzerElementType_ProductID', _module_typeBindings.StepID)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 376, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 376, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, '\n                     If item corresponds to a product, the values will be the ID of the\n                     corresponding product.\n                ')

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_AnalyzerElementType_AssetID', _module_typeBindings.StepID)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 384, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 384, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, '\n                    If item corresponds to an asset, the values will be the ID of the corresponding asset.\n                ')

    
    # Attribute ItemID uses Python identifier ItemID
    __ItemID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ItemID'), 'ItemID', '__httpwww_stibosystems_comstep_AnalyzerElementType_ItemID', _module_typeBindings.StepID, required=True)
    __ItemID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 391, 8)
    __ItemID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 391, 8)
    
    ItemID = property(__ItemID.value, __ItemID.set, None, '\n                    Identifies the item in result list. Refers to AnalyzerItem that may contain\n                    additional information about the result from the AnalyzerPLugin. Typically\n                    the URL is used as identifier.\n                ')

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_AnalyzerElementType_ClassificationID', _module_typeBindings.StepID)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 400, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 400, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, '\n                    If item corresponds to a classification, the values will be the ID of the\n                    corresponding classification.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ProductID.name() : __ProductID,
        __AssetID.name() : __AssetID,
        __ItemID.name() : __ItemID,
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.AnalyzerElementType = AnalyzerElementType
Namespace.addCategoryObject('typeBinding', 'AnalyzerElementType', AnalyzerElementType)


# Complex type {http://www.stibosystems.com/step}AnalyzerItemType with content type ELEMENT_ONLY
class AnalyzerItemType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents an item analyzed by the AnalyzerPlugin. E.g. a changed or affected classification or product.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItemType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 411, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AnalyzerProp uses Python identifier AnalyzerProp
    __AnalyzerProp = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerProp'), 'AnalyzerProp', '__httpwww_stibosystems_comstep_AnalyzerItemType_httpwww_stibosystems_comstepAnalyzerProp', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 418, 12), )

    
    AnalyzerProp = property(__AnalyzerProp.value, __AnalyzerProp.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AnalyzerItemType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 420, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 420, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Identifies the analyzer item – typically the URL of the node in question is used as ID.\n                ')

    
    # Attribute StepType uses Python identifier StepType
    __StepType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StepType'), 'StepType', '__httpwww_stibosystems_comstep_AnalyzerItemType_StepType', pyxb.binding.datatypes.string)
    __StepType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 427, 8)
    __StepType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 427, 8)
    
    StepType = property(__StepType.value, __StepType.set, None, '\n                    \n                    Identifies the type of Step object. Possible values: Classification, Asset, Product.\n                ')

    
    # Attribute StepID uses Python identifier StepID
    __StepID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StepID'), 'StepID', '__httpwww_stibosystems_comstep_AnalyzerItemType_StepID', _module_typeBindings.StepID)
    __StepID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 436, 8)
    __StepID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 436, 8)
    
    StepID = property(__StepID.value, __StepID.set, None, '\n                    Identifies the ID of the corresponding Step object.\n                ')

    _ElementMap.update({
        __AnalyzerProp.name() : __AnalyzerProp
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __StepType.name() : __StepType,
        __StepID.name() : __StepID
    })
_module_typeBindings.AnalyzerItemType = AnalyzerItemType
Namespace.addCategoryObject('typeBinding', 'AnalyzerItemType', AnalyzerItemType)


# Complex type {http://www.stibosystems.com/step}AnalyzerPropType with content type MIXED
class AnalyzerPropType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents additional information calculated by the AnalyzerPlugin.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AnalyzerPropType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 490, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute PropID uses Python identifier PropID
    __PropID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PropID'), 'PropID', '__httpwww_stibosystems_comstep_AnalyzerPropType_PropID', _module_typeBindings.StepID, required=True)
    __PropID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 496, 8)
    __PropID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 496, 8)
    
    PropID = property(__PropID.value, __PropID.set, None, '\n                    Identifies the property. E.g. ‘difference.result’, ‘mode.content’,\n                    ‘sequence’\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __PropID.name() : __PropID
    })
_module_typeBindings.AnalyzerPropType = AnalyzerPropType
Namespace.addCategoryObject('typeBinding', 'AnalyzerPropType', AnalyzerPropType)


# Complex type {http://www.stibosystems.com/step}AssetBasketLinkType with content type ELEMENT_ONLY
class AssetBasketLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AssetBasketLinkType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetBasketLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 643, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AssetBasketLinkType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 645, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_AssetBasketLinkType_AssetID', _module_typeBindings.StepID, required=True)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 647, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 647, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __AssetID.name() : __AssetID
    })
_module_typeBindings.AssetBasketLinkType = AssetBasketLinkType
Namespace.addCategoryObject('typeBinding', 'AssetBasketLinkType', AssetBasketLinkType)


# Complex type {http://www.stibosystems.com/step}AssetElementType with content type ELEMENT_ONLY
class AssetElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AssetElementType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 741, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}RuleBasedLayout uses Python identifier RuleBasedLayout
    __RuleBasedLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout'), 'RuleBasedLayout', '__httpwww_stibosystems_comstep_AssetElementType_httpwww_stibosystems_comstepRuleBasedLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 743, 12), )

    
    RuleBasedLayout = property(__RuleBasedLayout.value, __RuleBasedLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AssetElementType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 744, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TemplateLayout uses Python identifier TemplateLayout
    __TemplateLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), 'TemplateLayout', '__httpwww_stibosystems_comstep_AssetElementType_httpwww_stibosystems_comstepTemplateLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 745, 12), )

    
    TemplateLayout = property(__TemplateLayout.value, __TemplateLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PickupLayout uses Python identifier PickupLayout
    __PickupLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), 'PickupLayout', '__httpwww_stibosystems_comstep_AssetElementType_httpwww_stibosystems_comstepPickupLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 746, 12), )

    
    PickupLayout = property(__PickupLayout.value, __PickupLayout.set, None, None)

    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_AssetElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 748, 8)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 748, 8)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_AssetElementType_FrameID', _module_typeBindings.StepID)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 749, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 749, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_AssetElementType_AssetID', _module_typeBindings.StepID, required=True)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 750, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 750, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    _ElementMap.update({
        __RuleBasedLayout.name() : __RuleBasedLayout,
        __KeyValue.name() : __KeyValue,
        __TemplateLayout.name() : __TemplateLayout,
        __PickupLayout.name() : __PickupLayout
    })
    _AttributeMap.update({
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __FrameID.name() : __FrameID,
        __AssetID.name() : __AssetID
    })
_module_typeBindings.AssetElementType = AssetElementType
Namespace.addCategoryObject('typeBinding', 'AssetElementType', AssetElementType)


# Complex type {http://www.stibosystems.com/step}AssetMarkerElementType with content type EMPTY
class AssetMarkerElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AssetMarkerElementType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetMarkerElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 754, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_AssetMarkerElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 755, 8)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 755, 8)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_AssetMarkerElementType_FrameID', _module_typeBindings.StepID)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 756, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 756, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __FrameID.name() : __FrameID
    })
_module_typeBindings.AssetMarkerElementType = AssetMarkerElementType
Namespace.addCategoryObject('typeBinding', 'AssetMarkerElementType', AssetMarkerElementType)


# Complex type {http://www.stibosystems.com/step}AssetPushLocationType with content type MIXED
class AssetPushLocationType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AssetPushLocationType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetPushLocationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 760, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Status uses Python identifier Status
    __Status = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Status'), 'Status', '__httpwww_stibosystems_comstep_AssetPushLocationType_Status', pyxb.binding.datatypes.string)
    __Status._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 761, 8)
    __Status._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 761, 8)
    
    Status = property(__Status.value, __Status.set, None, None)

    
    # Attribute ConfigurationID uses Python identifier ConfigurationID
    __ConfigurationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ConfigurationID'), 'ConfigurationID', '__httpwww_stibosystems_comstep_AssetPushLocationType_ConfigurationID', _module_typeBindings.StepID, required=True)
    __ConfigurationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 762, 8)
    __ConfigurationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 762, 8)
    
    ConfigurationID = property(__ConfigurationID.value, __ConfigurationID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Status.name() : __Status,
        __ConfigurationID.name() : __ConfigurationID
    })
_module_typeBindings.AssetPushLocationType = AssetPushLocationType
Namespace.addCategoryObject('typeBinding', 'AssetPushLocationType', AssetPushLocationType)


# Complex type {http://www.stibosystems.com/step}BulkUpdateConfigurationType with content type ELEMENT_ONLY
class BulkUpdateConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """Element hold content of a bulk update configuration."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1253, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_BulkUpdateConfigurationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1258, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_BulkUpdateConfigurationType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1259, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_BulkUpdateConfigurationType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1260, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_BulkUpdateConfigurationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1262, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_BulkUpdateConfigurationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1264, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1264, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created using auto IDs.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ClassificationReference.name() : __ClassificationReference,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.BulkUpdateConfigurationType = BulkUpdateConfigurationType
Namespace.addCategoryObject('typeBinding', 'BulkUpdateConfigurationType', BulkUpdateConfigurationType)


# Complex type {http://www.stibosystems.com/step}ClassificationBasketLinkType with content type ELEMENT_ONLY
class ClassificationBasketLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationBasketLinkType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationBasketLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1446, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ClassificationBasketLinkType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1448, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_ClassificationBasketLinkType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1450, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1450, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.ClassificationBasketLinkType = ClassificationBasketLinkType
Namespace.addCategoryObject('typeBinding', 'ClassificationBasketLinkType', ClassificationBasketLinkType)


# Complex type {http://www.stibosystems.com/step}ClassificationElementType with content type ELEMENT_ONLY
class ClassificationElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationElementType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1542, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}RuleBasedLayout uses Python identifier RuleBasedLayout
    __RuleBasedLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout'), 'RuleBasedLayout', '__httpwww_stibosystems_comstep_ClassificationElementType_httpwww_stibosystems_comstepRuleBasedLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1544, 12), )

    
    RuleBasedLayout = property(__RuleBasedLayout.value, __RuleBasedLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ClassificationElementType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1545, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TemplateLayout uses Python identifier TemplateLayout
    __TemplateLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), 'TemplateLayout', '__httpwww_stibosystems_comstep_ClassificationElementType_httpwww_stibosystems_comstepTemplateLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1546, 12), )

    
    TemplateLayout = property(__TemplateLayout.value, __TemplateLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PickupLayout uses Python identifier PickupLayout
    __PickupLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), 'PickupLayout', '__httpwww_stibosystems_comstep_ClassificationElementType_httpwww_stibosystems_comstepPickupLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1547, 12), )

    
    PickupLayout = property(__PickupLayout.value, __PickupLayout.set, None, None)

    
    # Attribute OfferType uses Python identifier OfferType
    __OfferType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'OfferType'), 'OfferType', '__httpwww_stibosystems_comstep_ClassificationElementType_OfferType', pyxb.binding.datatypes.string)
    __OfferType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1549, 8)
    __OfferType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1549, 8)
    
    OfferType = property(__OfferType.value, __OfferType.set, None, None)

    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_ClassificationElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1550, 8)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1550, 8)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_ClassificationElementType_FrameID', _module_typeBindings.StepID)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1551, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1551, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_ClassificationElementType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1552, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1552, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    _ElementMap.update({
        __RuleBasedLayout.name() : __RuleBasedLayout,
        __KeyValue.name() : __KeyValue,
        __TemplateLayout.name() : __TemplateLayout,
        __PickupLayout.name() : __PickupLayout
    })
    _AttributeMap.update({
        __OfferType.name() : __OfferType,
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __FrameID.name() : __FrameID,
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.ClassificationElementType = ClassificationElementType
Namespace.addCategoryObject('typeBinding', 'ClassificationElementType', ClassificationElementType)


# Complex type {http://www.stibosystems.com/step}PublicationTypeLinkType with content type EMPTY
class PublicationTypeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PublicationTypeLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1738, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute PublicationTypeID uses Python identifier PublicationTypeID
    __PublicationTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PublicationTypeID'), 'PublicationTypeID', '__httpwww_stibosystems_comstep_PublicationTypeLinkType_PublicationTypeID', _module_typeBindings.StepID, required=True)
    __PublicationTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1739, 8)
    __PublicationTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1739, 8)
    
    PublicationTypeID = property(__PublicationTypeID.value, __PublicationTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __PublicationTypeID.name() : __PublicationTypeID
    })
_module_typeBindings.PublicationTypeLinkType = PublicationTypeLinkType
Namespace.addCategoryObject('typeBinding', 'PublicationTypeLinkType', PublicationTypeLinkType)


# Complex type {http://www.stibosystems.com/step}ContextType with content type ELEMENT_ONLY
class ContextType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a context. It points out exactly one dimension point in each dimension.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ContextType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1876, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ContextType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1883, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionPointLink uses Python identifier DimensionPointLink
    __DimensionPointLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink'), 'DimensionPointLink', '__httpwww_stibosystems_comstep_ContextType_httpwww_stibosystems_comstepDimensionPointLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1884, 12), )

    
    DimensionPointLink = property(__DimensionPointLink.value, __DimensionPointLink.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ContextType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1886, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1886, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute Priority uses Python identifier Priority
    __Priority = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Priority'), 'Priority', '__httpwww_stibosystems_comstep_ContextType_Priority', pyxb.binding.datatypes.string, unicode_default='0')
    __Priority._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1893, 8)
    __Priority._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1893, 8)
    
    Priority = property(__Priority.value, __Priority.set, None, '\n                    Cross-context priority.\n                ')

    
    # Attribute Locale uses Python identifier Locale
    __Locale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Locale'), 'Locale', '__httpwww_stibosystems_comstep_ContextType_Locale', pyxb.binding.datatypes.string)
    __Locale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1900, 8)
    __Locale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1900, 8)
    
    Locale = property(__Locale.value, __Locale.set, None, '\n                    The locale stored for this context.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ContextType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1907, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1907, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __DimensionPointLink.name() : __DimensionPointLink
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Priority.name() : __Priority,
        __Locale.name() : __Locale,
        __Selected.name() : __Selected
    })
_module_typeBindings.ContextType = ContextType
Namespace.addCategoryObject('typeBinding', 'ContextType', ContextType)


# Complex type {http://www.stibosystems.com/step}SampleFileType with content type ELEMENT_ONLY
class SampleFileType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SampleFileType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SampleFileType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1945, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SampleFileContents uses Python identifier SampleFileContents
    __SampleFileContents = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SampleFileContents'), 'SampleFileContents', '__httpwww_stibosystems_comstep_SampleFileType_httpwww_stibosystems_comstepSampleFileContents', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1948, 12), )

    
    SampleFileContents = property(__SampleFileContents.value, __SampleFileContents.set, None, None)

    
    # Attribute SampleFileName uses Python identifier SampleFileName
    __SampleFileName = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SampleFileName'), 'SampleFileName', '__httpwww_stibosystems_comstep_SampleFileType_SampleFileName', _module_typeBindings.NonEmptyStringType, required=True)
    __SampleFileName._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1950, 8)
    __SampleFileName._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1950, 8)
    
    SampleFileName = property(__SampleFileName.value, __SampleFileName.set, None, None)

    _ElementMap.update({
        __SampleFileContents.name() : __SampleFileContents
    })
    _AttributeMap.update({
        __SampleFileName.name() : __SampleFileName
    })
_module_typeBindings.SampleFileType = SampleFileType
Namespace.addCategoryObject('typeBinding', 'SampleFileType', SampleFileType)


# Complex type {http://www.stibosystems.com/step}CrossReferenceTypesType with content type ELEMENT_ONLY
class CrossReferenceTypesType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}CrossReferenceTypesType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CrossReferenceTypesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1960, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AssetCrossReferenceType uses Python identifier AssetCrossReferenceType
    __AssetCrossReferenceType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReferenceType'), 'AssetCrossReferenceType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepAssetCrossReferenceType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1964, 16), )

    
    AssetCrossReferenceType = property(__AssetCrossReferenceType.value, __AssetCrossReferenceType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductCrossReferenceType uses Python identifier ProductCrossReferenceType
    __ProductCrossReferenceType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReferenceType'), 'ProductCrossReferenceType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepProductCrossReferenceType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1965, 16), )

    
    ProductCrossReferenceType = property(__ProductCrossReferenceType.value, __ProductCrossReferenceType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationCrossReferenceType uses Python identifier ClassificationCrossReferenceType
    __ClassificationCrossReferenceType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReferenceType'), 'ClassificationCrossReferenceType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepClassificationCrossReferenceType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1966, 16), )

    
    ClassificationCrossReferenceType = property(__ClassificationCrossReferenceType.value, __ClassificationCrossReferenceType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityCrossReferenceType uses Python identifier EntityCrossReferenceType
    __EntityCrossReferenceType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReferenceType'), 'EntityCrossReferenceType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepEntityCrossReferenceType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1967, 16), )

    
    EntityCrossReferenceType = property(__EntityCrossReferenceType.value, __EntityCrossReferenceType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationProductLinkType uses Python identifier ClassificationProductLinkType
    __ClassificationProductLinkType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationProductLinkType'), 'ClassificationProductLinkType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepClassificationProductLinkType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1968, 16), )

    
    ClassificationProductLinkType = property(__ClassificationProductLinkType.value, __ClassificationProductLinkType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ContextCrossReferenceType uses Python identifier ContextCrossReferenceType
    __ContextCrossReferenceType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReferenceType'), 'ContextCrossReferenceType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepContextCrossReferenceType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1969, 16), )

    
    ContextCrossReferenceType = property(__ContextCrossReferenceType.value, __ContextCrossReferenceType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}WorkspaceCrossReferenceType uses Python identifier WorkspaceCrossReferenceType
    __WorkspaceCrossReferenceType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReferenceType'), 'WorkspaceCrossReferenceType', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_httpwww_stibosystems_comstepWorkspaceCrossReferenceType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1970, 16), )

    
    WorkspaceCrossReferenceType = property(__WorkspaceCrossReferenceType.value, __WorkspaceCrossReferenceType.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_CrossReferenceTypesType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1973, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1973, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __AssetCrossReferenceType.name() : __AssetCrossReferenceType,
        __ProductCrossReferenceType.name() : __ProductCrossReferenceType,
        __ClassificationCrossReferenceType.name() : __ClassificationCrossReferenceType,
        __EntityCrossReferenceType.name() : __EntityCrossReferenceType,
        __ClassificationProductLinkType.name() : __ClassificationProductLinkType,
        __ContextCrossReferenceType.name() : __ContextCrossReferenceType,
        __WorkspaceCrossReferenceType.name() : __WorkspaceCrossReferenceType
    })
    _AttributeMap.update({
        __Selected.name() : __Selected
    })
_module_typeBindings.CrossReferenceTypesType = CrossReferenceTypesType
Namespace.addCategoryObject('typeBinding', 'CrossReferenceTypesType', CrossReferenceTypesType)


# Complex type {http://www.stibosystems.com/step}DeleteAssetType with content type ELEMENT_ONLY
class DeleteAssetType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteAssetType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1977, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteAssetType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1979, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteAssetType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1981, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1981, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteAssetType = DeleteAssetType
Namespace.addCategoryObject('typeBinding', 'DeleteAssetType', DeleteAssetType)


# Complex type {http://www.stibosystems.com/step}DeleteEntityType with content type ELEMENT_ONLY
class DeleteEntityType (pyxb.binding.basis.complexTypeDefinition):
    """
                Delete entity from its ID or a key.
                This tag requires either the ID attribute or a KeyValue tag to identify a Entity
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2012, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteEntityType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2020, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteEntityType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2022, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2022, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteEntityType = DeleteEntityType
Namespace.addCategoryObject('typeBinding', 'DeleteEntityType', DeleteEntityType)


# Complex type {http://www.stibosystems.com/step}DeleteClassificationType with content type ELEMENT_ONLY
class DeleteClassificationType (pyxb.binding.basis.complexTypeDefinition):
    """
                Delete classification from its ID or a key.
                This tag requires either the ID attribute or a KeyValue tag to identify a Classification
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2043, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteClassificationType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2051, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteClassificationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2053, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2053, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteClassificationType_Type', _module_typeBindings.STD_ANON_4, unicode_default='1')
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2054, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2054, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Type.name() : __Type
    })
_module_typeBindings.DeleteClassificationType = DeleteClassificationType
Namespace.addCategoryObject('typeBinding', 'DeleteClassificationType', DeleteClassificationType)


# Complex type {http://www.stibosystems.com/step}DeleteProductType with content type ELEMENT_ONLY
class DeleteProductType (pyxb.binding.basis.complexTypeDefinition):
    """
                Delete product from its ID or a key.
                This tag requires either the ID attribute or a KeyValue tag to identify a Product
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteProductType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2100, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteProductType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2108, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteProductType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2110, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2110, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteProductType = DeleteProductType
Namespace.addCategoryObject('typeBinding', 'DeleteProductType', DeleteProductType)


# Complex type {http://www.stibosystems.com/step}DeleteAttributeOrGroupType with content type EMPTY
class DeleteAttributeOrGroupType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteAttributeOrGroupType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeOrGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2114, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteAttributeOrGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2115, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2115, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteAttributeOrGroupType = DeleteAttributeOrGroupType
Namespace.addCategoryObject('typeBinding', 'DeleteAttributeOrGroupType', DeleteAttributeOrGroupType)


# Complex type {http://www.stibosystems.com/step}DeleteUnitOrFamilyType with content type EMPTY
class DeleteUnitOrFamilyType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteUnitOrFamilyType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteUnitOrFamilyType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2119, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteUnitOrFamilyType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2120, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2120, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteUnitOrFamilyType = DeleteUnitOrFamilyType
Namespace.addCategoryObject('typeBinding', 'DeleteUnitOrFamilyType', DeleteUnitOrFamilyType)


# Complex type {http://www.stibosystems.com/step}ECatalogType with content type ELEMENT_ONLY
class ECatalogType (pyxb.binding.basis.complexTypeDefinition):
    """
                The eCatalog element lists its names, configuration, commercial lists and sub eCatalogs.
                This recursive definition of eCatalogs spans the eCatalog hierarchy
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ECatalogType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2279, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ECatalogType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2287, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_ECatalogType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2288, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CommercialList uses Python identifier CommercialList
    __CommercialList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CommercialList'), 'CommercialList', '__httpwww_stibosystems_comstep_ECatalogType_httpwww_stibosystems_comstepCommercialList', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2289, 12), )

    
    CommercialList = property(__CommercialList.value, __CommercialList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SelectionList uses Python identifier SelectionList
    __SelectionList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SelectionList'), 'SelectionList', '__httpwww_stibosystems_comstep_ECatalogType_httpwww_stibosystems_comstepSelectionList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2290, 12), )

    
    SelectionList = property(__SelectionList.value, __SelectionList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ECatalog uses Python identifier ECatalog
    __ECatalog = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ECatalog'), 'ECatalog', '__httpwww_stibosystems_comstep_ECatalogType_httpwww_stibosystems_comstepECatalog', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2291, 12), )

    
    ECatalog = property(__ECatalog.value, __ECatalog.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ECatalogType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2293, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2293, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created using auto IDs.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_ECatalogType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2301, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2301, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    The parent eCatalog of this eCatalog. Only required if not nested inside another\n                    eCatalog element.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __Configuration.name() : __Configuration,
        __CommercialList.name() : __CommercialList,
        __SelectionList.name() : __SelectionList,
        __ECatalog.name() : __ECatalog
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.ECatalogType = ECatalogType
Namespace.addCategoryObject('typeBinding', 'ECatalogType', ECatalogType)


# Complex type {http://www.stibosystems.com/step}EdgeTypeType with content type ELEMENT_ONLY
class EdgeTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EdgeTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EdgeTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2322, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_EdgeTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2324, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_EdgeTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2325, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_EdgeTypeType_ID', _module_typeBindings.STD_ANON_5, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2327, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2327, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        __DimensionLink.name() : __DimensionLink,
        __AttributeLink.name() : __AttributeLink
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.EdgeTypeType = EdgeTypeType
Namespace.addCategoryObject('typeBinding', 'EdgeTypeType', EdgeTypeType)


# Complex type {http://www.stibosystems.com/step}ExportConfigurationType with content type ELEMENT_ONLY
class ExportConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """Element hold content of a export configuration."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ExportConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2391, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ExportConfigurationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2396, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ExportConfigurationType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2397, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_ExportConfigurationType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2398, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_ExportConfigurationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2400, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ExportConfigurationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2402, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2402, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created using auto IDs.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ClassificationReference.name() : __ClassificationReference,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.ExportConfigurationType = ExportConfigurationType
Namespace.addCategoryObject('typeBinding', 'ExportConfigurationType', ExportConfigurationType)


# Complex type {http://www.stibosystems.com/step}ImportConfigurationType with content type ELEMENT_ONLY
class ImportConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """Element hold content of a import configuration."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ImportConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2475, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ImportConfigurationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2480, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ImportConfigurationType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2481, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_ImportConfigurationType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2482, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_ImportConfigurationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2484, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ImportConfigurationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2486, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2486, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created using auto IDs.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ClassificationReference.name() : __ClassificationReference,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.ImportConfigurationType = ImportConfigurationType
Namespace.addCategoryObject('typeBinding', 'ImportConfigurationType', ImportConfigurationType)


# Complex type {http://www.stibosystems.com/step}LinkTypeType with content type EMPTY
class LinkTypeType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links an attribute to a link type of which links are allowed to have values for this attribute.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'LinkTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2555, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute LinkTypeID uses Python identifier LinkTypeID
    __LinkTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LinkTypeID'), 'LinkTypeID', '__httpwww_stibosystems_comstep_LinkTypeType_LinkTypeID', _module_typeBindings.STD_ANON_9, required=True)
    __LinkTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2561, 8)
    __LinkTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2561, 8)
    
    LinkTypeID = property(__LinkTypeID.value, __LinkTypeID.set, None, '\n                    Identifies a link type by the following codes: “C” for classification hierarchy link;\n                    “CA” for attribute validation link in classifications; “CP” for classification to product link;\n                    “CCR” for classification cross reference; “P” for product hierarchy link;\n                    “PPR” for product cross reference.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __LinkTypeID.name() : __LinkTypeID
    })
_module_typeBindings.LinkTypeType = LinkTypeType
Namespace.addCategoryObject('typeBinding', 'LinkTypeType', LinkTypeType)


# Complex type {http://www.stibosystems.com/step}NoteElementType with content type ELEMENT_ONLY
class NoteElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}NoteElementType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'NoteElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2818, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}NoteRecord uses Python identifier NoteRecord
    __NoteRecord = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'NoteRecord'), 'NoteRecord', '__httpwww_stibosystems_comstep_NoteElementType_httpwww_stibosystems_comstepNoteRecord', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2820, 12), )

    
    NoteRecord = property(__NoteRecord.value, __NoteRecord.set, None, None)

    
    # Attribute Status uses Python identifier Status
    __Status = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Status'), 'Status', '__httpwww_stibosystems_comstep_NoteElementType_Status', pyxb.binding.datatypes.string, required=True)
    __Status._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2822, 8)
    __Status._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2822, 8)
    
    Status = property(__Status.value, __Status.set, None, None)

    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_NoteElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2823, 8)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2823, 8)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_NoteElementType_FrameID', _module_typeBindings.StepID)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2824, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2824, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    _ElementMap.update({
        __NoteRecord.name() : __NoteRecord
    })
    _AttributeMap.update({
        __Status.name() : __Status,
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __FrameID.name() : __FrameID
    })
_module_typeBindings.NoteElementType = NoteElementType
Namespace.addCategoryObject('typeBinding', 'NoteElementType', NoteElementType)


# Complex type {http://www.stibosystems.com/step}OverrideSubProductType with content type ELEMENT_ONLY
class OverrideSubProductType (pyxb.binding.basis.complexTypeDefinition):
    """
                This tag can appear only for product-overrides. It links a product into the product-override
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'OverrideSubProductType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2834, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Product uses Python identifier Product
    __Product = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Product'), 'Product', '__httpwww_stibosystems_comstep_OverrideSubProductType_httpwww_stibosystems_comstepProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2842, 16), )

    
    Product = property(__Product.value, __Product.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_OverrideSubProductType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2845, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2845, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, '\n                    The ID of the product linked into this product override.\n                ')

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_OverrideSubProductType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2852, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2852, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    WebPublisher specific attribute. Identifies whether the referenced product\n                    is present on the website. Possible values: included, excluded\n                ')

    _ElementMap.update({
        __Product.name() : __Product
    })
    _AttributeMap.update({
        __ProductID.name() : __ProductID,
        __AnalyzerResult.name() : __AnalyzerResult
    })
_module_typeBindings.OverrideSubProductType = OverrideSubProductType
Namespace.addCategoryObject('typeBinding', 'OverrideSubProductType', OverrideSubProductType)


# Complex type {http://www.stibosystems.com/step}PackagingReferenceType with content type EMPTY
class PackagingReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PackagingReferenceType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PackagingReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2863, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_PackagingReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2864, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2864, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute Quantity uses Python identifier Quantity
    __Quantity = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Quantity'), 'Quantity', '__httpwww_stibosystems_comstep_PackagingReferenceType_Quantity', pyxb.binding.datatypes.string, required=True)
    __Quantity._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2865, 8)
    __Quantity._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2865, 8)
    
    Quantity = property(__Quantity.value, __Quantity.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ProductID.name() : __ProductID,
        __Quantity.name() : __Quantity
    })
_module_typeBindings.PackagingReferenceType = PackagingReferenceType
Namespace.addCategoryObject('typeBinding', 'PackagingReferenceType', PackagingReferenceType)


# Complex type {http://www.stibosystems.com/step}PageType with content type ELEMENT_ONLY
class PageType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PageType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PageType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2869, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2871, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedClassificationReference uses Python identifier SuppressedClassificationReference
    __SuppressedClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference'), 'SuppressedClassificationReference', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepSuppressedClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2872, 12), )

    
    SuppressedClassificationReference = property(__SuppressedClassificationReference.value, __SuppressedClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2874, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedProductCrossReference uses Python identifier SuppressedProductCrossReference
    __SuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), 'SuppressedProductCrossReference', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2876, 12), )

    
    SuppressedProductCrossReference = property(__SuppressedProductCrossReference.value, __SuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductCrossReference uses Python identifier ProductCrossReference
    __ProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), 'ProductCrossReference', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2878, 12), )

    
    ProductCrossReference = property(__ProductCrossReference.value, __ProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedAssetCrossReference uses Python identifier SuppressedAssetCrossReference
    __SuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), 'SuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2880, 12), )

    
    SuppressedAssetCrossReference = property(__SuppressedAssetCrossReference.value, __SuppressedAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetCrossReference uses Python identifier AssetCrossReference
    __AssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), 'AssetCrossReference', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2882, 12), )

    
    AssetCrossReference = property(__AssetCrossReference.value, __AssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Values uses Python identifier Values
    __Values = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Values'), 'Values', '__httpwww_stibosystems_comstep_PageType_httpwww_stibosystems_comstepValues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2883, 12), )

    
    Values = property(__Values.value, __Values.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_PageType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2885, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2885, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute VersionID uses Python identifier VersionID
    __VersionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VersionID'), 'VersionID', '__httpwww_stibosystems_comstep_PageType_VersionID', _module_typeBindings.StepID, required=True)
    __VersionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2886, 8)
    __VersionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2886, 8)
    
    VersionID = property(__VersionID.value, __VersionID.set, None, None)

    
    # Attribute PageNumber uses Python identifier PageNumber
    __PageNumber = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PageNumber'), 'PageNumber', '__httpwww_stibosystems_comstep_PageType_PageNumber', pyxb.binding.datatypes.string)
    __PageNumber._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2887, 8)
    __PageNumber._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2887, 8)
    
    PageNumber = property(__PageNumber.value, __PageNumber.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __SuppressedClassificationReference.name() : __SuppressedClassificationReference,
        __ClassificationReference.name() : __ClassificationReference,
        __SuppressedProductCrossReference.name() : __SuppressedProductCrossReference,
        __ProductCrossReference.name() : __ProductCrossReference,
        __SuppressedAssetCrossReference.name() : __SuppressedAssetCrossReference,
        __AssetCrossReference.name() : __AssetCrossReference,
        __Values.name() : __Values
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __VersionID.name() : __VersionID,
        __PageNumber.name() : __PageNumber
    })
_module_typeBindings.PageType = PageType
Namespace.addCategoryObject('typeBinding', 'PageType', PageType)


# Complex type {http://www.stibosystems.com/step}PageTemplateLinkType with content type EMPTY
class PageTemplateLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PageTemplateLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PageTemplateLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2955, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute PageTemplateID uses Python identifier PageTemplateID
    __PageTemplateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PageTemplateID'), 'PageTemplateID', '__httpwww_stibosystems_comstep_PageTemplateLinkType_PageTemplateID', _module_typeBindings.StepID, required=True)
    __PageTemplateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2956, 8)
    __PageTemplateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2956, 8)
    
    PageTemplateID = property(__PageTemplateID.value, __PageTemplateID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __PageTemplateID.name() : __PageTemplateID
    })
_module_typeBindings.PageTemplateLinkType = PageTemplateLinkType
Namespace.addCategoryObject('typeBinding', 'PageTemplateLinkType', PageTemplateLinkType)


# Complex type {http://www.stibosystems.com/step}PickupLayoutType with content type EMPTY
class PickupLayoutType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PickupLayoutType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PickupLayoutType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2960, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ActualPageID uses Python identifier ActualPageID
    __ActualPageID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ActualPageID'), 'ActualPageID', '__httpwww_stibosystems_comstep_PickupLayoutType_ActualPageID', _module_typeBindings.StepID, required=True)
    __ActualPageID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2961, 8)
    __ActualPageID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2961, 8)
    
    ActualPageID = property(__ActualPageID.value, __ActualPageID.set, None, None)

    
    # Attribute KeepLayout uses Python identifier KeepLayout
    __KeepLayout = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'KeepLayout'), 'KeepLayout', '__httpwww_stibosystems_comstep_PickupLayoutType_KeepLayout', pyxb.binding.datatypes.boolean)
    __KeepLayout._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2962, 8)
    __KeepLayout._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2962, 8)
    
    KeepLayout = property(__KeepLayout.value, __KeepLayout.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ActualPageID.name() : __ActualPageID,
        __KeepLayout.name() : __KeepLayout
    })
_module_typeBindings.PickupLayoutType = PickupLayoutType
Namespace.addCategoryObject('typeBinding', 'PickupLayoutType', PickupLayoutType)


# Complex type {http://www.stibosystems.com/step}PickupPageType with content type EMPTY
class PickupPageType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PickupPageType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PickupPageType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2966, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ActualPageID uses Python identifier ActualPageID
    __ActualPageID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ActualPageID'), 'ActualPageID', '__httpwww_stibosystems_comstep_PickupPageType_ActualPageID', _module_typeBindings.StepID, required=True)
    __ActualPageID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2967, 8)
    __ActualPageID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2967, 8)
    
    ActualPageID = property(__ActualPageID.value, __ActualPageID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ActualPageID.name() : __ActualPageID
    })
_module_typeBindings.PickupPageType = PickupPageType
Namespace.addCategoryObject('typeBinding', 'PickupPageType', PickupPageType)


# Complex type {http://www.stibosystems.com/step}PlannedPageType with content type ELEMENT_ONLY
class PlannedPageType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PlannedPageType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PlannedPageType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2971, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2973, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2974, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Basket uses Python identifier Basket
    __Basket = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Basket'), 'Basket', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepBasket', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2975, 12), )

    
    Basket = property(__Basket.value, __Basket.set, None, None)

    
    # Element {http://www.stibosystems.com/step}VersionLink uses Python identifier VersionLink
    __VersionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'VersionLink'), 'VersionLink', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepVersionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2976, 12), )

    
    VersionLink = property(__VersionLink.value, __VersionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TemplateLayout uses Python identifier TemplateLayout
    __TemplateLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), 'TemplateLayout', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepTemplateLayout', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2978, 16), )

    
    TemplateLayout = property(__TemplateLayout.value, __TemplateLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PickupPage uses Python identifier PickupPage
    __PickupPage = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PickupPage'), 'PickupPage', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepPickupPage', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2979, 16), )

    
    PickupPage = property(__PickupPage.value, __PickupPage.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PageContents uses Python identifier PageContents
    __PageContents = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PageContents'), 'PageContents', '__httpwww_stibosystems_comstep_PlannedPageType_httpwww_stibosystems_comstepPageContents', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2981, 12), )

    
    PageContents = property(__PageContents.value, __PageContents.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_PlannedPageType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2983, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2983, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute User uses Python identifier User
    __User = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'User'), 'User', '__httpwww_stibosystems_comstep_PlannedPageType_User', pyxb.binding.datatypes.string)
    __User._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2984, 8)
    __User._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2984, 8)
    
    User = property(__User.value, __User.set, None, None)

    
    # Attribute PageNumber uses Python identifier PageNumber
    __PageNumber = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PageNumber'), 'PageNumber', '__httpwww_stibosystems_comstep_PlannedPageType_PageNumber', pyxb.binding.datatypes.string)
    __PageNumber._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2985, 8)
    __PageNumber._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2985, 8)
    
    PageNumber = property(__PageNumber.value, __PageNumber.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Basket.name() : __Basket,
        __VersionLink.name() : __VersionLink,
        __TemplateLayout.name() : __TemplateLayout,
        __PickupPage.name() : __PickupPage,
        __PageContents.name() : __PageContents
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __User.name() : __User,
        __PageNumber.name() : __PageNumber
    })
_module_typeBindings.PlannedPageType = PlannedPageType
Namespace.addCategoryObject('typeBinding', 'PlannedPageType', PlannedPageType)


# Complex type {http://www.stibosystems.com/step}ProductBasketLinkType with content type ELEMENT_ONLY
class ProductBasketLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductBasketLinkType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductBasketLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3140, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ProductBasketLinkType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3142, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_ProductBasketLinkType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3144, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3144, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ProductID.name() : __ProductID
    })
_module_typeBindings.ProductBasketLinkType = ProductBasketLinkType
Namespace.addCategoryObject('typeBinding', 'ProductBasketLinkType', ProductBasketLinkType)


# Complex type {http://www.stibosystems.com/step}GalleyElementType with content type ELEMENT_ONLY
class GalleyElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}GalleyElementType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GalleyElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3242, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ProductElement uses Python identifier ProductElement
    __ProductElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductElement'), 'ProductElement', '__httpwww_stibosystems_comstep_GalleyElementType_httpwww_stibosystems_comstepProductElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3244, 12), )

    
    ProductElement = property(__ProductElement.value, __ProductElement.set, None, None)

    
    # Attribute TemplateID uses Python identifier TemplateID
    __TemplateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TemplateID'), 'TemplateID', '__httpwww_stibosystems_comstep_GalleyElementType_TemplateID', _module_typeBindings.StepID, required=True)
    __TemplateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3246, 8)
    __TemplateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3246, 8)
    
    TemplateID = property(__TemplateID.value, __TemplateID.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_GalleyElementType_ProductID', _module_typeBindings.StepID)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3247, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3247, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_GalleyElementType_FrameID', _module_typeBindings.StepID)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3248, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3248, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    _ElementMap.update({
        __ProductElement.name() : __ProductElement
    })
    _AttributeMap.update({
        __TemplateID.name() : __TemplateID,
        __ProductID.name() : __ProductID,
        __FrameID.name() : __FrameID
    })
_module_typeBindings.GalleyElementType = GalleyElementType
Namespace.addCategoryObject('typeBinding', 'GalleyElementType', GalleyElementType)


# Complex type {http://www.stibosystems.com/step}ProductElementType with content type ELEMENT_ONLY
class ProductElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductElementType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3251, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ProductElementType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3253, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TemplateLayout uses Python identifier TemplateLayout
    __TemplateLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), 'TemplateLayout', '__httpwww_stibosystems_comstep_ProductElementType_httpwww_stibosystems_comstepTemplateLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3254, 12), )

    
    TemplateLayout = property(__TemplateLayout.value, __TemplateLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PickupLayout uses Python identifier PickupLayout
    __PickupLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), 'PickupLayout', '__httpwww_stibosystems_comstep_ProductElementType_httpwww_stibosystems_comstepPickupLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3255, 12), )

    
    PickupLayout = property(__PickupLayout.value, __PickupLayout.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_ProductElementType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3257, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3257, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __TemplateLayout.name() : __TemplateLayout,
        __PickupLayout.name() : __PickupLayout
    })
    _AttributeMap.update({
        __ProductID.name() : __ProductID
    })
_module_typeBindings.ProductElementType = ProductElementType
Namespace.addCategoryObject('typeBinding', 'ProductElementType', ProductElementType)


# Complex type {http://www.stibosystems.com/step}ProductMarkerElementType with content type EMPTY
class ProductMarkerElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductMarkerElementType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductMarkerElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3260, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_ProductMarkerElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3261, 8)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3261, 8)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_ProductMarkerElementType_FrameID', _module_typeBindings.StepID, required=True)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3262, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3262, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __FrameID.name() : __FrameID
    })
_module_typeBindings.ProductMarkerElementType = ProductMarkerElementType
Namespace.addCategoryObject('typeBinding', 'ProductMarkerElementType', ProductMarkerElementType)


# Complex type {http://www.stibosystems.com/step}ProductTemplateLinkType with content type EMPTY
class ProductTemplateLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductTemplateLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductTemplateLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3322, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ProductTemplateID uses Python identifier ProductTemplateID
    __ProductTemplateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductTemplateID'), 'ProductTemplateID', '__httpwww_stibosystems_comstep_ProductTemplateLinkType_ProductTemplateID', _module_typeBindings.StepID, required=True)
    __ProductTemplateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3323, 8)
    __ProductTemplateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3323, 8)
    
    ProductTemplateID = property(__ProductTemplateID.value, __ProductTemplateID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ProductTemplateID.name() : __ProductTemplateID
    })
_module_typeBindings.ProductTemplateLinkType = ProductTemplateLinkType
Namespace.addCategoryObject('typeBinding', 'ProductTemplateLinkType', ProductTemplateLinkType)


# Complex type {http://www.stibosystems.com/step}EntityElementType with content type ELEMENT_ONLY
class EntityElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EntityElementType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntityElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3518, 5)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}RuleBasedLayout uses Python identifier RuleBasedLayout
    __RuleBasedLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout'), 'RuleBasedLayout', '__httpwww_stibosystems_comstep_EntityElementType_httpwww_stibosystems_comstepRuleBasedLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3520, 13), )

    
    RuleBasedLayout = property(__RuleBasedLayout.value, __RuleBasedLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TemplateLayout uses Python identifier TemplateLayout
    __TemplateLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), 'TemplateLayout', '__httpwww_stibosystems_comstep_EntityElementType_httpwww_stibosystems_comstepTemplateLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3521, 13), )

    
    TemplateLayout = property(__TemplateLayout.value, __TemplateLayout.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PickupLayout uses Python identifier PickupLayout
    __PickupLayout = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), 'PickupLayout', '__httpwww_stibosystems_comstep_EntityElementType_httpwww_stibosystems_comstepPickupLayout', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3522, 13), )

    
    PickupLayout = property(__PickupLayout.value, __PickupLayout.set, None, None)

    
    # Attribute OfferType uses Python identifier OfferType
    __OfferType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'OfferType'), 'OfferType', '__httpwww_stibosystems_comstep_EntityElementType_OfferType', pyxb.binding.datatypes.string)
    __OfferType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3524, 9)
    __OfferType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3524, 9)
    
    OfferType = property(__OfferType.value, __OfferType.set, None, None)

    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_EntityElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3525, 9)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3525, 9)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_EntityElementType_FrameID', _module_typeBindings.StepID, required=True)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3526, 9)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3526, 9)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    
    # Attribute EntityID uses Python identifier EntityID
    __EntityID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EntityID'), 'EntityID', '__httpwww_stibosystems_comstep_EntityElementType_EntityID', _module_typeBindings.StepID, required=True)
    __EntityID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3527, 9)
    __EntityID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3527, 9)
    
    EntityID = property(__EntityID.value, __EntityID.set, None, None)

    _ElementMap.update({
        __RuleBasedLayout.name() : __RuleBasedLayout,
        __TemplateLayout.name() : __TemplateLayout,
        __PickupLayout.name() : __PickupLayout
    })
    _AttributeMap.update({
        __OfferType.name() : __OfferType,
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __FrameID.name() : __FrameID,
        __EntityID.name() : __EntityID
    })
_module_typeBindings.EntityElementType = EntityElementType
Namespace.addCategoryObject('typeBinding', 'EntityElementType', EntityElementType)


# Complex type {http://www.stibosystems.com/step}AutoPageProductLinkType with content type ELEMENT_ONLY
class AutoPageProductLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AutoPageProductLinkType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AutoPageProductLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3632, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AutoPageProductLinkType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3634, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_AutoPageProductLinkType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3636, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3636, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ProductID.name() : __ProductID
    })
_module_typeBindings.AutoPageProductLinkType = AutoPageProductLinkType
Namespace.addCategoryObject('typeBinding', 'AutoPageProductLinkType', AutoPageProductLinkType)


# Complex type {http://www.stibosystems.com/step}AutoPageAssetLinkType with content type ELEMENT_ONLY
class AutoPageAssetLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AutoPageAssetLinkType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AutoPageAssetLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3639, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AutoPageAssetLinkType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3641, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_AutoPageAssetLinkType_AssetID', _module_typeBindings.StepID, required=True)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3643, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3643, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __AssetID.name() : __AssetID
    })
_module_typeBindings.AutoPageAssetLinkType = AutoPageAssetLinkType
Namespace.addCategoryObject('typeBinding', 'AutoPageAssetLinkType', AutoPageAssetLinkType)


# Complex type {http://www.stibosystems.com/step}AutoPageClassificationLinkType with content type ELEMENT_ONLY
class AutoPageClassificationLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AutoPageClassificationLinkType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AutoPageClassificationLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3646, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AutoPageClassificationLinkType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3648, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_AutoPageClassificationLinkType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3650, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3650, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.AutoPageClassificationLinkType = AutoPageClassificationLinkType
Namespace.addCategoryObject('typeBinding', 'AutoPageClassificationLinkType', AutoPageClassificationLinkType)


# Complex type {http://www.stibosystems.com/step}ReplaceValuesType with content type EMPTY
class ReplaceValuesType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing values should be replaced with the ones present in the import file. The instruction can either match
                all attributes, attributes in a specific group (AttributeGroupID attribute) or a specific attribute (AttributeID attribute).
                Only one of AttributeGroupID and AttributeID may be specified. If an attribute is matched by multiple rules, the most specific
                rule will be used.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceValuesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3917, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_ReplaceValuesType_AttributeID', pyxb.binding.datatypes.string)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3926, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3926, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, '\n                    Makes the instruction apply only for a specific attribute\n                ')

    
    # Attribute AttributeGroupID uses Python identifier AttributeGroupID
    __AttributeGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeGroupID'), 'AttributeGroupID', '__httpwww_stibosystems_comstep_ReplaceValuesType_AttributeGroupID', pyxb.binding.datatypes.string)
    __AttributeGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3933, 8)
    __AttributeGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3933, 8)
    
    AttributeGroupID = property(__AttributeGroupID.value, __AttributeGroupID.set, None, '\n                    Makes the instruction apply only for attributes in a specific attribute group\n                ')

    
    # Attribute CrossContext uses Python identifier CrossContext
    __CrossContext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CrossContext'), 'CrossContext', '__httpwww_stibosystems_comstep_ReplaceValuesType_CrossContext', _module_typeBindings.YesNoType)
    __CrossContext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3940, 8)
    __CrossContext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3940, 8)
    
    CrossContext = property(__CrossContext.value, __CrossContext.set, None, '\n                    Indicates if the replacement should be performed across all contexts (defaults to "N"). If an attribute is in multiple groups\n                    for which replacement instructions have been specified and these have diverting "CrossContext" values (both "Y" and none/"N"),\n                    cross context replacement will not be performed for the attribute. The same rule applies if multiple instructions with diverting\n                    settings have been defined for the specific attribute. If the attribute is not included or the value is "N", the replacement will\n                    only be performed in the import context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __AttributeID.name() : __AttributeID,
        __AttributeGroupID.name() : __AttributeGroupID,
        __CrossContext.name() : __CrossContext
    })
_module_typeBindings.ReplaceValuesType = ReplaceValuesType
Namespace.addCategoryObject('typeBinding', 'ReplaceValuesType', ReplaceValuesType)


# Complex type {http://www.stibosystems.com/step}ReplaceCrossReferencesType with content type EMPTY
class ReplaceCrossReferencesType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing references (not including classification product links) should be replaced with the ones present
                in the import file. The instruction can either match all reference types or a specific reference type (ReferenceTypeID attribute).
                If a reference type is matched by multiple rules, the most specific rule will be used.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferencesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3953, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ReferenceTypeID uses Python identifier ReferenceTypeID
    __ReferenceTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReferenceTypeID'), 'ReferenceTypeID', '__httpwww_stibosystems_comstep_ReplaceCrossReferencesType_ReferenceTypeID', pyxb.binding.datatypes.string)
    __ReferenceTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3961, 8)
    __ReferenceTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3961, 8)
    
    ReferenceTypeID = property(__ReferenceTypeID.value, __ReferenceTypeID.set, None, '\n                    Makes the instruction apply only for a specific reference type\n                ')

    
    # Attribute CrossContext uses Python identifier CrossContext
    __CrossContext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CrossContext'), 'CrossContext', '__httpwww_stibosystems_comstep_ReplaceCrossReferencesType_CrossContext', _module_typeBindings.YesNoType)
    __CrossContext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3968, 8)
    __CrossContext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3968, 8)
    
    CrossContext = property(__CrossContext.value, __CrossContext.set, None, '\n                    Indicates if the replacement should be performed across all contexts (defaults to "N"). If a reference type is matched\n                    by multiple reference type specific instructions with diverting "CrossContext" values (both "Y" and none/"N"),\n                    cross context replacement will not be performed. If the attribute is not included or the value is "N", the replacement\n                    will only be performed in the import context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ReferenceTypeID.name() : __ReferenceTypeID,
        __CrossContext.name() : __CrossContext
    })
_module_typeBindings.ReplaceCrossReferencesType = ReplaceCrossReferencesType
Namespace.addCategoryObject('typeBinding', 'ReplaceCrossReferencesType', ReplaceCrossReferencesType)


# Complex type {http://www.stibosystems.com/step}ReplaceAttributeLinksType with content type EMPTY
class ReplaceAttributeLinksType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing attribute links should be replaced with the ones present in the import file
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinksType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3980, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute CrossContext uses Python identifier CrossContext
    __CrossContext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CrossContext'), 'CrossContext', '__httpwww_stibosystems_comstep_ReplaceAttributeLinksType_CrossContext', _module_typeBindings.YesNoType)
    __CrossContext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3986, 8)
    __CrossContext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3986, 8)
    
    CrossContext = property(__CrossContext.value, __CrossContext.set, None, '\n                    Indicates if the replacement should be performed across all contexts (defaults to "N"). If the attribute is not included\n                    or the value is "N", the attribute link visibility will be modified only in case the link is visible in the import context.\n                    If the attribute is set to "Y" the attribute link visibility will be modified even if the link is not visible from\n                    the current import context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __CrossContext.name() : __CrossContext
    })
_module_typeBindings.ReplaceAttributeLinksType = ReplaceAttributeLinksType
Namespace.addCategoryObject('typeBinding', 'ReplaceAttributeLinksType', ReplaceAttributeLinksType)


# Complex type {http://www.stibosystems.com/step}ReplaceClassificationReferencesType with content type EMPTY
class ReplaceClassificationReferencesType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing classification product links owned by the product side should be replaced with the ones present
                in the import file. The instruction can either match all classification product link types owned by the product side
                or a specific type (LinkTypeID attribute). If a link type is matched by multiple rules, the most specific rule will be used.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReferencesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4007, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute LinkTypeID uses Python identifier LinkTypeID
    __LinkTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LinkTypeID'), 'LinkTypeID', '__httpwww_stibosystems_comstep_ReplaceClassificationReferencesType_LinkTypeID', pyxb.binding.datatypes.string)
    __LinkTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4015, 8)
    __LinkTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4015, 8)
    
    LinkTypeID = property(__LinkTypeID.value, __LinkTypeID.set, None, '\n                    Makes the instruction apply only for a specific classification product link type\n                ')

    
    # Attribute CrossContext uses Python identifier CrossContext
    __CrossContext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CrossContext'), 'CrossContext', '__httpwww_stibosystems_comstep_ReplaceClassificationReferencesType_CrossContext', _module_typeBindings.YesNoType)
    __CrossContext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4022, 8)
    __CrossContext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4022, 8)
    
    CrossContext = property(__CrossContext.value, __CrossContext.set, None, '\n                    Indicates if the replacement should be performed across all contexts (defaults to "N"). If a link type is matched by multiple\n                    type specific instructions with diverting "CrossContext" values (both "Y" and none/"N"), cross context replacement\n                    will not be performed. If the attribute is not included or the value is "N", the replacement will only be performed\n                    in the import context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __LinkTypeID.name() : __LinkTypeID,
        __CrossContext.name() : __CrossContext
    })
_module_typeBindings.ReplaceClassificationReferencesType = ReplaceClassificationReferencesType
Namespace.addCategoryObject('typeBinding', 'ReplaceClassificationReferencesType', ReplaceClassificationReferencesType)


# Complex type {http://www.stibosystems.com/step}ReplaceProductReferencesType with content type EMPTY
class ReplaceProductReferencesType (pyxb.binding.basis.complexTypeDefinition):
    """
                Indicates if existing classification product links owned by the classification side should be replaced with the ones present
                in the import file. The instruction can either match all classification product link types owned by the classification side
                or a specific type (LinkTypeID attribute). If a link type is matched by multiple rules, the most specific rule will be used.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductReferencesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4034, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute LinkTypeID uses Python identifier LinkTypeID
    __LinkTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LinkTypeID'), 'LinkTypeID', '__httpwww_stibosystems_comstep_ReplaceProductReferencesType_LinkTypeID', pyxb.binding.datatypes.string)
    __LinkTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4042, 8)
    __LinkTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4042, 8)
    
    LinkTypeID = property(__LinkTypeID.value, __LinkTypeID.set, None, '\n                    Makes the instruction apply only for a specific classification product link type\n                ')

    
    # Attribute CrossContext uses Python identifier CrossContext
    __CrossContext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CrossContext'), 'CrossContext', '__httpwww_stibosystems_comstep_ReplaceProductReferencesType_CrossContext', _module_typeBindings.YesNoType)
    __CrossContext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4049, 8)
    __CrossContext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4049, 8)
    
    CrossContext = property(__CrossContext.value, __CrossContext.set, None, '\n                    Indicates if the replacement should be performed across all contexts (defaults to "N"). If a link type is matched by multiple\n                    type specific instructions with diverting "CrossContext" values (both "Y" and none/"N"), cross context replacement will not\n                    be performed. If the attribute is not included or the value is "N", the replacement will only be performed in the import context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __LinkTypeID.name() : __LinkTypeID,
        __CrossContext.name() : __CrossContext
    })
_module_typeBindings.ReplaceProductReferencesType = ReplaceProductReferencesType
Namespace.addCategoryObject('typeBinding', 'ReplaceProductReferencesType', ReplaceProductReferencesType)


# Complex type {http://www.stibosystems.com/step}SequenceProductType with content type ELEMENT_ONLY
class SequenceProductType (pyxb.binding.basis.complexTypeDefinition):
    """
                Product sequences are used to show the sequence of child products under manually sorted parent products/classifications.
                By default the sequences are not exported. And there is no option to turn it on using the export wiard.
                In order for them to be exported, you must put it explicitly in the export recorder file.
                E.g.:
                
                or:
                
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SequenceProductType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4200, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_SequenceProductType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4213, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_SequenceProductType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4215, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4215, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SequenceProductType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4216, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4216, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Changed.name() : __Changed
    })
_module_typeBindings.SequenceProductType = SequenceProductType
Namespace.addCategoryObject('typeBinding', 'SequenceProductType', SequenceProductType)


# Complex type {http://www.stibosystems.com/step}DeleteDataContainerType with content type EMPTY
class DeleteDataContainerType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteDataContainerType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4376, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteDataContainerType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4377, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4377, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of a DataContainer instance to delete.\n                    Specifying an ID of a non-existing DataContainer is an error.\n                    Specifying an ID with a type different from the Type attribute in the surrounding MultiDataContainer is an error.\n                    Specifying an ID of a DataContainer that does not belong to the enclosing entity is an error.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteDataContainerType = DeleteDataContainerType
Namespace.addCategoryObject('typeBinding', 'DeleteDataContainerType', DeleteDataContainerType)


# Complex type {http://www.stibosystems.com/step}TableTypeLinkType with content type EMPTY
class TableTypeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableTypeLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableTypeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4518, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute TableTypeID uses Python identifier TableTypeID
    __TableTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TableTypeID'), 'TableTypeID', '__httpwww_stibosystems_comstep_TableTypeLinkType_TableTypeID', _module_typeBindings.StepID, required=True)
    __TableTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4519, 8)
    __TableTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4519, 8)
    
    TableTypeID = property(__TableTypeID.value, __TableTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __TableTypeID.name() : __TableTypeID
    })
_module_typeBindings.TableTypeLinkType = TableTypeLinkType
Namespace.addCategoryObject('typeBinding', 'TableTypeLinkType', TableTypeLinkType)


# Complex type {http://www.stibosystems.com/step}RowColumnTableGroupType with content type ELEMENT_ONLY
class RowColumnTableGroupType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}RowColumnTableGroupType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4582, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_RowColumnTableGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4584, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}RowColumnTableGroup uses Python identifier RowColumnTableGroup
    __RowColumnTableGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroup'), 'RowColumnTableGroup', '__httpwww_stibosystems_comstep_RowColumnTableGroupType_httpwww_stibosystems_comstepRowColumnTableGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4585, 12), )

    
    RowColumnTableGroup = property(__RowColumnTableGroup.value, __RowColumnTableGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_RowColumnTableGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4587, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4587, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_RowColumnTableGroupType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4594, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4594, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_RowColumnTableGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4599, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4599, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_RowColumnTableGroupType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4601, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4601, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __RowColumnTableGroup.name() : __RowColumnTableGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.RowColumnTableGroupType = RowColumnTableGroupType
Namespace.addCategoryObject('typeBinding', 'RowColumnTableGroupType', RowColumnTableGroupType)


# Complex type {http://www.stibosystems.com/step}StyleTagGroupType with content type ELEMENT_ONLY
class StyleTagGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An tag group holding a number of tags and tag groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4612, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_StyleTagGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4619, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_StyleTagGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4620, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_StyleTagGroupType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4621, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}StyleTagGroup uses Python identifier StyleTagGroup
    __StyleTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroup'), 'StyleTagGroup', '__httpwww_stibosystems_comstep_StyleTagGroupType_httpwww_stibosystems_comstepStyleTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4622, 12), )

    
    StyleTagGroup = property(__StyleTagGroup.value, __StyleTagGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_StyleTagGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4624, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4624, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_StyleTagGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4631, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4631, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_StyleTagGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4638, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4638, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __StyleTagGroup.name() : __StyleTagGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.StyleTagGroupType = StyleTagGroupType
Namespace.addCategoryObject('typeBinding', 'StyleTagGroupType', StyleTagGroupType)


# Complex type {http://www.stibosystems.com/step}SpecialCharacterTagGroupType with content type ELEMENT_ONLY
class SpecialCharacterTagGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An tag group holding a number of tags and tag groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4641, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4648, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4649, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4650, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SpecialCharacterTagGroup uses Python identifier SpecialCharacterTagGroup
    __SpecialCharacterTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroup'), 'SpecialCharacterTagGroup', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_httpwww_stibosystems_comstepSpecialCharacterTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4651, 12), )

    
    SpecialCharacterTagGroup = property(__SpecialCharacterTagGroup.value, __SpecialCharacterTagGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4653, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4653, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4660, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4660, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_SpecialCharacterTagGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4667, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4667, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __SpecialCharacterTagGroup.name() : __SpecialCharacterTagGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.SpecialCharacterTagGroupType = SpecialCharacterTagGroupType
Namespace.addCategoryObject('typeBinding', 'SpecialCharacterTagGroupType', SpecialCharacterTagGroupType)


# Complex type {http://www.stibosystems.com/step}CharacterTagGroupType with content type ELEMENT_ONLY
class CharacterTagGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An tag group holding a number of tags and tag groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4670, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_CharacterTagGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4677, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_CharacterTagGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4678, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_CharacterTagGroupType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4679, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CharacterTagGroup uses Python identifier CharacterTagGroup
    __CharacterTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroup'), 'CharacterTagGroup', '__httpwww_stibosystems_comstep_CharacterTagGroupType_httpwww_stibosystems_comstepCharacterTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4680, 12), )

    
    CharacterTagGroup = property(__CharacterTagGroup.value, __CharacterTagGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_CharacterTagGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4682, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4682, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_CharacterTagGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4689, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4689, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_CharacterTagGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4696, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4696, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __CharacterTagGroup.name() : __CharacterTagGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.CharacterTagGroupType = CharacterTagGroupType
Namespace.addCategoryObject('typeBinding', 'CharacterTagGroupType', CharacterTagGroupType)


# Complex type {http://www.stibosystems.com/step}FootnoteTagGroupType with content type ELEMENT_ONLY
class FootnoteTagGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An tag group holding a number of tags and tag groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4699, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4706, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4707, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4708, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}FootnoteTagGroup uses Python identifier FootnoteTagGroup
    __FootnoteTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroup'), 'FootnoteTagGroup', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_httpwww_stibosystems_comstepFootnoteTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4709, 12), )

    
    FootnoteTagGroup = property(__FootnoteTagGroup.value, __FootnoteTagGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4711, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4711, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4718, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4718, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_FootnoteTagGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4725, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4725, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __FootnoteTagGroup.name() : __FootnoteTagGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.FootnoteTagGroupType = FootnoteTagGroupType
Namespace.addCategoryObject('typeBinding', 'FootnoteTagGroupType', FootnoteTagGroupType)


# Complex type {http://www.stibosystems.com/step}HyperlinkTagGroupType with content type ELEMENT_ONLY
class HyperlinkTagGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An tag group holding a number of tags and tag groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4728, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4735, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4736, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4737, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}HyperlinkTagGroup uses Python identifier HyperlinkTagGroup
    __HyperlinkTagGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroup'), 'HyperlinkTagGroup', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_httpwww_stibosystems_comstepHyperlinkTagGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4738, 12), )

    
    HyperlinkTagGroup = property(__HyperlinkTagGroup.value, __HyperlinkTagGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4740, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4740, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4747, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4747, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_HyperlinkTagGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4754, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4754, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __HyperlinkTagGroup.name() : __HyperlinkTagGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.HyperlinkTagGroupType = HyperlinkTagGroupType
Namespace.addCategoryObject('typeBinding', 'HyperlinkTagGroupType', HyperlinkTagGroupType)


# Complex type {http://www.stibosystems.com/step}StyleTagType with content type ELEMENT_ONLY
class StyleTagType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a style tag.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StyleTagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4836, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_StyleTagType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4843, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        How tag content should be styled in STEP GUI.\n                    ')

    
    # Element {http://www.stibosystems.com/step}TagFormat uses Python identifier TagFormat
    __TagFormat = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TagFormat'), 'TagFormat', '__httpwww_stibosystems_comstep_StyleTagType_httpwww_stibosystems_comstepTagFormat', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4850, 12), )

    
    TagFormat = property(__TagFormat.value, __TagFormat.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_StyleTagType_ID', _module_typeBindings.TagID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4852, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4852, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of tag - in STEP GUI presented as Name of tag. Must be unique across all tag types.\n                ')

    
    # Attribute Tag uses Python identifier Tag
    __Tag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Tag'), 'Tag', '__httpwww_stibosystems_comstep_StyleTagType_Tag', pyxb.binding.datatypes.string, required=True)
    __Tag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4859, 8)
    __Tag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4859, 8)
    
    Tag = property(__Tag.value, __Tag.set, None, '\n                    Tag name. Must be unique across all tag types.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_StyleTagType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4866, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4866, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. If not supplied and tag not already exists it will be created on top level.\n                ')

    _ElementMap.update({
        __Configuration.name() : __Configuration,
        __TagFormat.name() : __TagFormat
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Tag.name() : __Tag,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.StyleTagType = StyleTagType
Namespace.addCategoryObject('typeBinding', 'StyleTagType', StyleTagType)


# Complex type {http://www.stibosystems.com/step}SpecialCharacterTagType with content type ELEMENT_ONLY
class SpecialCharacterTagType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a special character tag.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4875, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Formatting uses Python identifier Formatting
    __Formatting = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Formatting'), 'Formatting', '__httpwww_stibosystems_comstep_SpecialCharacterTagType_httpwww_stibosystems_comstepFormatting', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4882, 12), )

    
    Formatting = property(__Formatting.value, __Formatting.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_SpecialCharacterTagType_ID', pyxb.binding.datatypes.hexBinary, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4884, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4884, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of tag - in STEP GUI presented as Code of tag. Four character hexadecimal representation of character.\n                    The character (not the hexadecimal code) must be unique across all tags.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_SpecialCharacterTagType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4892, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4892, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. If not supplied and tag not already exists it will be created on top level.\n                ')

    _ElementMap.update({
        __Formatting.name() : __Formatting
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.SpecialCharacterTagType = SpecialCharacterTagType
Namespace.addCategoryObject('typeBinding', 'SpecialCharacterTagType', SpecialCharacterTagType)


# Complex type {http://www.stibosystems.com/step}CharacterTagType with content type ELEMENT_ONLY
class CharacterTagType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a character tag.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CharacterTagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4901, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_CharacterTagType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4908, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        How tag content should be styled in STEP GUI.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Formatting uses Python identifier Formatting
    __Formatting = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Formatting'), 'Formatting', '__httpwww_stibosystems_comstep_CharacterTagType_httpwww_stibosystems_comstepFormatting', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4915, 12), )

    
    Formatting = property(__Formatting.value, __Formatting.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_CharacterTagType_ID', _module_typeBindings.TagID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4917, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4917, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of tag - in STEP GUI presented as Name of tag. Must be unique across all tag types.\n                ')

    
    # Attribute Tag uses Python identifier Tag
    __Tag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Tag'), 'Tag', '__httpwww_stibosystems_comstep_CharacterTagType_Tag', pyxb.binding.datatypes.string, required=True)
    __Tag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4924, 8)
    __Tag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4924, 8)
    
    Tag = property(__Tag.value, __Tag.set, None, '\n                    Tag name. Must be unique across all tag types.\n                ')

    
    # Attribute GuiRendering uses Python identifier GuiRendering
    __GuiRendering = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'GuiRendering'), 'GuiRendering', '__httpwww_stibosystems_comstep_CharacterTagType_GuiRendering', pyxb.binding.datatypes.string)
    __GuiRendering._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4931, 8)
    __GuiRendering._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4931, 8)
    
    GuiRendering = property(__GuiRendering.value, __GuiRendering.set, None, '\n                    String displayed in STEP GUI for tag.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_CharacterTagType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4938, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4938, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. If not supplied and tag not already exists it will be created on top level.\n                ')

    _ElementMap.update({
        __Configuration.name() : __Configuration,
        __Formatting.name() : __Formatting
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Tag.name() : __Tag,
        __GuiRendering.name() : __GuiRendering,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.CharacterTagType = CharacterTagType
Namespace.addCategoryObject('typeBinding', 'CharacterTagType', CharacterTagType)


# Complex type {http://www.stibosystems.com/step}FootnoteTagType with content type ELEMENT_ONLY
class FootnoteTagType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a footnote tag.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4947, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}TagFormat uses Python identifier TagFormat
    __TagFormat = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TagFormat'), 'TagFormat', '__httpwww_stibosystems_comstep_FootnoteTagType_httpwww_stibosystems_comstepTagFormat', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4954, 12), )

    
    TagFormat = property(__TagFormat.value, __TagFormat.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_FootnoteTagType_ID', _module_typeBindings.TagID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4956, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4956, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of tag - in STEP GUI presented as Name of tag. Must be unique across all tag types.\n                ')

    
    # Attribute Tag uses Python identifier Tag
    __Tag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Tag'), 'Tag', '__httpwww_stibosystems_comstep_FootnoteTagType_Tag', pyxb.binding.datatypes.string, required=True)
    __Tag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4963, 8)
    __Tag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4963, 8)
    
    Tag = property(__Tag.value, __Tag.set, None, '\n                    Tag name. Must be unique across all tag types.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_FootnoteTagType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4970, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4970, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. If not supplied and tag not already exists it will be created on top level.\n                ')

    _ElementMap.update({
        __TagFormat.name() : __TagFormat
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Tag.name() : __Tag,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.FootnoteTagType = FootnoteTagType
Namespace.addCategoryObject('typeBinding', 'FootnoteTagType', FootnoteTagType)


# Complex type {http://www.stibosystems.com/step}HyperlinkTagType with content type ELEMENT_ONLY
class HyperlinkTagType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a hyperlink tag.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4979, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_HyperlinkTagType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4986, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        How tag content should be styled in STEP GUI.\n                    ')

    
    # Element {http://www.stibosystems.com/step}TagFormat uses Python identifier TagFormat
    __TagFormat = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TagFormat'), 'TagFormat', '__httpwww_stibosystems_comstep_HyperlinkTagType_httpwww_stibosystems_comstepTagFormat', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4993, 12), )

    
    TagFormat = property(__TagFormat.value, __TagFormat.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_HyperlinkTagType_ID', _module_typeBindings.TagID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4995, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4995, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of tag - in STEP GUI presented as Name of tag. Must be unique across all tag types.\n                ')

    
    # Attribute Tag uses Python identifier Tag
    __Tag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Tag'), 'Tag', '__httpwww_stibosystems_comstep_HyperlinkTagType_Tag', pyxb.binding.datatypes.string, required=True)
    __Tag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5002, 8)
    __Tag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5002, 8)
    
    Tag = property(__Tag.value, __Tag.set, None, '\n                    Tag name. Must be unique across all tag types.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_HyperlinkTagType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5009, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5009, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent tag group. If not supplied and tag not already exists it will be created on top level.\n                ')

    _ElementMap.update({
        __Configuration.name() : __Configuration,
        __TagFormat.name() : __TagFormat
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Tag.name() : __Tag,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.HyperlinkTagType = HyperlinkTagType
Namespace.addCategoryObject('typeBinding', 'HyperlinkTagType', HyperlinkTagType)


# Complex type {http://www.stibosystems.com/step}TemplateLayoutType with content type EMPTY
class TemplateLayoutType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TemplateLayoutType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TemplateLayoutType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5077, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute TemplateID uses Python identifier TemplateID
    __TemplateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TemplateID'), 'TemplateID', '__httpwww_stibosystems_comstep_TemplateLayoutType_TemplateID', _module_typeBindings.StepID, required=True)
    __TemplateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5078, 8)
    __TemplateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5078, 8)
    
    TemplateID = property(__TemplateID.value, __TemplateID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __TemplateID.name() : __TemplateID
    })
_module_typeBindings.TemplateLayoutType = TemplateLayoutType
Namespace.addCategoryObject('typeBinding', 'TemplateLayoutType', TemplateLayoutType)


# Complex type {http://www.stibosystems.com/step}TermsListLinkType with content type EMPTY
class TermsListLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TermsListLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TermsListLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5101, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute TermsListID uses Python identifier TermsListID
    __TermsListID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TermsListID'), 'TermsListID', '__httpwww_stibosystems_comstep_TermsListLinkType_TermsListID', _module_typeBindings.StepID, required=True)
    __TermsListID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5102, 8)
    __TermsListID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5102, 8)
    
    TermsListID = property(__TermsListID.value, __TermsListID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __TermsListID.name() : __TermsListID
    })
_module_typeBindings.TermsListLinkType = TermsListLinkType
Namespace.addCategoryObject('typeBinding', 'TermsListLinkType', TermsListLinkType)


# Complex type {http://www.stibosystems.com/step}TextElementType with content type MIXED
class TextElementType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TextElementType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TextElementType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5112, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ExtendToFrameID uses Python identifier ExtendToFrameID
    __ExtendToFrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExtendToFrameID'), 'ExtendToFrameID', '__httpwww_stibosystems_comstep_TextElementType_ExtendToFrameID', _module_typeBindings.StepID)
    __ExtendToFrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5113, 8)
    __ExtendToFrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5113, 8)
    
    ExtendToFrameID = property(__ExtendToFrameID.value, __ExtendToFrameID.set, None, None)

    
    # Attribute Text uses Python identifier Text
    __Text = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Text'), 'Text', '__httpwww_stibosystems_comstep_TextElementType_Text', pyxb.binding.datatypes.string)
    __Text._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5114, 8)
    __Text._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5114, 8)
    
    Text = property(__Text.value, __Text.set, None, None)

    
    # Attribute FrameID uses Python identifier FrameID
    __FrameID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FrameID'), 'FrameID', '__httpwww_stibosystems_comstep_TextElementType_FrameID', _module_typeBindings.StepID)
    __FrameID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5115, 8)
    __FrameID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5115, 8)
    
    FrameID = property(__FrameID.value, __FrameID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ExtendToFrameID.name() : __ExtendToFrameID,
        __Text.name() : __Text,
        __FrameID.name() : __FrameID
    })
_module_typeBindings.TextElementType = TextElementType
Namespace.addCategoryObject('typeBinding', 'TextElementType', TextElementType)


# Complex type {http://www.stibosystems.com/step}TransformationLookupTableConfigurationType with content type ELEMENT_ONLY
class TransformationLookupTableConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """Element hold content of a transformation lookup table configuration."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5119, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_TransformationLookupTableConfigurationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5124, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_TransformationLookupTableConfigurationType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5125, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_TransformationLookupTableConfigurationType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5126, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_TransformationLookupTableConfigurationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5128, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_TransformationLookupTableConfigurationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5130, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5130, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created using auto IDs.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ClassificationReference.name() : __ClassificationReference,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.TransformationLookupTableConfigurationType = TransformationLookupTableConfigurationType
Namespace.addCategoryObject('typeBinding', 'TransformationLookupTableConfigurationType', TransformationLookupTableConfigurationType)


# Complex type {http://www.stibosystems.com/step}CollectionType with content type ELEMENT_ONLY
class CollectionType (pyxb.binding.basis.complexTypeDefinition):
    """
                A Collection is a container of objects, either as a result of a query, or as a pick list.
                Objects themselves, of either kind, are not exported/imported. The queryURL is the only
                attribute of a Collection coming in and out of a STEP system this way.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CollectionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5189, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_CollectionType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5199, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_CollectionType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5200, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_CollectionType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5202, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5202, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_CollectionType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5203, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5203, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    The optional parentID is used for importing Collections into an already existing\n                    hierarchy of CollectionGroups.\n                    You cannot use this field for importing into an eCatalog.\n                    If that is what you want then you need surrounding ECatalog tag.\n                ')

    
    # Attribute QueryURL uses Python identifier QueryURL
    __QueryURL = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QueryURL'), 'QueryURL', '__httpwww_stibosystems_comstep_CollectionType_QueryURL', pyxb.binding.datatypes.string)
    __QueryURL._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5213, 8)
    __QueryURL._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5213, 8)
    
    QueryURL = property(__QueryURL.value, __QueryURL.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __QueryURL.name() : __QueryURL
    })
_module_typeBindings.CollectionType = CollectionType
Namespace.addCategoryObject('typeBinding', 'CollectionType', CollectionType)


# Complex type {http://www.stibosystems.com/step}CollectionGroupType with content type ELEMENT_ONLY
class CollectionGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                The CollectionGroup is a container for Collections.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CollectionGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5270, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_CollectionGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5277, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_CollectionGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5278, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CollectionGroup uses Python identifier CollectionGroup
    __CollectionGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CollectionGroup'), 'CollectionGroup', '__httpwww_stibosystems_comstep_CollectionGroupType_httpwww_stibosystems_comstepCollectionGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5279, 12), )

    
    CollectionGroup = property(__CollectionGroup.value, __CollectionGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Collection uses Python identifier Collection
    __Collection = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Collection'), 'Collection', '__httpwww_stibosystems_comstep_CollectionGroupType_httpwww_stibosystems_comstepCollection', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5280, 12), )

    
    Collection = property(__Collection.value, __Collection.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_CollectionGroupType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5282, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5282, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_CollectionGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5283, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5283, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    The optional parentID is used for importing CollectionGroups into an already existing\n                    hierarchy of CollectionGroups.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __CollectionGroup.name() : __CollectionGroup,
        __Collection.name() : __Collection
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.CollectionGroupType = CollectionGroupType
Namespace.addCategoryObject('typeBinding', 'CollectionGroupType', CollectionGroupType)


# Complex type {http://www.stibosystems.com/step}OnApproveType with content type ELEMENT_ONLY
class OnApproveType (pyxb.binding.basis.complexTypeDefinition):
    """
                The setup of a Business Rule on approve
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'OnApproveType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5568, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}LocalBusinessRule uses Python identifier LocalBusinessRule
    __LocalBusinessRule = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRule'), 'LocalBusinessRule', '__httpwww_stibosystems_comstep_OnApproveType_httpwww_stibosystems_comstepLocalBusinessRule', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5575, 12), )

    
    LocalBusinessRule = property(__LocalBusinessRule.value, __LocalBusinessRule.set, None, None)

    
    # Attribute ApproveSetup uses Python identifier ApproveSetup
    __ApproveSetup = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ApproveSetup'), 'ApproveSetup', '__httpwww_stibosystems_comstep_OnApproveType_ApproveSetup', _module_typeBindings.STD_ANON_15, required=True)
    __ApproveSetup._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5578, 8)
    __ApproveSetup._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5578, 8)
    
    ApproveSetup = property(__ApproveSetup.value, __ApproveSetup.set, None, '\n                    How the Business Rule should work on approve.\n                ')

    
    # Attribute Condition uses Python identifier Condition
    __Condition = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Condition'), 'Condition', '__httpwww_stibosystems_comstep_OnApproveType_Condition', _module_typeBindings.StepID)
    __Condition._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5594, 8)
    __Condition._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5594, 8)
    
    Condition = property(__Condition.value, __Condition.set, None, '\n                    The ID of the Approve Condition, if global.\n                ')

    _ElementMap.update({
        __LocalBusinessRule.name() : __LocalBusinessRule
    })
    _AttributeMap.update({
        __ApproveSetup.name() : __ApproveSetup,
        __Condition.name() : __Condition
    })
_module_typeBindings.OnApproveType = OnApproveType
Namespace.addCategoryObject('typeBinding', 'OnApproveType', OnApproveType)


# Complex type {http://www.stibosystems.com/step}STEPWorkflowsType with content type ELEMENT_ONLY
class STEPWorkflowsType (pyxb.binding.basis.complexTypeDefinition):
    """
                A list of STEP Workflow configurations.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflowsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5603, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Stateflow uses Python identifier Stateflow
    __Stateflow = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Stateflow'), 'Stateflow', '__httpwww_stibosystems_comstep_STEPWorkflowsType_httpwww_stibosystems_comstepStateflow', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5610, 16), )

    
    Stateflow = property(__Stateflow.value, __Stateflow.set, None, '\n                            @deprecated Replaced by STEPWorkflow.\n                        ')

    
    # Element {http://www.stibosystems.com/step}STEPWorkflow uses Python identifier STEPWorkflow
    __STEPWorkflow = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflow'), 'STEPWorkflow', '__httpwww_stibosystems_comstep_STEPWorkflowsType_httpwww_stibosystems_comstepSTEPWorkflow', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5617, 16), )

    
    STEPWorkflow = property(__STEPWorkflow.value, __STEPWorkflow.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_STEPWorkflowsType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5619, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5619, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Stateflow.name() : __Stateflow,
        __STEPWorkflow.name() : __STEPWorkflow
    })
    _AttributeMap.update({
        __Selected.name() : __Selected
    })
_module_typeBindings.STEPWorkflowsType = STEPWorkflowsType
Namespace.addCategoryObject('typeBinding', 'STEPWorkflowsType', STEPWorkflowsType)


# Complex type {http://www.stibosystems.com/step}MatchCodeObjectSubsetLink with content type EMPTY
class MatchCodeObjectSubsetLink (pyxb.binding.basis.complexTypeDefinition):
    """
                A link indicating the hierarchy where the match code is valid. The type is given by the element this type is used with, i.e. an element with name "ValidForProductHierarchy" indicates the ID is a product ID.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchCodeObjectSubsetLink')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5798, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_MatchCodeObjectSubsetLink_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5804, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5804, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.MatchCodeObjectSubsetLink = MatchCodeObjectSubsetLink
Namespace.addCategoryObject('typeBinding', 'MatchCodeObjectSubsetLink', MatchCodeObjectSubsetLink)


# Complex type {http://www.stibosystems.com/step}DeleteValueType with content type MIXED
class DeleteValueType (pyxb.binding.basis.complexTypeDefinition):
    """
                A delete-value is an instruction to delete the value and all of its past usages during import,
                if contained within a LOV using external IDs.
                Presence of values will NOT prevent the deletion.
                If the containing LOV is using replace-value mode,
                this instruction is ignored and will yield a warning instead.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6275, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Force uses Python identifier Force
    __Force = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Force'), 'Force', '__httpwww_stibosystems_comstep_DeleteValueType_Force', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Force._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6285, 8)
    __Force._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6285, 8)
    
    Force = property(__Force.value, __Force.set, None, '\n                    Set to true if value should be deleted despite being in use somewhere.\n                    Default is false, so deletion will be prevented if values are currently visible in any workspace.\n                ')

    
    # Attribute GenerateEvents uses Python identifier GenerateEvents
    __GenerateEvents = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'GenerateEvents'), 'GenerateEvents', '__httpwww_stibosystems_comstep_DeleteValueType_GenerateEvents', _module_typeBindings.TrueFalseType, unicode_default='false')
    __GenerateEvents._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6293, 8)
    __GenerateEvents._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6293, 8)
    
    GenerateEvents = property(__GenerateEvents.value, __GenerateEvents.set, None, '\n                    Set to true if events for affected objects should be generated during deletion of values\n                    actually in use.\n                    Default is false, so deletion will appear silently, not affecting down-stream systems.\n                ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteValueType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6302, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6302, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Force.name() : __Force,
        __GenerateEvents.name() : __GenerateEvents,
        __ID.name() : __ID
    })
_module_typeBindings.DeleteValueType = DeleteValueType
Namespace.addCategoryObject('typeBinding', 'DeleteValueType', DeleteValueType)


# Complex type {http://www.stibosystems.com/step}DataContainerType with content type ELEMENT_ONLY
class DataContainerType (pyxb.binding.basis.complexTypeDefinition):
    """
                A Data Container that holds a group of related data. Used with multi valued DataContainers only.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DataContainerType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6398, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Values uses Python identifier Values
    __Values = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Values'), 'Values', '__httpwww_stibosystems_comstep_DataContainerType_httpwww_stibosystems_comstepValues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6405, 12), )

    
    Values = property(__Values.value, __Values.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DataContainerType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6408, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6408, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Auto ID is not possible for import of DataContainers that\n                    have a multivalued type.\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_DataContainerType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6416, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6416, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Values.name() : __Values
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Changed.name() : __Changed
    })
_module_typeBindings.DataContainerType = DataContainerType
Namespace.addCategoryObject('typeBinding', 'DataContainerType', DataContainerType)


# Complex type {http://www.stibosystems.com/step}VersionLinkType with content type EMPTY
class VersionLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}VersionLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'VersionLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6480, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute VersionID uses Python identifier VersionID
    __VersionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VersionID'), 'VersionID', '__httpwww_stibosystems_comstep_VersionLinkType_VersionID', _module_typeBindings.StepID, required=True)
    __VersionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6481, 8)
    __VersionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6481, 8)
    
    VersionID = property(__VersionID.value, __VersionID.set, None, None)

    
    # Attribute PageNumber uses Python identifier PageNumber
    __PageNumber = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PageNumber'), 'PageNumber', '__httpwww_stibosystems_comstep_VersionLinkType_PageNumber', pyxb.binding.datatypes.string)
    __PageNumber._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6482, 8)
    __PageNumber._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6482, 8)
    
    PageNumber = property(__PageNumber.value, __PageNumber.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __VersionID.name() : __VersionID,
        __PageNumber.name() : __PageNumber
    })
_module_typeBindings.VersionLinkType = VersionLinkType
Namespace.addCategoryObject('typeBinding', 'VersionLinkType', VersionLinkType)


# Complex type {http://www.stibosystems.com/step}VisibleTermFieldType with content type EMPTY
class VisibleTermFieldType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}VisibleTermFieldType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'VisibleTermFieldType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6486, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Field uses Python identifier Field
    __Field = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Field'), 'Field', '__httpwww_stibosystems_comstep_VisibleTermFieldType_Field', _module_typeBindings.STD_ANON_16, required=True)
    __Field._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6487, 8)
    __Field._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6487, 8)
    
    Field = property(__Field.value, __Field.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Field.name() : __Field
    })
_module_typeBindings.VisibleTermFieldType = VisibleTermFieldType
Namespace.addCategoryObject('typeBinding', 'VisibleTermFieldType', VisibleTermFieldType)


# Complex type {http://www.stibosystems.com/step}WebSiteType with content type ELEMENT_ONLY
class WebSiteType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}WebSiteType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'WebSiteType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6508, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_WebSiteType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6510, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_WebSiteType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6511, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_WebSiteType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6512, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_WebSiteType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6514, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6514, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ParentWorkspaceID uses Python identifier ParentWorkspaceID
    __ParentWorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentWorkspaceID'), 'ParentWorkspaceID', '__httpwww_stibosystems_comstep_WebSiteType_ParentWorkspaceID', _module_typeBindings.StepID)
    __ParentWorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6516, 8)
    __ParentWorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6516, 8)
    
    ParentWorkspaceID = property(__ParentWorkspaceID.value, __ParentWorkspaceID.set, None, "\n                    Indicates that the website should be created with it's own\n                    workspace, and below the workspace indicated by ParentWorkspaceID.\n                ")

    
    # Attribute WebSiteState uses Python identifier WebSiteState
    __WebSiteState = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WebSiteState'), 'WebSiteState', '__httpwww_stibosystems_comstep_WebSiteType_WebSiteState', pyxb.binding.datatypes.string)
    __WebSiteState._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6524, 8)
    __WebSiteState._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6524, 8)
    
    WebSiteState = property(__WebSiteState.value, __WebSiteState.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentWorkspaceID.name() : __ParentWorkspaceID,
        __WebSiteState.name() : __WebSiteState
    })
_module_typeBindings.WebSiteType = WebSiteType
Namespace.addCategoryObject('typeBinding', 'WebSiteType', WebSiteType)


# Complex type {http://www.stibosystems.com/step}ChangePackageType with content type ELEMENT_ONLY
class ChangePackageType (pyxb.binding.basis.complexTypeDefinition):
    """
                A change package.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ChangePackageType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7286, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_ChangePackageType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7293, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the package is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ChangePackageType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7300, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ChangePackageType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7301, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_ChangePackageType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7302, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ChangePackageType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7304, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7304, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ChangePackageType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7305, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7305, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Selected.name() : __Selected
    })
_module_typeBindings.ChangePackageType = ChangePackageType
Namespace.addCategoryObject('typeBinding', 'ChangePackageType', ChangePackageType)


# Complex type {http://www.stibosystems.com/step}StatusFlagType with content type ELEMENT_ONLY
class StatusFlagType (pyxb.binding.basis.complexTypeDefinition):
    """
                A status flag.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'StatusFlagType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7314, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_StatusFlagType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7321, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        Setup groups the status flag is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_StatusFlagType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7328, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_StatusFlagType_ID', _module_typeBindings.StepID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7330, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7330, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_StatusFlagType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7331, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7331, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_StatusFlagType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7332, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7332, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_StatusFlagType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7337, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7337, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced,
        __Changed.name() : __Changed
    })
_module_typeBindings.StatusFlagType = StatusFlagType
Namespace.addCategoryObject('typeBinding', 'StatusFlagType', StatusFlagType)


# Complex type [anonymous] with content type ELEMENT_ONLY
class CTD_ANON (pyxb.binding.basis.complexTypeDefinition):
    """Complex type [anonymous] with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 9, 8)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepAnalyzerResult', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 11, 16), )

    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ReplacementRules uses Python identifier ReplacementRules
    __ReplacementRules = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReplacementRules'), 'ReplacementRules', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepReplacementRules', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 12, 16), )

    
    ReplacementRules = property(__ReplacementRules.value, __ReplacementRules.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TagGroupList uses Python identifier TagGroupList
    __TagGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TagGroupList'), 'TagGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTagGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 13, 16), )

    
    TagGroupList = property(__TagGroupList.value, __TagGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TagList uses Python identifier TagList
    __TagList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TagList'), 'TagList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTagList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 14, 16), )

    
    TagList = property(__TagList.value, __TagList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionList uses Python identifier DimensionList
    __DimensionList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionList'), 'DimensionList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDimensionList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 15, 16), )

    
    DimensionList = property(__DimensionList.value, __DimensionList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Qualifiers uses Python identifier Qualifiers
    __Qualifiers = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Qualifiers'), 'Qualifiers', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepQualifiers', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 16, 16), )

    
    Qualifiers = property(__Qualifiers.value, __Qualifiers.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ContextList uses Python identifier ContextList
    __ContextList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ContextList'), 'ContextList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepContextList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 17, 16), )

    
    ContextList = property(__ContextList.value, __ContextList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CrossContexts uses Python identifier CrossContexts
    __CrossContexts = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CrossContexts'), 'CrossContexts', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepCrossContexts', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 18, 16), )

    
    CrossContexts = property(__CrossContexts.value, __CrossContexts.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GlobalSettings uses Python identifier GlobalSettings
    __GlobalSettings = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GlobalSettings'), 'GlobalSettings', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepGlobalSettings', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 19, 16), )

    
    GlobalSettings = property(__GlobalSettings.value, __GlobalSettings.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypes uses Python identifier UserTypes
    __UserTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypes'), 'UserTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepUserTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 20, 16), )

    
    UserTypes = property(__UserTypes.value, __UserTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Keys uses Python identifier Keys
    __Keys = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Keys'), 'Keys', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepKeys', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 21, 16), )

    
    Keys = property(__Keys.value, __Keys.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EdgeTypes uses Python identifier EdgeTypes
    __EdgeTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EdgeTypes'), 'EdgeTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepEdgeTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 22, 16), )

    
    EdgeTypes = property(__EdgeTypes.value, __EdgeTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DerivedEventTypes uses Python identifier DerivedEventTypes
    __DerivedEventTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DerivedEventTypes'), 'DerivedEventTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDerivedEventTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 23, 16), )

    
    DerivedEventTypes = property(__DerivedEventTypes.value, __DerivedEventTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CrossReferenceTypes uses Python identifier CrossReferenceTypes
    __CrossReferenceTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CrossReferenceTypes'), 'CrossReferenceTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepCrossReferenceTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 24, 16), )

    
    CrossReferenceTypes = property(__CrossReferenceTypes.value, __CrossReferenceTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAssets uses Python identifier DeleteAssets
    __DeleteAssets = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssets'), 'DeleteAssets', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteAssets', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 25, 16), )

    
    DeleteAssets = property(__DeleteAssets.value, __DeleteAssets.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteProducts uses Python identifier DeleteProducts
    __DeleteProducts = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteProducts'), 'DeleteProducts', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteProducts', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 26, 16), )

    
    DeleteProducts = property(__DeleteProducts.value, __DeleteProducts.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteEntities uses Python identifier DeleteEntities
    __DeleteEntities = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntities'), 'DeleteEntities', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteEntities', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 27, 16), )

    
    DeleteEntities = property(__DeleteEntities.value, __DeleteEntities.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteClassifications uses Python identifier DeleteClassifications
    __DeleteClassifications = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassifications'), 'DeleteClassifications', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteClassifications', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 28, 16), )

    
    DeleteClassifications = property(__DeleteClassifications.value, __DeleteClassifications.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UnitList uses Python identifier UnitList
    __UnitList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UnitList'), 'UnitList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepUnitList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 29, 16), )

    
    UnitList = property(__UnitList.value, __UnitList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CollectionList uses Python identifier CollectionList
    __CollectionList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CollectionList'), 'CollectionList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepCollectionList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 30, 16), )

    
    CollectionList = property(__CollectionList.value, __CollectionList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ListOfValuesGroupList uses Python identifier ListOfValuesGroupList
    __ListOfValuesGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroupList'), 'ListOfValuesGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepListOfValuesGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 31, 16), )

    
    ListOfValuesGroupList = property(__ListOfValuesGroupList.value, __ListOfValuesGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ListsOfValues uses Python identifier ListsOfValues
    __ListsOfValues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ListsOfValues'), 'ListsOfValues', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepListsOfValues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 32, 16), )

    
    ListsOfValues = property(__ListsOfValues.value, __ListsOfValues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupList uses Python identifier AttributeGroupList
    __AttributeGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupList'), 'AttributeGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepAttributeGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 33, 16), )

    
    AttributeGroupList = property(__AttributeGroupList.value, __AttributeGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeList uses Python identifier AttributeList
    __AttributeList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeList'), 'AttributeList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepAttributeList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 34, 16), )

    
    AttributeList = property(__AttributeList.value, __AttributeList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeTransformationGroups uses Python identifier AttributeTransformationGroups
    __AttributeTransformationGroups = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroups'), 'AttributeTransformationGroups', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepAttributeTransformationGroups', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 35, 16), )

    
    AttributeTransformationGroups = property(__AttributeTransformationGroups.value, __AttributeTransformationGroups.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableColors uses Python identifier TableColors
    __TableColors = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableColors'), 'TableColors', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTableColors', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 37, 16), )

    
    TableColors = property(__TableColors.value, __TableColors.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableRules uses Python identifier TableRules
    __TableRules = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableRules'), 'TableRules', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTableRules', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 38, 16), )

    
    TableRules = property(__TableRules.value, __TableRules.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableTypeGroupList uses Python identifier TableTypeGroupList
    __TableTypeGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableTypeGroupList'), 'TableTypeGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTableTypeGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 39, 16), )

    
    TableTypeGroupList = property(__TableTypeGroupList.value, __TableTypeGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ColumnTypeGroupList uses Python identifier ColumnTypeGroupList
    __ColumnTypeGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ColumnTypeGroupList'), 'ColumnTypeGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepColumnTypeGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 40, 16), )

    
    ColumnTypeGroupList = property(__ColumnTypeGroupList.value, __ColumnTypeGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}RowTypeGroupList uses Python identifier RowTypeGroupList
    __RowTypeGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RowTypeGroupList'), 'RowTypeGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepRowTypeGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 41, 16), )

    
    RowTypeGroupList = property(__RowTypeGroupList.value, __RowTypeGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableTypes uses Python identifier TableTypes
    __TableTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableTypes'), 'TableTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTableTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 42, 16), )

    
    TableTypes = property(__TableTypes.value, __TableTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ColumnTypes uses Python identifier ColumnTypes
    __ColumnTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ColumnTypes'), 'ColumnTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepColumnTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 43, 16), )

    
    ColumnTypes = property(__ColumnTypes.value, __ColumnTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}RowTypes uses Python identifier RowTypes
    __RowTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RowTypes'), 'RowTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepRowTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 44, 16), )

    
    RowTypes = property(__RowTypes.value, __RowTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DataContainerTypes uses Python identifier DataContainerTypes
    __DataContainerTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypes'), 'DataContainerTypes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDataContainerTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 45, 16), )

    
    DataContainerTypes = property(__DataContainerTypes.value, __DataContainerTypes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SetupGroups uses Python identifier SetupGroups
    __SetupGroups = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroups'), 'SetupGroups', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepSetupGroups', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 46, 16), )

    
    SetupGroups = property(__SetupGroups.value, __SetupGroups.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SetupEntities uses Python identifier SetupEntities
    __SetupEntities = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupEntities'), 'SetupEntities', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepSetupEntities', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 47, 16), )

    
    SetupEntities = property(__SetupEntities.value, __SetupEntities.set, None, None)

    
    # Element {http://www.stibosystems.com/step}BusinessLibraries uses Python identifier BusinessLibraries
    __BusinessLibraries = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BusinessLibraries'), 'BusinessLibraries', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepBusinessLibraries', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 48, 16), )

    
    BusinessLibraries = property(__BusinessLibraries.value, __BusinessLibraries.set, None, None)

    
    # Element {http://www.stibosystems.com/step}BusinessRules uses Python identifier BusinessRules
    __BusinessRules = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BusinessRules'), 'BusinessRules', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepBusinessRules', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 49, 16), )

    
    BusinessRules = property(__BusinessRules.value, __BusinessRules.set, None, None)

    
    # Element {http://www.stibosystems.com/step}STEPWorkflows uses Python identifier STEPWorkflows
    __STEPWorkflows = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflows'), 'STEPWorkflows', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepSTEPWorkflows', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 50, 16), )

    
    STEPWorkflows = property(__STEPWorkflows.value, __STEPWorkflows.set, None, None)

    
    # Element {http://www.stibosystems.com/step}StatusFlags uses Python identifier StatusFlags
    __StatusFlags = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'StatusFlags'), 'StatusFlags', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepStatusFlags', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 51, 16), )

    
    StatusFlags = property(__StatusFlags.value, __StatusFlags.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MatchCodes uses Python identifier MatchCodes
    __MatchCodes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MatchCodes'), 'MatchCodes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepMatchCodes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 52, 16), )

    
    MatchCodes = property(__MatchCodes.value, __MatchCodes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MatchingAlgorithms uses Python identifier MatchingAlgorithms
    __MatchingAlgorithms = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithms'), 'MatchingAlgorithms', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepMatchingAlgorithms', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 53, 16), )

    
    MatchingAlgorithms = property(__MatchingAlgorithms.value, __MatchingAlgorithms.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Classifications uses Python identifier Classifications
    __Classifications = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classifications'), 'Classifications', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepClassifications', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 54, 16), )

    
    Classifications = property(__Classifications.value, __Classifications.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationGroups uses Python identifier PublicationGroups
    __PublicationGroups = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroups'), 'PublicationGroups', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepPublicationGroups', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 55, 16), )

    
    PublicationGroups = property(__PublicationGroups.value, __PublicationGroups.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Assets uses Python identifier Assets
    __Assets = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Assets'), 'Assets', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepAssets', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 56, 16), )

    
    Assets = property(__Assets.value, __Assets.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Entities uses Python identifier Entities
    __Entities = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Entities'), 'Entities', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepEntities', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 57, 16), )

    
    Entities = property(__Entities.value, __Entities.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Products uses Python identifier Products
    __Products = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Products'), 'Products', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepProducts', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 58, 16), )

    
    Products = property(__Products.value, __Products.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ActionSetList uses Python identifier ActionSetList
    __ActionSetList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ActionSetList'), 'ActionSetList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepActionSetList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 59, 16), )

    
    ActionSetList = property(__ActionSetList.value, __ActionSetList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserGroupList uses Python identifier UserGroupList
    __UserGroupList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserGroupList'), 'UserGroupList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepUserGroupList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 60, 16), )

    
    UserGroupList = property(__UserGroupList.value, __UserGroupList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserList uses Python identifier UserList
    __UserList = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserList'), 'UserList', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepUserList', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 61, 16), )

    
    UserList = property(__UserList.value, __UserList.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SystemSetup uses Python identifier SystemSetup
    __SystemSetup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SystemSetup'), 'SystemSetup', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepSystemSetup', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 62, 16), )

    
    SystemSetup = property(__SystemSetup.value, __SystemSetup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ImportConfigurations uses Python identifier ImportConfigurations
    __ImportConfigurations = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ImportConfigurations'), 'ImportConfigurations', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepImportConfigurations', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 63, 16), )

    
    ImportConfigurations = property(__ImportConfigurations.value, __ImportConfigurations.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ExportConfigurations uses Python identifier ExportConfigurations
    __ExportConfigurations = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ExportConfigurations'), 'ExportConfigurations', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepExportConfigurations', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 64, 16), )

    
    ExportConfigurations = property(__ExportConfigurations.value, __ExportConfigurations.set, None, None)

    
    # Element {http://www.stibosystems.com/step}BulkUpdateConfigurations uses Python identifier BulkUpdateConfigurations
    __BulkUpdateConfigurations = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfigurations'), 'BulkUpdateConfigurations', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepBulkUpdateConfigurations', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 65, 16), )

    
    BulkUpdateConfigurations = property(__BulkUpdateConfigurations.value, __BulkUpdateConfigurations.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TransformationLookupTableConfigurations uses Python identifier TransformationLookupTableConfigurations
    __TransformationLookupTableConfigurations = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfigurations'), 'TransformationLookupTableConfigurations', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepTransformationLookupTableConfigurations', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 66, 16), )

    
    TransformationLookupTableConfigurations = property(__TransformationLookupTableConfigurations.value, __TransformationLookupTableConfigurations.set, None, None)

    
    # Element {http://www.stibosystems.com/step}WebSites uses Python identifier WebSites
    __WebSites = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'WebSites'), 'WebSites', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepWebSites', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 68, 16), )

    
    WebSites = property(__WebSites.value, __WebSites.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ECatalogs uses Python identifier ECatalogs
    __ECatalogs = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ECatalogs'), 'ECatalogs', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepECatalogs', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 69, 16), )

    
    ECatalogs = property(__ECatalogs.value, __ECatalogs.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Stateflows uses Python identifier Stateflows
    __Stateflows = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Stateflows'), 'Stateflows', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepStateflows', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 70, 16), )

    
    Stateflows = property(__Stateflows.value, __Stateflows.set, None, '\n                            @deprecated Replaced by STEPWorkflows.\n                        ')

    
    # Element {http://www.stibosystems.com/step}PortalConfigurations uses Python identifier PortalConfigurations
    __PortalConfigurations = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PortalConfigurations'), 'PortalConfigurations', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepPortalConfigurations', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 77, 16), )

    
    PortalConfigurations = property(__PortalConfigurations.value, __PortalConfigurations.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteUnits uses Python identifier DeleteUnits
    __DeleteUnits = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteUnits'), 'DeleteUnits', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteUnits', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 78, 16), )

    
    DeleteUnits = property(__DeleteUnits.value, __DeleteUnits.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAttributes uses Python identifier DeleteAttributes
    __DeleteAttributes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributes'), 'DeleteAttributes', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteAttributes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 79, 16), )

    
    DeleteAttributes = property(__DeleteAttributes.value, __DeleteAttributes.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteListOfValues uses Python identifier DeleteListOfValues
    __DeleteListOfValues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValues'), 'DeleteListOfValues', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepDeleteListOfValues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 80, 16), )

    
    DeleteListOfValues = property(__DeleteListOfValues.value, __DeleteListOfValues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EventQueues uses Python identifier EventQueues
    __EventQueues = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EventQueues'), 'EventQueues', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepEventQueues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 81, 16), )

    
    EventQueues = property(__EventQueues.value, __EventQueues.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MissingObjects uses Python identifier MissingObjects
    __MissingObjects = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MissingObjects'), 'MissingObjects', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepMissingObjects', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 82, 16), )

    
    MissingObjects = property(__MissingObjects.value, __MissingObjects.set, None, None)

    
    # Element {http://www.stibosystems.com/step}IntegrationEndpoints uses Python identifier IntegrationEndpoints
    __IntegrationEndpoints = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IntegrationEndpoints'), 'IntegrationEndpoints', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepIntegrationEndpoints', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 83, 16), )

    
    IntegrationEndpoints = property(__IntegrationEndpoints.value, __IntegrationEndpoints.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EventProcessors uses Python identifier EventProcessors
    __EventProcessors = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EventProcessors'), 'EventProcessors', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepEventProcessors', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 84, 16), )

    
    EventProcessors = property(__EventProcessors.value, __EventProcessors.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ChangePackages uses Python identifier ChangePackages
    __ChangePackages = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ChangePackages'), 'ChangePackages', '__httpwww_stibosystems_comstep_CTD_ANON_httpwww_stibosystems_comstepChangePackages', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 85, 16), )

    
    ChangePackages = property(__ChangePackages.value, __ChangePackages.set, None, None)

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_CTD_ANON_ContextID', _module_typeBindings.StepQualifierID)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 87, 12)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 87, 12)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, '\n                        Specifies the ID of the context that provides the content selection for an export.\n                        During import, it identifies the context to which objects without an explicit QualifierID\n                        specification will be associated\n                    ')

    
    # Attribute AutoApprove uses Python identifier AutoApprove
    __AutoApprove = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AutoApprove'), 'AutoApprove', '__httpwww_stibosystems_comstep_CTD_ANON_AutoApprove', _module_typeBindings.YesNoType, unicode_default='N')
    __AutoApprove._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 96, 12)
    __AutoApprove._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 96, 12)
    
    AutoApprove = property(__AutoApprove.value, __AutoApprove.set, None, None)

    
    # Attribute AutoInitiate uses Python identifier AutoInitiate
    __AutoInitiate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AutoInitiate'), 'AutoInitiate', '__httpwww_stibosystems_comstep_CTD_ANON_AutoInitiate', _module_typeBindings.YesNoType, unicode_default='N')
    __AutoInitiate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 97, 12)
    __AutoInitiate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 97, 12)
    
    AutoInitiate = property(__AutoInitiate.value, __AutoInitiate.set, None, None)

    
    # Attribute StateflowImportEvent uses Python identifier StateflowImportEvent
    __StateflowImportEvent = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StateflowImportEvent'), 'StateflowImportEvent', '__httpwww_stibosystems_comstep_CTD_ANON_StateflowImportEvent', _module_typeBindings.YesNoType, unicode_default='N')
    __StateflowImportEvent._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 98, 12)
    __StateflowImportEvent._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 98, 12)
    
    StateflowImportEvent = property(__StateflowImportEvent.value, __StateflowImportEvent.set, None, '\n                        @deprecated Replaced by STEPWorkflowImportEvent.\n                    ')

    
    # Attribute STEPWorkflowImportEvent uses Python identifier STEPWorkflowImportEvent
    __STEPWorkflowImportEvent = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'STEPWorkflowImportEvent'), 'STEPWorkflowImportEvent', '__httpwww_stibosystems_comstep_CTD_ANON_STEPWorkflowImportEvent', _module_typeBindings.YesNoType, unicode_default='N')
    __STEPWorkflowImportEvent._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 105, 12)
    __STEPWorkflowImportEvent._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 105, 12)
    
    STEPWorkflowImportEvent = property(__STEPWorkflowImportEvent.value, __STEPWorkflowImportEvent.set, None, None)

    
    # Attribute ExportTransactionID uses Python identifier ExportTransactionID
    __ExportTransactionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExportTransactionID'), 'ExportTransactionID', '__httpwww_stibosystems_comstep_CTD_ANON_ExportTransactionID', _module_typeBindings.StepID, unicode_default='-1')
    __ExportTransactionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 106, 12)
    __ExportTransactionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 106, 12)
    
    ExportTransactionID = property(__ExportTransactionID.value, __ExportTransactionID.set, None, None)

    
    # Attribute ReplaceProductValues uses Python identifier ReplaceProductValues
    __ReplaceProductValues = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceProductValues'), 'ReplaceProductValues', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceProductValues', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceProductValues._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 107, 12)
    __ReplaceProductValues._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 107, 12)
    
    ReplaceProductValues = property(__ReplaceProductValues.value, __ReplaceProductValues.set, None, '\n                        @deprecated Replaced by ReplaceValues in ReplacementRules structure.\n\n                        Either “Y” or “N”. Indicates if all values of product attributes for each product should be\n                        replaced by the values specified in the file. Values are per default replace in all contexts,\n                        however setting the environment variable PII_PRESERVE_VALUE_ON_REPLACE to “true” will only clear\n                        values in given context. A more detailed replacement specification can be made by using the\n                        ReplacementRules sub element – please contact Stibo if that is required.\n                    ')

    
    # Attribute AllowInvalidValues uses Python identifier AllowInvalidValues
    __AllowInvalidValues = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AllowInvalidValues'), 'AllowInvalidValues', '__httpwww_stibosystems_comstep_CTD_ANON_AllowInvalidValues', _module_typeBindings.YesNoType, unicode_default='N')
    __AllowInvalidValues._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 120, 12)
    __AllowInvalidValues._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 120, 12)
    
    AllowInvalidValues = property(__AllowInvalidValues.value, __AllowInvalidValues.set, None, None)

    
    # Attribute ReplaceAttributeLinks uses Python identifier ReplaceAttributeLinks
    __ReplaceAttributeLinks = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceAttributeLinks'), 'ReplaceAttributeLinks', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceAttributeLinks', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceAttributeLinks._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 121, 12)
    __ReplaceAttributeLinks._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 121, 12)
    
    ReplaceAttributeLinks = property(__ReplaceAttributeLinks.value, __ReplaceAttributeLinks.set, None, '\n                        Either “Y” or “N”. Indicates if all attribute links for each classification should be replaced\n                        by the links provided in the file. A more detailed replacement specification can be made by\n                        using the ReplacementRules sub element – please contact Stibo if that is required.\n                    ')

    
    # Attribute ReplaceProductToProductCrossReferences uses Python identifier ReplaceProductToProductCrossReferences
    __ReplaceProductToProductCrossReferences = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceProductToProductCrossReferences'), 'ReplaceProductToProductCrossReferences', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceProductToProductCrossReferences', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceProductToProductCrossReferences._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 131, 12)
    __ReplaceProductToProductCrossReferences._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 131, 12)
    
    ReplaceProductToProductCrossReferences = property(__ReplaceProductToProductCrossReferences.value, __ReplaceProductToProductCrossReferences.set, None, '\n                        @deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n\n                        Either “Y” or “N”. Indicates if all product references for each product should be replaced by\n                        references provided in the file. A more detailed replacement specification can be made by using\n                        the ReplacementRules sub element – please contact Stibo if that is required.\n                    ')

    
    # Attribute ExportContext uses Python identifier ExportContext
    __ExportContext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExportContext'), 'ExportContext', '__httpwww_stibosystems_comstep_CTD_ANON_ExportContext', _module_typeBindings.StepQualifierID)
    __ExportContext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 143, 12)
    __ExportContext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 143, 12)
    
    ExportContext = property(__ExportContext.value, __ExportContext.set, None, None)

    
    # Attribute ReplaceTerms uses Python identifier ReplaceTerms
    __ReplaceTerms = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceTerms'), 'ReplaceTerms', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceTerms', _module_typeBindings.STD_ANON, unicode_default='CLEAR_ONLY_FOR_IMPORTED_PRODUCTS')
    __ReplaceTerms._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 144, 12)
    __ReplaceTerms._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 144, 12)
    
    ReplaceTerms = property(__ReplaceTerms.value, __ReplaceTerms.set, None, None)

    
    # Attribute ReplaceClassificationToClassificationCrossReferences uses Python identifier ReplaceClassificationToClassificationCrossReferences
    __ReplaceClassificationToClassificationCrossReferences = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceClassificationToClassificationCrossReferences'), 'ReplaceClassificationToClassificationCrossReferences', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceClassificationToClassificationCrossReferences', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceClassificationToClassificationCrossReferences._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 152, 12)
    __ReplaceClassificationToClassificationCrossReferences._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 152, 12)
    
    ReplaceClassificationToClassificationCrossReferences = property(__ReplaceClassificationToClassificationCrossReferences.value, __ReplaceClassificationToClassificationCrossReferences.set, None, 'Either “Y” or “N”. Indicates if all classification cross references for\n                        each classification should be replaced by the references provided in the file. A more detailed\n                        replacement specification can be made by using the ReplacementRules sub element – please\n                        contact Stibo if that is required\n                    ')

    
    # Attribute ReplaceOverrideToSubProductReferences uses Python identifier ReplaceOverrideToSubProductReferences
    __ReplaceOverrideToSubProductReferences = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceOverrideToSubProductReferences'), 'ReplaceOverrideToSubProductReferences', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceOverrideToSubProductReferences', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceOverrideToSubProductReferences._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 163, 12)
    __ReplaceOverrideToSubProductReferences._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 163, 12)
    
    ReplaceOverrideToSubProductReferences = property(__ReplaceOverrideToSubProductReferences.value, __ReplaceOverrideToSubProductReferences.set, None, '\n                        Either “Y” or “N”. Indicates whether or not imported OverrideSubProduct should replace\n                        existing sub products of productoverrides.\n                    ')

    
    # Attribute SingleUpdateMode uses Python identifier SingleUpdateMode
    __SingleUpdateMode = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SingleUpdateMode'), 'SingleUpdateMode', '__httpwww_stibosystems_comstep_CTD_ANON_SingleUpdateMode', _module_typeBindings.YesNoType, unicode_default='N')
    __SingleUpdateMode._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 171, 12)
    __SingleUpdateMode._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 171, 12)
    
    SingleUpdateMode = property(__SingleUpdateMode.value, __SingleUpdateMode.set, None, '\n                        Either “Y” or “N”. Indicates whether or not the whole import will run in single update mode.\n                        Specifying “Y” is required for certain import operations, e.g. adding dimension dependencies\n                        and changing validation. When specifying “N”, operations requiring single update mode to execute\n                        will be skipped and warnings will be issued.\n                    ')

    
    # Attribute WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_CTD_ANON_WorkspaceID', _module_typeBindings.StepID)
    __WorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 181, 12)
    __WorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 181, 12)
    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, '\n                        Specifies the ID of the workspace that provides the content selection for an export. During\n                        import, it identifies the workspace to which objects will be associated.\n                    ')

    
    # Attribute ReplaceProductToClassificationReferences uses Python identifier ReplaceProductToClassificationReferences
    __ReplaceProductToClassificationReferences = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceProductToClassificationReferences'), 'ReplaceProductToClassificationReferences', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceProductToClassificationReferences', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceProductToClassificationReferences._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 189, 12)
    __ReplaceProductToClassificationReferences._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 189, 12)
    
    ReplaceProductToClassificationReferences = property(__ReplaceProductToClassificationReferences.value, __ReplaceProductToClassificationReferences.set, None, '\n                        Either “Y” or “N”. Indicates if all classification references for each product should be\n                        replaced by references provided in the file. A more detailed replacement specification can be\n                        made by using the ReplacementRules sub element – please contact Stibo if that is required.\n                    ')

    
    # Attribute ReplaceClassificationValues uses Python identifier ReplaceClassificationValues
    __ReplaceClassificationValues = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceClassificationValues'), 'ReplaceClassificationValues', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceClassificationValues', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceClassificationValues._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 199, 12)
    __ReplaceClassificationValues._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 199, 12)
    
    ReplaceClassificationValues = property(__ReplaceClassificationValues.value, __ReplaceClassificationValues.set, None, '\n                        @deprecated Replaced by ReplaceValues in ReplacementRules structure.\n\n                        Either “Y” or “N”. Indicates if all classification meta data for each\n                        classification should be replaced by the meta data provided in the\n                        file. A more detailed replacement specification can be made by using the ReplacementRules sub\n                        element – please contact Stibo if that is required.\n                    ')

    
    # Attribute ReplaceValidUserTypesForAttributes uses Python identifier ReplaceValidUserTypesForAttributes
    __ReplaceValidUserTypesForAttributes = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceValidUserTypesForAttributes'), 'ReplaceValidUserTypesForAttributes', '__httpwww_stibosystems_comstep_CTD_ANON_ReplaceValidUserTypesForAttributes', _module_typeBindings.YesNoType, unicode_default='N')
    __ReplaceValidUserTypesForAttributes._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 213, 12)
    __ReplaceValidUserTypesForAttributes._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 213, 12)
    
    ReplaceValidUserTypesForAttributes = property(__ReplaceValidUserTypesForAttributes.value, __ReplaceValidUserTypesForAttributes.set, None, 'Either “Y” or “N”. Indicates if existing valid object types should be deleted\n                        if they are not present in the import, and thus replacing the entire validity span of an\n                        Attribute.\n                    ')

    
    # Attribute ExportTime uses Python identifier ExportTime
    __ExportTime = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExportTime'), 'ExportTime', '__httpwww_stibosystems_comstep_CTD_ANON_ExportTime', pyxb.binding.datatypes.string)
    __ExportTime._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 222, 12)
    __ExportTime._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 222, 12)
    
    ExportTime = property(__ExportTime.value, __ExportTime.set, None, '\n                        \n                        Specifies the starting time for an export in the format “YYYY-MM-DD HH:MM:SS”, eg “1999-10-15\n                        12:00:00”.\n                    ')

    
    # Attribute UseContextLocale uses Python identifier UseContextLocale
    __UseContextLocale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UseContextLocale'), 'UseContextLocale', '__httpwww_stibosystems_comstep_CTD_ANON_UseContextLocale', pyxb.binding.datatypes.boolean, unicode_default='false')
    __UseContextLocale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 232, 12)
    __UseContextLocale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 232, 12)
    
    UseContextLocale = property(__UseContextLocale.value, __UseContextLocale.set, None, 'Used for export only. Determines if output should be converted according to Locale-setting(s) as defined on the context(s) begin exported.\n                    ')

    _ElementMap.update({
        __AnalyzerResult.name() : __AnalyzerResult,
        __ReplacementRules.name() : __ReplacementRules,
        __TagGroupList.name() : __TagGroupList,
        __TagList.name() : __TagList,
        __DimensionList.name() : __DimensionList,
        __Qualifiers.name() : __Qualifiers,
        __ContextList.name() : __ContextList,
        __CrossContexts.name() : __CrossContexts,
        __GlobalSettings.name() : __GlobalSettings,
        __UserTypes.name() : __UserTypes,
        __Keys.name() : __Keys,
        __EdgeTypes.name() : __EdgeTypes,
        __DerivedEventTypes.name() : __DerivedEventTypes,
        __CrossReferenceTypes.name() : __CrossReferenceTypes,
        __DeleteAssets.name() : __DeleteAssets,
        __DeleteProducts.name() : __DeleteProducts,
        __DeleteEntities.name() : __DeleteEntities,
        __DeleteClassifications.name() : __DeleteClassifications,
        __UnitList.name() : __UnitList,
        __CollectionList.name() : __CollectionList,
        __ListOfValuesGroupList.name() : __ListOfValuesGroupList,
        __ListsOfValues.name() : __ListsOfValues,
        __AttributeGroupList.name() : __AttributeGroupList,
        __AttributeList.name() : __AttributeList,
        __AttributeTransformationGroups.name() : __AttributeTransformationGroups,
        __TableColors.name() : __TableColors,
        __TableRules.name() : __TableRules,
        __TableTypeGroupList.name() : __TableTypeGroupList,
        __ColumnTypeGroupList.name() : __ColumnTypeGroupList,
        __RowTypeGroupList.name() : __RowTypeGroupList,
        __TableTypes.name() : __TableTypes,
        __ColumnTypes.name() : __ColumnTypes,
        __RowTypes.name() : __RowTypes,
        __DataContainerTypes.name() : __DataContainerTypes,
        __SetupGroups.name() : __SetupGroups,
        __SetupEntities.name() : __SetupEntities,
        __BusinessLibraries.name() : __BusinessLibraries,
        __BusinessRules.name() : __BusinessRules,
        __STEPWorkflows.name() : __STEPWorkflows,
        __StatusFlags.name() : __StatusFlags,
        __MatchCodes.name() : __MatchCodes,
        __MatchingAlgorithms.name() : __MatchingAlgorithms,
        __Classifications.name() : __Classifications,
        __PublicationGroups.name() : __PublicationGroups,
        __Assets.name() : __Assets,
        __Entities.name() : __Entities,
        __Products.name() : __Products,
        __ActionSetList.name() : __ActionSetList,
        __UserGroupList.name() : __UserGroupList,
        __UserList.name() : __UserList,
        __SystemSetup.name() : __SystemSetup,
        __ImportConfigurations.name() : __ImportConfigurations,
        __ExportConfigurations.name() : __ExportConfigurations,
        __BulkUpdateConfigurations.name() : __BulkUpdateConfigurations,
        __TransformationLookupTableConfigurations.name() : __TransformationLookupTableConfigurations,
        __WebSites.name() : __WebSites,
        __ECatalogs.name() : __ECatalogs,
        __Stateflows.name() : __Stateflows,
        __PortalConfigurations.name() : __PortalConfigurations,
        __DeleteUnits.name() : __DeleteUnits,
        __DeleteAttributes.name() : __DeleteAttributes,
        __DeleteListOfValues.name() : __DeleteListOfValues,
        __EventQueues.name() : __EventQueues,
        __MissingObjects.name() : __MissingObjects,
        __IntegrationEndpoints.name() : __IntegrationEndpoints,
        __EventProcessors.name() : __EventProcessors,
        __ChangePackages.name() : __ChangePackages
    })
    _AttributeMap.update({
        __ContextID.name() : __ContextID,
        __AutoApprove.name() : __AutoApprove,
        __AutoInitiate.name() : __AutoInitiate,
        __StateflowImportEvent.name() : __StateflowImportEvent,
        __STEPWorkflowImportEvent.name() : __STEPWorkflowImportEvent,
        __ExportTransactionID.name() : __ExportTransactionID,
        __ReplaceProductValues.name() : __ReplaceProductValues,
        __AllowInvalidValues.name() : __AllowInvalidValues,
        __ReplaceAttributeLinks.name() : __ReplaceAttributeLinks,
        __ReplaceProductToProductCrossReferences.name() : __ReplaceProductToProductCrossReferences,
        __ExportContext.name() : __ExportContext,
        __ReplaceTerms.name() : __ReplaceTerms,
        __ReplaceClassificationToClassificationCrossReferences.name() : __ReplaceClassificationToClassificationCrossReferences,
        __ReplaceOverrideToSubProductReferences.name() : __ReplaceOverrideToSubProductReferences,
        __SingleUpdateMode.name() : __SingleUpdateMode,
        __WorkspaceID.name() : __WorkspaceID,
        __ReplaceProductToClassificationReferences.name() : __ReplaceProductToClassificationReferences,
        __ReplaceClassificationValues.name() : __ReplaceClassificationValues,
        __ReplaceValidUserTypesForAttributes.name() : __ReplaceValidUserTypesForAttributes,
        __ExportTime.name() : __ExportTime,
        __UseContextLocale.name() : __UseContextLocale
    })
_module_typeBindings.CTD_ANON = CTD_ANON


# Complex type {http://www.stibosystems.com/step}ActionLinkType with content type EMPTY
class ActionLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                A link to an action.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ActionLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 303, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ActionID uses Python identifier ActionID
    __ActionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ActionID'), 'ActionID', '__httpwww_stibosystems_comstep_ActionLinkType_ActionID', _module_typeBindings.StepActionID, required=True)
    __ActionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 309, 8)
    __ActionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 309, 8)
    
    ActionID = property(__ActionID.value, __ActionID.set, None, '\n                       The ID of the action.\n                  ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ActionID.name() : __ActionID
    })
_module_typeBindings.ActionLinkType = ActionLinkType
Namespace.addCategoryObject('typeBinding', 'ActionLinkType', ActionLinkType)


# Complex type {http://www.stibosystems.com/step}ActionSetType with content type ELEMENT_ONLY
class ActionSetType (pyxb.binding.basis.complexTypeDefinition):
    """
                A set of actions that can be granted to a user through privilegerules.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ActionSetType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 326, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ActionSetType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 333, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ActionSetType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 334, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ActionLink uses Python identifier ActionLink
    __ActionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ActionLink'), 'ActionLink', '__httpwww_stibosystems_comstep_ActionSetType_httpwww_stibosystems_comstepActionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 335, 12), )

    
    ActionLink = property(__ActionLink.value, __ActionLink.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ActionSetType_ID', _module_typeBindings.StepActionSetID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 337, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 337, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ActionSetType_Type', _module_typeBindings.STD_ANON_, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 338, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 338, 8)
    
    Type = property(__Type.value, __Type.set, None, "\n                    Determines whether the Action Set belongs to the System Setup tab, or is a general PIM user action.\n                    Has one of the values 'setup' or 'user' accordingly.\n                ")

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ActionSetType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 353, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 353, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ActionLink.name() : __ActionLink
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Type.name() : __Type,
        __Selected.name() : __Selected
    })
_module_typeBindings.ActionSetType = ActionSetType
Namespace.addCategoryObject('typeBinding', 'ActionSetType', ActionSetType)


# Complex type {http://www.stibosystems.com/step}AssetType with content type ELEMENT_ONLY
class AssetType (pyxb.binding.basis.complexTypeDefinition):
    """
                Describes an asset in PIM. The Asset element lists its names, classification references and values. Note
                that assets don’t have their own hierarchy. Therefore they must be nested inside a classification
                element and/or have a ClassificationReference sub element. DTP Document assets may contain pages that
                have been created by a DTP client.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 519, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 530, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 531, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetPushLocation uses Python identifier AssetPushLocation
    __AssetPushLocation = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetPushLocation'), 'AssetPushLocation', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepAssetPushLocation', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 532, 12), )

    
    AssetPushLocation = property(__AssetPushLocation.value, __AssetPushLocation.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedClassificationReference uses Python identifier SuppressedClassificationReference
    __SuppressedClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference'), 'SuppressedClassificationReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepSuppressedClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 533, 12), )

    
    SuppressedClassificationReference = property(__SuppressedClassificationReference.value, __SuppressedClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 535, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedEntityCrossReference uses Python identifier SuppressedEntityCrossReference
    __SuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), 'SuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 537, 12), )

    
    SuppressedEntityCrossReference = property(__SuppressedEntityCrossReference.value, __SuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityCrossReference uses Python identifier EntityCrossReference
    __EntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), 'EntityCrossReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 539, 12), )

    
    EntityCrossReference = property(__EntityCrossReference.value, __EntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Values uses Python identifier Values
    __Values = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Values'), 'Values', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepValues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 541, 12), )

    
    Values = property(__Values.value, __Values.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CurrentTasks uses Python identifier CurrentTasks
    __CurrentTasks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), 'CurrentTasks', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepCurrentTasks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 542, 12), )

    
    CurrentTasks = property(__CurrentTasks.value, __CurrentTasks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteClassificationReference uses Python identifier DeleteClassificationReference
    __DeleteClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference'), 'DeleteClassificationReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepDeleteClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 543, 12), )

    
    DeleteClassificationReference = property(__DeleteClassificationReference.value, __DeleteClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteEntityCrossReference uses Python identifier DeleteEntityCrossReference
    __DeleteEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), 'DeleteEntityCrossReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepDeleteEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 545, 12), )

    
    DeleteEntityCrossReference = property(__DeleteEntityCrossReference.value, __DeleteEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedClassificationReference uses Python identifier DeleteSuppressedClassificationReference
    __DeleteSuppressedClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReference'), 'DeleteSuppressedClassificationReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepDeleteSuppressedClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 546, 12), )

    
    DeleteSuppressedClassificationReference = property(__DeleteSuppressedClassificationReference.value, __DeleteSuppressedClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedEntityCrossReference uses Python identifier DeleteSuppressedEntityCrossReference
    __DeleteSuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), 'DeleteSuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepDeleteSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 547, 12), )

    
    DeleteSuppressedEntityCrossReference = property(__DeleteSuppressedEntityCrossReference.value, __DeleteSuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Pages uses Python identifier Pages
    __Pages = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Pages'), 'Pages', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepPages', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 548, 12), )

    
    Pages = property(__Pages.value, __Pages.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetContent uses Python identifier AssetContent
    __AssetContent = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetContent'), 'AssetContent', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepAssetContent', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 549, 12), )

    
    AssetContent = property(__AssetContent.value, __AssetContent.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetBinaryContent uses Python identifier AssetBinaryContent
    __AssetBinaryContent = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetBinaryContent'), 'AssetBinaryContent', '__httpwww_stibosystems_comstep_AssetType_httpwww_stibosystems_comstepAssetBinaryContent', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 550, 12), )

    
    AssetBinaryContent = property(__AssetBinaryContent.value, __AssetBinaryContent.set, None, None)

    
    # Attribute SourcePos uses Python identifier SourcePos
    __SourcePos = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SourcePos'), 'SourcePos', '__httpwww_stibosystems_comstep_AssetType_SourcePos', pyxb.binding.datatypes.string)
    __SourcePos._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 552, 8)
    __SourcePos._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 552, 8)
    
    SourcePos = property(__SourcePos.value, __SourcePos.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AssetType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 553, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 553, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which case new object is created\n                ')

    
    # Attribute Republished uses Python identifier Republished
    __Republished = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Republished'), 'Republished', '__httpwww_stibosystems_comstep_AssetType_Republished', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Republished._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 561, 8)
    __Republished._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 561, 8)
    
    Republished = property(__Republished.value, __Republished.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_AssetType_UserTypeID', _module_typeBindings.StepObjectTypeID, required=True)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 563, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 563, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Identifies the object type of the object.\n                ')

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_AssetType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 570, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 570, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    \n                    WebPublisher specific attribute. Identifies whether the asset in question is\n                    present on the website. Possible values: included, excluded.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_AssetType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 580, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 580, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_AssetType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 581, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 581, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __Name.name() : __Name,
        __AssetPushLocation.name() : __AssetPushLocation,
        __SuppressedClassificationReference.name() : __SuppressedClassificationReference,
        __ClassificationReference.name() : __ClassificationReference,
        __SuppressedEntityCrossReference.name() : __SuppressedEntityCrossReference,
        __EntityCrossReference.name() : __EntityCrossReference,
        __Values.name() : __Values,
        __CurrentTasks.name() : __CurrentTasks,
        __DeleteClassificationReference.name() : __DeleteClassificationReference,
        __DeleteEntityCrossReference.name() : __DeleteEntityCrossReference,
        __DeleteSuppressedClassificationReference.name() : __DeleteSuppressedClassificationReference,
        __DeleteSuppressedEntityCrossReference.name() : __DeleteSuppressedEntityCrossReference,
        __Pages.name() : __Pages,
        __AssetContent.name() : __AssetContent,
        __AssetBinaryContent.name() : __AssetBinaryContent
    })
    _AttributeMap.update({
        __SourcePos.name() : __SourcePos,
        __ID.name() : __ID,
        __Republished.name() : __Republished,
        __UserTypeID.name() : __UserTypeID,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.AssetType = AssetType
Namespace.addCategoryObject('typeBinding', 'AssetType', AssetType)


# Complex type {http://www.stibosystems.com/step}AssetCrossReferenceType with content type ELEMENT_ONLY
class AssetCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                A product to asset cross-reference.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 651, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 658, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 660, 16), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Asset uses Python identifier Asset
    __Asset = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Asset'), 'Asset', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_httpwww_stibosystems_comstepAsset', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 661, 16), )

    
    Asset = property(__Asset.value, __Asset.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 664, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 664, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The type of the reference. The list of valid reference types can be\n                    accessed through the CrossReferenceTypes (one of the AssetCrossReferenceType elements) located below\n                    the main element in the XML file\n                ')

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_AssetID', _module_typeBindings.StepID)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 674, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 674, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, '\n                    The ID of the asset to refer to.\n                ')

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 681, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 681, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    WebPublisher specific attribute. Identifies whether the referenced asset is\n                    present on the website. Possible values: included, excluded\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 689, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 689, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_AssetCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 691, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 691, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used.\n                ')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __MetaData.name() : __MetaData,
        __Asset.name() : __Asset
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __AssetID.name() : __AssetID,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.AssetCrossReferenceType = AssetCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'AssetCrossReferenceType', AssetCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}AssetCrossReferenceTypeType with content type ELEMENT_ONLY
class AssetCrossReferenceTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AssetCrossReferenceTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReferenceTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 702, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 704, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 705, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 706, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 707, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 708, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 709, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 710, 12), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 712, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 712, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 714, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 714, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 715, 8)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 715, 8)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 717, 8)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 717, 8)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                    DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 724, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 724, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 726, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 726, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 728, 8)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 728, 8)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 730, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 730, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    When exporting from STEP, this flag indicates the object was referenced in other exported data.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_AssetCrossReferenceTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 737, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 737, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __Revised.name() : __Revised,
        __Completeness.name() : __Completeness,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __Accumulated.name() : __Accumulated,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected
    })
_module_typeBindings.AssetCrossReferenceTypeType = AssetCrossReferenceTypeType
Namespace.addCategoryObject('typeBinding', 'AssetCrossReferenceTypeType', AssetCrossReferenceTypeType)


# Complex type {http://www.stibosystems.com/step}AssetsType with content type ELEMENT_ONLY
class AssetsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Element that holds all top level asset
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 766, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Asset uses Python identifier Asset
    __Asset = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Asset'), 'Asset', '__httpwww_stibosystems_comstep_AssetsType_httpwww_stibosystems_comstepAsset', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 773, 12), )

    
    Asset = property(__Asset.value, __Asset.set, None, None)

    
    # Attribute RejectNewAssets uses Python identifier RejectNewAssets
    __RejectNewAssets = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RejectNewAssets'), 'RejectNewAssets', '__httpwww_stibosystems_comstep_AssetsType_RejectNewAssets', _module_typeBindings.TrueFalseType, unicode_default='false')
    __RejectNewAssets._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 776, 8)
    __RejectNewAssets._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 776, 8)
    
    RejectNewAssets = property(__RejectNewAssets.value, __RejectNewAssets.set, None, 'Whether or not to reject new asset during import.')

    
    # Attribute DefaultParentID uses Python identifier DefaultParentID
    __DefaultParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultParentID'), 'DefaultParentID', '__httpwww_stibosystems_comstep_AssetsType_DefaultParentID', _module_typeBindings.StepID)
    __DefaultParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 782, 8)
    __DefaultParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 782, 8)
    
    DefaultParentID = property(__DefaultParentID.value, __DefaultParentID.set, None, 'Identifies a default parent classification for new assets during import\n                    that do not have an explicit classification reference.\n                ')

    
    # Attribute DefaultUserTypeID uses Python identifier DefaultUserTypeID
    __DefaultUserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultUserTypeID'), 'DefaultUserTypeID', '__httpwww_stibosystems_comstep_AssetsType_DefaultUserTypeID', _module_typeBindings.StepObjectTypeID)
    __DefaultUserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 790, 8)
    __DefaultUserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 790, 8)
    
    DefaultUserTypeID = property(__DefaultUserTypeID.value, __DefaultUserTypeID.set, None, 'Identifies the default object type of the asset in no object type is given for a new asset during import')

    _ElementMap.update({
        __Asset.name() : __Asset
    })
    _AttributeMap.update({
        __RejectNewAssets.name() : __RejectNewAssets,
        __DefaultParentID.name() : __DefaultParentID,
        __DefaultUserTypeID.name() : __DefaultUserTypeID
    })
_module_typeBindings.AssetsType = AssetsType
Namespace.addCategoryObject('typeBinding', 'AssetsType', AssetsType)


# Complex type {http://www.stibosystems.com/step}AttributeType with content type ELEMENT_ONLY
class AttributeType (pyxb.binding.basis.complexTypeDefinition):
    """
                This element represents an attribute in the system. The validation or ListOfValueLink restricts the
                valid values of this attribute. The dimension links is the dimension dependencies for values of this
                attribute. UserTypeLink and LinkType list the objects that are allowed to have values of this attribute.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 799, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 808, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Validation uses Python identifier Validation
    __Validation = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Validation'), 'Validation', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepValidation', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 810, 16), )

    
    Validation = property(__Validation.value, __Validation.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ListOfValueLink uses Python identifier ListOfValueLink
    __ListOfValueLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ListOfValueLink'), 'ListOfValueLink', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepListOfValueLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 811, 16), )

    
    ListOfValueLink = property(__ListOfValueLink.value, __ListOfValueLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueTemplate uses Python identifier ValueTemplate
    __ValueTemplate = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueTemplate'), 'ValueTemplate', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepValueTemplate', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 814, 16), )

    
    ValueTemplate = property(__ValueTemplate.value, __ValueTemplate.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UnitTemplate uses Python identifier UnitTemplate
    __UnitTemplate = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UnitTemplate'), 'UnitTemplate', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepUnitTemplate', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 815, 16), )

    
    UnitTemplate = property(__UnitTemplate.value, __UnitTemplate.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 817, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 818, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 819, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 820, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}LinkType uses Python identifier LinkType
    __LinkType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LinkType'), 'LinkType', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepLinkType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 821, 12), )

    
    LinkType = property(__LinkType.value, __LinkType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueFilter uses Python identifier ValueFilter
    __ValueFilter = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueFilter'), 'ValueFilter', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepValueFilter', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 822, 12), )

    
    ValueFilter = property(__ValueFilter.value, __ValueFilter.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CurrentTasks uses Python identifier CurrentTasks
    __CurrentTasks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), 'CurrentTasks', '__httpwww_stibosystems_comstep_AttributeType_httpwww_stibosystems_comstepCurrentTasks', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 823, 12), )

    
    CurrentTasks = property(__CurrentTasks.value, __CurrentTasks.set, None, None)

    
    # Attribute HierarchicalFiltering uses Python identifier HierarchicalFiltering
    __HierarchicalFiltering = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HierarchicalFiltering'), 'HierarchicalFiltering', '__httpwww_stibosystems_comstep_AttributeType_HierarchicalFiltering', _module_typeBindings.TrueFalseType, unicode_default='false')
    __HierarchicalFiltering._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 825, 8)
    __HierarchicalFiltering._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 825, 8)
    
    HierarchicalFiltering = property(__HierarchicalFiltering.value, __HierarchicalFiltering.set, None, '\n                    Whether or not it is allowed to put filters on product-attribute links.\n                ')

    
    # Attribute ClassificationHierarchicalFiltering uses Python identifier ClassificationHierarchicalFiltering
    __ClassificationHierarchicalFiltering = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationHierarchicalFiltering'), 'ClassificationHierarchicalFiltering', '__httpwww_stibosystems_comstep_AttributeType_ClassificationHierarchicalFiltering', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ClassificationHierarchicalFiltering._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 832, 8)
    __ClassificationHierarchicalFiltering._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 832, 8)
    
    ClassificationHierarchicalFiltering = property(__ClassificationHierarchicalFiltering.value, __ClassificationHierarchicalFiltering.set, None, '\n                    Whether or not it is allowed to put filters on classification-attribute links.\n                ')

    
    # Attribute ExternallyMaintained uses Python identifier ExternallyMaintained
    __ExternallyMaintained = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExternallyMaintained'), 'ExternallyMaintained', '__httpwww_stibosystems_comstep_AttributeType_ExternallyMaintained', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ExternallyMaintained._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 839, 8)
    __ExternallyMaintained._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 839, 8)
    
    ExternallyMaintained = property(__ExternallyMaintained.value, __ExternallyMaintained.set, None, '\n                    Whether or not values of this attribute are externally maintained\n                    or not. If not externally maintained full revision control of values of\n                    this attribute are available. On import this will only have effect\n                    when creating new attributes (cannot update this information for\n                    existing attributes on import).\n                ')

    
    # Attribute FullTextIndexed uses Python identifier FullTextIndexed
    __FullTextIndexed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FullTextIndexed'), 'FullTextIndexed', '__httpwww_stibosystems_comstep_AttributeType_FullTextIndexed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __FullTextIndexed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 850, 8)
    __FullTextIndexed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 850, 8)
    
    FullTextIndexed = property(__FullTextIndexed.value, __FullTextIndexed.set, None, '\n                    Whether or not values of this attribute should be full text indexed\n                    or not. Will always be if max length greater than 100. Must be\n                    either true or false. On import this will only have effect when creating new attributes (cannot\n                    update this information for existing\n                    attributes on import).\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_AttributeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='false')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 861, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 861, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, '\n                    Whether attribute is multi valued or not. Must have one of the\n                    following values: true or false. On import this will only have effect\n                    when creating new attributes (cannot update this information for\n                    existing attributes on import).\n                ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AttributeType_ID', _module_typeBindings.StepAttributeID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 871, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 871, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the attribute object. Not required during import, in which case an auto ID generation must be set up for object type.\n                ')

    
    # Attribute DefaultUnitID uses Python identifier DefaultUnitID
    __DefaultUnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultUnitID'), 'DefaultUnitID', '__httpwww_stibosystems_comstep_AttributeType_DefaultUnitID', _module_typeBindings.StepUnitID)
    __DefaultUnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 878, 8)
    __DefaultUnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 878, 8)
    
    DefaultUnitID = property(__DefaultUnitID.value, __DefaultUnitID.set, None, '\n                    The ID of the default unit for values of this attribute. On import\n                    this will only have effect when creating new attributes (cannot\n                    update this information for existing attributes on import).\n                ')

    
    # Attribute ProductMode uses Python identifier ProductMode
    __ProductMode = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductMode'), 'ProductMode', '__httpwww_stibosystems_comstep_AttributeType_ProductMode', _module_typeBindings.STD_ANON_2, unicode_default='Normal')
    __ProductMode._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 887, 8)
    __ProductMode._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 887, 8)
    
    ProductMode = property(__ProductMode.value, __ProductMode.set, None, '\n                    Whether this attribute is “ClassValidated”, “Property” or\n                    “Normal”. On import this will only have effect when creating new\n                    attributes (cannot update this information for existing attributes\n                    on import).\n                ')

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_AttributeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 904, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 904, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, '\n                    Indicates whether or not this attribute is mandatory.\n                ')

    
    # Attribute Derived uses Python identifier Derived
    __Derived = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Derived'), 'Derived', '__httpwww_stibosystems_comstep_AttributeType_Derived', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Derived._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 911, 8)
    __Derived._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 911, 8)
    
    Derived = property(__Derived.value, __Derived.set, None, '\n                    Indicates whether or not this attribute is derived. If derived it makes sense to use the template\n                    attribute.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_AttributeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 920, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 920, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_AttributeType_Referenced', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 922, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 922, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    Indicates whether or not an attribute has been referenced.\n                ')

    
    # Attribute CryptographicKeyID uses Python identifier CryptographicKeyID
    __CryptographicKeyID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CryptographicKeyID'), 'CryptographicKeyID', '__httpwww_stibosystems_comstep_AttributeType_CryptographicKeyID', _module_typeBindings.StepID)
    __CryptographicKeyID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 930, 8)
    __CryptographicKeyID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 930, 8)
    
    CryptographicKeyID = property(__CryptographicKeyID.value, __CryptographicKeyID.set, None, '\n                    The ID of the cryptographic key if the attribute is encrypted. It cannot be changed if the\n                    attribute has values.\n                ')

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_AttributeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 939, 8)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 939, 8)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                    DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_AttributeType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 946, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 946, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __Validation.name() : __Validation,
        __ListOfValueLink.name() : __ListOfValueLink,
        __ValueTemplate.name() : __ValueTemplate,
        __UnitTemplate.name() : __UnitTemplate,
        __DimensionLink.name() : __DimensionLink,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __LinkType.name() : __LinkType,
        __ValueFilter.name() : __ValueFilter,
        __CurrentTasks.name() : __CurrentTasks
    })
    _AttributeMap.update({
        __HierarchicalFiltering.name() : __HierarchicalFiltering,
        __ClassificationHierarchicalFiltering.name() : __ClassificationHierarchicalFiltering,
        __ExternallyMaintained.name() : __ExternallyMaintained,
        __FullTextIndexed.name() : __FullTextIndexed,
        __MultiValued.name() : __MultiValued,
        __ID.name() : __ID,
        __DefaultUnitID.name() : __DefaultUnitID,
        __ProductMode.name() : __ProductMode,
        __Mandatory.name() : __Mandatory,
        __Derived.name() : __Derived,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced,
        __CryptographicKeyID.name() : __CryptographicKeyID,
        __Completeness.name() : __Completeness,
        __Changed.name() : __Changed
    })
_module_typeBindings.AttributeType = AttributeType
Namespace.addCategoryObject('typeBinding', 'AttributeType', AttributeType)


# Complex type {http://www.stibosystems.com/step}AttributeGroupType with content type ELEMENT_ONLY
class AttributeGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An attribute group holding a number of attributes or attribute groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 961, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_AttributeGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 968, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_AttributeGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 969, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_AttributeGroupType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 970, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeSequence uses Python identifier AttributeSequence
    __AttributeSequence = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeSequence'), 'AttributeSequence', '__httpwww_stibosystems_comstep_AttributeGroupType_httpwww_stibosystems_comstepAttributeSequence', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 971, 12), )

    
    AttributeSequence = property(__AttributeSequence.value, __AttributeSequence.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroup uses Python identifier AttributeGroup
    __AttributeGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroup'), 'AttributeGroup', '__httpwww_stibosystems_comstep_AttributeGroupType_httpwww_stibosystems_comstepAttributeGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 972, 12), )

    
    AttributeGroup = property(__AttributeGroup.value, __AttributeGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AttributeGroupType_ID', _module_typeBindings.StepAttributeID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 974, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 974, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of the attribute group object. Not required during import, in which case an auto ID generation must be set up for object type.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_AttributeGroupType_ParentID', _module_typeBindings.StepAttributeID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 981, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 981, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent attribute group.\n                ')

    
    # Attribute ShowInWorkbench uses Python identifier ShowInWorkbench
    __ShowInWorkbench = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ShowInWorkbench'), 'ShowInWorkbench', '__httpwww_stibosystems_comstep_AttributeGroupType_ShowInWorkbench', _module_typeBindings.TrueFalseType, unicode_default='true')
    __ShowInWorkbench._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 988, 8)
    __ShowInWorkbench._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 988, 8)
    
    ShowInWorkbench = property(__ShowInWorkbench.value, __ShowInWorkbench.set, None, '\n                    True if this attribute group should be shown in the workbench when editing\n                    references and values. Defaults to true if not set (for example on upgraded databases).\n                ')

    
    # Attribute ExcludeFromProfiling uses Python identifier ExcludeFromProfiling
    __ExcludeFromProfiling = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExcludeFromProfiling'), 'ExcludeFromProfiling', '__httpwww_stibosystems_comstep_AttributeGroupType_ExcludeFromProfiling', _module_typeBindings.TrueFalseType)
    __ExcludeFromProfiling._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 996, 8)
    __ExcludeFromProfiling._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 996, 8)
    
    ExcludeFromProfiling = property(__ExcludeFromProfiling.value, __ExcludeFromProfiling.set, None, '\n                    DEPRECATED: not used anymore after the introduction of attribute group filtering in profile configurations.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_AttributeGroupType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1003, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1003, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to\n                    references pointing to it or not.\n                ')

    
    # Attribute ManuallySorted uses Python identifier ManuallySorted
    __ManuallySorted = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ManuallySorted'), 'ManuallySorted', '__httpwww_stibosystems_comstep_AttributeGroupType_ManuallySorted', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ManuallySorted._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1010, 8)
    __ManuallySorted._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1010, 8)
    
    ManuallySorted = property(__ManuallySorted.value, __ManuallySorted.set, None, '\n                    True if the attributes and reference types are manually sorted in this group.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_AttributeGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1017, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1017, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration,
        __AttributeSequence.name() : __AttributeSequence,
        __AttributeGroup.name() : __AttributeGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __ShowInWorkbench.name() : __ShowInWorkbench,
        __ExcludeFromProfiling.name() : __ExcludeFromProfiling,
        __Referenced.name() : __Referenced,
        __ManuallySorted.name() : __ManuallySorted,
        __Selected.name() : __Selected
    })
_module_typeBindings.AttributeGroupType = AttributeGroupType
Namespace.addCategoryObject('typeBinding', 'AttributeGroupType', AttributeGroupType)


# Complex type {http://www.stibosystems.com/step}AttributeGroupLinkType with content type EMPTY
class AttributeGroupLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links an object into a attribute group.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1021, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute AttributeGroupID uses Python identifier AttributeGroupID
    __AttributeGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeGroupID'), 'AttributeGroupID', '__httpwww_stibosystems_comstep_AttributeGroupLinkType_AttributeGroupID', _module_typeBindings.StepAttributeID, required=True)
    __AttributeGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1027, 8)
    __AttributeGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1027, 8)
    
    AttributeGroupID = property(__AttributeGroupID.value, __AttributeGroupID.set, None, '\n                    The ID of the attribute group to link to.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __AttributeGroupID.name() : __AttributeGroupID
    })
_module_typeBindings.AttributeGroupLinkType = AttributeGroupLinkType
Namespace.addCategoryObject('typeBinding', 'AttributeGroupLinkType', AttributeGroupLinkType)


# Complex type {http://www.stibosystems.com/step}AttributeLinkType with content type ELEMENT_ONLY
class AttributeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                The AttributeLink element links an attribute into a classification or a product; it is also used to validate
                an attribute against a link type or cross reference type.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1049, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_AttributeLinkType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1057, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueFilter uses Python identifier ValueFilter
    __ValueFilter = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueFilter'), 'ValueFilter', '__httpwww_stibosystems_comstep_AttributeLinkType_httpwww_stibosystems_comstepValueFilter', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1058, 12), )

    
    ValueFilter = property(__ValueFilter.value, __ValueFilter.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_AttributeLinkType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1060, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1060, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_AttributeLinkType_Inherited', pyxb.binding.datatypes.integer)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1062, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1062, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, '\n                    Only relevant during export when nested inside a product or classification.\n                    If present during import then the attribute link is simply ignored.\n                    If this attribute is present then link is inherited - will not be exported for local links\n                    (thus only numbers 1 and upward will be exported - 1 indicating inherited from immediate parent).\n                    The integer value of this attribute indicates far up this link is inherited from.\n                    In cross context exports it might be relevant to have this number to find the most relevant link for a given context.\n                    NOTE: will only inherit inside hierarchy of same equal node types - ie. will not inherit from classification to product hierarchy.\n                ')

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_AttributeLinkType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1075, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1075, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used\n                ')

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_AttributeLinkType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1083, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1083, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, '\n                    Indicates whether or not this attribute is mandatory for products or assets\n                    below this object. Must have on of the following values: true or false.\n                ')

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_AttributeLinkType_AttributeID', _module_typeBindings.StepAttributeID, required=True)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1092, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1092, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, '\n                    The ID of the attribute to link into this object.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_AttributeLinkType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1100, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1100, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to\n                    references pointing to it or not.\n                ')

    _ElementMap.update({
        __MetaData.name() : __MetaData,
        __ValueFilter.name() : __ValueFilter
    })
    _AttributeMap.update({
        __Changed.name() : __Changed,
        __Inherited.name() : __Inherited,
        __QualifierID.name() : __QualifierID,
        __Mandatory.name() : __Mandatory,
        __AttributeID.name() : __AttributeID,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.AttributeLinkType = AttributeLinkType
Namespace.addCategoryObject('typeBinding', 'AttributeLinkType', AttributeLinkType)


# Complex type {http://www.stibosystems.com/step}DataContainerTypeLinkType with content type EMPTY
class DataContainerTypeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                The DataContainerTypeLink element links a data container type into a classification or a product.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1109, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_DataContainerTypeLinkType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1115, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1115, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_DataContainerTypeLinkType_Inherited', pyxb.binding.datatypes.integer)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1117, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1117, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, '\n                    Only relevant during export when nested inside a product or classification.\n                    If present during import then the link is simply ignored.\n                    If this container type is present then link is inherited - will not be exported for local links\n                    (thus only numbers 1 and upward will be exported - 1 indicating inherited from immediate parent).\n                    The integer value of this container type indicates far up this link is inherited from.\n                    In cross context exports it might be relevant to have this number to find the most relevant link for a given context.\n                    NOTE: will only inherit inside hierarchy of same equal node types - ie. will not inherit from classification to product hierarchy.\n                ')

    
    # Attribute DataContainerTypeID uses Python identifier DataContainerTypeID
    __DataContainerTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DataContainerTypeID'), 'DataContainerTypeID', '__httpwww_stibosystems_comstep_DataContainerTypeLinkType_DataContainerTypeID', _module_typeBindings.StepDataContainerTypeID, required=True)
    __DataContainerTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1139, 8)
    __DataContainerTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1139, 8)
    
    DataContainerTypeID = property(__DataContainerTypeID.value, __DataContainerTypeID.set, None, '\n                    The ID of the data container type to link into this object.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_DataContainerTypeLinkType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1147, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1147, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to\n                    references pointing to it or not.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Changed.name() : __Changed,
        __Inherited.name() : __Inherited,
        __DataContainerTypeID.name() : __DataContainerTypeID,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.DataContainerTypeLinkType = DataContainerTypeLinkType
Namespace.addCategoryObject('typeBinding', 'DataContainerTypeLinkType', DataContainerTypeLinkType)


# Complex type {http://www.stibosystems.com/step}AttributeValidationType with content type EMPTY
class AttributeValidationType (pyxb.binding.basis.complexTypeDefinition):
    """
                The AttributeValidationType is used for describing a validity relation to an attribute.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeValidationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1156, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_AttributeValidationType_AttributeID', _module_typeBindings.StepAttributeID, required=True)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1163, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1163, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, '\n                    The ID of the attribute.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __AttributeID.name() : __AttributeID
    })
_module_typeBindings.AttributeValidationType = AttributeValidationType
Namespace.addCategoryObject('typeBinding', 'AttributeValidationType', AttributeValidationType)


# Complex type {http://www.stibosystems.com/step}AttributeTransformationType with content type ELEMENT_ONLY
class AttributeTransformationType (pyxb.binding.basis.complexTypeDefinition):
    """
                An attribute transformation is an object where a transformation of an attribute value can be
                specified. The transformation can then be linked to attributes. Using a transformation can be done in
                tables or the output system (currently only indesign).
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1187, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_AttributeTransformationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1196, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_AttributeTransformationType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1197, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_AttributeTransformationType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1198, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_AttributeTransformationType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1199, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_AttributeTransformationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1200, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AttributeTransformationType_ID', _module_typeBindings.StepAttributeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1202, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1202, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the attribute transformation.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __UserTypeLink.name() : __UserTypeLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __AttributeLink.name() : __AttributeLink,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.AttributeTransformationType = AttributeTransformationType
Namespace.addCategoryObject('typeBinding', 'AttributeTransformationType', AttributeTransformationType)


# Complex type {http://www.stibosystems.com/step}AttributeTransformationGroupType with content type ELEMENT_ONLY
class AttributeTransformationGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                A grouping of several attribute transformations and / or other attribute transformation groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1213, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_AttributeTransformationGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1221, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeTransformationGroup uses Python identifier AttributeTransformationGroup
    __AttributeTransformationGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroup'), 'AttributeTransformationGroup', '__httpwww_stibosystems_comstep_AttributeTransformationGroupType_httpwww_stibosystems_comstepAttributeTransformationGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1222, 12), )

    
    AttributeTransformationGroup = property(__AttributeTransformationGroup.value, __AttributeTransformationGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeTransformation uses Python identifier AttributeTransformation
    __AttributeTransformation = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformation'), 'AttributeTransformation', '__httpwww_stibosystems_comstep_AttributeTransformationGroupType_httpwww_stibosystems_comstepAttributeTransformation', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1224, 12), )

    
    AttributeTransformation = property(__AttributeTransformation.value, __AttributeTransformation.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AttributeTransformationGroupType_ID', _module_typeBindings.StepAttributeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1227, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1227, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __AttributeTransformationGroup.name() : __AttributeTransformationGroup,
        __AttributeTransformation.name() : __AttributeTransformation
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.AttributeTransformationGroupType = AttributeTransformationGroupType
Namespace.addCategoryObject('typeBinding', 'AttributeTransformationGroupType', AttributeTransformationGroupType)


# Complex type {http://www.stibosystems.com/step}CellType with content type ELEMENT_ONLY
class CellType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds table cell definition. Notice: Because of backward compatibility, we do unfortunately not follow the normal first character uppercase convention for attributeID."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CellType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1286, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ProductOrigin uses Python identifier ProductOrigin
    __ProductOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin'), 'ProductOrigin', '__httpwww_stibosystems_comstep_CellType_httpwww_stibosystems_comstepProductOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1291, 12), )

    
    ProductOrigin = property(__ProductOrigin.value, __ProductOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationOrigin uses Python identifier ClassificationOrigin
    __ClassificationOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin'), 'ClassificationOrigin', '__httpwww_stibosystems_comstep_CellType_httpwww_stibosystems_comstepClassificationOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1292, 12), )

    
    ClassificationOrigin = property(__ClassificationOrigin.value, __ClassificationOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityOrigin uses Python identifier EntityOrigin
    __EntityOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin'), 'EntityOrigin', '__httpwww_stibosystems_comstep_CellType_httpwww_stibosystems_comstepEntityOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1293, 12), )

    
    EntityOrigin = property(__EntityOrigin.value, __EntityOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetOrigin uses Python identifier AssetOrigin
    __AssetOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin'), 'AssetOrigin', '__httpwww_stibosystems_comstep_CellType_httpwww_stibosystems_comstepAssetOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1294, 12), )

    
    AssetOrigin = property(__AssetOrigin.value, __AssetOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeOrigin uses Python identifier AttributeOrigin
    __AttributeOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin'), 'AttributeOrigin', '__httpwww_stibosystems_comstep_CellType_httpwww_stibosystems_comstepAttributeOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1295, 12), )

    
    AttributeOrigin = property(__AttributeOrigin.value, __AttributeOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Text uses Python identifier Text
    __Text = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Text'), 'Text', '__httpwww_stibosystems_comstep_CellType_httpwww_stibosystems_comstepText', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1296, 12), )

    
    Text = property(__Text.value, __Text.set, None, None)

    
    # Attribute ProcessFlag uses Python identifier ProcessFlag
    __ProcessFlag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessFlag'), 'ProcessFlag', '__httpwww_stibosystems_comstep_CellType_ProcessFlag', pyxb.binding.datatypes.string)
    __ProcessFlag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1298, 8)
    __ProcessFlag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1298, 8)
    
    ProcessFlag = property(__ProcessFlag.value, __ProcessFlag.set, None, None)

    
    # Attribute VerticalSpan uses Python identifier VerticalSpan
    __VerticalSpan = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalSpan'), 'VerticalSpan', '__httpwww_stibosystems_comstep_CellType_VerticalSpan', pyxb.binding.datatypes.string)
    __VerticalSpan._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1299, 8)
    __VerticalSpan._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1299, 8)
    
    VerticalSpan = property(__VerticalSpan.value, __VerticalSpan.set, None, None)

    
    # Attribute HorizontalSpan uses Python identifier HorizontalSpan
    __HorizontalSpan = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HorizontalSpan'), 'HorizontalSpan', '__httpwww_stibosystems_comstep_CellType_HorizontalSpan', pyxb.binding.datatypes.string)
    __HorizontalSpan._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1300, 8)
    __HorizontalSpan._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1300, 8)
    
    HorizontalSpan = property(__HorizontalSpan.value, __HorizontalSpan.set, None, None)

    
    # Attribute Column uses Python identifier Column
    __Column = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Column'), 'Column', '__httpwww_stibosystems_comstep_CellType_Column', pyxb.binding.datatypes.string)
    __Column._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1301, 8)
    __Column._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1301, 8)
    
    Column = property(__Column.value, __Column.set, None, None)

    
    # Attribute RuleAbove uses Python identifier RuleAbove
    __RuleAbove = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleAbove'), 'RuleAbove', '__httpwww_stibosystems_comstep_CellType_RuleAbove', pyxb.binding.datatypes.string)
    __RuleAbove._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1302, 8)
    __RuleAbove._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1302, 8)
    
    RuleAbove = property(__RuleAbove.value, __RuleAbove.set, None, None)

    
    # Attribute BackgroundColor uses Python identifier BackgroundColor
    __BackgroundColor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BackgroundColor'), 'BackgroundColor', '__httpwww_stibosystems_comstep_CellType_BackgroundColor', pyxb.binding.datatypes.string)
    __BackgroundColor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1303, 8)
    __BackgroundColor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1303, 8)
    
    BackgroundColor = property(__BackgroundColor.value, __BackgroundColor.set, None, None)

    
    # Attribute RuleBelow uses Python identifier RuleBelow
    __RuleBelow = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleBelow'), 'RuleBelow', '__httpwww_stibosystems_comstep_CellType_RuleBelow', pyxb.binding.datatypes.string)
    __RuleBelow._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1304, 8)
    __RuleBelow._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1304, 8)
    
    RuleBelow = property(__RuleBelow.value, __RuleBelow.set, None, None)

    
    # Attribute RuleRight uses Python identifier RuleRight
    __RuleRight = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleRight'), 'RuleRight', '__httpwww_stibosystems_comstep_CellType_RuleRight', pyxb.binding.datatypes.string)
    __RuleRight._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1305, 8)
    __RuleRight._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1305, 8)
    
    RuleRight = property(__RuleRight.value, __RuleRight.set, None, None)

    
    # Attribute CellRotation uses Python identifier CellRotation
    __CellRotation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellRotation'), 'CellRotation', '__httpwww_stibosystems_comstep_CellType_CellRotation', pyxb.binding.datatypes.string)
    __CellRotation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1306, 8)
    __CellRotation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1306, 8)
    
    CellRotation = property(__CellRotation.value, __CellRotation.set, None, None)

    
    # Attribute RuleLeft uses Python identifier RuleLeft
    __RuleLeft = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleLeft'), 'RuleLeft', '__httpwww_stibosystems_comstep_CellType_RuleLeft', pyxb.binding.datatypes.string)
    __RuleLeft._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1307, 8)
    __RuleLeft._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1307, 8)
    
    RuleLeft = property(__RuleLeft.value, __RuleLeft.set, None, None)

    
    # Attribute TextStyle uses Python identifier TextStyle
    __TextStyle = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TextStyle'), 'TextStyle', '__httpwww_stibosystems_comstep_CellType_TextStyle', pyxb.binding.datatypes.string)
    __TextStyle._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1308, 8)
    __TextStyle._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1308, 8)
    
    TextStyle = property(__TextStyle.value, __TextStyle.set, None, None)

    
    # Attribute VerticalAlignment uses Python identifier VerticalAlignment
    __VerticalAlignment = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalAlignment'), 'VerticalAlignment', '__httpwww_stibosystems_comstep_CellType_VerticalAlignment', pyxb.binding.datatypes.string)
    __VerticalAlignment._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1309, 8)
    __VerticalAlignment._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1309, 8)
    
    VerticalAlignment = property(__VerticalAlignment.value, __VerticalAlignment.set, None, None)

    
    # Attribute CellVerticalStoryDirection uses Python identifier CellVerticalStoryDirection
    __CellVerticalStoryDirection = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellVerticalStoryDirection'), 'CellVerticalStoryDirection', '__httpwww_stibosystems_comstep_CellType_CellVerticalStoryDirection', pyxb.binding.datatypes.string)
    __CellVerticalStoryDirection._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1310, 8)
    __CellVerticalStoryDirection._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1310, 8)
    
    CellVerticalStoryDirection = property(__CellVerticalStoryDirection.value, __CellVerticalStoryDirection.set, None, None)

    
    # Attribute CellImageScale uses Python identifier CellImageScale
    __CellImageScale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellImageScale'), 'CellImageScale', '__httpwww_stibosystems_comstep_CellType_CellImageScale', pyxb.binding.datatypes.string)
    __CellImageScale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1311, 8)
    __CellImageScale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1311, 8)
    
    CellImageScale = property(__CellImageScale.value, __CellImageScale.set, None, None)

    
    # Attribute attributeID uses Python identifier attributeID
    __attributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'attributeID'), 'attributeID', '__httpwww_stibosystems_comstep_CellType_attributeID', _module_typeBindings.StepAttributeID)
    __attributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1312, 8)
    __attributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1312, 8)
    
    attributeID = property(__attributeID.value, __attributeID.set, None, None)

    _ElementMap.update({
        __ProductOrigin.name() : __ProductOrigin,
        __ClassificationOrigin.name() : __ClassificationOrigin,
        __EntityOrigin.name() : __EntityOrigin,
        __AssetOrigin.name() : __AssetOrigin,
        __AttributeOrigin.name() : __AttributeOrigin,
        __Text.name() : __Text
    })
    _AttributeMap.update({
        __ProcessFlag.name() : __ProcessFlag,
        __VerticalSpan.name() : __VerticalSpan,
        __HorizontalSpan.name() : __HorizontalSpan,
        __Column.name() : __Column,
        __RuleAbove.name() : __RuleAbove,
        __BackgroundColor.name() : __BackgroundColor,
        __RuleBelow.name() : __RuleBelow,
        __RuleRight.name() : __RuleRight,
        __CellRotation.name() : __CellRotation,
        __RuleLeft.name() : __RuleLeft,
        __TextStyle.name() : __TextStyle,
        __VerticalAlignment.name() : __VerticalAlignment,
        __CellVerticalStoryDirection.name() : __CellVerticalStoryDirection,
        __CellImageScale.name() : __CellImageScale,
        __attributeID.name() : __attributeID
    })
_module_typeBindings.CellType = CellType
Namespace.addCategoryObject('typeBinding', 'CellType', CellType)


# Complex type {http://www.stibosystems.com/step}ClassificationType with content type ELEMENT_ONLY
class ClassificationType (pyxb.binding.basis.complexTypeDefinition):
    """
                The Classification element lists its names, the linked attributes on this level, sub classification,
                cross-references to other classifications, metadata on classification and assets linked into this
                classification. This recursive definition of classifications spans the classification hierarchy. Note
                that products appear in their own hierarchy below the Products element.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1316, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1328, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ParentKeyValue uses Python identifier ParentKeyValue
    __ParentKeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue'), 'ParentKeyValue', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepParentKeyValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1329, 12), )

    
    ParentKeyValue = property(__ParentKeyValue.value, __ParentKeyValue.set, None, '\n                        Only exported when ParentID is also exported - ie. exported for root objects in export, and not exported for nested objects.\n                        \n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1338, 16), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1339, 16), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DataContainerTypeLink uses Python identifier DataContainerTypeLink
    __DataContainerTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLink'), 'DataContainerTypeLink', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDataContainerTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1340, 16), )

    
    DataContainerTypeLink = property(__DataContainerTypeLink.value, __DataContainerTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SequenceProduct uses Python identifier SequenceProduct
    __SequenceProduct = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SequenceProduct'), 'SequenceProduct', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepSequenceProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1341, 16), )

    
    SequenceProduct = property(__SequenceProduct.value, __SequenceProduct.set, None, '\n                            Product sequences are used to show the sequence of child products under manually sorted classifications.\n                            By default the sequences are not exported. And there is no option to turn it on using the export wiard.\n                            In order for them to be exported, you must put it explicitly in the export recorder file:\n                            \n                        ')

    
    # Element {http://www.stibosystems.com/step}Classification uses Python identifier Classification
    __Classification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classification'), 'Classification', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepClassification', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1351, 16), )

    
    Classification = property(__Classification.value, __Classification.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedClassificationCrossReference uses Python identifier SuppressedClassificationCrossReference
    __SuppressedClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference'), 'SuppressedClassificationCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepSuppressedClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1352, 16), )

    
    SuppressedClassificationCrossReference = property(__SuppressedClassificationCrossReference.value, __SuppressedClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductReference uses Python identifier ProductReference
    __ProductReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductReference'), 'ProductReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepProductReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1353, 16), )

    
    ProductReference = property(__ProductReference.value, __ProductReference.set, None, '\n                            If a Classification has Product to Classification links owned by the product,\n                            information about these links will be exported under the classification using the ProductReference-tag.\n                        ')

    
    # Element {http://www.stibosystems.com/step}ClassificationCrossReference uses Python identifier ClassificationCrossReference
    __ClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference'), 'ClassificationCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1361, 16), )

    
    ClassificationCrossReference = property(__ClassificationCrossReference.value, __ClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedProductCrossReference uses Python identifier SuppressedProductCrossReference
    __SuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), 'SuppressedProductCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1362, 16), )

    
    SuppressedProductCrossReference = property(__SuppressedProductCrossReference.value, __SuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductCrossReference uses Python identifier ProductCrossReference
    __ProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), 'ProductCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1363, 16), )

    
    ProductCrossReference = property(__ProductCrossReference.value, __ProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedEntityCrossReference uses Python identifier SuppressedEntityCrossReference
    __SuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), 'SuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1364, 16), )

    
    SuppressedEntityCrossReference = property(__SuppressedEntityCrossReference.value, __SuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityCrossReference uses Python identifier EntityCrossReference
    __EntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), 'EntityCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1365, 16), )

    
    EntityCrossReference = property(__EntityCrossReference.value, __EntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedAssetCrossReference uses Python identifier SuppressedAssetCrossReference
    __SuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), 'SuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1366, 16), )

    
    SuppressedAssetCrossReference = property(__SuppressedAssetCrossReference.value, __SuppressedAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetCrossReference uses Python identifier AssetCrossReference
    __AssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), 'AssetCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1367, 16), )

    
    AssetCrossReference = property(__AssetCrossReference.value, __AssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1368, 16), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Tables uses Python identifier Tables
    __Tables = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Tables'), 'Tables', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepTables', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1369, 16), )

    
    Tables = property(__Tables.value, __Tables.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Asset uses Python identifier Asset
    __Asset = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Asset'), 'Asset', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepAsset', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1370, 16), )

    
    Asset = property(__Asset.value, __Asset.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationGroup uses Python identifier PublicationGroup
    __PublicationGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup'), 'PublicationGroup', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepPublicationGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1371, 16), )

    
    PublicationGroup = property(__PublicationGroup.value, __PublicationGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteProductReference uses Python identifier DeleteProductReference
    __DeleteProductReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductReference'), 'DeleteProductReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteProductReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1372, 16), )

    
    DeleteProductReference = property(__DeleteProductReference.value, __DeleteProductReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedProductReference uses Python identifier DeleteSuppressedProductReference
    __DeleteSuppressedProductReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductReference'), 'DeleteSuppressedProductReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteSuppressedProductReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1374, 16), )

    
    DeleteSuppressedProductReference = property(__DeleteSuppressedProductReference.value, __DeleteSuppressedProductReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteClassificationCrossReference uses Python identifier DeleteClassificationCrossReference
    __DeleteClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReference'), 'DeleteClassificationCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1375, 16), )

    
    DeleteClassificationCrossReference = property(__DeleteClassificationCrossReference.value, __DeleteClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteProductCrossReference uses Python identifier DeleteProductCrossReference
    __DeleteProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference'), 'DeleteProductCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1376, 16), )

    
    DeleteProductCrossReference = property(__DeleteProductCrossReference.value, __DeleteProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteEntityCrossReference uses Python identifier DeleteEntityCrossReference
    __DeleteEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), 'DeleteEntityCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1377, 16), )

    
    DeleteEntityCrossReference = property(__DeleteEntityCrossReference.value, __DeleteEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedClassificationCrossReference uses Python identifier DeleteSuppressedClassificationCrossReference
    __DeleteSuppressedClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference'), 'DeleteSuppressedClassificationCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteSuppressedClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1378, 16), )

    
    DeleteSuppressedClassificationCrossReference = property(__DeleteSuppressedClassificationCrossReference.value, __DeleteSuppressedClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedProductCrossReference uses Python identifier DeleteSuppressedProductCrossReference
    __DeleteSuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference'), 'DeleteSuppressedProductCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1379, 16), )

    
    DeleteSuppressedProductCrossReference = property(__DeleteSuppressedProductCrossReference.value, __DeleteSuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedEntityCrossReference uses Python identifier DeleteSuppressedEntityCrossReference
    __DeleteSuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), 'DeleteSuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1380, 16), )

    
    DeleteSuppressedEntityCrossReference = property(__DeleteSuppressedEntityCrossReference.value, __DeleteSuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedAssetCrossReference uses Python identifier DeleteSuppressedAssetCrossReference
    __DeleteSuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference'), 'DeleteSuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1381, 16), )

    
    DeleteSuppressedAssetCrossReference = property(__DeleteSuppressedAssetCrossReference.value, __DeleteSuppressedAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAttributeLink uses Python identifier DeleteAttributeLink
    __DeleteAttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLink'), 'DeleteAttributeLink', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1382, 16), )

    
    DeleteAttributeLink = property(__DeleteAttributeLink.value, __DeleteAttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteDataContainerTypeLink uses Python identifier DeleteDataContainerTypeLink
    __DeleteDataContainerTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLink'), 'DeleteDataContainerTypeLink', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteDataContainerTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1383, 16), )

    
    DeleteDataContainerTypeLink = property(__DeleteDataContainerTypeLink.value, __DeleteDataContainerTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAssetCrossReference uses Python identifier DeleteAssetCrossReference
    __DeleteAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference'), 'DeleteAssetCrossReference', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepDeleteAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1384, 16), )

    
    DeleteAssetCrossReference = property(__DeleteAssetCrossReference.value, __DeleteAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CurrentTasks uses Python identifier CurrentTasks
    __CurrentTasks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), 'CurrentTasks', '__httpwww_stibosystems_comstep_ClassificationType_httpwww_stibosystems_comstepCurrentTasks', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1385, 16), )

    
    CurrentTasks = property(__CurrentTasks.value, __CurrentTasks.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ClassificationType_Type', _module_typeBindings.STD_ANON_3, unicode_default='1')
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1388, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1388, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ClassificationType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1395, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1395, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute SourcePos uses Python identifier SourcePos
    __SourcePos = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SourcePos'), 'SourcePos', '__httpwww_stibosystems_comstep_ClassificationType_SourcePos', pyxb.binding.datatypes.string)
    __SourcePos._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1397, 8)
    __SourcePos._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1397, 8)
    
    SourcePos = property(__SourcePos.value, __SourcePos.set, None, None)

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_ClassificationType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1398, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1398, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_ClassificationType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1399, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1399, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    The parent classification of this classification. Only required if not nested inside another\n                    classification element\n                ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ClassificationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1408, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1408, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created.\n                ')

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ClassificationType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1417, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1417, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the\n                    current context is used\n                ')

    
    # Attribute Republished uses Python identifier Republished
    __Republished = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Republished'), 'Republished', '__httpwww_stibosystems_comstep_ClassificationType_Republished', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Republished._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1426, 8)
    __Republished._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1426, 8)
    
    Republished = property(__Republished.value, __Republished.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_ClassificationType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1428, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1428, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Identifies the object type of the object.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ClassificationType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1437, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1437, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ClassificationType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1438, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1438, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __ParentKeyValue.name() : __ParentKeyValue,
        __Name.name() : __Name,
        __AttributeLink.name() : __AttributeLink,
        __DataContainerTypeLink.name() : __DataContainerTypeLink,
        __SequenceProduct.name() : __SequenceProduct,
        __Classification.name() : __Classification,
        __SuppressedClassificationCrossReference.name() : __SuppressedClassificationCrossReference,
        __ProductReference.name() : __ProductReference,
        __ClassificationCrossReference.name() : __ClassificationCrossReference,
        __SuppressedProductCrossReference.name() : __SuppressedProductCrossReference,
        __ProductCrossReference.name() : __ProductCrossReference,
        __SuppressedEntityCrossReference.name() : __SuppressedEntityCrossReference,
        __EntityCrossReference.name() : __EntityCrossReference,
        __SuppressedAssetCrossReference.name() : __SuppressedAssetCrossReference,
        __AssetCrossReference.name() : __AssetCrossReference,
        __MetaData.name() : __MetaData,
        __Tables.name() : __Tables,
        __Asset.name() : __Asset,
        __PublicationGroup.name() : __PublicationGroup,
        __DeleteProductReference.name() : __DeleteProductReference,
        __DeleteSuppressedProductReference.name() : __DeleteSuppressedProductReference,
        __DeleteClassificationCrossReference.name() : __DeleteClassificationCrossReference,
        __DeleteProductCrossReference.name() : __DeleteProductCrossReference,
        __DeleteEntityCrossReference.name() : __DeleteEntityCrossReference,
        __DeleteSuppressedClassificationCrossReference.name() : __DeleteSuppressedClassificationCrossReference,
        __DeleteSuppressedProductCrossReference.name() : __DeleteSuppressedProductCrossReference,
        __DeleteSuppressedEntityCrossReference.name() : __DeleteSuppressedEntityCrossReference,
        __DeleteSuppressedAssetCrossReference.name() : __DeleteSuppressedAssetCrossReference,
        __DeleteAttributeLink.name() : __DeleteAttributeLink,
        __DeleteDataContainerTypeLink.name() : __DeleteDataContainerTypeLink,
        __DeleteAssetCrossReference.name() : __DeleteAssetCrossReference,
        __CurrentTasks.name() : __CurrentTasks
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __Changed.name() : __Changed,
        __SourcePos.name() : __SourcePos,
        __AnalyzerResult.name() : __AnalyzerResult,
        __ParentID.name() : __ParentID,
        __ID.name() : __ID,
        __QualifierID.name() : __QualifierID,
        __Republished.name() : __Republished,
        __UserTypeID.name() : __UserTypeID,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.ClassificationType = ClassificationType
Namespace.addCategoryObject('typeBinding', 'ClassificationType', ClassificationType)


# Complex type {http://www.stibosystems.com/step}ClassificationCrossReferenceType with content type ELEMENT_ONLY
class ClassificationCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1454, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1456, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1458, 16), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Classification uses Python identifier Classification
    __Classification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classification'), 'Classification', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_httpwww_stibosystems_comstepClassification', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1459, 16), )

    
    Classification = property(__Classification.value, __Classification.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1462, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1462, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The type of the reference. The list of valid reference types can be\n                    accessed through the CrossReferenceTypes (one of the ClassificationCrossReferenceType elements)\n                    located below the main element in the XML file\n                ')

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1472, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1472, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    WebPublisher specific attribute. Identifies whether the referenced classification is present on the\n                    website. Possible values: included, excluded\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1481, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1481, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1483, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1483, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used.\n                ')

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceType_ClassificationID', _module_typeBindings.StepID)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1492, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1492, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, '\n                    The ID of the classification to refer to.\n                ')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __MetaData.name() : __MetaData,
        __Classification.name() : __Classification
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID,
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.ClassificationCrossReferenceType = ClassificationCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'ClassificationCrossReferenceType', ClassificationCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}ClassificationCrossReferenceTypeType with content type ELEMENT_ONLY
class ClassificationCrossReferenceTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationCrossReferenceTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReferenceTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1503, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1505, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1506, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1507, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1508, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1509, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1510, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1511, 12), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1513, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1513, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1515, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1515, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1516, 8)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1516, 8)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1518, 8)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1518, 8)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                    DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1525, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1525, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1527, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1527, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1529, 8)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1529, 8)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1531, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1531, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    When exporting from STEP, this flag indicates the object was referenced in other exported data.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ClassificationCrossReferenceTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1538, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1538, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __Revised.name() : __Revised,
        __Completeness.name() : __Completeness,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __Accumulated.name() : __Accumulated,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected
    })
_module_typeBindings.ClassificationCrossReferenceTypeType = ClassificationCrossReferenceTypeType
Namespace.addCategoryObject('typeBinding', 'ClassificationCrossReferenceTypeType', ClassificationCrossReferenceTypeType)


# Complex type {http://www.stibosystems.com/step}ClassificationProductLinkTypeType with content type ELEMENT_ONLY
class ClassificationProductLinkTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationProductLinkTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationProductLinkTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1556, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1558, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1559, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1560, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1561, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1562, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1563, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1564, 12), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1566, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1566, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1568, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1568, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute DefinesValidAttributes uses Python identifier DefinesValidAttributes
    __DefinesValidAttributes = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefinesValidAttributes'), 'DefinesValidAttributes', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_DefinesValidAttributes', _module_typeBindings.TrueFalseType, unicode_default='false')
    __DefinesValidAttributes._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1569, 8)
    __DefinesValidAttributes._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1569, 8)
    
    DefinesValidAttributes = property(__DefinesValidAttributes.value, __DefinesValidAttributes.set, None, None)

    
    # Attribute IgnoreLOVFilters uses Python identifier IgnoreLOVFilters
    __IgnoreLOVFilters = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IgnoreLOVFilters'), 'IgnoreLOVFilters', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_IgnoreLOVFilters', _module_typeBindings.TrueFalseType, unicode_default='false')
    __IgnoreLOVFilters._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1571, 8)
    __IgnoreLOVFilters._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1571, 8)
    
    IgnoreLOVFilters = property(__IgnoreLOVFilters.value, __IgnoreLOVFilters.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1573, 8)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1573, 8)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1575, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1575, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1577, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1577, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1579, 8)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1579, 8)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1581, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1581, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ClassificationProductLinkTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1582, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1582, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __DefinesValidAttributes.name() : __DefinesValidAttributes,
        __IgnoreLOVFilters.name() : __IgnoreLOVFilters,
        __Revised.name() : __Revised,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __Accumulated.name() : __Accumulated,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.ClassificationProductLinkTypeType = ClassificationProductLinkTypeType
Namespace.addCategoryObject('typeBinding', 'ClassificationProductLinkTypeType', ClassificationProductLinkTypeType)


# Complex type {http://www.stibosystems.com/step}ClassificationReferenceType with content type ELEMENT_ONLY
class ClassificationReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                This element describes a link to a classification from either a product or an asset
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1586, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ClassificationReferenceType_httpwww_stibosystems_comstepKeyValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1595, 16), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ClassificationReferenceType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1596, 16), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Classification uses Python identifier Classification
    __Classification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classification'), 'Classification', '__httpwww_stibosystems_comstep_ClassificationReferenceType_httpwww_stibosystems_comstepClassification', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1597, 16), )

    
    Classification = property(__Classification.value, __Classification.set, None, None)

    
    # Attribute InheritedFrom uses Python identifier InheritedFrom
    __InheritedFrom = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'InheritedFrom'), 'InheritedFrom', '__httpwww_stibosystems_comstep_ClassificationReferenceType_InheritedFrom', pyxb.binding.datatypes.string)
    __InheritedFrom._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1600, 8)
    __InheritedFrom._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1600, 8)
    
    InheritedFrom = property(__InheritedFrom.value, __InheritedFrom.set, None, '\n                    Only relevant during export when nested inside a product. Informs from\n                    which parent product this classification reference has been inherited from.\n                ')

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ClassificationReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1609, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1609, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    \n                    The ID of the type of the link.\n                ')

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_ClassificationReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1617, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1617, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    \n                    WebPublisher specific attribute. Identifies whether the referenced classification is present on the\n                    website. Possible values: included, excluded\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ClassificationReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1626, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1626, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ClassificationReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1628, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1628, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used\n                ')

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_ClassificationReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1636, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1636, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, '\n                    The ID of the classification to link into.\n                ')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __MetaData.name() : __MetaData,
        __Classification.name() : __Classification
    })
    _AttributeMap.update({
        __InheritedFrom.name() : __InheritedFrom,
        __Type.name() : __Type,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID,
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.ClassificationReferenceType = ClassificationReferenceType
Namespace.addCategoryObject('typeBinding', 'ClassificationReferenceType', ClassificationReferenceType)


# Complex type {http://www.stibosystems.com/step}ClassificationsType with content type ELEMENT_ONLY
class ClassificationsType (pyxb.binding.basis.complexTypeDefinition):
    """
                Element that holds all top level classification
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1646, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Classification uses Python identifier Classification
    __Classification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Classification'), 'Classification', '__httpwww_stibosystems_comstep_ClassificationsType_httpwww_stibosystems_comstepClassification', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1653, 12), )

    
    Classification = property(__Classification.value, __Classification.set, None, None)

    
    # Attribute RejectNewClassifications uses Python identifier RejectNewClassifications
    __RejectNewClassifications = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RejectNewClassifications'), 'RejectNewClassifications', '__httpwww_stibosystems_comstep_ClassificationsType_RejectNewClassifications', _module_typeBindings.TrueFalseType, unicode_default='false')
    __RejectNewClassifications._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1656, 8)
    __RejectNewClassifications._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1656, 8)
    
    RejectNewClassifications = property(__RejectNewClassifications.value, __RejectNewClassifications.set, None, 'Whether or not to reject new classifications during import.')

    
    # Attribute DefaultParentID uses Python identifier DefaultParentID
    __DefaultParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultParentID'), 'DefaultParentID', '__httpwww_stibosystems_comstep_ClassificationsType_DefaultParentID', _module_typeBindings.StepID)
    __DefaultParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1661, 8)
    __DefaultParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1661, 8)
    
    DefaultParentID = property(__DefaultParentID.value, __DefaultParentID.set, None, '\n                    The default parent classification of the classifications included in this element.\n                ')

    
    # Attribute DefaultUserTypeID uses Python identifier DefaultUserTypeID
    __DefaultUserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultUserTypeID'), 'DefaultUserTypeID', '__httpwww_stibosystems_comstep_ClassificationsType_DefaultUserTypeID', _module_typeBindings.StepObjectTypeID)
    __DefaultUserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1668, 8)
    __DefaultUserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1668, 8)
    
    DefaultUserTypeID = property(__DefaultUserTypeID.value, __DefaultUserTypeID.set, None, None)

    _ElementMap.update({
        __Classification.name() : __Classification
    })
    _AttributeMap.update({
        __RejectNewClassifications.name() : __RejectNewClassifications,
        __DefaultParentID.name() : __DefaultParentID,
        __DefaultUserTypeID.name() : __DefaultUserTypeID
    })
_module_typeBindings.ClassificationsType = ClassificationsType
Namespace.addCategoryObject('typeBinding', 'ClassificationsType', ClassificationsType)


# Complex type {http://www.stibosystems.com/step}OriginType with content type EMPTY
class OriginType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}OriginType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'OriginType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1679, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_OriginType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1680, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1680, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute Pull uses Python identifier Pull
    __Pull = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Pull'), 'Pull', '__httpwww_stibosystems_comstep_OriginType_Pull', pyxb.binding.datatypes.string)
    __Pull._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1681, 8)
    __Pull._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1681, 8)
    
    Pull = property(__Pull.value, __Pull.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __AttributeID.name() : __AttributeID,
        __Pull.name() : __Pull
    })
_module_typeBindings.OriginType = OriginType
Namespace.addCategoryObject('typeBinding', 'OriginType', OriginType)


# Complex type {http://www.stibosystems.com/step}ProductOriginType with content type EMPTY
class ProductOriginType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductOriginType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductOriginType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1684, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ProductOriginType_ID', pyxb.binding.datatypes.string)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1685, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1685, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_ProductOriginType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1686, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1686, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute Pull uses Python identifier Pull
    __Pull = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Pull'), 'Pull', '__httpwww_stibosystems_comstep_ProductOriginType_Pull', pyxb.binding.datatypes.string)
    __Pull._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1687, 8)
    __Pull._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1687, 8)
    
    Pull = property(__Pull.value, __Pull.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __AttributeID.name() : __AttributeID,
        __Pull.name() : __Pull
    })
_module_typeBindings.ProductOriginType = ProductOriginType
Namespace.addCategoryObject('typeBinding', 'ProductOriginType', ProductOriginType)


# Complex type {http://www.stibosystems.com/step}ClassificationOriginType with content type EMPTY
class ClassificationOriginType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ClassificationOriginType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ClassificationOriginType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1690, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ClassificationOriginType_ID', pyxb.binding.datatypes.string)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1691, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1691, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_ClassificationOriginType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1692, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1692, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute Pull uses Python identifier Pull
    __Pull = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Pull'), 'Pull', '__httpwww_stibosystems_comstep_ClassificationOriginType_Pull', pyxb.binding.datatypes.string)
    __Pull._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1693, 8)
    __Pull._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1693, 8)
    
    Pull = property(__Pull.value, __Pull.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __AttributeID.name() : __AttributeID,
        __Pull.name() : __Pull
    })
_module_typeBindings.ClassificationOriginType = ClassificationOriginType
Namespace.addCategoryObject('typeBinding', 'ClassificationOriginType', ClassificationOriginType)


# Complex type {http://www.stibosystems.com/step}EntityOriginType with content type EMPTY
class EntityOriginType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EntityOriginType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntityOriginType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1696, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_EntityOriginType_ID', pyxb.binding.datatypes.string)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1697, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1697, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_EntityOriginType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1698, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1698, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute Pull uses Python identifier Pull
    __Pull = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Pull'), 'Pull', '__httpwww_stibosystems_comstep_EntityOriginType_Pull', pyxb.binding.datatypes.string)
    __Pull._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1699, 8)
    __Pull._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1699, 8)
    
    Pull = property(__Pull.value, __Pull.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __AttributeID.name() : __AttributeID,
        __Pull.name() : __Pull
    })
_module_typeBindings.EntityOriginType = EntityOriginType
Namespace.addCategoryObject('typeBinding', 'EntityOriginType', EntityOriginType)


# Complex type {http://www.stibosystems.com/step}AssetOriginType with content type EMPTY
class AssetOriginType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AssetOriginType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AssetOriginType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1702, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AssetOriginType_ID', pyxb.binding.datatypes.string)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1703, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1703, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_AssetOriginType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1704, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1704, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute Pull uses Python identifier Pull
    __Pull = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Pull'), 'Pull', '__httpwww_stibosystems_comstep_AssetOriginType_Pull', pyxb.binding.datatypes.string)
    __Pull._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1705, 8)
    __Pull._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1705, 8)
    
    Pull = property(__Pull.value, __Pull.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __AttributeID.name() : __AttributeID,
        __Pull.name() : __Pull
    })
_module_typeBindings.AssetOriginType = AssetOriginType
Namespace.addCategoryObject('typeBinding', 'AssetOriginType', AssetOriginType)


# Complex type {http://www.stibosystems.com/step}AttributeOriginType with content type EMPTY
class AttributeOriginType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}AttributeOriginType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'AttributeOriginType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1708, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_AttributeOriginType_ID', pyxb.binding.datatypes.string)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1709, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1709, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_AttributeOriginType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1710, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1710, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute Pull uses Python identifier Pull
    __Pull = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Pull'), 'Pull', '__httpwww_stibosystems_comstep_AttributeOriginType_Pull', pyxb.binding.datatypes.string)
    __Pull._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1711, 8)
    __Pull._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1711, 8)
    
    Pull = property(__Pull.value, __Pull.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __AttributeID.name() : __AttributeID,
        __Pull.name() : __Pull
    })
_module_typeBindings.AttributeOriginType = AttributeOriginType
Namespace.addCategoryObject('typeBinding', 'AttributeOriginType', AttributeOriginType)


# Complex type {http://www.stibosystems.com/step}ColumnType with content type ELEMENT_ONLY
class ColumnType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ColumnType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ColumnType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1714, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Origin uses Python identifier Origin
    __Origin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Origin'), 'Origin', '__httpwww_stibosystems_comstep_ColumnType_httpwww_stibosystems_comstepOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1716, 12), )

    
    Origin = property(__Origin.value, __Origin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductOrigin uses Python identifier ProductOrigin
    __ProductOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin'), 'ProductOrigin', '__httpwww_stibosystems_comstep_ColumnType_httpwww_stibosystems_comstepProductOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1717, 12), )

    
    ProductOrigin = property(__ProductOrigin.value, __ProductOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationOrigin uses Python identifier ClassificationOrigin
    __ClassificationOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin'), 'ClassificationOrigin', '__httpwww_stibosystems_comstep_ColumnType_httpwww_stibosystems_comstepClassificationOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1718, 12), )

    
    ClassificationOrigin = property(__ClassificationOrigin.value, __ClassificationOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityOrigin uses Python identifier EntityOrigin
    __EntityOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin'), 'EntityOrigin', '__httpwww_stibosystems_comstep_ColumnType_httpwww_stibosystems_comstepEntityOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1719, 12), )

    
    EntityOrigin = property(__EntityOrigin.value, __EntityOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetOrigin uses Python identifier AssetOrigin
    __AssetOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin'), 'AssetOrigin', '__httpwww_stibosystems_comstep_ColumnType_httpwww_stibosystems_comstepAssetOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1720, 12), )

    
    AssetOrigin = property(__AssetOrigin.value, __AssetOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeOrigin uses Python identifier AttributeOrigin
    __AttributeOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin'), 'AttributeOrigin', '__httpwww_stibosystems_comstep_ColumnType_httpwww_stibosystems_comstepAttributeOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1721, 12), )

    
    AttributeOrigin = property(__AttributeOrigin.value, __AttributeOrigin.set, None, None)

    
    # Attribute ProcessFlag uses Python identifier ProcessFlag
    __ProcessFlag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessFlag'), 'ProcessFlag', '__httpwww_stibosystems_comstep_ColumnType_ProcessFlag', pyxb.binding.datatypes.string)
    __ProcessFlag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1724, 8)
    __ProcessFlag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1724, 8)
    
    ProcessFlag = property(__ProcessFlag.value, __ProcessFlag.set, None, None)

    
    # Attribute BackgroundColor uses Python identifier BackgroundColor
    __BackgroundColor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BackgroundColor'), 'BackgroundColor', '__httpwww_stibosystems_comstep_ColumnType_BackgroundColor', pyxb.binding.datatypes.string)
    __BackgroundColor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1725, 8)
    __BackgroundColor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1725, 8)
    
    BackgroundColor = property(__BackgroundColor.value, __BackgroundColor.set, None, None)

    
    # Attribute RuleRight uses Python identifier RuleRight
    __RuleRight = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleRight'), 'RuleRight', '__httpwww_stibosystems_comstep_ColumnType_RuleRight', pyxb.binding.datatypes.string)
    __RuleRight._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1726, 8)
    __RuleRight._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1726, 8)
    
    RuleRight = property(__RuleRight.value, __RuleRight.set, None, None)

    
    # Attribute RuleLeft uses Python identifier RuleLeft
    __RuleLeft = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleLeft'), 'RuleLeft', '__httpwww_stibosystems_comstep_ColumnType_RuleLeft', pyxb.binding.datatypes.string)
    __RuleLeft._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1727, 8)
    __RuleLeft._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1727, 8)
    
    RuleLeft = property(__RuleLeft.value, __RuleLeft.set, None, None)

    
    # Attribute CellRotation uses Python identifier CellRotation
    __CellRotation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellRotation'), 'CellRotation', '__httpwww_stibosystems_comstep_ColumnType_CellRotation', pyxb.binding.datatypes.string)
    __CellRotation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1728, 8)
    __CellRotation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1728, 8)
    
    CellRotation = property(__CellRotation.value, __CellRotation.set, None, None)

    
    # Attribute TextStyle uses Python identifier TextStyle
    __TextStyle = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TextStyle'), 'TextStyle', '__httpwww_stibosystems_comstep_ColumnType_TextStyle', pyxb.binding.datatypes.string)
    __TextStyle._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1729, 8)
    __TextStyle._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1729, 8)
    
    TextStyle = property(__TextStyle.value, __TextStyle.set, None, None)

    
    # Attribute VerticalAlignment uses Python identifier VerticalAlignment
    __VerticalAlignment = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalAlignment'), 'VerticalAlignment', '__httpwww_stibosystems_comstep_ColumnType_VerticalAlignment', pyxb.binding.datatypes.string)
    __VerticalAlignment._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1730, 8)
    __VerticalAlignment._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1730, 8)
    
    VerticalAlignment = property(__VerticalAlignment.value, __VerticalAlignment.set, None, None)

    
    # Attribute ColumnTypeID uses Python identifier ColumnTypeID
    __ColumnTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ColumnTypeID'), 'ColumnTypeID', '__httpwww_stibosystems_comstep_ColumnType_ColumnTypeID', _module_typeBindings.StepAttributeID)
    __ColumnTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1731, 8)
    __ColumnTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1731, 8)
    
    ColumnTypeID = property(__ColumnTypeID.value, __ColumnTypeID.set, None, None)

    
    # Attribute CellVerticalStoryDirection uses Python identifier CellVerticalStoryDirection
    __CellVerticalStoryDirection = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellVerticalStoryDirection'), 'CellVerticalStoryDirection', '__httpwww_stibosystems_comstep_ColumnType_CellVerticalStoryDirection', pyxb.binding.datatypes.string)
    __CellVerticalStoryDirection._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1732, 8)
    __CellVerticalStoryDirection._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1732, 8)
    
    CellVerticalStoryDirection = property(__CellVerticalStoryDirection.value, __CellVerticalStoryDirection.set, None, None)

    
    # Attribute CellImageScale uses Python identifier CellImageScale
    __CellImageScale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellImageScale'), 'CellImageScale', '__httpwww_stibosystems_comstep_ColumnType_CellImageScale', pyxb.binding.datatypes.string)
    __CellImageScale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1733, 8)
    __CellImageScale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1733, 8)
    
    CellImageScale = property(__CellImageScale.value, __CellImageScale.set, None, None)

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_ColumnType_Width', pyxb.binding.datatypes.string)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1734, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1734, 8)
    
    Width = property(__Width.value, __Width.set, None, None)

    _ElementMap.update({
        __Origin.name() : __Origin,
        __ProductOrigin.name() : __ProductOrigin,
        __ClassificationOrigin.name() : __ClassificationOrigin,
        __EntityOrigin.name() : __EntityOrigin,
        __AssetOrigin.name() : __AssetOrigin,
        __AttributeOrigin.name() : __AttributeOrigin
    })
    _AttributeMap.update({
        __ProcessFlag.name() : __ProcessFlag,
        __BackgroundColor.name() : __BackgroundColor,
        __RuleRight.name() : __RuleRight,
        __RuleLeft.name() : __RuleLeft,
        __CellRotation.name() : __CellRotation,
        __TextStyle.name() : __TextStyle,
        __VerticalAlignment.name() : __VerticalAlignment,
        __ColumnTypeID.name() : __ColumnTypeID,
        __CellVerticalStoryDirection.name() : __CellVerticalStoryDirection,
        __CellImageScale.name() : __CellImageScale,
        __Width.name() : __Width
    })
_module_typeBindings.ColumnType = ColumnType
Namespace.addCategoryObject('typeBinding', 'ColumnType', ColumnType)


# Complex type {http://www.stibosystems.com/step}ColumnTypeType with content type ELEMENT_ONLY
class ColumnTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ColumnTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ColumnTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1750, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ColumnTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1752, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableTypeLink uses Python identifier TableTypeLink
    __TableTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableTypeLink'), 'TableTypeLink', '__httpwww_stibosystems_comstep_ColumnTypeType_httpwww_stibosystems_comstepTableTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1753, 12), )

    
    TableTypeLink = property(__TableTypeLink.value, __TableTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationTypeValidity uses Python identifier PublicationTypeValidity
    __PublicationTypeValidity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidity'), 'PublicationTypeValidity', '__httpwww_stibosystems_comstep_ColumnTypeType_httpwww_stibosystems_comstepPublicationTypeValidity', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1754, 12), )

    
    PublicationTypeValidity = property(__PublicationTypeValidity.value, __PublicationTypeValidity.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ColumnTypeType_ID', _module_typeBindings.StepAttributeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1756, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1756, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_ColumnTypeType_ParentID', _module_typeBindings.StepAttributeID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1757, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1757, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_ColumnTypeType_Width', pyxb.binding.datatypes.decimal)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1758, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1758, 8)
    
    Width = property(__Width.value, __Width.set, None, None)

    
    # Attribute WidthUnit uses Python identifier WidthUnit
    __WidthUnit = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WidthUnit'), 'WidthUnit', '__httpwww_stibosystems_comstep_ColumnTypeType_WidthUnit', pyxb.binding.datatypes.string)
    __WidthUnit._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1759, 8)
    __WidthUnit._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1759, 8)
    
    WidthUnit = property(__WidthUnit.value, __WidthUnit.set, None, None)

    
    # Attribute TextStyle uses Python identifier TextStyle
    __TextStyle = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TextStyle'), 'TextStyle', '__httpwww_stibosystems_comstep_ColumnTypeType_TextStyle', pyxb.binding.datatypes.string)
    __TextStyle._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1760, 8)
    __TextStyle._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1760, 8)
    
    TextStyle = property(__TextStyle.value, __TextStyle.set, None, None)

    
    # Attribute BackgroundColor uses Python identifier BackgroundColor
    __BackgroundColor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BackgroundColor'), 'BackgroundColor', '__httpwww_stibosystems_comstep_ColumnTypeType_BackgroundColor', pyxb.binding.datatypes.string)
    __BackgroundColor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1761, 8)
    __BackgroundColor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1761, 8)
    
    BackgroundColor = property(__BackgroundColor.value, __BackgroundColor.set, None, None)

    
    # Attribute VerticalAlignment uses Python identifier VerticalAlignment
    __VerticalAlignment = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalAlignment'), 'VerticalAlignment', '__httpwww_stibosystems_comstep_ColumnTypeType_VerticalAlignment', pyxb.binding.datatypes.string)
    __VerticalAlignment._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1762, 8)
    __VerticalAlignment._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1762, 8)
    
    VerticalAlignment = property(__VerticalAlignment.value, __VerticalAlignment.set, None, None)

    
    # Attribute RuleLeft uses Python identifier RuleLeft
    __RuleLeft = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleLeft'), 'RuleLeft', '__httpwww_stibosystems_comstep_ColumnTypeType_RuleLeft', pyxb.binding.datatypes.string)
    __RuleLeft._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1763, 8)
    __RuleLeft._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1763, 8)
    
    RuleLeft = property(__RuleLeft.value, __RuleLeft.set, None, None)

    
    # Attribute RuleRight uses Python identifier RuleRight
    __RuleRight = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleRight'), 'RuleRight', '__httpwww_stibosystems_comstep_ColumnTypeType_RuleRight', pyxb.binding.datatypes.string)
    __RuleRight._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1764, 8)
    __RuleRight._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1764, 8)
    
    RuleRight = property(__RuleRight.value, __RuleRight.set, None, None)

    
    # Attribute CellRotation uses Python identifier CellRotation
    __CellRotation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellRotation'), 'CellRotation', '__httpwww_stibosystems_comstep_ColumnTypeType_CellRotation', pyxb.binding.datatypes.string)
    __CellRotation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1765, 8)
    __CellRotation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1765, 8)
    
    CellRotation = property(__CellRotation.value, __CellRotation.set, None, None)

    
    # Attribute ProcessFlag uses Python identifier ProcessFlag
    __ProcessFlag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessFlag'), 'ProcessFlag', '__httpwww_stibosystems_comstep_ColumnTypeType_ProcessFlag', pyxb.binding.datatypes.string)
    __ProcessFlag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1766, 8)
    __ProcessFlag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1766, 8)
    
    ProcessFlag = property(__ProcessFlag.value, __ProcessFlag.set, None, None)

    
    # Attribute CellVerticalStoryDirection uses Python identifier CellVerticalStoryDirection
    __CellVerticalStoryDirection = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellVerticalStoryDirection'), 'CellVerticalStoryDirection', '__httpwww_stibosystems_comstep_ColumnTypeType_CellVerticalStoryDirection', pyxb.binding.datatypes.string)
    __CellVerticalStoryDirection._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1767, 8)
    __CellVerticalStoryDirection._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1767, 8)
    
    CellVerticalStoryDirection = property(__CellVerticalStoryDirection.value, __CellVerticalStoryDirection.set, None, None)

    
    # Attribute CellImageScale uses Python identifier CellImageScale
    __CellImageScale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellImageScale'), 'CellImageScale', '__httpwww_stibosystems_comstep_ColumnTypeType_CellImageScale', pyxb.binding.datatypes.string)
    __CellImageScale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1768, 8)
    __CellImageScale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1768, 8)
    
    CellImageScale = property(__CellImageScale.value, __CellImageScale.set, None, None)

    
    # Attribute HeadingLevel uses Python identifier HeadingLevel
    __HeadingLevel = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HeadingLevel'), 'HeadingLevel', '__httpwww_stibosystems_comstep_ColumnTypeType_HeadingLevel', pyxb.binding.datatypes.integer)
    __HeadingLevel._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1769, 8)
    __HeadingLevel._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1769, 8)
    
    HeadingLevel = property(__HeadingLevel.value, __HeadingLevel.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ColumnTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1770, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1770, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ColumnTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1775, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1775, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ColumnTypeType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1777, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1777, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __TableTypeLink.name() : __TableTypeLink,
        __PublicationTypeValidity.name() : __PublicationTypeValidity
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Width.name() : __Width,
        __WidthUnit.name() : __WidthUnit,
        __TextStyle.name() : __TextStyle,
        __BackgroundColor.name() : __BackgroundColor,
        __VerticalAlignment.name() : __VerticalAlignment,
        __RuleLeft.name() : __RuleLeft,
        __RuleRight.name() : __RuleRight,
        __CellRotation.name() : __CellRotation,
        __ProcessFlag.name() : __ProcessFlag,
        __CellVerticalStoryDirection.name() : __CellVerticalStoryDirection,
        __CellImageScale.name() : __CellImageScale,
        __HeadingLevel.name() : __HeadingLevel,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.ColumnTypeType = ColumnTypeType
Namespace.addCategoryObject('typeBinding', 'ColumnTypeType', ColumnTypeType)


# Complex type {http://www.stibosystems.com/step}CommercialListType with content type ELEMENT_ONLY
class CommercialListType (pyxb.binding.basis.complexTypeDefinition):
    """
                A commercial list definition. The content of the commercial list is not part of this STEP XML.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'CommercialListType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1789, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_CommercialListType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1796, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_CommercialListType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1797, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_CommercialListType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1799, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1799, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_CommercialListType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1806, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1806, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of commercial list this list is (price, etc.).\n                ')

    
    # Attribute ImportConfigurationID uses Python identifier ImportConfigurationID
    __ImportConfigurationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ImportConfigurationID'), 'ImportConfigurationID', '__httpwww_stibosystems_comstep_CommercialListType_ImportConfigurationID', _module_typeBindings.StepID)
    __ImportConfigurationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1813, 8)
    __ImportConfigurationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1813, 8)
    
    ImportConfigurationID = property(__ImportConfigurationID.value, __ImportConfigurationID.set, None, '\n                    Links to the import configuration used to import data to this commercial list.\n                ')

    
    # Attribute ExpiryDate uses Python identifier ExpiryDate
    __ExpiryDate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ExpiryDate'), 'ExpiryDate', '__httpwww_stibosystems_comstep_CommercialListType_ExpiryDate', pyxb.binding.datatypes.string)
    __ExpiryDate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1820, 8)
    __ExpiryDate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1820, 8)
    
    ExpiryDate = property(__ExpiryDate.value, __ExpiryDate.set, None, '\n                    Expiry date of the content in this list.\n                ')

    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_CommercialListType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1827, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1827, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, '\n                    The currency of price lists.\n                ')

    
    # Attribute DefaultEndDate uses Python identifier DefaultEndDate
    __DefaultEndDate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultEndDate'), 'DefaultEndDate', '__httpwww_stibosystems_comstep_CommercialListType_DefaultEndDate', pyxb.binding.datatypes.string)
    __DefaultEndDate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1834, 8)
    __DefaultEndDate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1834, 8)
    
    DefaultEndDate = property(__DefaultEndDate.value, __DefaultEndDate.set, None, '\n                    The default end date for new commercial content stored into this list.\n                ')

    
    # Attribute DefaultStartDate uses Python identifier DefaultStartDate
    __DefaultStartDate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultStartDate'), 'DefaultStartDate', '__httpwww_stibosystems_comstep_CommercialListType_DefaultStartDate', pyxb.binding.datatypes.string)
    __DefaultStartDate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1841, 8)
    __DefaultStartDate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1841, 8)
    
    DefaultStartDate = property(__DefaultStartDate.value, __DefaultStartDate.set, None, '\n                    The default start date for new commercial content stored into this list.\n                ')

    
    # Attribute Immutable uses Python identifier Immutable
    __Immutable = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Immutable'), 'Immutable', '__httpwww_stibosystems_comstep_CommercialListType_Immutable', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Immutable._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1848, 8)
    __Immutable._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1848, 8)
    
    Immutable = property(__Immutable.value, __Immutable.set, None, '\n                    Whether or not this commercial list is immutable.\n                ')

    
    # Attribute ActAsSelectionList uses Python identifier ActAsSelectionList
    __ActAsSelectionList = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ActAsSelectionList'), 'ActAsSelectionList', '__httpwww_stibosystems_comstep_CommercialListType_ActAsSelectionList', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ActAsSelectionList._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1855, 8)
    __ActAsSelectionList._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1855, 8)
    
    ActAsSelectionList = property(__ActAsSelectionList.value, __ActAsSelectionList.set, None, '\n                    Whether or not this commercial list should act as selection list in eCatalog.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __ImportConfigurationID.name() : __ImportConfigurationID,
        __ExpiryDate.name() : __ExpiryDate,
        __UnitID.name() : __UnitID,
        __DefaultEndDate.name() : __DefaultEndDate,
        __DefaultStartDate.name() : __DefaultStartDate,
        __Immutable.name() : __Immutable,
        __ActAsSelectionList.name() : __ActAsSelectionList
    })
_module_typeBindings.CommercialListType = CommercialListType
Namespace.addCategoryObject('typeBinding', 'CommercialListType', CommercialListType)


# Complex type {http://www.stibosystems.com/step}ContextLinkType with content type EMPTY
class ContextLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Link to a context.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ContextLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1930, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_ContextLinkType_ContextID', _module_typeBindings.StepQualifierID, required=True)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1936, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1936, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, '\n                    The external id of the context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ContextID.name() : __ContextID
    })
_module_typeBindings.ContextLinkType = ContextLinkType
Namespace.addCategoryObject('typeBinding', 'ContextLinkType', ContextLinkType)


# Complex type {http://www.stibosystems.com/step}DeleteAssetCrossReferenceType with content type ELEMENT_ONLY
class DeleteAssetCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteAssetCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1985, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteAssetCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1987, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteAssetCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1989, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1989, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_DeleteAssetCrossReferenceType_AssetID', _module_typeBindings.StepID, required=True)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1990, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1990, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteAssetCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1991, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1991, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __AssetID.name() : __AssetID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteAssetCrossReferenceType = DeleteAssetCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteAssetCrossReferenceType', DeleteAssetCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteEntityCrossReferenceType with content type ELEMENT_ONLY
class DeleteEntityCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteEntityCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2003, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteEntityCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2005, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteEntityCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2007, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2007, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute EntityID uses Python identifier EntityID
    __EntityID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EntityID'), 'EntityID', '__httpwww_stibosystems_comstep_DeleteEntityCrossReferenceType_EntityID', _module_typeBindings.StepID, required=True)
    __EntityID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2008, 8)
    __EntityID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2008, 8)
    
    EntityID = property(__EntityID.value, __EntityID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteEntityCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2009, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2009, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __EntityID.name() : __EntityID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteEntityCrossReferenceType = DeleteEntityCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteEntityCrossReferenceType', DeleteEntityCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteAttributeLinkType with content type EMPTY
class DeleteAttributeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteAttributeLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2033, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_DeleteAttributeLinkType_AttributeID', _module_typeBindings.StepAttributeID, required=True)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2034, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2034, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __AttributeID.name() : __AttributeID
    })
_module_typeBindings.DeleteAttributeLinkType = DeleteAttributeLinkType
Namespace.addCategoryObject('typeBinding', 'DeleteAttributeLinkType', DeleteAttributeLinkType)


# Complex type {http://www.stibosystems.com/step}DeleteDataContainerTypeLinkType with content type EMPTY
class DeleteDataContainerTypeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteDataContainerTypeLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2037, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute DataContainerTypeID uses Python identifier DataContainerTypeID
    __DataContainerTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DataContainerTypeID'), 'DataContainerTypeID', '__httpwww_stibosystems_comstep_DeleteDataContainerTypeLinkType_DataContainerTypeID', _module_typeBindings.StepDataContainerTypeID, required=True)
    __DataContainerTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2038, 8)
    __DataContainerTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2038, 8)
    
    DataContainerTypeID = property(__DataContainerTypeID.value, __DataContainerTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __DataContainerTypeID.name() : __DataContainerTypeID
    })
_module_typeBindings.DeleteDataContainerTypeLinkType = DeleteDataContainerTypeLinkType
Namespace.addCategoryObject('typeBinding', 'DeleteDataContainerTypeLinkType', DeleteDataContainerTypeLinkType)


# Complex type {http://www.stibosystems.com/step}DeleteClassificationCrossReferenceType with content type ELEMENT_ONLY
class DeleteClassificationCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteClassificationCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2064, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteClassificationCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2066, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteClassificationCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2068, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2068, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_DeleteClassificationCrossReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2069, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2069, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteClassificationCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2070, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2070, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ClassificationID.name() : __ClassificationID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteClassificationCrossReferenceType = DeleteClassificationCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteClassificationCrossReferenceType', DeleteClassificationCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteClassificationReferenceType with content type ELEMENT_ONLY
class DeleteClassificationReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteClassificationReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2074, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteClassificationReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2076, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteClassificationReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2078, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2078, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_DeleteClassificationReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2079, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2079, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteClassificationReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2080, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2080, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ClassificationID.name() : __ClassificationID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteClassificationReferenceType = DeleteClassificationReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteClassificationReferenceType', DeleteClassificationReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteProductReferenceType with content type ELEMENT_ONLY
class DeleteProductReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteProductReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteProductReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2083, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteProductReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2085, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteProductReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2087, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2087, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_DeleteProductReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2088, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2088, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteProductReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2089, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2089, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteProductReferenceType = DeleteProductReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteProductReferenceType', DeleteProductReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteListOfValueType with content type EMPTY
class DeleteListOfValueType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteListOfValueType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2124, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteListOfValueType_ID', _module_typeBindings.StepLOVID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2125, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2125, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.DeleteListOfValueType = DeleteListOfValueType
Namespace.addCategoryObject('typeBinding', 'DeleteListOfValueType', DeleteListOfValueType)


# Complex type {http://www.stibosystems.com/step}DeleteProductCrossReferenceType with content type ELEMENT_ONLY
class DeleteProductCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteProductCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2129, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteProductCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2131, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteProductCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2133, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2133, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_DeleteProductCrossReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2134, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2134, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteProductCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2135, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2135, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute MountLocation uses Python identifier MountLocation
    __MountLocation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MountLocation'), 'MountLocation', '__httpwww_stibosystems_comstep_DeleteProductCrossReferenceType_MountLocation', pyxb.binding.datatypes.string)
    __MountLocation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2136, 8)
    __MountLocation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2136, 8)
    
    MountLocation = property(__MountLocation.value, __MountLocation.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __QualifierID.name() : __QualifierID,
        __MountLocation.name() : __MountLocation
    })
_module_typeBindings.DeleteProductCrossReferenceType = DeleteProductCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteProductCrossReferenceType', DeleteProductCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DimensionType with content type ELEMENT_ONLY
class DimensionType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a dimension. Holds a number of dimension point.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DimensionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2168, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_DimensionType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2175, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_DimensionType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2176, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionPoint uses Python identifier DimensionPoint
    __DimensionPoint = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionPoint'), 'DimensionPoint', '__httpwww_stibosystems_comstep_DimensionType_httpwww_stibosystems_comstepDimensionPoint', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2177, 12), )

    
    DimensionPoint = property(__DimensionPoint.value, __DimensionPoint.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DimensionType_ID', _module_typeBindings.StepQualifierID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2179, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2179, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_DimensionType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2186, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2186, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __DimensionPoint.name() : __DimensionPoint
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Selected.name() : __Selected
    })
_module_typeBindings.DimensionType = DimensionType
Namespace.addCategoryObject('typeBinding', 'DimensionType', DimensionType)


# Complex type {http://www.stibosystems.com/step}DimensionLinkType with content type EMPTY
class DimensionLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links to a dimension. This is for example used to link dependent dimensions of values for an attribute.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DimensionLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2190, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute DimensionID uses Python identifier DimensionID
    __DimensionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DimensionID'), 'DimensionID', '__httpwww_stibosystems_comstep_DimensionLinkType_DimensionID', _module_typeBindings.StepQualifierID, required=True)
    __DimensionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2196, 8)
    __DimensionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2196, 8)
    
    DimensionID = property(__DimensionID.value, __DimensionID.set, None, '\n                    The ID of the dimension to link to.\n                ')

    
    # Attribute DimensionPointID uses Python identifier DimensionPointID
    __DimensionPointID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DimensionPointID'), 'DimensionPointID', '__httpwww_stibosystems_comstep_DimensionLinkType_DimensionPointID', _module_typeBindings.StepQualifierID)
    __DimensionPointID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2203, 8)
    __DimensionPointID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2203, 8)
    
    DimensionPointID = property(__DimensionPointID.value, __DimensionPointID.set, None, '\n                    Only used during import, in which case this will represent the default\n                    dimension point to use in the linked dimension if required (required if\n                    adding a dimension dependency to values).\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __DimensionID.name() : __DimensionID,
        __DimensionPointID.name() : __DimensionPointID
    })
_module_typeBindings.DimensionLinkType = DimensionLinkType
Namespace.addCategoryObject('typeBinding', 'DimensionLinkType', DimensionLinkType)


# Complex type {http://www.stibosystems.com/step}DimensionPointType with content type ELEMENT_ONLY
class DimensionPointType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represent a dimension point. The list of DimensionPointLink is links to its parent dimension points.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DimensionPointType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2227, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_DimensionPointType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2234, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_DimensionPointType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2235, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionPointLink uses Python identifier DimensionPointLink
    __DimensionPointLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink'), 'DimensionPointLink', '__httpwww_stibosystems_comstep_DimensionPointType_httpwww_stibosystems_comstepDimensionPointLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2236, 12), )

    
    DimensionPointLink = property(__DimensionPointLink.value, __DimensionPointLink.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DimensionPointType_ID', _module_typeBindings.StepQualifierID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2238, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2238, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute GDSNLanguageID uses Python identifier GDSNLanguageID
    __GDSNLanguageID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'GDSNLanguageID'), 'GDSNLanguageID', '__httpwww_stibosystems_comstep_DimensionPointType_GDSNLanguageID', pyxb.binding.datatypes.string)
    __GDSNLanguageID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2245, 8)
    __GDSNLanguageID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2245, 8)
    
    GDSNLanguageID = property(__GDSNLanguageID.value, __GDSNLanguageID.set, None, '\n                    GDSN language ID corresponding to this dimension point.\n                ')

    
    # Attribute DictionaryID uses Python identifier DictionaryID
    __DictionaryID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DictionaryID'), 'DictionaryID', '__httpwww_stibosystems_comstep_DimensionPointType_DictionaryID', pyxb.binding.datatypes.string)
    __DictionaryID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2252, 8)
    __DictionaryID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2252, 8)
    
    DictionaryID = property(__DictionaryID.value, __DictionaryID.set, None, '\n                    the ID for the dictionary to use for this language.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_DimensionPointType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2259, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2259, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __DimensionPointLink.name() : __DimensionPointLink
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __GDSNLanguageID.name() : __GDSNLanguageID,
        __DictionaryID.name() : __DictionaryID,
        __Selected.name() : __Selected
    })
_module_typeBindings.DimensionPointType = DimensionPointType
Namespace.addCategoryObject('typeBinding', 'DimensionPointType', DimensionPointType)


# Complex type {http://www.stibosystems.com/step}DimensionPointLinkType with content type EMPTY
class DimensionPointLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links to a dimension point.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2263, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute DimensionPointID uses Python identifier DimensionPointID
    __DimensionPointID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DimensionPointID'), 'DimensionPointID', '__httpwww_stibosystems_comstep_DimensionPointLinkType_DimensionPointID', _module_typeBindings.StepQualifierID, required=True)
    __DimensionPointID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2269, 8)
    __DimensionPointID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2269, 8)
    
    DimensionPointID = property(__DimensionPointID.value, __DimensionPointID.set, None, '\n                    The ID of the dimension point to link to.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __DimensionPointID.name() : __DimensionPointID
    })
_module_typeBindings.DimensionPointLinkType = DimensionPointLinkType
Namespace.addCategoryObject('typeBinding', 'DimensionPointLinkType', DimensionPointLinkType)


# Complex type {http://www.stibosystems.com/step}EventQueueType with content type ELEMENT_ONLY
class EventQueueType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EventQueueType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EventQueueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2364, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_EventQueueType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2367, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_EventQueueType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2368, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_EventQueueType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2369, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute DaysRetained uses Python identifier DaysRetained
    __DaysRetained = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DaysRetained'), 'DaysRetained', '__httpwww_stibosystems_comstep_EventQueueType_DaysRetained', pyxb.binding.datatypes.string)
    __DaysRetained._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2371, 8)
    __DaysRetained._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2371, 8)
    
    DaysRetained = property(__DaysRetained.value, __DaysRetained.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_EventQueueType_ID', _module_typeBindings.StepEventQueueID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2372, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2372, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute QueueStatus uses Python identifier QueueStatus
    __QueueStatus = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QueueStatus'), 'QueueStatus', '__httpwww_stibosystems_comstep_EventQueueType_QueueStatus', _module_typeBindings.STD_ANON_7, unicode_default='Read')
    __QueueStatus._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2373, 8)
    __QueueStatus._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2373, 8)
    
    QueueStatus = property(__QueueStatus.value, __QueueStatus.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_EventQueueType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2381, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2381, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __DaysRetained.name() : __DaysRetained,
        __ID.name() : __ID,
        __QueueStatus.name() : __QueueStatus,
        __Selected.name() : __Selected
    })
_module_typeBindings.EventQueueType = EventQueueType
Namespace.addCategoryObject('typeBinding', 'EventQueueType', EventQueueType)


# Complex type {http://www.stibosystems.com/step}KeyValueType with content type MIXED
class KeyValueType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}KeyValueType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'KeyValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2506, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute KeyID uses Python identifier KeyID
    __KeyID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'KeyID'), 'KeyID', '__httpwww_stibosystems_comstep_KeyValueType_KeyID', _module_typeBindings.StepKeyID, required=True)
    __KeyID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2507, 8)
    __KeyID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2507, 8)
    
    KeyID = property(__KeyID.value, __KeyID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __KeyID.name() : __KeyID
    })
_module_typeBindings.KeyValueType = KeyValueType
Namespace.addCategoryObject('typeBinding', 'KeyValueType', KeyValueType)


# Complex type {http://www.stibosystems.com/step}ParentKeyValueType with content type MIXED
class ParentKeyValueType (pyxb.binding.basis.complexTypeDefinition):
    """
                ParentKeyValue tags are used to reference parent objects by keys. If both ParentID attribute and ParentKeyValue tag are used, they must point to the same node.
                Note: In import, this tag may only be here once per node, and referenced parents must be before the child object in the xml.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2509, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute KeyID uses Python identifier KeyID
    __KeyID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'KeyID'), 'KeyID', '__httpwww_stibosystems_comstep_ParentKeyValueType_KeyID', _module_typeBindings.StepKeyID, required=True)
    __KeyID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2516, 8)
    __KeyID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2516, 8)
    
    KeyID = property(__KeyID.value, __KeyID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __KeyID.name() : __KeyID
    })
_module_typeBindings.ParentKeyValueType = ParentKeyValueType
Namespace.addCategoryObject('typeBinding', 'ParentKeyValueType', ParentKeyValueType)


# Complex type {http://www.stibosystems.com/step}KeyType with content type ELEMENT_ONLY
class KeyType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}KeyType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'KeyType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2519, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_KeyType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2521, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}KeyFormula uses Python identifier KeyFormula
    __KeyFormula = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyFormula'), 'KeyFormula', '__httpwww_stibosystems_comstep_KeyType_httpwww_stibosystems_comstepKeyFormula', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2522, 12), )

    
    KeyFormula = property(__KeyFormula.value, __KeyFormula.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_KeyType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2523, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_KeyType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2524, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_KeyType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2525, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_KeyType_ID', _module_typeBindings.StepKeyID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2527, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2527, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute State uses Python identifier State
    __State = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'State'), 'State', '__httpwww_stibosystems_comstep_KeyType_State', _module_typeBindings.STD_ANON_8, required=True)
    __State._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2528, 8)
    __State._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2528, 8)
    
    State = property(__State.value, __State.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __KeyFormula.name() : __KeyFormula,
        __MetaData.name() : __MetaData,
        __UserTypeLink.name() : __UserTypeLink,
        __AttributeLink.name() : __AttributeLink
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __State.name() : __State
    })
_module_typeBindings.KeyType = KeyType
Namespace.addCategoryObject('typeBinding', 'KeyType', KeyType)


# Complex type {http://www.stibosystems.com/step}ListOfValuesGroupType with content type ELEMENT_ONLY
class ListOfValuesGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An LOV group holding a number of LOVs and LOV groups.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2583, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2590, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2591, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2592, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ListOfValuesGroup uses Python identifier ListOfValuesGroup
    __ListOfValuesGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroup'), 'ListOfValuesGroup', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_httpwww_stibosystems_comstepListOfValuesGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2593, 12), )

    
    ListOfValuesGroup = property(__ListOfValuesGroup.value, __ListOfValuesGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_ID', _module_typeBindings.StepLOVID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2595, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2595, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of the LOV group object. Not required during import, in which case an auto ID generation must be set up for object type.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2602, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2602, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent LOV group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ListOfValuesGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2609, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2609, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __ListOfValuesGroup.name() : __ListOfValuesGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.ListOfValuesGroupType = ListOfValuesGroupType
Namespace.addCategoryObject('typeBinding', 'ListOfValuesGroupType', ListOfValuesGroupType)


# Complex type {http://www.stibosystems.com/step}ListOfValueType with content type ELEMENT_ONLY
class ListOfValueType (pyxb.binding.basis.complexTypeDefinition):
    """
                Represents a LOV. Values in this LOV have the dimension dependencies described by the dimension links
                and must conform to the validation rules described in Validation. The list of values is described by the
                nested Value and/or ValueGroup elements.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ListOfValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2623, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2632, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Validation uses Python identifier Validation
    __Validation = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Validation'), 'Validation', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepValidation', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2633, 12), )

    
    Validation = property(__Validation.value, __Validation.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2634, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2635, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2636, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Value uses Python identifier Value
    __Value = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Value'), 'Value', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2638, 16), )

    
    Value = property(__Value.value, __Value.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueGroup uses Python identifier ValueGroup
    __ValueGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), 'ValueGroup', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepValueGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2639, 16), )

    
    ValueGroup = property(__ValueGroup.value, __ValueGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteValue uses Python identifier DeleteValue
    __DeleteValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteValue'), 'DeleteValue', '__httpwww_stibosystems_comstep_ListOfValueType_httpwww_stibosystems_comstepDeleteValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2641, 12), )

    
    DeleteValue = property(__DeleteValue.value, __DeleteValue.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ListOfValueType_ID', _module_typeBindings.StepLOVID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2643, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2643, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    ID of the LOV object. Not required during import, in which case an auto ID generation must be set up for object type.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_ListOfValueType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2650, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2650, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent LOV group. If not supplied and tag not already exists it will be created on top level during import.\n                ')

    
    # Attribute AllowUserValueAddition uses Python identifier AllowUserValueAddition
    __AllowUserValueAddition = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AllowUserValueAddition'), 'AllowUserValueAddition', '__httpwww_stibosystems_comstep_ListOfValueType_AllowUserValueAddition', _module_typeBindings.TrueFalseType, unicode_default='false')
    __AllowUserValueAddition._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2657, 8)
    __AllowUserValueAddition._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2657, 8)
    
    AllowUserValueAddition = property(__AllowUserValueAddition.value, __AllowUserValueAddition.set, None, '\n                    Whether or not users are allowed to add values to LOV while\n                    maintaining product attribute values.\n                ')

    
    # Attribute UseValueID uses Python identifier UseValueID
    __UseValueID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UseValueID'), 'UseValueID', '__httpwww_stibosystems_comstep_ListOfValueType_UseValueID', _module_typeBindings.TrueFalseType, unicode_default='false')
    __UseValueID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2665, 8)
    __UseValueID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2665, 8)
    
    UseValueID = property(__UseValueID.value, __UseValueID.set, None, '\n                    whether external IDs are in use for values in this LOV.\n                ')

    
    # Attribute IDPattern uses Python identifier IDPattern
    __IDPattern = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IDPattern'), 'IDPattern', '__httpwww_stibosystems_comstep_ListOfValueType_IDPattern', pyxb.binding.datatypes.string)
    __IDPattern._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2672, 8)
    __IDPattern._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2672, 8)
    
    IDPattern = property(__IDPattern.value, __IDPattern.set, None, '\n                    The pattern used for this LOVs value-IDs\n\t                Do not confuse with general AutoID-pattern setup for object-types of objects.\n                ')

    
    # Attribute ReplaceListOfValuesValues uses Python identifier ReplaceListOfValuesValues
    __ReplaceListOfValuesValues = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReplaceListOfValuesValues'), 'ReplaceListOfValuesValues', '__httpwww_stibosystems_comstep_ListOfValueType_ReplaceListOfValuesValues', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ReplaceListOfValuesValues._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2682, 8)
    __ReplaceListOfValuesValues._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2682, 8)
    
    ReplaceListOfValuesValues = property(__ReplaceListOfValuesValues.value, __ReplaceListOfValuesValues.set, None, '\n                    Determines whether the contained list of values should replace all the existing contents of this LOV,\n                    or whether a value-element should add missing values and delete-value-elements remove existing values incrementally.\n                    When replacing, missing values in this LOV will only be deleted if they have no present usage (and events will/need not be generated).\n                    Relevant only for import; this is not a feature of the LOV that will be persisted or exported.\n                ')

    
    # Attribute DefaultUnitID uses Python identifier DefaultUnitID
    __DefaultUnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultUnitID'), 'DefaultUnitID', '__httpwww_stibosystems_comstep_ListOfValueType_DefaultUnitID', _module_typeBindings.StepID)
    __DefaultUnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2693, 8)
    __DefaultUnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2693, 8)
    
    DefaultUnitID = property(__DefaultUnitID.value, __DefaultUnitID.set, None, '\n                    The ID of the default unit for values of this LOV.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ListOfValueType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2700, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2700, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to\n                    references pointing to it or not.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ListOfValueType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2708, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2708, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ListOfValueType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2709, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2709, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __Validation.name() : __Validation,
        __DimensionLink.name() : __DimensionLink,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __Value.name() : __Value,
        __ValueGroup.name() : __ValueGroup,
        __DeleteValue.name() : __DeleteValue
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __AllowUserValueAddition.name() : __AllowUserValueAddition,
        __UseValueID.name() : __UseValueID,
        __IDPattern.name() : __IDPattern,
        __ReplaceListOfValuesValues.name() : __ReplaceListOfValuesValues,
        __DefaultUnitID.name() : __DefaultUnitID,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.ListOfValueType = ListOfValueType
Namespace.addCategoryObject('typeBinding', 'ListOfValueType', ListOfValueType)


# Complex type {http://www.stibosystems.com/step}ListOfValueLinkType with content type EMPTY
class ListOfValueLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links to a LOV.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ListOfValueLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2714, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ListOfValueID uses Python identifier ListOfValueID
    __ListOfValueID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ListOfValueID'), 'ListOfValueID', '__httpwww_stibosystems_comstep_ListOfValueLinkType_ListOfValueID', _module_typeBindings.StepLOVID, required=True)
    __ListOfValueID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2720, 8)
    __ListOfValueID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2720, 8)
    
    ListOfValueID = property(__ListOfValueID.value, __ListOfValueID.set, None, '\n                    The ID of the LOV to link to.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ListOfValueID.name() : __ListOfValueID
    })
_module_typeBindings.ListOfValueLinkType = ListOfValueLinkType
Namespace.addCategoryObject('typeBinding', 'ListOfValueLinkType', ListOfValueLinkType)


# Complex type {http://www.stibosystems.com/step}MultiValueType with content type ELEMENT_ONLY
class MultiValueType (pyxb.binding.basis.complexTypeDefinition):
    """
                A multi valued attribute value is represented with this tag. The attribute is in this element, and all
                the values in the multi value are represented as sub values without an attribute identification
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MultiValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2771, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Value uses Python identifier Value
    __Value = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Value'), 'Value', '__httpwww_stibosystems_comstep_MultiValueType_httpwww_stibosystems_comstepValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2781, 16), )

    
    Value = property(__Value.value, __Value.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValueGroup uses Python identifier ValueGroup
    __ValueGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), 'ValueGroup', '__httpwww_stibosystems_comstep_MultiValueType_httpwww_stibosystems_comstepValueGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2782, 16), )

    
    ValueGroup = property(__ValueGroup.value, __ValueGroup.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_MultiValueType_Inherited', pyxb.binding.datatypes.string)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2785, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2785, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_MultiValueType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2786, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2786, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_MultiValueType_AttributeID', _module_typeBindings.StepAttributeID, required=True)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2788, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2788, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, '\n                    The ID of the attribute for all the sub values\n                ')

    _ElementMap.update({
        __Value.name() : __Value,
        __ValueGroup.name() : __ValueGroup
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __Changed.name() : __Changed,
        __AttributeID.name() : __AttributeID
    })
_module_typeBindings.MultiValueType = MultiValueType
Namespace.addCategoryObject('typeBinding', 'MultiValueType', MultiValueType)


# Complex type {http://www.stibosystems.com/step}NameType with content type MIXED
class NameType (pyxb.binding.basis.complexTypeDefinition):
    """
                The name of its parent element
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'NameType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2798, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_NameType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2805, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2805, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_NameType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2807, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2807, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.NameType = NameType
Namespace.addCategoryObject('typeBinding', 'NameType', NameType)


# Complex type {http://www.stibosystems.com/step}FrameType with content type ELEMENT_ONLY
class FrameType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}FrameType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'FrameType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2898, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ProductElement uses Python identifier ProductElement
    __ProductElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductElement'), 'ProductElement', '__httpwww_stibosystems_comstep_FrameType_httpwww_stibosystems_comstepProductElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2900, 11), )

    
    ProductElement = property(__ProductElement.value, __ProductElement.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetElement uses Python identifier AssetElement
    __AssetElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetElement'), 'AssetElement', '__httpwww_stibosystems_comstep_FrameType_httpwww_stibosystems_comstepAssetElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2901, 11), )

    
    AssetElement = property(__AssetElement.value, __AssetElement.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TextElement uses Python identifier TextElement
    __TextElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TextElement'), 'TextElement', '__httpwww_stibosystems_comstep_FrameType_httpwww_stibosystems_comstepTextElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2902, 11), )

    
    TextElement = property(__TextElement.value, __TextElement.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationElement uses Python identifier ClassificationElement
    __ClassificationElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationElement'), 'ClassificationElement', '__httpwww_stibosystems_comstep_FrameType_httpwww_stibosystems_comstepClassificationElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2903, 11), )

    
    ClassificationElement = property(__ClassificationElement.value, __ClassificationElement.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_FrameType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2905, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2905, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute X uses Python identifier X
    __X = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'X'), 'X', '__httpwww_stibosystems_comstep_FrameType_X', _module_typeBindings.TwoDecimalValueType)
    __X._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2906, 8)
    __X._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2906, 8)
    
    X = property(__X.value, __X.set, None, None)

    
    # Attribute Y uses Python identifier Y
    __Y = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Y'), 'Y', '__httpwww_stibosystems_comstep_FrameType_Y', _module_typeBindings.TwoDecimalValueType)
    __Y._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2907, 8)
    __Y._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2907, 8)
    
    Y = property(__Y.value, __Y.set, None, None)

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_FrameType_Width', _module_typeBindings.TwoDecimalValueType)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2908, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2908, 8)
    
    Width = property(__Width.value, __Width.set, None, None)

    
    # Attribute Height uses Python identifier Height
    __Height = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Height'), 'Height', '__httpwww_stibosystems_comstep_FrameType_Height', _module_typeBindings.TwoDecimalValueType)
    __Height._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2909, 8)
    __Height._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2909, 8)
    
    Height = property(__Height.value, __Height.set, None, None)

    
    # Attribute ZOrder uses Python identifier ZOrder
    __ZOrder = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ZOrder'), 'ZOrder', '__httpwww_stibosystems_comstep_FrameType_ZOrder', pyxb.binding.datatypes.integer)
    __ZOrder._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2910, 8)
    __ZOrder._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2910, 8)
    
    ZOrder = property(__ZOrder.value, __ZOrder.set, None, None)

    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_FrameType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2911, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2911, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, None)

    _ElementMap.update({
        __ProductElement.name() : __ProductElement,
        __AssetElement.name() : __AssetElement,
        __TextElement.name() : __TextElement,
        __ClassificationElement.name() : __ClassificationElement
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __X.name() : __X,
        __Y.name() : __Y,
        __Width.name() : __Width,
        __Height.name() : __Height,
        __ZOrder.name() : __ZOrder,
        __UnitID.name() : __UnitID
    })
_module_typeBindings.FrameType = FrameType
Namespace.addCategoryObject('typeBinding', 'FrameType', FrameType)


# Complex type {http://www.stibosystems.com/step}NoteFrameType with content type ELEMENT_ONLY
class NoteFrameType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}NoteFrameType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'NoteFrameType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2914, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}NoteRecord uses Python identifier NoteRecord
    __NoteRecord = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'NoteRecord'), 'NoteRecord', '__httpwww_stibosystems_comstep_NoteFrameType_httpwww_stibosystems_comstepNoteRecord', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2916, 12), )

    
    NoteRecord = property(__NoteRecord.value, __NoteRecord.set, None, None)

    
    # Attribute Status uses Python identifier Status
    __Status = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Status'), 'Status', '__httpwww_stibosystems_comstep_NoteFrameType_Status', pyxb.binding.datatypes.string, required=True)
    __Status._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2918, 8)
    __Status._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2918, 8)
    
    Status = property(__Status.value, __Status.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_NoteFrameType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2919, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2919, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute X uses Python identifier X
    __X = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'X'), 'X', '__httpwww_stibosystems_comstep_NoteFrameType_X', _module_typeBindings.TwoDecimalValueType)
    __X._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2920, 8)
    __X._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2920, 8)
    
    X = property(__X.value, __X.set, None, None)

    
    # Attribute Y uses Python identifier Y
    __Y = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Y'), 'Y', '__httpwww_stibosystems_comstep_NoteFrameType_Y', _module_typeBindings.TwoDecimalValueType)
    __Y._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2921, 8)
    __Y._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2921, 8)
    
    Y = property(__Y.value, __Y.set, None, None)

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_NoteFrameType_Width', _module_typeBindings.TwoDecimalValueType)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2922, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2922, 8)
    
    Width = property(__Width.value, __Width.set, None, None)

    
    # Attribute Height uses Python identifier Height
    __Height = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Height'), 'Height', '__httpwww_stibosystems_comstep_NoteFrameType_Height', _module_typeBindings.TwoDecimalValueType)
    __Height._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2923, 8)
    __Height._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2923, 8)
    
    Height = property(__Height.value, __Height.set, None, None)

    
    # Attribute ZOrder uses Python identifier ZOrder
    __ZOrder = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ZOrder'), 'ZOrder', '__httpwww_stibosystems_comstep_NoteFrameType_ZOrder', pyxb.binding.datatypes.double)
    __ZOrder._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2924, 8)
    __ZOrder._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2924, 8)
    
    ZOrder = property(__ZOrder.value, __ZOrder.set, None, None)

    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_NoteFrameType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2925, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2925, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, None)

    _ElementMap.update({
        __NoteRecord.name() : __NoteRecord
    })
    _AttributeMap.update({
        __Status.name() : __Status,
        __ID.name() : __ID,
        __X.name() : __X,
        __Y.name() : __Y,
        __Width.name() : __Width,
        __Height.name() : __Height,
        __ZOrder.name() : __ZOrder,
        __UnitID.name() : __UnitID
    })
_module_typeBindings.NoteFrameType = NoteFrameType
Namespace.addCategoryObject('typeBinding', 'NoteFrameType', NoteFrameType)


# Complex type {http://www.stibosystems.com/step}GalleyFrameType with content type ELEMENT_ONLY
class GalleyFrameType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}GalleyFrameType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GalleyFrameType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2928, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}ProductElement uses Python identifier ProductElement
    __ProductElement = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductElement'), 'ProductElement', '__httpwww_stibosystems_comstep_GalleyFrameType_httpwww_stibosystems_comstepProductElement', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2930, 12), )

    
    ProductElement = property(__ProductElement.value, __ProductElement.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_GalleyFrameType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2932, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2932, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute TemplateID uses Python identifier TemplateID
    __TemplateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TemplateID'), 'TemplateID', '__httpwww_stibosystems_comstep_GalleyFrameType_TemplateID', _module_typeBindings.StepID)
    __TemplateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2933, 8)
    __TemplateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2933, 8)
    
    TemplateID = property(__TemplateID.value, __TemplateID.set, None, None)

    
    # Attribute X uses Python identifier X
    __X = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'X'), 'X', '__httpwww_stibosystems_comstep_GalleyFrameType_X', _module_typeBindings.TwoDecimalValueType)
    __X._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2934, 8)
    __X._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2934, 8)
    
    X = property(__X.value, __X.set, None, None)

    
    # Attribute Y uses Python identifier Y
    __Y = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Y'), 'Y', '__httpwww_stibosystems_comstep_GalleyFrameType_Y', _module_typeBindings.TwoDecimalValueType)
    __Y._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2935, 8)
    __Y._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2935, 8)
    
    Y = property(__Y.value, __Y.set, None, None)

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_GalleyFrameType_Width', _module_typeBindings.TwoDecimalValueType)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2936, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2936, 8)
    
    Width = property(__Width.value, __Width.set, None, None)

    
    # Attribute Height uses Python identifier Height
    __Height = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Height'), 'Height', '__httpwww_stibosystems_comstep_GalleyFrameType_Height', _module_typeBindings.TwoDecimalValueType)
    __Height._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2937, 8)
    __Height._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2937, 8)
    
    Height = property(__Height.value, __Height.set, None, None)

    
    # Attribute ZOrder uses Python identifier ZOrder
    __ZOrder = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ZOrder'), 'ZOrder', '__httpwww_stibosystems_comstep_GalleyFrameType_ZOrder', pyxb.binding.datatypes.integer)
    __ZOrder._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2938, 8)
    __ZOrder._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2938, 8)
    
    ZOrder = property(__ZOrder.value, __ZOrder.set, None, None)

    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_GalleyFrameType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2939, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2939, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, None)

    _ElementMap.update({
        __ProductElement.name() : __ProductElement
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __TemplateID.name() : __TemplateID,
        __X.name() : __X,
        __Y.name() : __Y,
        __Width.name() : __Width,
        __Height.name() : __Height,
        __ZOrder.name() : __ZOrder,
        __UnitID.name() : __UnitID
    })
_module_typeBindings.GalleyFrameType = GalleyFrameType
Namespace.addCategoryObject('typeBinding', 'GalleyFrameType', GalleyFrameType)


# Complex type {http://www.stibosystems.com/step}PrivilegeRuleType with content type EMPTY
class PrivilegeRuleType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PrivilegeRuleType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PrivilegeRuleType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2989, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ActionSetID uses Python identifier ActionSetID
    __ActionSetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ActionSetID'), 'ActionSetID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_ActionSetID', _module_typeBindings.StepActionSetID, required=True)
    __ActionSetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2990, 8)
    __ActionSetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2990, 8)
    
    ActionSetID = property(__ActionSetID.value, __ActionSetID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2991, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2991, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    
    # Attribute SetupGroupID uses Python identifier SetupGroupID
    __SetupGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SetupGroupID'), 'SetupGroupID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_SetupGroupID', _module_typeBindings.StepSetupGroupID)
    __SetupGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2992, 8)
    __SetupGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2992, 8)
    
    SetupGroupID = property(__SetupGroupID.value, __SetupGroupID.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_ClassificationID', _module_typeBindings.StepID)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2993, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2993, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    
    # Attribute AttributeGroupID uses Python identifier AttributeGroupID
    __AttributeGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeGroupID'), 'AttributeGroupID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_AttributeGroupID', _module_typeBindings.StepAttributeID)
    __AttributeGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2994, 8)
    __AttributeGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2994, 8)
    
    AttributeGroupID = property(__AttributeGroupID.value, __AttributeGroupID.set, None, None)

    
    # Attribute TermsListID uses Python identifier TermsListID
    __TermsListID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TermsListID'), 'TermsListID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_TermsListID', _module_typeBindings.StepID)
    __TermsListID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2995, 8)
    __TermsListID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2995, 8)
    
    TermsListID = property(__TermsListID.value, __TermsListID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2996, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2996, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute VersionID uses Python identifier VersionID
    __VersionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VersionID'), 'VersionID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_VersionID', _module_typeBindings.StepID)
    __VersionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2997, 8)
    __VersionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2997, 8)
    
    VersionID = property(__VersionID.value, __VersionID.set, None, None)

    
    # Attribute TradingTermsID uses Python identifier TradingTermsID
    __TradingTermsID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TradingTermsID'), 'TradingTermsID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_TradingTermsID', _module_typeBindings.StepID)
    __TradingTermsID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2998, 8)
    __TradingTermsID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2998, 8)
    
    TradingTermsID = property(__TradingTermsID.value, __TradingTermsID.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_ProductID', _module_typeBindings.StepID)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2999, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2999, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_AssetID', _module_typeBindings.StepID)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3000, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3000, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3001, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3001, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, None)

    
    # Attribute PublicationSectionID uses Python identifier PublicationSectionID
    __PublicationSectionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PublicationSectionID'), 'PublicationSectionID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_PublicationSectionID', _module_typeBindings.StepID)
    __PublicationSectionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3002, 8)
    __PublicationSectionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3002, 8)
    
    PublicationSectionID = property(__PublicationSectionID.value, __PublicationSectionID.set, None, None)

    
    # Attribute PublicationID uses Python identifier PublicationID
    __PublicationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PublicationID'), 'PublicationID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_PublicationID', _module_typeBindings.StepID)
    __PublicationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3003, 8)
    __PublicationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3003, 8)
    
    PublicationID = property(__PublicationID.value, __PublicationID.set, None, None)

    
    # Attribute PublicationGroupID uses Python identifier PublicationGroupID
    __PublicationGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PublicationGroupID'), 'PublicationGroupID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_PublicationGroupID', _module_typeBindings.StepID)
    __PublicationGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3004, 8)
    __PublicationGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3004, 8)
    
    PublicationGroupID = property(__PublicationGroupID.value, __PublicationGroupID.set, None, None)

    
    # Attribute CollectionID uses Python identifier CollectionID
    __CollectionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CollectionID'), 'CollectionID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_CollectionID', _module_typeBindings.StepID)
    __CollectionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3005, 8)
    __CollectionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3005, 8)
    
    CollectionID = property(__CollectionID.value, __CollectionID.set, None, None)

    
    # Attribute CollectionGroupID uses Python identifier CollectionGroupID
    __CollectionGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CollectionGroupID'), 'CollectionGroupID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_CollectionGroupID', _module_typeBindings.StepID)
    __CollectionGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3006, 8)
    __CollectionGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3006, 8)
    
    CollectionGroupID = property(__CollectionGroupID.value, __CollectionGroupID.set, None, None)

    
    # Attribute GroupID uses Python identifier GroupID
    __GroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'GroupID'), 'GroupID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_GroupID', _module_typeBindings.StepUserGroupID)
    __GroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3007, 8)
    __GroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3007, 8)
    
    GroupID = property(__GroupID.value, __GroupID.set, None, None)

    
    # Attribute EntityID uses Python identifier EntityID
    __EntityID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EntityID'), 'EntityID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_EntityID', _module_typeBindings.StepID)
    __EntityID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3008, 8)
    __EntityID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3008, 8)
    
    EntityID = property(__EntityID.value, __EntityID.set, None, None)

    
    # Attribute STEPWorkflowID uses Python identifier STEPWorkflowID
    __STEPWorkflowID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'STEPWorkflowID'), 'STEPWorkflowID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_STEPWorkflowID', _module_typeBindings.StepWorkflowID)
    __STEPWorkflowID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3009, 8)
    __STEPWorkflowID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3009, 8)
    
    STEPWorkflowID = property(__STEPWorkflowID.value, __STEPWorkflowID.set, None, None)

    
    # Attribute STEPWorkflowStateID uses Python identifier STEPWorkflowStateID
    __STEPWorkflowStateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'STEPWorkflowStateID'), 'STEPWorkflowStateID', '__httpwww_stibosystems_comstep_PrivilegeRuleType_STEPWorkflowStateID', pyxb.binding.datatypes.string)
    __STEPWorkflowStateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3010, 8)
    __STEPWorkflowStateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3010, 8)
    
    STEPWorkflowStateID = property(__STEPWorkflowStateID.value, __STEPWorkflowStateID.set, None, None)

    
    # Attribute ObjectCreation uses Python identifier ObjectCreation
    __ObjectCreation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ObjectCreation'), 'ObjectCreation', '__httpwww_stibosystems_comstep_PrivilegeRuleType_ObjectCreation', pyxb.binding.datatypes.boolean, unicode_default='true')
    __ObjectCreation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3011, 8)
    __ObjectCreation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3011, 8)
    
    ObjectCreation = property(__ObjectCreation.value, __ObjectCreation.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ActionSetID.name() : __ActionSetID,
        __AttributeID.name() : __AttributeID,
        __SetupGroupID.name() : __SetupGroupID,
        __ClassificationID.name() : __ClassificationID,
        __AttributeGroupID.name() : __AttributeGroupID,
        __TermsListID.name() : __TermsListID,
        __QualifierID.name() : __QualifierID,
        __VersionID.name() : __VersionID,
        __TradingTermsID.name() : __TradingTermsID,
        __ProductID.name() : __ProductID,
        __AssetID.name() : __AssetID,
        __UserTypeID.name() : __UserTypeID,
        __PublicationSectionID.name() : __PublicationSectionID,
        __PublicationID.name() : __PublicationID,
        __PublicationGroupID.name() : __PublicationGroupID,
        __CollectionID.name() : __CollectionID,
        __CollectionGroupID.name() : __CollectionGroupID,
        __GroupID.name() : __GroupID,
        __EntityID.name() : __EntityID,
        __STEPWorkflowID.name() : __STEPWorkflowID,
        __STEPWorkflowStateID.name() : __STEPWorkflowStateID,
        __ObjectCreation.name() : __ObjectCreation
    })
_module_typeBindings.PrivilegeRuleType = PrivilegeRuleType
Namespace.addCategoryObject('typeBinding', 'PrivilegeRuleType', PrivilegeRuleType)


# Complex type {http://www.stibosystems.com/step}ProductType with content type ELEMENT_ONLY
class ProductType (pyxb.binding.basis.complexTypeDefinition):
    """
                The Product element lists its names, the linked attributes on this level, classification links, sub
                products, cross-references to other products, asset references and product attribute values. This
                recursive definition of products spans the product hierarchy
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3014, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3024, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ParentKeyValue uses Python identifier ParentKeyValue
    __ParentKeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue'), 'ParentKeyValue', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepParentKeyValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3025, 12), )

    
    ParentKeyValue = property(__ParentKeyValue.value, __ParentKeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3026, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3027, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DataContainerTypeLink uses Python identifier DataContainerTypeLink
    __DataContainerTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLink'), 'DataContainerTypeLink', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDataContainerTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3028, 12), )

    
    DataContainerTypeLink = property(__DataContainerTypeLink.value, __DataContainerTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedClassificationReference uses Python identifier SuppressedClassificationReference
    __SuppressedClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference'), 'SuppressedClassificationReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSuppressedClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3029, 12), )

    
    SuppressedClassificationReference = property(__SuppressedClassificationReference.value, __SuppressedClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationReference uses Python identifier ClassificationReference
    __ClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), 'ClassificationReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3031, 12), )

    
    ClassificationReference = property(__ClassificationReference.value, __ClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}STEPWorkflowStateBind uses Python identifier STEPWorkflowStateBind
    __STEPWorkflowStateBind = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflowStateBind'), 'STEPWorkflowStateBind', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSTEPWorkflowStateBind', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3033, 12), )

    
    STEPWorkflowStateBind = property(__STEPWorkflowStateBind.value, __STEPWorkflowStateBind.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Product uses Python identifier Product
    __Product = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Product'), 'Product', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3035, 16), )

    
    Product = property(__Product.value, __Product.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SequenceProduct uses Python identifier SequenceProduct
    __SequenceProduct = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SequenceProduct'), 'SequenceProduct', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSequenceProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3036, 16), )

    
    SequenceProduct = property(__SequenceProduct.value, __SequenceProduct.set, None, '\n                            Product sequences are used to show the sequence of child products under manually sorted parent products.\n                            The product sequences are only exported, when the child products them selves are not exported.\n                            By default the sequences are not exported. And there is no option to turn it on using the export wiard.\n                            In order for them to be exported, you must put it explicitly in the export recorder file:\n                            \n                        ')

    
    # Element {http://www.stibosystems.com/step}SuppressedProductCrossReference uses Python identifier SuppressedProductCrossReference
    __SuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), 'SuppressedProductCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3047, 16), )

    
    SuppressedProductCrossReference = property(__SuppressedProductCrossReference.value, __SuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductCrossReference uses Python identifier ProductCrossReference
    __ProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), 'ProductCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3048, 16), )

    
    ProductCrossReference = property(__ProductCrossReference.value, __ProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductReference uses Python identifier ProductReference
    __ProductReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductReference'), 'ProductReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepProductReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3049, 16), )

    
    ProductReference = property(__ProductReference.value, __ProductReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedClassificationCrossReference uses Python identifier SuppressedClassificationCrossReference
    __SuppressedClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference'), 'SuppressedClassificationCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSuppressedClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3050, 16), )

    
    SuppressedClassificationCrossReference = property(__SuppressedClassificationCrossReference.value, __SuppressedClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationCrossReference uses Python identifier ClassificationCrossReference
    __ClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference'), 'ClassificationCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3051, 16), )

    
    ClassificationCrossReference = property(__ClassificationCrossReference.value, __ClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedEntityCrossReference uses Python identifier SuppressedEntityCrossReference
    __SuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), 'SuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3052, 16), )

    
    SuppressedEntityCrossReference = property(__SuppressedEntityCrossReference.value, __SuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityCrossReference uses Python identifier EntityCrossReference
    __EntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), 'EntityCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3053, 16), )

    
    EntityCrossReference = property(__EntityCrossReference.value, __EntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedAssetCrossReference uses Python identifier SuppressedAssetCrossReference
    __SuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), 'SuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3054, 16), )

    
    SuppressedAssetCrossReference = property(__SuppressedAssetCrossReference.value, __SuppressedAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetCrossReference uses Python identifier AssetCrossReference
    __AssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), 'AssetCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3055, 16), )

    
    AssetCrossReference = property(__AssetCrossReference.value, __AssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Values uses Python identifier Values
    __Values = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Values'), 'Values', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepValues', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3056, 16), )

    
    Values = property(__Values.value, __Values.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DataContainers uses Python identifier DataContainers
    __DataContainers = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainers'), 'DataContainers', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDataContainers', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3057, 16), )

    
    DataContainers = property(__DataContainers.value, __DataContainers.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CurrentTasks uses Python identifier CurrentTasks
    __CurrentTasks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), 'CurrentTasks', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepCurrentTasks', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3058, 16), )

    
    CurrentTasks = property(__CurrentTasks.value, __CurrentTasks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Terms uses Python identifier Terms
    __Terms = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Terms'), 'Terms', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepTerms', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3059, 16), )

    
    Terms = property(__Terms.value, __Terms.set, None, None)

    
    # Element {http://www.stibosystems.com/step}OverrideSubProduct uses Python identifier OverrideSubProduct
    __OverrideSubProduct = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'OverrideSubProduct'), 'OverrideSubProduct', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepOverrideSubProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3060, 16), )

    
    OverrideSubProduct = property(__OverrideSubProduct.value, __OverrideSubProduct.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PackagingReference uses Python identifier PackagingReference
    __PackagingReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PackagingReference'), 'PackagingReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepPackagingReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3061, 16), )

    
    PackagingReference = property(__PackagingReference.value, __PackagingReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Tables uses Python identifier Tables
    __Tables = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Tables'), 'Tables', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepTables', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3062, 16), )

    
    Tables = property(__Tables.value, __Tables.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteClassificationReference uses Python identifier DeleteClassificationReference
    __DeleteClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference'), 'DeleteClassificationReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3063, 16), )

    
    DeleteClassificationReference = property(__DeleteClassificationReference.value, __DeleteClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteProductCrossReference uses Python identifier DeleteProductCrossReference
    __DeleteProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference'), 'DeleteProductCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3064, 16), )

    
    DeleteProductCrossReference = property(__DeleteProductCrossReference.value, __DeleteProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAssetCrossReference uses Python identifier DeleteAssetCrossReference
    __DeleteAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference'), 'DeleteAssetCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3065, 16), )

    
    DeleteAssetCrossReference = property(__DeleteAssetCrossReference.value, __DeleteAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteClassificationCrossReference uses Python identifier DeleteClassificationCrossReference
    __DeleteClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReference'), 'DeleteClassificationCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3066, 16), )

    
    DeleteClassificationCrossReference = property(__DeleteClassificationCrossReference.value, __DeleteClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteEntityCrossReference uses Python identifier DeleteEntityCrossReference
    __DeleteEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), 'DeleteEntityCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3067, 16), )

    
    DeleteEntityCrossReference = property(__DeleteEntityCrossReference.value, __DeleteEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAttributeLink uses Python identifier DeleteAttributeLink
    __DeleteAttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLink'), 'DeleteAttributeLink', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3068, 16), )

    
    DeleteAttributeLink = property(__DeleteAttributeLink.value, __DeleteAttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteDataContainerTypeLink uses Python identifier DeleteDataContainerTypeLink
    __DeleteDataContainerTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLink'), 'DeleteDataContainerTypeLink', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteDataContainerTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3069, 16), )

    
    DeleteDataContainerTypeLink = property(__DeleteDataContainerTypeLink.value, __DeleteDataContainerTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedProductCrossReference uses Python identifier DeleteSuppressedProductCrossReference
    __DeleteSuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference'), 'DeleteSuppressedProductCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3070, 16), )

    
    DeleteSuppressedProductCrossReference = property(__DeleteSuppressedProductCrossReference.value, __DeleteSuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedClassificationCrossReference uses Python identifier DeleteSuppressedClassificationCrossReference
    __DeleteSuppressedClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference'), 'DeleteSuppressedClassificationCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteSuppressedClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3071, 16), )

    
    DeleteSuppressedClassificationCrossReference = property(__DeleteSuppressedClassificationCrossReference.value, __DeleteSuppressedClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedEntityCrossReference uses Python identifier DeleteSuppressedEntityCrossReference
    __DeleteSuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), 'DeleteSuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3072, 16), )

    
    DeleteSuppressedEntityCrossReference = property(__DeleteSuppressedEntityCrossReference.value, __DeleteSuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedAssetCrossReference uses Python identifier DeleteSuppressedAssetCrossReference
    __DeleteSuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference'), 'DeleteSuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3073, 16), )

    
    DeleteSuppressedAssetCrossReference = property(__DeleteSuppressedAssetCrossReference.value, __DeleteSuppressedAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedClassificationReference uses Python identifier DeleteSuppressedClassificationReference
    __DeleteSuppressedClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReference'), 'DeleteSuppressedClassificationReference', '__httpwww_stibosystems_comstep_ProductType_httpwww_stibosystems_comstepDeleteSuppressedClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3074, 16), )

    
    DeleteSuppressedClassificationReference = property(__DeleteSuppressedClassificationReference.value, __DeleteSuppressedClassificationReference.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ProductType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3077, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3077, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute SourcePos uses Python identifier SourcePos
    __SourcePos = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SourcePos'), 'SourcePos', '__httpwww_stibosystems_comstep_ProductType_SourcePos', pyxb.binding.datatypes.string)
    __SourcePos._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3079, 8)
    __SourcePos._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3079, 8)
    
    SourcePos = property(__SourcePos.value, __SourcePos.set, None, None)

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_ProductType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3080, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3080, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    \n                    WebPublisher specific attribute. Identifies whether the product in question is present on the\n                    website. Possible values: included, excluded.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_ProductType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3089, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3089, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    The parent product of this product. Only required if not nested inside\n                    another product element.\n                ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ProductType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3097, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3097, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import, in which\n                    case new object is created\n                ')

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ProductType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3105, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3105, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the\n                    current context is used.\n                ')

    
    # Attribute Republished uses Python identifier Republished
    __Republished = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Republished'), 'Republished', '__httpwww_stibosystems_comstep_ProductType_Republished', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Republished._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3113, 8)
    __Republished._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3113, 8)
    
    Republished = property(__Republished.value, __Republished.set, None, None)

    
    # Attribute OverridesProductID uses Python identifier OverridesProductID
    __OverridesProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'OverridesProductID'), 'OverridesProductID', '__httpwww_stibosystems_comstep_ProductType_OverridesProductID', _module_typeBindings.StepID)
    __OverridesProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3115, 8)
    __OverridesProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3115, 8)
    
    OverridesProductID = property(__OverridesProductID.value, __OverridesProductID.set, None, '\n                    If the product is a product override object (UserTypeID must point to a\n                    valid product override object type) then this attribute identifies the ID of\n                    the product to be overridden\n                ')

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_ProductType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3125, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3125, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, 'Identifies the object type of the object')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ProductType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3131, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3131, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ProductType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3132, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3132, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __ParentKeyValue.name() : __ParentKeyValue,
        __Name.name() : __Name,
        __AttributeLink.name() : __AttributeLink,
        __DataContainerTypeLink.name() : __DataContainerTypeLink,
        __SuppressedClassificationReference.name() : __SuppressedClassificationReference,
        __ClassificationReference.name() : __ClassificationReference,
        __STEPWorkflowStateBind.name() : __STEPWorkflowStateBind,
        __Product.name() : __Product,
        __SequenceProduct.name() : __SequenceProduct,
        __SuppressedProductCrossReference.name() : __SuppressedProductCrossReference,
        __ProductCrossReference.name() : __ProductCrossReference,
        __ProductReference.name() : __ProductReference,
        __SuppressedClassificationCrossReference.name() : __SuppressedClassificationCrossReference,
        __ClassificationCrossReference.name() : __ClassificationCrossReference,
        __SuppressedEntityCrossReference.name() : __SuppressedEntityCrossReference,
        __EntityCrossReference.name() : __EntityCrossReference,
        __SuppressedAssetCrossReference.name() : __SuppressedAssetCrossReference,
        __AssetCrossReference.name() : __AssetCrossReference,
        __Values.name() : __Values,
        __DataContainers.name() : __DataContainers,
        __CurrentTasks.name() : __CurrentTasks,
        __Terms.name() : __Terms,
        __OverrideSubProduct.name() : __OverrideSubProduct,
        __PackagingReference.name() : __PackagingReference,
        __Tables.name() : __Tables,
        __DeleteClassificationReference.name() : __DeleteClassificationReference,
        __DeleteProductCrossReference.name() : __DeleteProductCrossReference,
        __DeleteAssetCrossReference.name() : __DeleteAssetCrossReference,
        __DeleteClassificationCrossReference.name() : __DeleteClassificationCrossReference,
        __DeleteEntityCrossReference.name() : __DeleteEntityCrossReference,
        __DeleteAttributeLink.name() : __DeleteAttributeLink,
        __DeleteDataContainerTypeLink.name() : __DeleteDataContainerTypeLink,
        __DeleteSuppressedProductCrossReference.name() : __DeleteSuppressedProductCrossReference,
        __DeleteSuppressedClassificationCrossReference.name() : __DeleteSuppressedClassificationCrossReference,
        __DeleteSuppressedEntityCrossReference.name() : __DeleteSuppressedEntityCrossReference,
        __DeleteSuppressedAssetCrossReference.name() : __DeleteSuppressedAssetCrossReference,
        __DeleteSuppressedClassificationReference.name() : __DeleteSuppressedClassificationReference
    })
    _AttributeMap.update({
        __Changed.name() : __Changed,
        __SourcePos.name() : __SourcePos,
        __AnalyzerResult.name() : __AnalyzerResult,
        __ParentID.name() : __ParentID,
        __ID.name() : __ID,
        __QualifierID.name() : __QualifierID,
        __Republished.name() : __Republished,
        __OverridesProductID.name() : __OverridesProductID,
        __UserTypeID.name() : __UserTypeID,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.ProductType = ProductType
Namespace.addCategoryObject('typeBinding', 'ProductType', ProductType)


# Complex type {http://www.stibosystems.com/step}ProductCrossReferenceType with content type ELEMENT_ONLY
class ProductCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                A product to product cross-reference.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3148, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3156, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3158, 16), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Product uses Python identifier Product
    __Product = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Product'), 'Product', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_httpwww_stibosystems_comstepProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3159, 16), )

    
    Product = property(__Product.value, __Product.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3162, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3162, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The type of the reference. The list of valid reference types can be\n                    accessed through the CrossReferenceTypes (one of the ProductCrossReferenceType elements) located\n                    below the main element in the XML file.\n                ')

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_ProductID', _module_typeBindings.StepID)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3172, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3172, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, '\n                    The ID of the product to refer to. If left out, provide a KeyValue tag.\n                ')

    
    # Attribute MountLocation uses Python identifier MountLocation
    __MountLocation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MountLocation'), 'MountLocation', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_MountLocation', pyxb.binding.datatypes.string)
    __MountLocation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3179, 8)
    __MountLocation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3179, 8)
    
    MountLocation = property(__MountLocation.value, __MountLocation.set, None, '\n                    product is mounted or not true/false\n                ')

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3186, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3186, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, '\n                    \n                    WebPublisher specific attribute. Identifies whether the referenced\n                    product is present on the website. Possible values: included, excluded.\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3196, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3196, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ProductCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3198, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3198, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the\n                    current context is used.\n                ')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __MetaData.name() : __MetaData,
        __Product.name() : __Product
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __MountLocation.name() : __MountLocation,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.ProductCrossReferenceType = ProductCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'ProductCrossReferenceType', ProductCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}ProductCrossReferenceTypeType with content type ELEMENT_ONLY
class ProductCrossReferenceTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductCrossReferenceTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReferenceTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3210, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3212, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3213, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3214, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3215, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3216, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3217, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3218, 12), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3220, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3220, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3222, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3222, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3223, 8)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3223, 8)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3225, 8)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3225, 8)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                    DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3232, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3232, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3234, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3234, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3236, 8)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3236, 8)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3238, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3238, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ProductCrossReferenceTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3239, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3239, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __Revised.name() : __Revised,
        __Completeness.name() : __Completeness,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __Accumulated.name() : __Accumulated,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.ProductCrossReferenceTypeType = ProductCrossReferenceTypeType
Namespace.addCategoryObject('typeBinding', 'ProductCrossReferenceTypeType', ProductCrossReferenceTypeType)


# Complex type {http://www.stibosystems.com/step}ProductReferenceType with content type ELEMENT_ONLY
class ProductReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ProductReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3266, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ProductReferenceType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3268, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ProductReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3270, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3270, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_ProductReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3271, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3271, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ProductReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3272, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3272, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ProductReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3273, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3273, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __MetaData.name() : __MetaData
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __QualifierID.name() : __QualifierID,
        __Changed.name() : __Changed
    })
_module_typeBindings.ProductReferenceType = ProductReferenceType
Namespace.addCategoryObject('typeBinding', 'ProductReferenceType', ProductReferenceType)


# Complex type {http://www.stibosystems.com/step}ProductsType with content type ELEMENT_ONLY
class ProductsType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all top level products."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ProductsType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3278, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Product uses Python identifier Product
    __Product = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Product'), 'Product', '__httpwww_stibosystems_comstep_ProductsType_httpwww_stibosystems_comstepProduct', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3283, 12), )

    
    Product = property(__Product.value, __Product.set, None, None)

    
    # Attribute RejectNewProducts uses Python identifier RejectNewProducts
    __RejectNewProducts = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RejectNewProducts'), 'RejectNewProducts', '__httpwww_stibosystems_comstep_ProductsType_RejectNewProducts', _module_typeBindings.TrueFalseType, unicode_default='false')
    __RejectNewProducts._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3285, 8)
    __RejectNewProducts._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3285, 8)
    
    RejectNewProducts = property(__RejectNewProducts.value, __RejectNewProducts.set, None, 'Whether or not to reject new products during import.')

    
    # Attribute DefaultParentID uses Python identifier DefaultParentID
    __DefaultParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultParentID'), 'DefaultParentID', '__httpwww_stibosystems_comstep_ProductsType_DefaultParentID', _module_typeBindings.StepID)
    __DefaultParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3291, 8)
    __DefaultParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3291, 8)
    
    DefaultParentID = property(__DefaultParentID.value, __DefaultParentID.set, None, 'Identifies a default parent product for new products during import\n                    that do not have a parent specified. This setting is ignored during\n                    import if RejectNewProducts is true\n                ')

    
    # Attribute DefaultUserTypeID uses Python identifier DefaultUserTypeID
    __DefaultUserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultUserTypeID'), 'DefaultUserTypeID', '__httpwww_stibosystems_comstep_ProductsType_DefaultUserTypeID', _module_typeBindings.StepObjectTypeID)
    __DefaultUserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3300, 8)
    __DefaultUserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3300, 8)
    
    DefaultUserTypeID = property(__DefaultUserTypeID.value, __DefaultUserTypeID.set, None, None)

    
    # Attribute IncludeClassificationOwned uses Python identifier IncludeClassificationOwned
    __IncludeClassificationOwned = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IncludeClassificationOwned'), 'IncludeClassificationOwned', '__httpwww_stibosystems_comstep_ProductsType_IncludeClassificationOwned', _module_typeBindings.TrueFalseType, unicode_default='false')
    __IncludeClassificationOwned._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3301, 8)
    __IncludeClassificationOwned._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3301, 8)
    
    IncludeClassificationOwned = property(__IncludeClassificationOwned.value, __IncludeClassificationOwned.set, None, 'Whether or not to include Product to Classification links, when exporting ClassificationReferences under a Product.\n                    Historically the Product to Classification links were only exported under the Products - also when owned by the product.\n                    However, now the Product to Classification links owned by the Classification are exported under the Classification.\n                    For backwards compatibility the Product to Classification links owned by the Classification links\n                    are also exported under the Product exported unless the option is explicitly set til "false".\n                ')

    _ElementMap.update({
        __Product.name() : __Product
    })
    _AttributeMap.update({
        __RejectNewProducts.name() : __RejectNewProducts,
        __DefaultParentID.name() : __DefaultParentID,
        __DefaultUserTypeID.name() : __DefaultUserTypeID,
        __IncludeClassificationOwned.name() : __IncludeClassificationOwned
    })
_module_typeBindings.ProductsType = ProductsType
Namespace.addCategoryObject('typeBinding', 'ProductsType', ProductsType)


# Complex type {http://www.stibosystems.com/step}EntityType with content type ELEMENT_ONLY
class EntityType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EntityType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntityType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3327, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3329, 13), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ParentKeyValue uses Python identifier ParentKeyValue
    __ParentKeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue'), 'ParentKeyValue', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepParentKeyValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3330, 13), )

    
    ParentKeyValue = property(__ParentKeyValue.value, __ParentKeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3331, 13), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Entity uses Python identifier Entity
    __Entity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Entity'), 'Entity', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepEntity', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3333, 17), )

    
    Entity = property(__Entity.value, __Entity.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedProductCrossReference uses Python identifier SuppressedProductCrossReference
    __SuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), 'SuppressedProductCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3334, 17), )

    
    SuppressedProductCrossReference = property(__SuppressedProductCrossReference.value, __SuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductCrossReference uses Python identifier ProductCrossReference
    __ProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), 'ProductCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3335, 17), )

    
    ProductCrossReference = property(__ProductCrossReference.value, __ProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedClassificationCrossReference uses Python identifier SuppressedClassificationCrossReference
    __SuppressedClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference'), 'SuppressedClassificationCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepSuppressedClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3336, 17), )

    
    SuppressedClassificationCrossReference = property(__SuppressedClassificationCrossReference.value, __SuppressedClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationCrossReference uses Python identifier ClassificationCrossReference
    __ClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference'), 'ClassificationCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3337, 17), )

    
    ClassificationCrossReference = property(__ClassificationCrossReference.value, __ClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedEntityCrossReference uses Python identifier SuppressedEntityCrossReference
    __SuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), 'SuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3338, 17), )

    
    SuppressedEntityCrossReference = property(__SuppressedEntityCrossReference.value, __SuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityCrossReference uses Python identifier EntityCrossReference
    __EntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), 'EntityCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3339, 17), )

    
    EntityCrossReference = property(__EntityCrossReference.value, __EntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedAssetCrossReference uses Python identifier SuppressedAssetCrossReference
    __SuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), 'SuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3340, 17), )

    
    SuppressedAssetCrossReference = property(__SuppressedAssetCrossReference.value, __SuppressedAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetCrossReference uses Python identifier AssetCrossReference
    __AssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), 'AssetCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3341, 17), )

    
    AssetCrossReference = property(__AssetCrossReference.value, __AssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedContextCrossReference uses Python identifier SuppressedContextCrossReference
    __SuppressedContextCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedContextCrossReference'), 'SuppressedContextCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepSuppressedContextCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3342, 17), )

    
    SuppressedContextCrossReference = property(__SuppressedContextCrossReference.value, __SuppressedContextCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ContextCrossReference uses Python identifier ContextCrossReference
    __ContextCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReference'), 'ContextCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepContextCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3343, 17), )

    
    ContextCrossReference = property(__ContextCrossReference.value, __ContextCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedWorkspaceCrossReference uses Python identifier SuppressedWorkspaceCrossReference
    __SuppressedWorkspaceCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedWorkspaceCrossReference'), 'SuppressedWorkspaceCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepSuppressedWorkspaceCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3344, 17), )

    
    SuppressedWorkspaceCrossReference = property(__SuppressedWorkspaceCrossReference.value, __SuppressedWorkspaceCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}WorkspaceCrossReference uses Python identifier WorkspaceCrossReference
    __WorkspaceCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReference'), 'WorkspaceCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepWorkspaceCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3345, 17), )

    
    WorkspaceCrossReference = property(__WorkspaceCrossReference.value, __WorkspaceCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Values uses Python identifier Values
    __Values = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Values'), 'Values', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepValues', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3346, 17), )

    
    Values = property(__Values.value, __Values.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DataContainers uses Python identifier DataContainers
    __DataContainers = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainers'), 'DataContainers', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDataContainers', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3347, 17), )

    
    DataContainers = property(__DataContainers.value, __DataContainers.set, None, None)

    
    # Element {http://www.stibosystems.com/step}CurrentTasks uses Python identifier CurrentTasks
    __CurrentTasks = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), 'CurrentTasks', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepCurrentTasks', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3348, 17), )

    
    CurrentTasks = property(__CurrentTasks.value, __CurrentTasks.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteClassificationReference uses Python identifier DeleteClassificationReference
    __DeleteClassificationReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference'), 'DeleteClassificationReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteClassificationReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3349, 17), )

    
    DeleteClassificationReference = property(__DeleteClassificationReference.value, __DeleteClassificationReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteProductCrossReference uses Python identifier DeleteProductCrossReference
    __DeleteProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference'), 'DeleteProductCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3350, 17), )

    
    DeleteProductCrossReference = property(__DeleteProductCrossReference.value, __DeleteProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteAssetCrossReference uses Python identifier DeleteAssetCrossReference
    __DeleteAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference'), 'DeleteAssetCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3351, 17), )

    
    DeleteAssetCrossReference = property(__DeleteAssetCrossReference.value, __DeleteAssetCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteEntityCrossReference uses Python identifier DeleteEntityCrossReference
    __DeleteEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), 'DeleteEntityCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3352, 17), )

    
    DeleteEntityCrossReference = property(__DeleteEntityCrossReference.value, __DeleteEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedClassificationCrossReference uses Python identifier DeleteSuppressedClassificationCrossReference
    __DeleteSuppressedClassificationCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference'), 'DeleteSuppressedClassificationCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteSuppressedClassificationCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3353, 17), )

    
    DeleteSuppressedClassificationCrossReference = property(__DeleteSuppressedClassificationCrossReference.value, __DeleteSuppressedClassificationCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedProductCrossReference uses Python identifier DeleteSuppressedProductCrossReference
    __DeleteSuppressedProductCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference'), 'DeleteSuppressedProductCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteSuppressedProductCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3354, 17), )

    
    DeleteSuppressedProductCrossReference = property(__DeleteSuppressedProductCrossReference.value, __DeleteSuppressedProductCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedEntityCrossReference uses Python identifier DeleteSuppressedEntityCrossReference
    __DeleteSuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), 'DeleteSuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3355, 17), )

    
    DeleteSuppressedEntityCrossReference = property(__DeleteSuppressedEntityCrossReference.value, __DeleteSuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteSuppressedAssetCrossReference uses Python identifier DeleteSuppressedAssetCrossReference
    __DeleteSuppressedAssetCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference'), 'DeleteSuppressedAssetCrossReference', '__httpwww_stibosystems_comstep_EntityType_httpwww_stibosystems_comstepDeleteSuppressedAssetCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3356, 17), )

    
    DeleteSuppressedAssetCrossReference = property(__DeleteSuppressedAssetCrossReference.value, __DeleteSuppressedAssetCrossReference.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_EntityType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3359, 9)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3359, 9)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute SourcePos uses Python identifier SourcePos
    __SourcePos = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SourcePos'), 'SourcePos', '__httpwww_stibosystems_comstep_EntityType_SourcePos', pyxb.binding.datatypes.string)
    __SourcePos._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3361, 9)
    __SourcePos._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3361, 9)
    
    SourcePos = property(__SourcePos.value, __SourcePos.set, None, None)

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_EntityType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3362, 9)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3362, 9)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_EntityType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3363, 9)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3363, 9)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_EntityType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3364, 9)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3364, 9)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_EntityType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3365, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3365, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute Republished uses Python identifier Republished
    __Republished = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Republished'), 'Republished', '__httpwww_stibosystems_comstep_EntityType_Republished', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Republished._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3366, 9)
    __Republished._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3366, 9)
    
    Republished = property(__Republished.value, __Republished.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_EntityType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3368, 9)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3368, 9)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_EntityType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3369, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3369, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_EntityType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3370, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3370, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __ParentKeyValue.name() : __ParentKeyValue,
        __Name.name() : __Name,
        __Entity.name() : __Entity,
        __SuppressedProductCrossReference.name() : __SuppressedProductCrossReference,
        __ProductCrossReference.name() : __ProductCrossReference,
        __SuppressedClassificationCrossReference.name() : __SuppressedClassificationCrossReference,
        __ClassificationCrossReference.name() : __ClassificationCrossReference,
        __SuppressedEntityCrossReference.name() : __SuppressedEntityCrossReference,
        __EntityCrossReference.name() : __EntityCrossReference,
        __SuppressedAssetCrossReference.name() : __SuppressedAssetCrossReference,
        __AssetCrossReference.name() : __AssetCrossReference,
        __SuppressedContextCrossReference.name() : __SuppressedContextCrossReference,
        __ContextCrossReference.name() : __ContextCrossReference,
        __SuppressedWorkspaceCrossReference.name() : __SuppressedWorkspaceCrossReference,
        __WorkspaceCrossReference.name() : __WorkspaceCrossReference,
        __Values.name() : __Values,
        __DataContainers.name() : __DataContainers,
        __CurrentTasks.name() : __CurrentTasks,
        __DeleteClassificationReference.name() : __DeleteClassificationReference,
        __DeleteProductCrossReference.name() : __DeleteProductCrossReference,
        __DeleteAssetCrossReference.name() : __DeleteAssetCrossReference,
        __DeleteEntityCrossReference.name() : __DeleteEntityCrossReference,
        __DeleteSuppressedClassificationCrossReference.name() : __DeleteSuppressedClassificationCrossReference,
        __DeleteSuppressedProductCrossReference.name() : __DeleteSuppressedProductCrossReference,
        __DeleteSuppressedEntityCrossReference.name() : __DeleteSuppressedEntityCrossReference,
        __DeleteSuppressedAssetCrossReference.name() : __DeleteSuppressedAssetCrossReference
    })
    _AttributeMap.update({
        __Changed.name() : __Changed,
        __SourcePos.name() : __SourcePos,
        __AnalyzerResult.name() : __AnalyzerResult,
        __ParentID.name() : __ParentID,
        __ID.name() : __ID,
        __QualifierID.name() : __QualifierID,
        __Republished.name() : __Republished,
        __UserTypeID.name() : __UserTypeID,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.EntityType = EntityType
Namespace.addCategoryObject('typeBinding', 'EntityType', EntityType)


# Complex type {http://www.stibosystems.com/step}EntityCrossReferenceType with content type ELEMENT_ONLY
class EntityCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EntityCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3379, 5)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3381, 13), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_httpwww_stibosystems_comstepMetaData', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3383, 17), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Entity uses Python identifier Entity
    __Entity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Entity'), 'Entity', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_httpwww_stibosystems_comstepEntity', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3384, 17), )

    
    Entity = property(__Entity.value, __Entity.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3387, 9)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3387, 9)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute EntityID uses Python identifier EntityID
    __EntityID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EntityID'), 'EntityID', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_EntityID', _module_typeBindings.StepID)
    __EntityID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3388, 9)
    __EntityID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3388, 9)
    
    EntityID = property(__EntityID.value, __EntityID.set, None, None)

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3389, 9)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3389, 9)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3390, 9)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3390, 9)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_EntityCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3392, 9)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3392, 9)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue,
        __MetaData.name() : __MetaData,
        __Entity.name() : __Entity
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __EntityID.name() : __EntityID,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.EntityCrossReferenceType = EntityCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'EntityCrossReferenceType', EntityCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}EntityCrossReferenceTypeType with content type ELEMENT_ONLY
class EntityCrossReferenceTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}EntityCrossReferenceTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReferenceTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3396, 5)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3398, 13), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3399, 13), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3400, 13), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3401, 13), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3402, 13), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3403, 13), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3404, 13), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3406, 9)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3406, 9)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3408, 9)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3408, 9)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3409, 9)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3409, 9)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3411, 9)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3411, 9)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                     DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                 ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3418, 9)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3418, 9)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3420, 9)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3420, 9)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute ParentChildRelation uses Python identifier ParentChildRelation
    __ParentChildRelation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentChildRelation'), 'ParentChildRelation', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_ParentChildRelation', _module_typeBindings.ParentChildRelationType)
    __ParentChildRelation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3422, 9)
    __ParentChildRelation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3422, 9)
    
    ParentChildRelation = property(__ParentChildRelation.value, __ParentChildRelation.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3424, 9)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3424, 9)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3426, 9)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3426, 9)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_EntityCrossReferenceTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3427, 9)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3427, 9)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __Revised.name() : __Revised,
        __Completeness.name() : __Completeness,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __ParentChildRelation.name() : __ParentChildRelation,
        __Accumulated.name() : __Accumulated,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.EntityCrossReferenceTypeType = EntityCrossReferenceTypeType
Namespace.addCategoryObject('typeBinding', 'EntityCrossReferenceTypeType', EntityCrossReferenceTypeType)


# Complex type {http://www.stibosystems.com/step}ContextCrossReferenceTypeType with content type ELEMENT_ONLY
class ContextCrossReferenceTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ContextCrossReferenceTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReferenceTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3430, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3432, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3433, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3434, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3435, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3436, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3437, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3438, 12), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3440, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3440, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3442, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3442, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3443, 8)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3443, 8)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3445, 8)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3445, 8)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                    DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3452, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3452, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3454, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3454, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3456, 8)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3456, 8)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3458, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3458, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_ContextCrossReferenceTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3459, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3459, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __Revised.name() : __Revised,
        __Completeness.name() : __Completeness,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __Accumulated.name() : __Accumulated,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.ContextCrossReferenceTypeType = ContextCrossReferenceTypeType
Namespace.addCategoryObject('typeBinding', 'ContextCrossReferenceTypeType', ContextCrossReferenceTypeType)


# Complex type {http://www.stibosystems.com/step}WorkspaceCrossReferenceTypeType with content type ELEMENT_ONLY
class WorkspaceCrossReferenceTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}WorkspaceCrossReferenceTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReferenceTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3462, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3464, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3465, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3466, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3467, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3468, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3469, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TargetUserTypeLink uses Python identifier TargetUserTypeLink
    __TargetUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), 'TargetUserTypeLink', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_httpwww_stibosystems_comstepTargetUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3470, 12), )

    
    TargetUserTypeLink = property(__TargetUserTypeLink.value, __TargetUserTypeLink.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3472, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3472, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_ID', _module_typeBindings.StepLinkTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3474, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3474, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Revised uses Python identifier Revised
    __Revised = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revised'), 'Revised', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Revised', _module_typeBindings.TrueFalseType, unicode_default='true')
    __Revised._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3475, 8)
    __Revised._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3475, 8)
    
    Revised = property(__Revised.value, __Revised.set, None, None)

    
    # Attribute Completeness uses Python identifier Completeness
    __Completeness = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Completeness'), 'Completeness', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Completeness', pyxb.binding.datatypes.string)
    __Completeness._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3477, 8)
    __Completeness._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3477, 8)
    
    Completeness = property(__Completeness.value, __Completeness.set, None, '\n                    DEPRECATED: not used anymore after the introduction of Completeness Metrics in STEP 7.4 (see documentation on Completeness Metrics and migration from old pre-7.4 completeness functionality).\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_MultiValued', _module_typeBindings.TrueFalseType, unicode_default='true')
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3484, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3484, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, None)

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3486, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3486, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, None)

    
    # Attribute Accumulated uses Python identifier Accumulated
    __Accumulated = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Accumulated'), 'Accumulated', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Accumulated', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Accumulated._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3488, 8)
    __Accumulated._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3488, 8)
    
    Accumulated = property(__Accumulated.value, __Accumulated.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3490, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3490, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3491, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3491, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeLink.name() : __AttributeLink,
        __DimensionLink.name() : __DimensionLink,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __UserTypeLink.name() : __UserTypeLink,
        __TargetUserTypeLink.name() : __TargetUserTypeLink
    })
    _AttributeMap.update({
        __Inherited.name() : __Inherited,
        __ID.name() : __ID,
        __Revised.name() : __Revised,
        __Completeness.name() : __Completeness,
        __MultiValued.name() : __MultiValued,
        __Mandatory.name() : __Mandatory,
        __Accumulated.name() : __Accumulated,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.WorkspaceCrossReferenceTypeType = WorkspaceCrossReferenceTypeType
Namespace.addCategoryObject('typeBinding', 'WorkspaceCrossReferenceTypeType', WorkspaceCrossReferenceTypeType)


# Complex type {http://www.stibosystems.com/step}ContextCrossReferenceType with content type ELEMENT_ONLY
class ContextCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ContextCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3494, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_ContextCrossReferenceType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3496, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ContextCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3498, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3498, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_ContextCrossReferenceType_ContextID', _module_typeBindings.StepQualifierID, required=True)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3499, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3499, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, None)

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_ContextCrossReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3500, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3500, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ContextCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3501, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3501, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ContextCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3503, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3503, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __MetaData.name() : __MetaData
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ContextID.name() : __ContextID,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.ContextCrossReferenceType = ContextCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'ContextCrossReferenceType', ContextCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}WorkspaceCrossReferenceType with content type ELEMENT_ONLY
class WorkspaceCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}WorkspaceCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3506, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3508, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3510, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3510, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceType_WorkspaceID', _module_typeBindings.StepID, required=True)
    __WorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3511, 8)
    __WorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3511, 8)
    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, None)

    
    # Attribute AnalyzerResult uses Python identifier AnalyzerResult
    __AnalyzerResult = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AnalyzerResult'), 'AnalyzerResult', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceType_AnalyzerResult', pyxb.binding.datatypes.string)
    __AnalyzerResult._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3512, 8)
    __AnalyzerResult._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3512, 8)
    
    AnalyzerResult = property(__AnalyzerResult.value, __AnalyzerResult.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3513, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3513, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_WorkspaceCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3515, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3515, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __MetaData.name() : __MetaData
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __WorkspaceID.name() : __WorkspaceID,
        __AnalyzerResult.name() : __AnalyzerResult,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.WorkspaceCrossReferenceType = WorkspaceCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'WorkspaceCrossReferenceType', WorkspaceCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}EntitiesType with content type ELEMENT_ONLY
class EntitiesType (pyxb.binding.basis.complexTypeDefinition):
    """Element that holds all top level entites."""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EntitiesType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3531, 5)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Entity uses Python identifier Entity
    __Entity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Entity'), 'Entity', '__httpwww_stibosystems_comstep_EntitiesType_httpwww_stibosystems_comstepEntity', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3536, 13), )

    
    Entity = property(__Entity.value, __Entity.set, None, None)

    
    # Attribute RejectNewEntities uses Python identifier RejectNewEntities
    __RejectNewEntities = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RejectNewEntities'), 'RejectNewEntities', '__httpwww_stibosystems_comstep_EntitiesType_RejectNewEntities', _module_typeBindings.TrueFalseType, unicode_default='false')
    __RejectNewEntities._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3538, 9)
    __RejectNewEntities._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3538, 9)
    
    RejectNewEntities = property(__RejectNewEntities.value, __RejectNewEntities.set, None, 'Whether or not to reject new enties during import.')

    
    # Attribute DefaultParentID uses Python identifier DefaultParentID
    __DefaultParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultParentID'), 'DefaultParentID', '__httpwww_stibosystems_comstep_EntitiesType_DefaultParentID', _module_typeBindings.StepID)
    __DefaultParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3543, 9)
    __DefaultParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3543, 9)
    
    DefaultParentID = property(__DefaultParentID.value, __DefaultParentID.set, None, 'Identifies a default parent entity for new entity during import\n                     that do not have a parent specified. This setting is ignored during\n                     import if RejectNewEntities is true\n                 ')

    
    # Attribute DefaultUserTypeID uses Python identifier DefaultUserTypeID
    __DefaultUserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultUserTypeID'), 'DefaultUserTypeID', '__httpwww_stibosystems_comstep_EntitiesType_DefaultUserTypeID', _module_typeBindings.StepObjectTypeID)
    __DefaultUserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3552, 9)
    __DefaultUserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3552, 9)
    
    DefaultUserTypeID = property(__DefaultUserTypeID.value, __DefaultUserTypeID.set, None, None)

    _ElementMap.update({
        __Entity.name() : __Entity
    })
    _AttributeMap.update({
        __RejectNewEntities.name() : __RejectNewEntities,
        __DefaultParentID.name() : __DefaultParentID,
        __DefaultUserTypeID.name() : __DefaultUserTypeID
    })
_module_typeBindings.EntitiesType = EntitiesType
Namespace.addCategoryObject('typeBinding', 'EntitiesType', EntitiesType)


# Complex type {http://www.stibosystems.com/step}PublicationType with content type ELEMENT_ONLY
class PublicationType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PublicationType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PublicationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3556, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3558, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3559, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Version uses Python identifier Version
    __Version = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Version'), 'Version', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepVersion', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3560, 12), )

    
    Version = property(__Version.value, __Version.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Basket uses Python identifier Basket
    __Basket = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Basket'), 'Basket', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepBasket', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3561, 12), )

    
    Basket = property(__Basket.value, __Basket.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PaginationRules uses Python identifier PaginationRules
    __PaginationRules = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PaginationRules'), 'PaginationRules', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepPaginationRules', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3562, 12), )

    
    PaginationRules = property(__PaginationRules.value, __PaginationRules.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PageTemplateLink uses Python identifier PageTemplateLink
    __PageTemplateLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PageTemplateLink'), 'PageTemplateLink', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepPageTemplateLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3563, 12), )

    
    PageTemplateLink = property(__PageTemplateLink.value, __PageTemplateLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductTemplateLink uses Python identifier ProductTemplateLink
    __ProductTemplateLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductTemplateLink'), 'ProductTemplateLink', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepProductTemplateLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3564, 12), )

    
    ProductTemplateLink = property(__ProductTemplateLink.value, __ProductTemplateLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationSection uses Python identifier PublicationSection
    __PublicationSection = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationSection'), 'PublicationSection', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepPublicationSection', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3565, 12), )

    
    PublicationSection = property(__PublicationSection.value, __PublicationSection.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SuppressedEntityCrossReference uses Python identifier SuppressedEntityCrossReference
    __SuppressedEntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), 'SuppressedEntityCrossReference', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepSuppressedEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3566, 12), )

    
    SuppressedEntityCrossReference = property(__SuppressedEntityCrossReference.value, __SuppressedEntityCrossReference.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityCrossReference uses Python identifier EntityCrossReference
    __EntityCrossReference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), 'EntityCrossReference', '__httpwww_stibosystems_comstep_PublicationType_httpwww_stibosystems_comstepEntityCrossReference', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3567, 12), )

    
    EntityCrossReference = property(__EntityCrossReference.value, __EntityCrossReference.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_PublicationType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3569, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3569, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_PublicationType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3570, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3570, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, None)

    
    # Attribute MasterDocumentID uses Python identifier MasterDocumentID
    __MasterDocumentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MasterDocumentID'), 'MasterDocumentID', '__httpwww_stibosystems_comstep_PublicationType_MasterDocumentID', _module_typeBindings.StepID, required=True)
    __MasterDocumentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3571, 8)
    __MasterDocumentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3571, 8)
    
    MasterDocumentID = property(__MasterDocumentID.value, __MasterDocumentID.set, None, None)

    
    # Attribute PagesPerSpread uses Python identifier PagesPerSpread
    __PagesPerSpread = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PagesPerSpread'), 'PagesPerSpread', '__httpwww_stibosystems_comstep_PublicationType_PagesPerSpread', pyxb.binding.datatypes.string)
    __PagesPerSpread._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3572, 8)
    __PagesPerSpread._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3572, 8)
    
    PagesPerSpread = property(__PagesPerSpread.value, __PagesPerSpread.set, None, None)

    
    # Attribute DefaultPageTemplateID uses Python identifier DefaultPageTemplateID
    __DefaultPageTemplateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DefaultPageTemplateID'), 'DefaultPageTemplateID', '__httpwww_stibosystems_comstep_PublicationType_DefaultPageTemplateID', _module_typeBindings.StepID)
    __DefaultPageTemplateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3573, 8)
    __DefaultPageTemplateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3573, 8)
    
    DefaultPageTemplateID = property(__DefaultPageTemplateID.value, __DefaultPageTemplateID.set, None, None)

    
    # Attribute DTPType uses Python identifier DTPType
    __DTPType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DTPType'), 'DTPType', '__httpwww_stibosystems_comstep_PublicationType_DTPType', _module_typeBindings.STD_ANON_10, required=True)
    __DTPType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3574, 8)
    __DTPType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3574, 8)
    
    DTPType = property(__DTPType.value, __DTPType.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_PublicationType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3582, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3582, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Version.name() : __Version,
        __Basket.name() : __Basket,
        __PaginationRules.name() : __PaginationRules,
        __PageTemplateLink.name() : __PageTemplateLink,
        __ProductTemplateLink.name() : __ProductTemplateLink,
        __PublicationSection.name() : __PublicationSection,
        __SuppressedEntityCrossReference.name() : __SuppressedEntityCrossReference,
        __EntityCrossReference.name() : __EntityCrossReference
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __MasterDocumentID.name() : __MasterDocumentID,
        __PagesPerSpread.name() : __PagesPerSpread,
        __DefaultPageTemplateID.name() : __DefaultPageTemplateID,
        __DTPType.name() : __DTPType,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.PublicationType = PublicationType
Namespace.addCategoryObject('typeBinding', 'PublicationType', PublicationType)


# Complex type {http://www.stibosystems.com/step}PublicationGroupType with content type ELEMENT_ONLY
class PublicationGroupType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PublicationGroupType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PublicationGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3586, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_PublicationGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3588, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_PublicationGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3589, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationGroup uses Python identifier PublicationGroup
    __PublicationGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup'), 'PublicationGroup', '__httpwww_stibosystems_comstep_PublicationGroupType_httpwww_stibosystems_comstepPublicationGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3590, 12), )

    
    PublicationGroup = property(__PublicationGroup.value, __PublicationGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Publication uses Python identifier Publication
    __Publication = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Publication'), 'Publication', '__httpwww_stibosystems_comstep_PublicationGroupType_httpwww_stibosystems_comstepPublication', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3591, 12), )

    
    Publication = property(__Publication.value, __Publication.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_PublicationGroupType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3593, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3593, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_PublicationGroupType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3594, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3594, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_PublicationGroupType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3595, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3595, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_PublicationGroupType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3596, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3596, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __PublicationGroup.name() : __PublicationGroup,
        __Publication.name() : __Publication
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __ParentID.name() : __ParentID,
        __UnitID.name() : __UnitID
    })
_module_typeBindings.PublicationGroupType = PublicationGroupType
Namespace.addCategoryObject('typeBinding', 'PublicationGroupType', PublicationGroupType)


# Complex type {http://www.stibosystems.com/step}PublicationSectionType with content type ELEMENT_ONLY
class PublicationSectionType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}PublicationSectionType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PublicationSectionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3614, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3616, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3617, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationSection uses Python identifier PublicationSection
    __PublicationSection = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationSection'), 'PublicationSection', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepPublicationSection', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3618, 12), )

    
    PublicationSection = property(__PublicationSection.value, __PublicationSection.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Basket uses Python identifier Basket
    __Basket = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Basket'), 'Basket', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepBasket', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3619, 12), )

    
    Basket = property(__Basket.value, __Basket.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PlannedPage uses Python identifier PlannedPage
    __PlannedPage = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlannedPage'), 'PlannedPage', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepPlannedPage', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3620, 12), )

    
    PlannedPage = property(__PlannedPage.value, __PlannedPage.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AutoPageProductLink uses Python identifier AutoPageProductLink
    __AutoPageProductLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AutoPageProductLink'), 'AutoPageProductLink', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepAutoPageProductLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3621, 12), )

    
    AutoPageProductLink = property(__AutoPageProductLink.value, __AutoPageProductLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AutoPageAssetLink uses Python identifier AutoPageAssetLink
    __AutoPageAssetLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AutoPageAssetLink'), 'AutoPageAssetLink', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepAutoPageAssetLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3622, 12), )

    
    AutoPageAssetLink = property(__AutoPageAssetLink.value, __AutoPageAssetLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AutoPageClassificationLink uses Python identifier AutoPageClassificationLink
    __AutoPageClassificationLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AutoPageClassificationLink'), 'AutoPageClassificationLink', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepAutoPageClassificationLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3623, 12), )

    
    AutoPageClassificationLink = property(__AutoPageClassificationLink.value, __AutoPageClassificationLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PaginationRules uses Python identifier PaginationRules
    __PaginationRules = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PaginationRules'), 'PaginationRules', '__httpwww_stibosystems_comstep_PublicationSectionType_httpwww_stibosystems_comstepPaginationRules', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3624, 12), )

    
    PaginationRules = property(__PaginationRules.value, __PaginationRules.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_PublicationSectionType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3626, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3626, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_PublicationSectionType_UserTypeID', _module_typeBindings.StepObjectTypeID, required=True)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3627, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3627, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_PublicationSectionType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3628, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3628, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_PublicationSectionType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3629, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3629, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __PublicationSection.name() : __PublicationSection,
        __Basket.name() : __Basket,
        __PlannedPage.name() : __PlannedPage,
        __AutoPageProductLink.name() : __AutoPageProductLink,
        __AutoPageAssetLink.name() : __AutoPageAssetLink,
        __AutoPageClassificationLink.name() : __AutoPageClassificationLink,
        __PaginationRules.name() : __PaginationRules
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __QualifierID.name() : __QualifierID,
        __ParentID.name() : __ParentID
    })
_module_typeBindings.PublicationSectionType = PublicationSectionType
Namespace.addCategoryObject('typeBinding', 'PublicationSectionType', PublicationSectionType)


# Complex type {http://www.stibosystems.com/step}QualifierType with content type ELEMENT_ONLY
class QualifierType (pyxb.binding.basis.complexTypeDefinition):
    """
                A qualifier points out a number of dimension points. Such a qualifier can be referenced from data
                carrying elements in the XML file to signify which dimension points a specific chunk of data is located.
                As such a qualifier element has no resemblances to ONE object in STEP, merely it is a way of
                representing dimension dependent data in the XML file – se also paragraph “Common attributes and
                elements” above in this section.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'QualifierType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3653, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DimensionPointLink uses Python identifier DimensionPointLink
    __DimensionPointLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink'), 'DimensionPointLink', '__httpwww_stibosystems_comstep_QualifierType_httpwww_stibosystems_comstepDimensionPointLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3664, 12), )

    
    DimensionPointLink = property(__DimensionPointLink.value, __DimensionPointLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Context uses Python identifier Context
    __Context = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Context'), 'Context', '__httpwww_stibosystems_comstep_QualifierType_httpwww_stibosystems_comstepContext', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3665, 12), )

    
    Context = property(__Context.value, __Context.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_QualifierType_ID', _module_typeBindings.StepQualifierID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3667, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3667, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    _ElementMap.update({
        __DimensionPointLink.name() : __DimensionPointLink,
        __Context.name() : __Context
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.QualifierType = QualifierType
Namespace.addCategoryObject('typeBinding', 'QualifierType', QualifierType)


# Complex type {http://www.stibosystems.com/step}ReplaceClassificationReferenceType with content type EMPTY
class ReplaceClassificationReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}ReplaceClassificationReferenceType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3689, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_ReplaceClassificationReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3690, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3690, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Type.name() : __Type
    })
_module_typeBindings.ReplaceClassificationReferenceType = ReplaceClassificationReferenceType
Namespace.addCategoryObject('typeBinding', 'ReplaceClassificationReferenceType', ReplaceClassificationReferenceType)


# Complex type {http://www.stibosystems.com/step}ReplaceProductToAssetCrossReferenceType with content type EMPTY
class ReplaceProductToAssetCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                @Deprecated, use ReplacementRules/Products/ReplaceCrossReference, ReplacementRules/Classifications/ReplaceCrossReference,
                ReplacementRules/Entities/ReplaceCrossReference, ReplacementRules/Assets/ReplaceCrossReference
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToAssetCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4077, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ReferenceTypeID uses Python identifier ReferenceTypeID
    __ReferenceTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReferenceTypeID'), 'ReferenceTypeID', '__httpwww_stibosystems_comstep_ReplaceProductToAssetCrossReferenceType_ReferenceTypeID', _module_typeBindings.StepLinkTypeID, required=True)
    __ReferenceTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4084, 8)
    __ReferenceTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4084, 8)
    
    ReferenceTypeID = property(__ReferenceTypeID.value, __ReferenceTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ReferenceTypeID.name() : __ReferenceTypeID
    })
_module_typeBindings.ReplaceProductToAssetCrossReferenceType = ReplaceProductToAssetCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'ReplaceProductToAssetCrossReferenceType', ReplaceProductToAssetCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}ReplaceCrossReferenceType with content type EMPTY
class ReplaceCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                @Deprecated, use ReplacementRules/Products/ReplaceCrossReference, ReplacementRules/Classifications/ReplaceCrossReference,
                ReplacementRules/Entities/ReplaceCrossReference, ReplacementRules/Assets/ReplaceCrossReference
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4088, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ReferenceTypeID uses Python identifier ReferenceTypeID
    __ReferenceTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReferenceTypeID'), 'ReferenceTypeID', '__httpwww_stibosystems_comstep_ReplaceCrossReferenceType_ReferenceTypeID', _module_typeBindings.StepLinkTypeID, required=True)
    __ReferenceTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4095, 8)
    __ReferenceTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4095, 8)
    
    ReferenceTypeID = property(__ReferenceTypeID.value, __ReferenceTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ReferenceTypeID.name() : __ReferenceTypeID
    })
_module_typeBindings.ReplaceCrossReferenceType = ReplaceCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'ReplaceCrossReferenceType', ReplaceCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}ReplaceProductToProductCrossReferenceType with content type EMPTY
class ReplaceProductToProductCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """
                @Deprecated, use ReplacementRules/Products/ReplaceCrossReference, ReplacementRules/Classifications/ReplaceCrossReference,
                ReplacementRules/Entities/ReplaceCrossReference, ReplacementRules/Assets/ReplaceCrossReference
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToProductCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4099, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ReferenceTypeID uses Python identifier ReferenceTypeID
    __ReferenceTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReferenceTypeID'), 'ReferenceTypeID', '__httpwww_stibosystems_comstep_ReplaceProductToProductCrossReferenceType_ReferenceTypeID', _module_typeBindings.StepLinkTypeID, required=True)
    __ReferenceTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4106, 8)
    __ReferenceTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4106, 8)
    
    ReferenceTypeID = property(__ReferenceTypeID.value, __ReferenceTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ReferenceTypeID.name() : __ReferenceTypeID
    })
_module_typeBindings.ReplaceProductToProductCrossReferenceType = ReplaceProductToProductCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'ReplaceProductToProductCrossReferenceType', ReplaceProductToProductCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}ReplaceProductValuesForAttributeGroupType with content type EMPTY
class ReplaceProductValuesForAttributeGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                @Deprecated, use ReplacementRules/Products/ReplaceValues, ReplacementRules/Classifications/ReplaceValues,
                ReplacementRules/Entities/ReplaceValues, ReplacementRules/Assets/ReplaceValues
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductValuesForAttributeGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4110, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute AttributeGroupID uses Python identifier AttributeGroupID
    __AttributeGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeGroupID'), 'AttributeGroupID', '__httpwww_stibosystems_comstep_ReplaceProductValuesForAttributeGroupType_AttributeGroupID', _module_typeBindings.StepAttributeID, required=True)
    __AttributeGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4117, 8)
    __AttributeGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4117, 8)
    
    AttributeGroupID = property(__AttributeGroupID.value, __AttributeGroupID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __AttributeGroupID.name() : __AttributeGroupID
    })
_module_typeBindings.ReplaceProductValuesForAttributeGroupType = ReplaceProductValuesForAttributeGroupType
Namespace.addCategoryObject('typeBinding', 'ReplaceProductValuesForAttributeGroupType', ReplaceProductValuesForAttributeGroupType)


# Complex type {http://www.stibosystems.com/step}ReplaceDataContainerTypeType with content type EMPTY
class ReplaceDataContainerTypeType (pyxb.binding.basis.complexTypeDefinition):
    """
                @Deprecated, use ReplacementRules/Products/ReplaceDataContainers, ReplacementRules/Classifications/ReplaceDataContainers,
                ReplacementRules/Entities/ReplaceDataContainers, ReplacementRules/Assets/ReplaceDataContainers
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainerTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4120, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute DataContainerTypeID uses Python identifier DataContainerTypeID
    __DataContainerTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DataContainerTypeID'), 'DataContainerTypeID', '__httpwww_stibosystems_comstep_ReplaceDataContainerTypeType_DataContainerTypeID', _module_typeBindings.StepDataContainerTypeID, required=True)
    __DataContainerTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4127, 8)
    __DataContainerTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4127, 8)
    
    DataContainerTypeID = property(__DataContainerTypeID.value, __DataContainerTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __DataContainerTypeID.name() : __DataContainerTypeID
    })
_module_typeBindings.ReplaceDataContainerTypeType = ReplaceDataContainerTypeType
Namespace.addCategoryObject('typeBinding', 'ReplaceDataContainerTypeType', ReplaceDataContainerTypeType)


# Complex type {http://www.stibosystems.com/step}RowType with content type ELEMENT_ONLY
class RowType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}RowType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'RowType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4131, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Origin uses Python identifier Origin
    __Origin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Origin'), 'Origin', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4133, 12), )

    
    Origin = property(__Origin.value, __Origin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ProductOrigin uses Python identifier ProductOrigin
    __ProductOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin'), 'ProductOrigin', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepProductOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4134, 12), )

    
    ProductOrigin = property(__ProductOrigin.value, __ProductOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ClassificationOrigin uses Python identifier ClassificationOrigin
    __ClassificationOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin'), 'ClassificationOrigin', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepClassificationOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4135, 12), )

    
    ClassificationOrigin = property(__ClassificationOrigin.value, __ClassificationOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}EntityOrigin uses Python identifier EntityOrigin
    __EntityOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin'), 'EntityOrigin', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepEntityOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4136, 12), )

    
    EntityOrigin = property(__EntityOrigin.value, __EntityOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AssetOrigin uses Python identifier AssetOrigin
    __AssetOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin'), 'AssetOrigin', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepAssetOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4137, 12), )

    
    AssetOrigin = property(__AssetOrigin.value, __AssetOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}AttributeOrigin uses Python identifier AttributeOrigin
    __AttributeOrigin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin'), 'AttributeOrigin', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepAttributeOrigin', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4138, 12), )

    
    AttributeOrigin = property(__AttributeOrigin.value, __AttributeOrigin.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Cell uses Python identifier Cell
    __Cell = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Cell'), 'Cell', '__httpwww_stibosystems_comstep_RowType_httpwww_stibosystems_comstepCell', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4139, 12), )

    
    Cell = property(__Cell.value, __Cell.set, None, None)

    
    # Attribute ProcessFlag uses Python identifier ProcessFlag
    __ProcessFlag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessFlag'), 'ProcessFlag', '__httpwww_stibosystems_comstep_RowType_ProcessFlag', pyxb.binding.datatypes.string)
    __ProcessFlag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4141, 8)
    __ProcessFlag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4141, 8)
    
    ProcessFlag = property(__ProcessFlag.value, __ProcessFlag.set, None, None)

    
    # Attribute Height uses Python identifier Height
    __Height = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Height'), 'Height', '__httpwww_stibosystems_comstep_RowType_Height', pyxb.binding.datatypes.string)
    __Height._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4142, 8)
    __Height._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4142, 8)
    
    Height = property(__Height.value, __Height.set, None, None)

    
    # Attribute RuleAbove uses Python identifier RuleAbove
    __RuleAbove = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleAbove'), 'RuleAbove', '__httpwww_stibosystems_comstep_RowType_RuleAbove', pyxb.binding.datatypes.string)
    __RuleAbove._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4143, 8)
    __RuleAbove._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4143, 8)
    
    RuleAbove = property(__RuleAbove.value, __RuleAbove.set, None, None)

    
    # Attribute RuleBelow uses Python identifier RuleBelow
    __RuleBelow = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleBelow'), 'RuleBelow', '__httpwww_stibosystems_comstep_RowType_RuleBelow', pyxb.binding.datatypes.string)
    __RuleBelow._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4144, 8)
    __RuleBelow._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4144, 8)
    
    RuleBelow = property(__RuleBelow.value, __RuleBelow.set, None, None)

    
    # Attribute BackgroundColor uses Python identifier BackgroundColor
    __BackgroundColor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BackgroundColor'), 'BackgroundColor', '__httpwww_stibosystems_comstep_RowType_BackgroundColor', pyxb.binding.datatypes.string)
    __BackgroundColor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4145, 8)
    __BackgroundColor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4145, 8)
    
    BackgroundColor = property(__BackgroundColor.value, __BackgroundColor.set, None, None)

    
    # Attribute KeepWithNext uses Python identifier KeepWithNext
    __KeepWithNext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'KeepWithNext'), 'KeepWithNext', '__httpwww_stibosystems_comstep_RowType_KeepWithNext', pyxb.binding.datatypes.string)
    __KeepWithNext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4146, 8)
    __KeepWithNext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4146, 8)
    
    KeepWithNext = property(__KeepWithNext.value, __KeepWithNext.set, None, None)

    
    # Attribute RowTypeID uses Python identifier RowTypeID
    __RowTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RowTypeID'), 'RowTypeID', '__httpwww_stibosystems_comstep_RowType_RowTypeID', _module_typeBindings.StepAttributeID)
    __RowTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4147, 8)
    __RowTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4147, 8)
    
    RowTypeID = property(__RowTypeID.value, __RowTypeID.set, None, None)

    
    # Attribute CellRotation uses Python identifier CellRotation
    __CellRotation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellRotation'), 'CellRotation', '__httpwww_stibosystems_comstep_RowType_CellRotation', pyxb.binding.datatypes.string)
    __CellRotation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4148, 8)
    __CellRotation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4148, 8)
    
    CellRotation = property(__CellRotation.value, __CellRotation.set, None, None)

    
    # Attribute TextStyle uses Python identifier TextStyle
    __TextStyle = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TextStyle'), 'TextStyle', '__httpwww_stibosystems_comstep_RowType_TextStyle', pyxb.binding.datatypes.string)
    __TextStyle._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4149, 8)
    __TextStyle._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4149, 8)
    
    TextStyle = property(__TextStyle.value, __TextStyle.set, None, None)

    
    # Attribute VerticalAlignment uses Python identifier VerticalAlignment
    __VerticalAlignment = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalAlignment'), 'VerticalAlignment', '__httpwww_stibosystems_comstep_RowType_VerticalAlignment', pyxb.binding.datatypes.string)
    __VerticalAlignment._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4150, 8)
    __VerticalAlignment._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4150, 8)
    
    VerticalAlignment = property(__VerticalAlignment.value, __VerticalAlignment.set, None, None)

    
    # Attribute CellVerticalStoryDirection uses Python identifier CellVerticalStoryDirection
    __CellVerticalStoryDirection = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellVerticalStoryDirection'), 'CellVerticalStoryDirection', '__httpwww_stibosystems_comstep_RowType_CellVerticalStoryDirection', pyxb.binding.datatypes.string)
    __CellVerticalStoryDirection._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4151, 8)
    __CellVerticalStoryDirection._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4151, 8)
    
    CellVerticalStoryDirection = property(__CellVerticalStoryDirection.value, __CellVerticalStoryDirection.set, None, None)

    
    # Attribute CellImageScale uses Python identifier CellImageScale
    __CellImageScale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellImageScale'), 'CellImageScale', '__httpwww_stibosystems_comstep_RowType_CellImageScale', pyxb.binding.datatypes.string)
    __CellImageScale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4152, 8)
    __CellImageScale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4152, 8)
    
    CellImageScale = property(__CellImageScale.value, __CellImageScale.set, None, None)

    _ElementMap.update({
        __Origin.name() : __Origin,
        __ProductOrigin.name() : __ProductOrigin,
        __ClassificationOrigin.name() : __ClassificationOrigin,
        __EntityOrigin.name() : __EntityOrigin,
        __AssetOrigin.name() : __AssetOrigin,
        __AttributeOrigin.name() : __AttributeOrigin,
        __Cell.name() : __Cell
    })
    _AttributeMap.update({
        __ProcessFlag.name() : __ProcessFlag,
        __Height.name() : __Height,
        __RuleAbove.name() : __RuleAbove,
        __RuleBelow.name() : __RuleBelow,
        __BackgroundColor.name() : __BackgroundColor,
        __KeepWithNext.name() : __KeepWithNext,
        __RowTypeID.name() : __RowTypeID,
        __CellRotation.name() : __CellRotation,
        __TextStyle.name() : __TextStyle,
        __VerticalAlignment.name() : __VerticalAlignment,
        __CellVerticalStoryDirection.name() : __CellVerticalStoryDirection,
        __CellImageScale.name() : __CellImageScale
    })
_module_typeBindings.RowType = RowType
Namespace.addCategoryObject('typeBinding', 'RowType', RowType)


# Complex type {http://www.stibosystems.com/step}RowTypeType with content type ELEMENT_ONLY
class RowTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}RowTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'RowTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4156, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_RowTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4158, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableTypeLink uses Python identifier TableTypeLink
    __TableTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableTypeLink'), 'TableTypeLink', '__httpwww_stibosystems_comstep_RowTypeType_httpwww_stibosystems_comstepTableTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4159, 12), )

    
    TableTypeLink = property(__TableTypeLink.value, __TableTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PublicationTypeValidity uses Python identifier PublicationTypeValidity
    __PublicationTypeValidity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidity'), 'PublicationTypeValidity', '__httpwww_stibosystems_comstep_RowTypeType_httpwww_stibosystems_comstepPublicationTypeValidity', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4160, 12), )

    
    PublicationTypeValidity = property(__PublicationTypeValidity.value, __PublicationTypeValidity.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_RowTypeType_ID', _module_typeBindings.StepAttributeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4162, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4162, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_RowTypeType_ParentID', _module_typeBindings.StepAttributeID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4163, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4163, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    
    # Attribute Height uses Python identifier Height
    __Height = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Height'), 'Height', '__httpwww_stibosystems_comstep_RowTypeType_Height', pyxb.binding.datatypes.decimal)
    __Height._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4164, 8)
    __Height._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4164, 8)
    
    Height = property(__Height.value, __Height.set, None, None)

    
    # Attribute HeightUnit uses Python identifier HeightUnit
    __HeightUnit = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HeightUnit'), 'HeightUnit', '__httpwww_stibosystems_comstep_RowTypeType_HeightUnit', pyxb.binding.datatypes.string)
    __HeightUnit._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4165, 8)
    __HeightUnit._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4165, 8)
    
    HeightUnit = property(__HeightUnit.value, __HeightUnit.set, None, None)

    
    # Attribute TextStyle uses Python identifier TextStyle
    __TextStyle = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TextStyle'), 'TextStyle', '__httpwww_stibosystems_comstep_RowTypeType_TextStyle', pyxb.binding.datatypes.string)
    __TextStyle._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4166, 8)
    __TextStyle._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4166, 8)
    
    TextStyle = property(__TextStyle.value, __TextStyle.set, None, None)

    
    # Attribute BackgroundColor uses Python identifier BackgroundColor
    __BackgroundColor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BackgroundColor'), 'BackgroundColor', '__httpwww_stibosystems_comstep_RowTypeType_BackgroundColor', pyxb.binding.datatypes.string)
    __BackgroundColor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4167, 8)
    __BackgroundColor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4167, 8)
    
    BackgroundColor = property(__BackgroundColor.value, __BackgroundColor.set, None, None)

    
    # Attribute VerticalAlignment uses Python identifier VerticalAlignment
    __VerticalAlignment = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalAlignment'), 'VerticalAlignment', '__httpwww_stibosystems_comstep_RowTypeType_VerticalAlignment', pyxb.binding.datatypes.string)
    __VerticalAlignment._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4168, 8)
    __VerticalAlignment._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4168, 8)
    
    VerticalAlignment = property(__VerticalAlignment.value, __VerticalAlignment.set, None, None)

    
    # Attribute RuleAbove uses Python identifier RuleAbove
    __RuleAbove = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleAbove'), 'RuleAbove', '__httpwww_stibosystems_comstep_RowTypeType_RuleAbove', pyxb.binding.datatypes.string)
    __RuleAbove._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4169, 8)
    __RuleAbove._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4169, 8)
    
    RuleAbove = property(__RuleAbove.value, __RuleAbove.set, None, None)

    
    # Attribute RuleBelow uses Python identifier RuleBelow
    __RuleBelow = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleBelow'), 'RuleBelow', '__httpwww_stibosystems_comstep_RowTypeType_RuleBelow', pyxb.binding.datatypes.string)
    __RuleBelow._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4170, 8)
    __RuleBelow._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4170, 8)
    
    RuleBelow = property(__RuleBelow.value, __RuleBelow.set, None, None)

    
    # Attribute CellRotation uses Python identifier CellRotation
    __CellRotation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellRotation'), 'CellRotation', '__httpwww_stibosystems_comstep_RowTypeType_CellRotation', pyxb.binding.datatypes.string)
    __CellRotation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4171, 8)
    __CellRotation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4171, 8)
    
    CellRotation = property(__CellRotation.value, __CellRotation.set, None, None)

    
    # Attribute ProcessFlag uses Python identifier ProcessFlag
    __ProcessFlag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessFlag'), 'ProcessFlag', '__httpwww_stibosystems_comstep_RowTypeType_ProcessFlag', pyxb.binding.datatypes.string)
    __ProcessFlag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4172, 8)
    __ProcessFlag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4172, 8)
    
    ProcessFlag = property(__ProcessFlag.value, __ProcessFlag.set, None, None)

    
    # Attribute CellVerticalStoryDirection uses Python identifier CellVerticalStoryDirection
    __CellVerticalStoryDirection = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellVerticalStoryDirection'), 'CellVerticalStoryDirection', '__httpwww_stibosystems_comstep_RowTypeType_CellVerticalStoryDirection', pyxb.binding.datatypes.string)
    __CellVerticalStoryDirection._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4173, 8)
    __CellVerticalStoryDirection._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4173, 8)
    
    CellVerticalStoryDirection = property(__CellVerticalStoryDirection.value, __CellVerticalStoryDirection.set, None, None)

    
    # Attribute CellImageScale uses Python identifier CellImageScale
    __CellImageScale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellImageScale'), 'CellImageScale', '__httpwww_stibosystems_comstep_RowTypeType_CellImageScale', pyxb.binding.datatypes.string)
    __CellImageScale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4174, 8)
    __CellImageScale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4174, 8)
    
    CellImageScale = property(__CellImageScale.value, __CellImageScale.set, None, None)

    
    # Attribute KeepWithNext uses Python identifier KeepWithNext
    __KeepWithNext = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'KeepWithNext'), 'KeepWithNext', '__httpwww_stibosystems_comstep_RowTypeType_KeepWithNext', pyxb.binding.datatypes.boolean)
    __KeepWithNext._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4175, 8)
    __KeepWithNext._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4175, 8)
    
    KeepWithNext = property(__KeepWithNext.value, __KeepWithNext.set, None, None)

    
    # Attribute HeadingLevel uses Python identifier HeadingLevel
    __HeadingLevel = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HeadingLevel'), 'HeadingLevel', '__httpwww_stibosystems_comstep_RowTypeType_HeadingLevel', pyxb.binding.datatypes.integer)
    __HeadingLevel._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4176, 8)
    __HeadingLevel._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4176, 8)
    
    HeadingLevel = property(__HeadingLevel.value, __HeadingLevel.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_RowTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4177, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4177, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_RowTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4182, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4182, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_RowTypeType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4184, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4184, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __TableTypeLink.name() : __TableTypeLink,
        __PublicationTypeValidity.name() : __PublicationTypeValidity
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Height.name() : __Height,
        __HeightUnit.name() : __HeightUnit,
        __TextStyle.name() : __TextStyle,
        __BackgroundColor.name() : __BackgroundColor,
        __VerticalAlignment.name() : __VerticalAlignment,
        __RuleAbove.name() : __RuleAbove,
        __RuleBelow.name() : __RuleBelow,
        __CellRotation.name() : __CellRotation,
        __ProcessFlag.name() : __ProcessFlag,
        __CellVerticalStoryDirection.name() : __CellVerticalStoryDirection,
        __CellImageScale.name() : __CellImageScale,
        __KeepWithNext.name() : __KeepWithNext,
        __HeadingLevel.name() : __HeadingLevel,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.RowTypeType = RowTypeType
Namespace.addCategoryObject('typeBinding', 'RowTypeType', RowTypeType)


# Complex type {http://www.stibosystems.com/step}SuppressedAssetCrossReferenceType with content type ELEMENT_ONLY
class SuppressedAssetCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedAssetCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4220, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_SuppressedAssetCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4222, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedAssetCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4224, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4224, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_SuppressedAssetCrossReferenceType_AssetID', _module_typeBindings.StepID, required=True)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4225, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4225, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedAssetCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4226, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4226, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedAssetCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4228, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4228, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __AssetID.name() : __AssetID,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.SuppressedAssetCrossReferenceType = SuppressedAssetCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedAssetCrossReferenceType', SuppressedAssetCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}SuppressedClassificationCrossReferenceType with content type ELEMENT_ONLY
class SuppressedClassificationCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedClassificationCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4232, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_SuppressedClassificationCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4234, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedClassificationCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4236, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4236, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedClassificationCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4237, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4237, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedClassificationCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4239, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4239, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_SuppressedClassificationCrossReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4240, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4240, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID,
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.SuppressedClassificationCrossReferenceType = SuppressedClassificationCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedClassificationCrossReferenceType', SuppressedClassificationCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}SuppressedClassificationReferenceType with content type ELEMENT_ONLY
class SuppressedClassificationReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedClassificationReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4244, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_SuppressedClassificationReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4246, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute InheritedFrom uses Python identifier InheritedFrom
    __InheritedFrom = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'InheritedFrom'), 'InheritedFrom', '__httpwww_stibosystems_comstep_SuppressedClassificationReferenceType_InheritedFrom', pyxb.binding.datatypes.string)
    __InheritedFrom._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4248, 8)
    __InheritedFrom._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4248, 8)
    
    InheritedFrom = property(__InheritedFrom.value, __InheritedFrom.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedClassificationReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4249, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4249, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedClassificationReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4250, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4250, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedClassificationReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4252, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4252, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_SuppressedClassificationReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4253, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4253, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __InheritedFrom.name() : __InheritedFrom,
        __Type.name() : __Type,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID,
        __ClassificationID.name() : __ClassificationID
    })
_module_typeBindings.SuppressedClassificationReferenceType = SuppressedClassificationReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedClassificationReferenceType', SuppressedClassificationReferenceType)


# Complex type {http://www.stibosystems.com/step}SuppressedProductCrossReferenceType with content type ELEMENT_ONLY
class SuppressedProductCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedProductCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4257, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_SuppressedProductCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4259, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedProductCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4261, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4261, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_SuppressedProductCrossReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4262, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4262, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedProductCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4263, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4263, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedProductCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4265, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4265, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.SuppressedProductCrossReferenceType = SuppressedProductCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedProductCrossReferenceType', SuppressedProductCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}SuppressedEntityCrossReferenceType with content type ELEMENT_ONLY
class SuppressedEntityCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedEntityCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4268, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_SuppressedEntityCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4270, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedEntityCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4272, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4272, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_SuppressedEntityCrossReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4273, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4273, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedEntityCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4274, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4274, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedEntityCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4276, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4276, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.SuppressedEntityCrossReferenceType = SuppressedEntityCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedEntityCrossReferenceType', SuppressedEntityCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}SuppressedContextCrossReferenceType with content type EMPTY
class SuppressedContextCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedContextCrossReferenceType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedContextCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4280, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedContextCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4281, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4281, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_SuppressedContextCrossReferenceType_ContextID', _module_typeBindings.StepQualifierID, required=True)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4282, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4282, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedContextCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4283, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4283, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedContextCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4285, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4285, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ContextID.name() : __ContextID,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.SuppressedContextCrossReferenceType = SuppressedContextCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedContextCrossReferenceType', SuppressedContextCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}SuppressedWorkspaceCrossReferenceType with content type EMPTY
class SuppressedWorkspaceCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}SuppressedWorkspaceCrossReferenceType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SuppressedWorkspaceCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4289, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SuppressedWorkspaceCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4290, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4290, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_SuppressedWorkspaceCrossReferenceType_WorkspaceID', _module_typeBindings.StepID, required=True)
    __WorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4291, 8)
    __WorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4291, 8)
    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SuppressedWorkspaceCrossReferenceType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4292, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4292, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_SuppressedWorkspaceCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4294, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4294, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __WorkspaceID.name() : __WorkspaceID,
        __Changed.name() : __Changed,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.SuppressedWorkspaceCrossReferenceType = SuppressedWorkspaceCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'SuppressedWorkspaceCrossReferenceType', SuppressedWorkspaceCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSuppressedClassificationCrossReferenceType with content type ELEMENT_ONLY
class DeleteSuppressedClassificationCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSuppressedClassificationCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4297, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4299, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4301, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4301, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationCrossReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4302, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4302, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4303, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4303, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ClassificationID.name() : __ClassificationID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteSuppressedClassificationCrossReferenceType = DeleteSuppressedClassificationCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteSuppressedClassificationCrossReferenceType', DeleteSuppressedClassificationCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSuppressedClassificationReferenceType with content type ELEMENT_ONLY
class DeleteSuppressedClassificationReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSuppressedClassificationReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4307, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4309, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4311, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4311, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ClassificationID uses Python identifier ClassificationID
    __ClassificationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationID'), 'ClassificationID', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationReferenceType_ClassificationID', _module_typeBindings.StepID, required=True)
    __ClassificationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4312, 8)
    __ClassificationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4312, 8)
    
    ClassificationID = property(__ClassificationID.value, __ClassificationID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteSuppressedClassificationReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4313, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4313, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ClassificationID.name() : __ClassificationID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteSuppressedClassificationReferenceType = DeleteSuppressedClassificationReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteSuppressedClassificationReferenceType', DeleteSuppressedClassificationReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSuppressedProductReferenceType with content type ELEMENT_ONLY
class DeleteSuppressedProductReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSuppressedProductReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4316, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteSuppressedProductReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4318, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSuppressedProductReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4320, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4320, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_DeleteSuppressedProductReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4321, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4321, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteSuppressedProductReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4322, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4322, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteSuppressedProductReferenceType = DeleteSuppressedProductReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteSuppressedProductReferenceType', DeleteSuppressedProductReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSuppressedProductCrossReferenceType with content type ELEMENT_ONLY
class DeleteSuppressedProductCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSuppressedProductCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4325, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteSuppressedProductCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4327, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSuppressedProductCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4329, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4329, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute ProductID uses Python identifier ProductID
    __ProductID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProductID'), 'ProductID', '__httpwww_stibosystems_comstep_DeleteSuppressedProductCrossReferenceType_ProductID', _module_typeBindings.StepID, required=True)
    __ProductID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4330, 8)
    __ProductID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4330, 8)
    
    ProductID = property(__ProductID.value, __ProductID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteSuppressedProductCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4331, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4331, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    
    # Attribute MountLocation uses Python identifier MountLocation
    __MountLocation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MountLocation'), 'MountLocation', '__httpwww_stibosystems_comstep_DeleteSuppressedProductCrossReferenceType_MountLocation', pyxb.binding.datatypes.string)
    __MountLocation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4332, 8)
    __MountLocation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4332, 8)
    
    MountLocation = property(__MountLocation.value, __MountLocation.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __ProductID.name() : __ProductID,
        __QualifierID.name() : __QualifierID,
        __MountLocation.name() : __MountLocation
    })
_module_typeBindings.DeleteSuppressedProductCrossReferenceType = DeleteSuppressedProductCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteSuppressedProductCrossReferenceType', DeleteSuppressedProductCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSuppressedEntityCrossReferenceType with content type ELEMENT_ONLY
class DeleteSuppressedEntityCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSuppressedEntityCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4335, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteSuppressedEntityCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4337, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSuppressedEntityCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4339, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4339, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute EntityID uses Python identifier EntityID
    __EntityID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EntityID'), 'EntityID', '__httpwww_stibosystems_comstep_DeleteSuppressedEntityCrossReferenceType_EntityID', _module_typeBindings.StepID, required=True)
    __EntityID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4340, 8)
    __EntityID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4340, 8)
    
    EntityID = property(__EntityID.value, __EntityID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteSuppressedEntityCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4341, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4341, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __EntityID.name() : __EntityID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteSuppressedEntityCrossReferenceType = DeleteSuppressedEntityCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteSuppressedEntityCrossReferenceType', DeleteSuppressedEntityCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSuppressedAssetCrossReferenceType with content type ELEMENT_ONLY
class DeleteSuppressedAssetCrossReferenceType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSuppressedAssetCrossReferenceType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReferenceType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4344, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}KeyValue uses Python identifier KeyValue
    __KeyValue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), 'KeyValue', '__httpwww_stibosystems_comstep_DeleteSuppressedAssetCrossReferenceType_httpwww_stibosystems_comstepKeyValue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4346, 12), )

    
    KeyValue = property(__KeyValue.value, __KeyValue.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSuppressedAssetCrossReferenceType_Type', _module_typeBindings.StepLinkTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4348, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4348, 8)
    
    Type = property(__Type.value, __Type.set, None, None)

    
    # Attribute AssetID uses Python identifier AssetID
    __AssetID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssetID'), 'AssetID', '__httpwww_stibosystems_comstep_DeleteSuppressedAssetCrossReferenceType_AssetID', _module_typeBindings.StepID, required=True)
    __AssetID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4349, 8)
    __AssetID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4349, 8)
    
    AssetID = property(__AssetID.value, __AssetID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_DeleteSuppressedAssetCrossReferenceType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4350, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4350, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, None)

    _ElementMap.update({
        __KeyValue.name() : __KeyValue
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __AssetID.name() : __AssetID,
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.DeleteSuppressedAssetCrossReferenceType = DeleteSuppressedAssetCrossReferenceType
Namespace.addCategoryObject('typeBinding', 'DeleteSuppressedAssetCrossReferenceType', DeleteSuppressedAssetCrossReferenceType)


# Complex type {http://www.stibosystems.com/step}DeleteSingleDataContainerType with content type EMPTY
class DeleteSingleDataContainerType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DeleteSingleDataContainerType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DeleteSingleDataContainerType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4353, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DeleteSingleDataContainerType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4354, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4354, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of a DataContainer instance to delete.\n                    If ID is not set, the Type attribute must be set (ID or Type is required).\n                    Specifying an ID of a non-existing DataContainer is an error.\n                    Specifying an ID with a type different from the Type attribute provided is an error.\n                    Specifying an ID of a DataContainer that does not belong to the enclosing entity is an error.\n                ')

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_DeleteSingleDataContainerType_Type', _module_typeBindings.StepDataContainerTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4365, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4365, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The type of the (single) DataContainer instance to delete.\n                    If the Type attribute is not set, the ID attribute must be set (ID or Type is required).\n                    Specifying a Type not valid for the Entity is an error.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Type.name() : __Type
    })
_module_typeBindings.DeleteSingleDataContainerType = DeleteSingleDataContainerType
Namespace.addCategoryObject('typeBinding', 'DeleteSingleDataContainerType', DeleteSingleDataContainerType)


# Complex type {http://www.stibosystems.com/step}SystemSetupValueType with content type MIXED
class SystemSetupValueType (pyxb.binding.basis.complexTypeDefinition):
    """
                The system setup value.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SystemSetupValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4396, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Name uses Python identifier Name
    __Name = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Name'), 'Name', '__httpwww_stibosystems_comstep_SystemSetupValueType_Name', pyxb.binding.datatypes.string, required=True)
    __Name._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4403, 8)
    __Name._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4403, 8)
    
    Name = property(__Name.value, __Name.set, None, '\n                    The name of the system setup value.\n                ')

    
    # Attribute UserID uses Python identifier UserID
    __UserID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserID'), 'UserID', '__httpwww_stibosystems_comstep_SystemSetupValueType_UserID', _module_typeBindings.StepUserID)
    __UserID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4410, 8)
    __UserID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4410, 8)
    
    UserID = property(__UserID.value, __UserID.set, None, '\n                    DEPRECATED: Ignored completely for user specific system setups. Will still have effect in global system setup section - but warn if used.\n                ')

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SystemSetupValueType_Type', pyxb.binding.datatypes.string, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4417, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4417, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The type of the system setup value.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Name.name() : __Name,
        __UserID.name() : __UserID,
        __Type.name() : __Type
    })
_module_typeBindings.SystemSetupValueType = SystemSetupValueType
Namespace.addCategoryObject('typeBinding', 'SystemSetupValueType', SystemSetupValueType)


# Complex type {http://www.stibosystems.com/step}TableType with content type ELEMENT_ONLY
class TableType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4427, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Column uses Python identifier Column
    __Column = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Column'), 'Column', '__httpwww_stibosystems_comstep_TableType_httpwww_stibosystems_comstepColumn', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4429, 12), )

    
    Column = property(__Column.value, __Column.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Row uses Python identifier Row
    __Row = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Row'), 'Row', '__httpwww_stibosystems_comstep_TableType_httpwww_stibosystems_comstepRow', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4430, 12), )

    
    Row = property(__Row.value, __Row.set, None, None)

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_TableType_ContextID', _module_typeBindings.StepQualifierID)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4432, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4432, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, None)

    
    # Attribute TableTypeID uses Python identifier TableTypeID
    __TableTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TableTypeID'), 'TableTypeID', '__httpwww_stibosystems_comstep_TableType_TableTypeID', _module_typeBindings.StepAttributeID)
    __TableTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4433, 8)
    __TableTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4433, 8)
    
    TableTypeID = property(__TableTypeID.value, __TableTypeID.set, None, None)

    _ElementMap.update({
        __Column.name() : __Column,
        __Row.name() : __Row
    })
    _AttributeMap.update({
        __ContextID.name() : __ContextID,
        __TableTypeID.name() : __TableTypeID
    })
_module_typeBindings.TableType = TableType
Namespace.addCategoryObject('typeBinding', 'TableType', TableType)


# Complex type {http://www.stibosystems.com/step}TableTypeType with content type ELEMENT_ONLY
class TableTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TableTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TableTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4475, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4477, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4478, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ColumnType uses Python identifier ColumnType
    __ColumnType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ColumnType'), 'ColumnType', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepColumnType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4479, 12), )

    
    ColumnType = property(__ColumnType.value, __ColumnType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}RowType uses Python identifier RowType
    __RowType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'RowType'), 'RowType', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepRowType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4480, 12), )

    
    RowType = property(__RowType.value, __RowType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4481, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TableTransformation uses Python identifier TableTransformation
    __TableTransformation = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TableTransformation'), 'TableTransformation', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepTableTransformation', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4482, 12), )

    
    TableTransformation = property(__TableTransformation.value, __TableTransformation.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TablePaginationPlugin uses Python identifier TablePaginationPlugin
    __TablePaginationPlugin = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TablePaginationPlugin'), 'TablePaginationPlugin', '__httpwww_stibosystems_comstep_TableTypeType_httpwww_stibosystems_comstepTablePaginationPlugin', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4483, 12), )

    
    TablePaginationPlugin = property(__TablePaginationPlugin.value, __TablePaginationPlugin.set, None, None)

    
    # Attribute ProcessFlag uses Python identifier ProcessFlag
    __ProcessFlag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessFlag'), 'ProcessFlag', '__httpwww_stibosystems_comstep_TableTypeType_ProcessFlag', pyxb.binding.datatypes.string)
    __ProcessFlag._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4485, 8)
    __ProcessFlag._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4485, 8)
    
    ProcessFlag = property(__ProcessFlag.value, __ProcessFlag.set, None, None)

    
    # Attribute VerticalSpan uses Python identifier VerticalSpan
    __VerticalSpan = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalSpan'), 'VerticalSpan', '__httpwww_stibosystems_comstep_TableTypeType_VerticalSpan', pyxb.binding.datatypes.string)
    __VerticalSpan._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4486, 8)
    __VerticalSpan._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4486, 8)
    
    VerticalSpan = property(__VerticalSpan.value, __VerticalSpan.set, None, None)

    
    # Attribute HorizontalSpan uses Python identifier HorizontalSpan
    __HorizontalSpan = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HorizontalSpan'), 'HorizontalSpan', '__httpwww_stibosystems_comstep_TableTypeType_HorizontalSpan', pyxb.binding.datatypes.string)
    __HorizontalSpan._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4487, 8)
    __HorizontalSpan._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4487, 8)
    
    HorizontalSpan = property(__HorizontalSpan.value, __HorizontalSpan.set, None, None)

    
    # Attribute RuleAbove uses Python identifier RuleAbove
    __RuleAbove = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleAbove'), 'RuleAbove', '__httpwww_stibosystems_comstep_TableTypeType_RuleAbove', pyxb.binding.datatypes.string)
    __RuleAbove._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4488, 8)
    __RuleAbove._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4488, 8)
    
    RuleAbove = property(__RuleAbove.value, __RuleAbove.set, None, None)

    
    # Attribute BackgroundColor uses Python identifier BackgroundColor
    __BackgroundColor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BackgroundColor'), 'BackgroundColor', '__httpwww_stibosystems_comstep_TableTypeType_BackgroundColor', pyxb.binding.datatypes.string)
    __BackgroundColor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4489, 8)
    __BackgroundColor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4489, 8)
    
    BackgroundColor = property(__BackgroundColor.value, __BackgroundColor.set, None, None)

    
    # Attribute RuleBelow uses Python identifier RuleBelow
    __RuleBelow = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleBelow'), 'RuleBelow', '__httpwww_stibosystems_comstep_TableTypeType_RuleBelow', pyxb.binding.datatypes.string)
    __RuleBelow._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4490, 8)
    __RuleBelow._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4490, 8)
    
    RuleBelow = property(__RuleBelow.value, __RuleBelow.set, None, None)

    
    # Attribute RuleRight uses Python identifier RuleRight
    __RuleRight = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleRight'), 'RuleRight', '__httpwww_stibosystems_comstep_TableTypeType_RuleRight', pyxb.binding.datatypes.string)
    __RuleRight._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4491, 8)
    __RuleRight._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4491, 8)
    
    RuleRight = property(__RuleRight.value, __RuleRight.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_TableTypeType_ID', _module_typeBindings.StepAttributeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4492, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4492, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_TableTypeType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4493, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4493, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, None)

    
    # Attribute CellRotation uses Python identifier CellRotation
    __CellRotation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellRotation'), 'CellRotation', '__httpwww_stibosystems_comstep_TableTypeType_CellRotation', pyxb.binding.datatypes.string)
    __CellRotation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4494, 8)
    __CellRotation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4494, 8)
    
    CellRotation = property(__CellRotation.value, __CellRotation.set, None, None)

    
    # Attribute RuleLeft uses Python identifier RuleLeft
    __RuleLeft = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RuleLeft'), 'RuleLeft', '__httpwww_stibosystems_comstep_TableTypeType_RuleLeft', pyxb.binding.datatypes.string)
    __RuleLeft._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4495, 8)
    __RuleLeft._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4495, 8)
    
    RuleLeft = property(__RuleLeft.value, __RuleLeft.set, None, None)

    
    # Attribute TextStyle uses Python identifier TextStyle
    __TextStyle = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TextStyle'), 'TextStyle', '__httpwww_stibosystems_comstep_TableTypeType_TextStyle', pyxb.binding.datatypes.string)
    __TextStyle._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4496, 8)
    __TextStyle._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4496, 8)
    
    TextStyle = property(__TextStyle.value, __TextStyle.set, None, None)

    
    # Attribute VerticalAlignment uses Python identifier VerticalAlignment
    __VerticalAlignment = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VerticalAlignment'), 'VerticalAlignment', '__httpwww_stibosystems_comstep_TableTypeType_VerticalAlignment', pyxb.binding.datatypes.string)
    __VerticalAlignment._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4497, 8)
    __VerticalAlignment._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4497, 8)
    
    VerticalAlignment = property(__VerticalAlignment.value, __VerticalAlignment.set, None, None)

    
    # Attribute CellVerticalStoryDirection uses Python identifier CellVerticalStoryDirection
    __CellVerticalStoryDirection = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellVerticalStoryDirection'), 'CellVerticalStoryDirection', '__httpwww_stibosystems_comstep_TableTypeType_CellVerticalStoryDirection', pyxb.binding.datatypes.string)
    __CellVerticalStoryDirection._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4498, 8)
    __CellVerticalStoryDirection._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4498, 8)
    
    CellVerticalStoryDirection = property(__CellVerticalStoryDirection.value, __CellVerticalStoryDirection.set, None, None)

    
    # Attribute CellImageScale uses Python identifier CellImageScale
    __CellImageScale = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'CellImageScale'), 'CellImageScale', '__httpwww_stibosystems_comstep_TableTypeType_CellImageScale', pyxb.binding.datatypes.string)
    __CellImageScale._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4499, 8)
    __CellImageScale._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4499, 8)
    
    CellImageScale = property(__CellImageScale.value, __CellImageScale.set, None, None)

    
    # Attribute Width uses Python identifier Width
    __Width = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Width'), 'Width', '__httpwww_stibosystems_comstep_TableTypeType_Width', pyxb.binding.datatypes.decimal)
    __Width._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4500, 8)
    __Width._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4500, 8)
    
    Width = property(__Width.value, __Width.set, None, None)

    
    # Attribute WidthUnit uses Python identifier WidthUnit
    __WidthUnit = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WidthUnit'), 'WidthUnit', '__httpwww_stibosystems_comstep_TableTypeType_WidthUnit', pyxb.binding.datatypes.string)
    __WidthUnit._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4501, 8)
    __WidthUnit._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4501, 8)
    
    WidthUnit = property(__WidthUnit.value, __WidthUnit.set, None, None)

    
    # Attribute Height uses Python identifier Height
    __Height = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Height'), 'Height', '__httpwww_stibosystems_comstep_TableTypeType_Height', pyxb.binding.datatypes.decimal)
    __Height._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4502, 8)
    __Height._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4502, 8)
    
    Height = property(__Height.value, __Height.set, None, None)

    
    # Attribute HeightUnit uses Python identifier HeightUnit
    __HeightUnit = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'HeightUnit'), 'HeightUnit', '__httpwww_stibosystems_comstep_TableTypeType_HeightUnit', pyxb.binding.datatypes.string)
    __HeightUnit._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4503, 8)
    __HeightUnit._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4503, 8)
    
    HeightUnit = property(__HeightUnit.value, __HeightUnit.set, None, None)

    
    # Attribute TableOrientation uses Python identifier TableOrientation
    __TableOrientation = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TableOrientation'), 'TableOrientation', '__httpwww_stibosystems_comstep_TableTypeType_TableOrientation', pyxb.binding.datatypes.string)
    __TableOrientation._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4504, 8)
    __TableOrientation._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4504, 8)
    
    TableOrientation = property(__TableOrientation.value, __TableOrientation.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_TableTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4505, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4505, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_TableTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4510, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4510, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_TableTypeType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4512, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4512, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __UserTypeLink.name() : __UserTypeLink,
        __ColumnType.name() : __ColumnType,
        __RowType.name() : __RowType,
        __DimensionLink.name() : __DimensionLink,
        __TableTransformation.name() : __TableTransformation,
        __TablePaginationPlugin.name() : __TablePaginationPlugin
    })
    _AttributeMap.update({
        __ProcessFlag.name() : __ProcessFlag,
        __VerticalSpan.name() : __VerticalSpan,
        __HorizontalSpan.name() : __HorizontalSpan,
        __RuleAbove.name() : __RuleAbove,
        __BackgroundColor.name() : __BackgroundColor,
        __RuleBelow.name() : __RuleBelow,
        __RuleRight.name() : __RuleRight,
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __CellRotation.name() : __CellRotation,
        __RuleLeft.name() : __RuleLeft,
        __TextStyle.name() : __TextStyle,
        __VerticalAlignment.name() : __VerticalAlignment,
        __CellVerticalStoryDirection.name() : __CellVerticalStoryDirection,
        __CellImageScale.name() : __CellImageScale,
        __Width.name() : __Width,
        __WidthUnit.name() : __WidthUnit,
        __Height.name() : __Height,
        __HeightUnit.name() : __HeightUnit,
        __TableOrientation.name() : __TableOrientation,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.TableTypeType = TableTypeType
Namespace.addCategoryObject('typeBinding', 'TableTypeType', TableTypeType)


# Complex type {http://www.stibosystems.com/step}TargetUserTypeLinkType with content type EMPTY
class TargetUserTypeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TargetUserTypeLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5072, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_TargetUserTypeLinkType_UserTypeID', _module_typeBindings.StepObjectTypeID, required=True)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5073, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5073, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __UserTypeID.name() : __UserTypeID
    })
_module_typeBindings.TargetUserTypeLinkType = TargetUserTypeLinkType
Namespace.addCategoryObject('typeBinding', 'TargetUserTypeLinkType', TargetUserTypeLinkType)


# Complex type {http://www.stibosystems.com/step}TermType with content type MIXED
class TermType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}TermType with content type MIXED"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TermType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5082, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute MaximumQuantity uses Python identifier MaximumQuantity
    __MaximumQuantity = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaximumQuantity'), 'MaximumQuantity', '__httpwww_stibosystems_comstep_TermType_MaximumQuantity', pyxb.binding.datatypes.string)
    __MaximumQuantity._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5083, 8)
    __MaximumQuantity._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5083, 8)
    
    MaximumQuantity = property(__MaximumQuantity.value, __MaximumQuantity.set, None, None)

    
    # Attribute EndDate uses Python identifier EndDate
    __EndDate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EndDate'), 'EndDate', '__httpwww_stibosystems_comstep_TermType_EndDate', pyxb.binding.datatypes.string)
    __EndDate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5084, 8)
    __EndDate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5084, 8)
    
    EndDate = property(__EndDate.value, __EndDate.set, None, None)

    
    # Attribute TermsListID uses Python identifier TermsListID
    __TermsListID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TermsListID'), 'TermsListID', '__httpwww_stibosystems_comstep_TermType_TermsListID', _module_typeBindings.StepID)
    __TermsListID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5085, 8)
    __TermsListID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5085, 8)
    
    TermsListID = property(__TermsListID.value, __TermsListID.set, None, None)

    
    # Attribute MinimumQuantity uses Python identifier MinimumQuantity
    __MinimumQuantity = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MinimumQuantity'), 'MinimumQuantity', '__httpwww_stibosystems_comstep_TermType_MinimumQuantity', pyxb.binding.datatypes.string)
    __MinimumQuantity._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5086, 8)
    __MinimumQuantity._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5086, 8)
    
    MinimumQuantity = property(__MinimumQuantity.value, __MinimumQuantity.set, None, None)

    
    # Attribute LeadTime uses Python identifier LeadTime
    __LeadTime = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LeadTime'), 'LeadTime', '__httpwww_stibosystems_comstep_TermType_LeadTime', pyxb.binding.datatypes.string)
    __LeadTime._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5087, 8)
    __LeadTime._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5087, 8)
    
    LeadTime = property(__LeadTime.value, __LeadTime.set, None, None)

    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_TermType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5088, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5088, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, None)

    
    # Attribute StartDate uses Python identifier StartDate
    __StartDate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StartDate'), 'StartDate', '__httpwww_stibosystems_comstep_TermType_StartDate', pyxb.binding.datatypes.string)
    __StartDate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5089, 8)
    __StartDate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5089, 8)
    
    StartDate = property(__StartDate.value, __StartDate.set, None, None)

    
    # Attribute LotSize uses Python identifier LotSize
    __LotSize = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LotSize'), 'LotSize', '__httpwww_stibosystems_comstep_TermType_LotSize', pyxb.binding.datatypes.string)
    __LotSize._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5090, 8)
    __LotSize._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5090, 8)
    
    LotSize = property(__LotSize.value, __LotSize.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __MaximumQuantity.name() : __MaximumQuantity,
        __EndDate.name() : __EndDate,
        __TermsListID.name() : __TermsListID,
        __MinimumQuantity.name() : __MinimumQuantity,
        __LeadTime.name() : __LeadTime,
        __UnitID.name() : __UnitID,
        __StartDate.name() : __StartDate,
        __LotSize.name() : __LotSize
    })
_module_typeBindings.TermType = TermType
Namespace.addCategoryObject('typeBinding', 'TermType', TermType)


# Complex type {http://www.stibosystems.com/step}UnitType with content type ELEMENT_ONLY
class UnitType (pyxb.binding.basis.complexTypeDefinition):
    """
                A unit may contain conversions to other units.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5152, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_UnitType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5160, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UnitConversion uses Python identifier UnitConversion
    __UnitConversion = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UnitConversion'), 'UnitConversion', '__httpwww_stibosystems_comstep_UnitType_httpwww_stibosystems_comstepUnitConversion', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5161, 12), )

    
    UnitConversion = property(__UnitConversion.value, __UnitConversion.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_UnitType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5162, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_UnitType_ID', _module_typeBindings.StepUnitID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5164, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5164, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_UnitType_ParentID', _module_typeBindings.StepID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5171, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5171, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent unit group.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_UnitType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5178, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5178, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_UnitType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5183, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5183, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_UnitType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5185, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5185, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __UnitConversion.name() : __UnitConversion,
        __MetaData.name() : __MetaData
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ParentID.name() : __ParentID,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.UnitType = UnitType
Namespace.addCategoryObject('typeBinding', 'UnitType', UnitType)


# Complex type {http://www.stibosystems.com/step}UnitConversionType with content type EMPTY
class UnitConversionType (pyxb.binding.basis.complexTypeDefinition):
    """
                The UnitConversion element specifies a conversion to a base unit: BaseValue = Value * Factor + Offset
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitConversionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5217, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute Factor uses Python identifier Factor
    __Factor = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Factor'), 'Factor', '__httpwww_stibosystems_comstep_UnitConversionType_Factor', pyxb.binding.datatypes.string)
    __Factor._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5223, 8)
    __Factor._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5223, 8)
    
    Factor = property(__Factor.value, __Factor.set, None, '\n                    The factor in converting value to base unit.\n                ')

    
    # Attribute BaseUnitID uses Python identifier BaseUnitID
    __BaseUnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'BaseUnitID'), 'BaseUnitID', '__httpwww_stibosystems_comstep_UnitConversionType_BaseUnitID', _module_typeBindings.StepUnitID, required=True)
    __BaseUnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5230, 8)
    __BaseUnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5230, 8)
    
    BaseUnitID = property(__BaseUnitID.value, __BaseUnitID.set, None, '\n                    The ID of the base unit for this conversion.\n                ')

    
    # Attribute Offset uses Python identifier Offset
    __Offset = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Offset'), 'Offset', '__httpwww_stibosystems_comstep_UnitConversionType_Offset', pyxb.binding.datatypes.string, unicode_default='0')
    __Offset._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5237, 8)
    __Offset._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5237, 8)
    
    Offset = property(__Offset.value, __Offset.set, None, '\n                    The offset in converting value to base unit.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __Factor.name() : __Factor,
        __BaseUnitID.name() : __BaseUnitID,
        __Offset.name() : __Offset
    })
_module_typeBindings.UnitConversionType = UnitConversionType
Namespace.addCategoryObject('typeBinding', 'UnitConversionType', UnitConversionType)


# Complex type {http://www.stibosystems.com/step}UnitFamilyType with content type ELEMENT_ONLY
class UnitFamilyType (pyxb.binding.basis.complexTypeDefinition):
    """
                A UnitFamily contains a number of units and other unit families
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitFamilyType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5247, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_UnitFamilyType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5254, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_UnitFamilyType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5255, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Unit uses Python identifier Unit
    __Unit = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Unit'), 'Unit', '__httpwww_stibosystems_comstep_UnitFamilyType_httpwww_stibosystems_comstepUnit', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5256, 12), )

    
    Unit = property(__Unit.value, __Unit.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_UnitFamilyType_ID', _module_typeBindings.StepUnitID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5258, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5258, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_UnitFamilyType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5266, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5266, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_UnitFamilyType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5267, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5267, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Unit.name() : __Unit
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.UnitFamilyType = UnitFamilyType
Namespace.addCategoryObject('typeBinding', 'UnitFamilyType', UnitFamilyType)


# Complex type {http://www.stibosystems.com/step}UnitLinkType with content type EMPTY
class UnitLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links to a unit.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5294, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_UnitLinkType_UnitID', _module_typeBindings.StepUnitID, required=True)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5300, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5300, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, '\n                    The ID of the unit to link to.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __UnitID.name() : __UnitID
    })
_module_typeBindings.UnitLinkType = UnitLinkType
Namespace.addCategoryObject('typeBinding', 'UnitLinkType', UnitLinkType)


# Complex type {http://www.stibosystems.com/step}BusinessRuleType with content type ELEMENT_ONLY
class BusinessRuleType (pyxb.binding.basis.complexTypeDefinition):
    """
                A configuration of a Business Rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5358, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5365, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5366, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Description uses Python identifier Description
    __Description = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Description'), 'Description', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepDescription', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5367, 12), )

    
    Description = property(__Description.value, __Description.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Dependency uses Python identifier Dependency
    __Dependency = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Dependency'), 'Dependency', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepDependency', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5368, 12), )

    
    Dependency = property(__Dependency.value, __Dependency.set, None, None)

    
    # Element {http://www.stibosystems.com/step}FunctionDependency uses Python identifier FunctionDependency
    __FunctionDependency = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FunctionDependency'), 'FunctionDependency', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepFunctionDependency', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5369, 12), )

    
    FunctionDependency = property(__FunctionDependency.value, __FunctionDependency.set, None, None)

    
    # Element {http://www.stibosystems.com/step}OnApprove uses Python identifier OnApprove
    __OnApprove = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'OnApprove'), 'OnApprove', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepOnApprove', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5370, 12), )

    
    OnApprove = property(__OnApprove.value, __OnApprove.set, None, '\n                        Ignored for business rules of type Library.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5377, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidObjectTypes uses Python identifier ValidObjectTypes
    __ValidObjectTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypes'), 'ValidObjectTypes', '__httpwww_stibosystems_comstep_BusinessRuleType_httpwww_stibosystems_comstepValidObjectTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5378, 12), )

    
    ValidObjectTypes = property(__ValidObjectTypes.value, __ValidObjectTypes.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_BusinessRuleType_ID', _module_typeBindings.StepBusinessRuleID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5381, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5381, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the Business Rule.\n                ')

    
    # Attribute Scope uses Python identifier Scope
    __Scope = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Scope'), 'Scope', '__httpwww_stibosystems_comstep_BusinessRuleType_Scope', _module_typeBindings.STD_ANON_11)
    __Scope._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5388, 8)
    __Scope._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5388, 8)
    
    Scope = property(__Scope.value, __Scope.set, None, '\n                    The Scope of the Business Rule - required for business rules of type Action and Condition. Ignored for business rules of type Library.\n                ')

    
    # Attribute RunPrivileged uses Python identifier RunPrivileged
    __RunPrivileged = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RunPrivileged'), 'RunPrivileged', '__httpwww_stibosystems_comstep_BusinessRuleType_RunPrivileged', _module_typeBindings.TrueFalseType, unicode_default='false')
    __RunPrivileged._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5401, 8)
    __RunPrivileged._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5401, 8)
    
    RunPrivileged = property(__RunPrivileged.value, __RunPrivileged.set, None, '\n                    Run privileged - without privilege check. Ignored for business rules of type Library.\n                ')

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_BusinessRuleType_Type', _module_typeBindings.STD_ANON_12, required=True)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5408, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5408, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The Type of the Business Rule.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_BusinessRuleType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5423, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5423, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __Description.name() : __Description,
        __Dependency.name() : __Dependency,
        __FunctionDependency.name() : __FunctionDependency,
        __OnApprove.name() : __OnApprove,
        __Configuration.name() : __Configuration,
        __ValidObjectTypes.name() : __ValidObjectTypes
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Scope.name() : __Scope,
        __RunPrivileged.name() : __RunPrivileged,
        __Type.name() : __Type,
        __Selected.name() : __Selected
    })
_module_typeBindings.BusinessRuleType = BusinessRuleType
Namespace.addCategoryObject('typeBinding', 'BusinessRuleType', BusinessRuleType)


# Complex type {http://www.stibosystems.com/step}ValidObjectTypeType with content type EMPTY
class ValidObjectTypeType (pyxb.binding.basis.complexTypeDefinition):
    """
                A valid object type for a business rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5426, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ValidObjectTypeType_ID', _module_typeBindings.StepObjectTypeID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5432, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5432, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the valid object type.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.ValidObjectTypeType = ValidObjectTypeType
Namespace.addCategoryObject('typeBinding', 'ValidObjectTypeType', ValidObjectTypeType)


# Complex type {http://www.stibosystems.com/step}LocalBusinessRuleType with content type ELEMENT_ONLY
class LocalBusinessRuleType (pyxb.binding.basis.complexTypeDefinition):
    """
                A configuration of a Local Business Rule used within other objects; setup-groups and approval-info is superflous.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRuleType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5461, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5468, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Description uses Python identifier Description
    __Description = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Description'), 'Description', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_httpwww_stibosystems_comstepDescription', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5469, 12), )

    
    Description = property(__Description.value, __Description.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Dependency uses Python identifier Dependency
    __Dependency = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Dependency'), 'Dependency', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_httpwww_stibosystems_comstepDependency', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5470, 12), )

    
    Dependency = property(__Dependency.value, __Dependency.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5471, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidObjectTypes uses Python identifier ValidObjectTypes
    __ValidObjectTypes = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypes'), 'ValidObjectTypes', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_httpwww_stibosystems_comstepValidObjectTypes', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5472, 12), )

    
    ValidObjectTypes = property(__ValidObjectTypes.value, __ValidObjectTypes.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_ID', _module_typeBindings.StepBusinessRuleID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5475, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5475, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the Business Rule.\n                ')

    
    # Attribute Scope uses Python identifier Scope
    __Scope = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Scope'), 'Scope', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_Scope', _module_typeBindings.STD_ANON_13, required=True)
    __Scope._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5482, 8)
    __Scope._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5482, 8)
    
    Scope = property(__Scope.value, __Scope.set, None, '\n                    The Scope of the Business Rule.\n                ')

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_LocalBusinessRuleType_Type', _module_typeBindings.STD_ANON_14)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5495, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5495, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The Type of the Business Rule.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __Description.name() : __Description,
        __Dependency.name() : __Dependency,
        __Configuration.name() : __Configuration,
        __ValidObjectTypes.name() : __ValidObjectTypes
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Scope.name() : __Scope,
        __Type.name() : __Type
    })
_module_typeBindings.LocalBusinessRuleType = LocalBusinessRuleType
Namespace.addCategoryObject('typeBinding', 'LocalBusinessRuleType', LocalBusinessRuleType)


# Complex type {http://www.stibosystems.com/step}BusinessRuleLinkType with content type EMPTY
class BusinessRuleLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                A reference to a Business Rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5510, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_BusinessRuleLinkType_ID', _module_typeBindings.StepBusinessRuleID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5516, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5516, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the Business Rule.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.BusinessRuleLinkType = BusinessRuleLinkType
Namespace.addCategoryObject('typeBinding', 'BusinessRuleLinkType', BusinessRuleLinkType)


# Complex type {http://www.stibosystems.com/step}BusinessRuleDependencyType with content type EMPTY
class BusinessRuleDependencyType (pyxb.binding.basis.complexTypeDefinition):
    """
                A business library dependency of a Business Rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleDependencyType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5533, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute LibraryID uses Python identifier LibraryID
    __LibraryID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LibraryID'), 'LibraryID', '__httpwww_stibosystems_comstep_BusinessRuleDependencyType_LibraryID', _module_typeBindings.StepBusinessRuleID, required=True)
    __LibraryID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5539, 8)
    __LibraryID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5539, 8)
    
    LibraryID = property(__LibraryID.value, __LibraryID.set, None, '\n                    The ID of the Library Business Rule.\n                ')

    
    # Attribute LibraryAlias uses Python identifier LibraryAlias
    __LibraryAlias = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LibraryAlias'), 'LibraryAlias', '__httpwww_stibosystems_comstep_BusinessRuleDependencyType_LibraryAlias', pyxb.binding.datatypes.string, required=True)
    __LibraryAlias._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5546, 8)
    __LibraryAlias._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5546, 8)
    
    LibraryAlias = property(__LibraryAlias.value, __LibraryAlias.set, None, '\n                    The Alias name of the Library Business Rule when used in this context.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __LibraryID.name() : __LibraryID,
        __LibraryAlias.name() : __LibraryAlias
    })
_module_typeBindings.BusinessRuleDependencyType = BusinessRuleDependencyType
Namespace.addCategoryObject('typeBinding', 'BusinessRuleDependencyType', BusinessRuleDependencyType)


# Complex type {http://www.stibosystems.com/step}BusinessFunctionDependencyType with content type EMPTY
class BusinessFunctionDependencyType (pyxb.binding.basis.complexTypeDefinition):
    """
                A business function dependency of a Business Rule.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'BusinessFunctionDependencyType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5554, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute FunctionID uses Python identifier FunctionID
    __FunctionID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'FunctionID'), 'FunctionID', '__httpwww_stibosystems_comstep_BusinessFunctionDependencyType_FunctionID', _module_typeBindings.StepBusinessRuleID, required=True)
    __FunctionID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5560, 8)
    __FunctionID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5560, 8)
    
    FunctionID = property(__FunctionID.value, __FunctionID.set, None, '\n                    The ID of the Business Function.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __FunctionID.name() : __FunctionID
    })
_module_typeBindings.BusinessFunctionDependencyType = BusinessFunctionDependencyType
Namespace.addCategoryObject('typeBinding', 'BusinessFunctionDependencyType', BusinessFunctionDependencyType)


# Complex type {http://www.stibosystems.com/step}STEPWorkflowType with content type ELEMENT_ONLY
class STEPWorkflowType (pyxb.binding.basis.complexTypeDefinition):
    """
                A configuration of a STEP Workflow.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflowType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5633, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}BusinessRuleLink uses Python identifier BusinessRuleLink
    __BusinessRuleLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleLink'), 'BusinessRuleLink', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepBusinessRuleLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5640, 12), )

    
    BusinessRuleLink = property(__BusinessRuleLink.value, __BusinessRuleLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5641, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5642, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5643, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidUserTypeLink uses Python identifier ValidUserTypeLink
    __ValidUserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidUserTypeLink'), 'ValidUserTypeLink', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepValidUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5644, 12), )

    
    ValidUserTypeLink = property(__ValidUserTypeLink.value, __ValidUserTypeLink.set, None, '\n                        A list of object types valid in the context of the STEP Workflow.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5651, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Element {http://www.stibosystems.com/step}LocalBusinessRule uses Python identifier LocalBusinessRule
    __LocalBusinessRule = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRule'), 'LocalBusinessRule', '__httpwww_stibosystems_comstep_STEPWorkflowType_httpwww_stibosystems_comstepLocalBusinessRule', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5652, 12), )

    
    LocalBusinessRule = property(__LocalBusinessRule.value, __LocalBusinessRule.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_STEPWorkflowType_ID', _module_typeBindings.StepWorkflowID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5655, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5655, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the STEP Workflow.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_STEPWorkflowType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5662, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5662, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_STEPWorkflowType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5663, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5663, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, None)

    _ElementMap.update({
        __BusinessRuleLink.name() : __BusinessRuleLink,
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ValidUserTypeLink.name() : __ValidUserTypeLink,
        __Configuration.name() : __Configuration,
        __LocalBusinessRule.name() : __LocalBusinessRule
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.STEPWorkflowType = STEPWorkflowType
Namespace.addCategoryObject('typeBinding', 'STEPWorkflowType', STEPWorkflowType)


# Complex type {http://www.stibosystems.com/step}STEPWorkflowStateBindType with content type EMPTY
class STEPWorkflowStateBindType (pyxb.binding.basis.complexTypeDefinition):
    """
                Optional information that can be added to Products. Will be resolved to a business rule binding during
                import. Typically expresses an expected task during import and the binding allows custom business rules
                to verify task and take appropriate action.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflowStateBindType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5666, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute WorkflowID uses Python identifier WorkflowID
    __WorkflowID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkflowID'), 'WorkflowID', '__httpwww_stibosystems_comstep_STEPWorkflowStateBindType_WorkflowID', _module_typeBindings.StepWorkflowID, required=True)
    __WorkflowID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5674, 8)
    __WorkflowID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5674, 8)
    
    WorkflowID = property(__WorkflowID.value, __WorkflowID.set, None, None)

    
    # Attribute StateID uses Python identifier StateID
    __StateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StateID'), 'StateID', '__httpwww_stibosystems_comstep_STEPWorkflowStateBindType_StateID', pyxb.binding.datatypes.string, required=True)
    __StateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5675, 8)
    __StateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5675, 8)
    
    StateID = property(__StateID.value, __StateID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __WorkflowID.name() : __WorkflowID,
        __StateID.name() : __StateID
    })
_module_typeBindings.STEPWorkflowStateBindType = STEPWorkflowStateBindType
Namespace.addCategoryObject('typeBinding', 'STEPWorkflowStateBindType', STEPWorkflowStateBindType)


# Complex type {http://www.stibosystems.com/step}SetupGroupLinkType with content type EMPTY
class SetupGroupLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                A Set of Setup Group parents
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5678, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute SetupGroupID uses Python identifier SetupGroupID
    __SetupGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'SetupGroupID'), 'SetupGroupID', '__httpwww_stibosystems_comstep_SetupGroupLinkType_SetupGroupID', _module_typeBindings.StepSetupGroupID, required=True)
    __SetupGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5685, 8)
    __SetupGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5685, 8)
    
    SetupGroupID = property(__SetupGroupID.value, __SetupGroupID.set, None, '\n                    ID of the parent setup group.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __SetupGroupID.name() : __SetupGroupID
    })
_module_typeBindings.SetupGroupLinkType = SetupGroupLinkType
Namespace.addCategoryObject('typeBinding', 'SetupGroupLinkType', SetupGroupLinkType)


# Complex type {http://www.stibosystems.com/step}PortalConfigurationType with content type ELEMENT_ONLY
class PortalConfigurationType (pyxb.binding.basis.complexTypeDefinition):
    """
                A configuration of a portal.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'PortalConfigurationType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5695, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_PortalConfigurationType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5702, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the PortalConfiguration is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_PortalConfigurationType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5709, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_PortalConfigurationType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5710, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_PortalConfigurationType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5711, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_PortalConfigurationType_ID', _module_typeBindings.StepPortalConfigurationID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5713, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5713, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the portal configuration.\n                ')

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID
    })
_module_typeBindings.PortalConfigurationType = PortalConfigurationType
Namespace.addCategoryObject('typeBinding', 'PortalConfigurationType', PortalConfigurationType)


# Complex type {http://www.stibosystems.com/step}MatchCodeType with content type ELEMENT_ONLY
class MatchCodeType (pyxb.binding.basis.complexTypeDefinition):
    """
                A configuration of a Match Code.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchCodeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5733, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5740, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the Match Code is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5747, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5748, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidObjectType uses Python identifier ValidObjectType
    __ValidObjectType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectType'), 'ValidObjectType', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepValidObjectType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5749, 12), )

    
    ValidObjectType = property(__ValidObjectType.value, __ValidObjectType.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidForProductHierarchy uses Python identifier ValidForProductHierarchy
    __ValidForProductHierarchy = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidForProductHierarchy'), 'ValidForProductHierarchy', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepValidForProductHierarchy', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5751, 16), )

    
    ValidForProductHierarchy = property(__ValidForProductHierarchy.value, __ValidForProductHierarchy.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidForClassificationHierarchy uses Python identifier ValidForClassificationHierarchy
    __ValidForClassificationHierarchy = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidForClassificationHierarchy'), 'ValidForClassificationHierarchy', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepValidForClassificationHierarchy', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5752, 16), )

    
    ValidForClassificationHierarchy = property(__ValidForClassificationHierarchy.value, __ValidForClassificationHierarchy.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidForEntityHierarchy uses Python identifier ValidForEntityHierarchy
    __ValidForEntityHierarchy = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidForEntityHierarchy'), 'ValidForEntityHierarchy', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepValidForEntityHierarchy', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5753, 16), )

    
    ValidForEntityHierarchy = property(__ValidForEntityHierarchy.value, __ValidForEntityHierarchy.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ValidForCollection uses Python identifier ValidForCollection
    __ValidForCollection = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ValidForCollection'), 'ValidForCollection', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepValidForCollection', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5754, 16), )

    
    ValidForCollection = property(__ValidForCollection.value, __ValidForCollection.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Template uses Python identifier Template
    __Template = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Template'), 'Template', '__httpwww_stibosystems_comstep_MatchCodeType_httpwww_stibosystems_comstepTemplate', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5756, 12), )

    
    Template = property(__Template.value, __Template.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_MatchCodeType_ID', _module_typeBindings.StepMatchCodeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5759, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5759, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the Match Code.\n                ')

    
    # Attribute WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_MatchCodeType_WorkspaceID', _module_typeBindings.StepID)
    __WorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5766, 8)
    __WorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5766, 8)
    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, '\n                    Workspace to use when importing product data coming in from this subscription.\n                ')

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_MatchCodeType_ContextID', _module_typeBindings.StepQualifierID)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5773, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5773, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, '\n                    Context to use when importing product data coming in from this subscription.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_MatchCodeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5780, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5780, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_MatchCodeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5785, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5785, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_MatchCodeType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5787, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5787, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute WindowSize uses Python identifier WindowSize
    __WindowSize = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WindowSize'), 'WindowSize', '__httpwww_stibosystems_comstep_MatchCodeType_WindowSize', pyxb.binding.datatypes.string)
    __WindowSize._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5789, 8)
    __WindowSize._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5789, 8)
    
    WindowSize = property(__WindowSize.value, __WindowSize.set, None, '\n                    Size of the sliding window used with this match code.\n                ')

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ValidObjectType.name() : __ValidObjectType,
        __ValidForProductHierarchy.name() : __ValidForProductHierarchy,
        __ValidForClassificationHierarchy.name() : __ValidForClassificationHierarchy,
        __ValidForEntityHierarchy.name() : __ValidForEntityHierarchy,
        __ValidForCollection.name() : __ValidForCollection,
        __Template.name() : __Template
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __WorkspaceID.name() : __WorkspaceID,
        __ContextID.name() : __ContextID,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed,
        __WindowSize.name() : __WindowSize
    })
_module_typeBindings.MatchCodeType = MatchCodeType
Namespace.addCategoryObject('typeBinding', 'MatchCodeType', MatchCodeType)


# Complex type {http://www.stibosystems.com/step}MatchingAlgorithmType with content type ELEMENT_ONLY
class MatchingAlgorithmType (pyxb.binding.basis.complexTypeDefinition):
    """
                A configuration of a Matching Algorithm.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithmType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5826, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5833, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the Match Code is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5840, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5841, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MatchingAlgorithmConfiguration uses Python identifier MatchingAlgorithmConfiguration
    __MatchingAlgorithmConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithmConfiguration'), 'MatchingAlgorithmConfiguration', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_httpwww_stibosystems_comstepMatchingAlgorithmConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5842, 12), )

    
    MatchingAlgorithmConfiguration = property(__MatchingAlgorithmConfiguration.value, __MatchingAlgorithmConfiguration.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_ID', _module_typeBindings.StepMatchingAlgorithmID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5845, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5845, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    The ID of the Match Code.\n                ')

    
    # Attribute WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_WorkspaceID', _module_typeBindings.StepID)
    __WorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5852, 8)
    __WorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5852, 8)
    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, '\n                    Workspace to use when importing product data coming in from this subscription.\n                ')

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_ContextID', _module_typeBindings.StepQualifierID)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5859, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5859, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, '\n                    Context to use when importing product data coming in from this subscription.\n                ')

    
    # Attribute MatchCodeID uses Python identifier MatchCodeID
    __MatchCodeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MatchCodeID'), 'MatchCodeID', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_MatchCodeID', _module_typeBindings.StepMatchCodeID)
    __MatchCodeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5866, 8)
    __MatchCodeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5866, 8)
    
    MatchCodeID = property(__MatchCodeID.value, __MatchCodeID.set, None, '\n                    The attached match code for this matching algorithm.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5873, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5873, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, 'When exporting from STEP, this flag indicates if this object was extracted due to references pointing to it or not.')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5878, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5878, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_MatchingAlgorithmType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5880, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5880, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __MatchingAlgorithmConfiguration.name() : __MatchingAlgorithmConfiguration
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __WorkspaceID.name() : __WorkspaceID,
        __ContextID.name() : __ContextID,
        __MatchCodeID.name() : __MatchCodeID,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected,
        __Changed.name() : __Changed
    })
_module_typeBindings.MatchingAlgorithmType = MatchingAlgorithmType
Namespace.addCategoryObject('typeBinding', 'MatchingAlgorithmType', MatchingAlgorithmType)


# Complex type {http://www.stibosystems.com/step}UnitTemplateType with content type MIXED
class UnitTemplateType (pyxb.binding.basis.complexTypeDefinition):
    """
                The template of the unit part of a derived attribute value. The template derives to the ID of the unit
                in question.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UnitTemplateType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5899, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_UnitTemplateType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5911, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5911, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.UnitTemplateType = UnitTemplateType
Namespace.addCategoryObject('typeBinding', 'UnitTemplateType', UnitTemplateType)


# Complex type {http://www.stibosystems.com/step}UserType with content type ELEMENT_ONLY
class UserType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5923, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_UserType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5925, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_UserType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5926, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserGroupLink uses Python identifier UserGroupLink
    __UserGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserGroupLink'), 'UserGroupLink', '__httpwww_stibosystems_comstep_UserType_httpwww_stibosystems_comstepUserGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5927, 12), )

    
    UserGroupLink = property(__UserGroupLink.value, __UserGroupLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GUISetup uses Python identifier GUISetup
    __GUISetup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUISetup'), 'GUISetup', '__httpwww_stibosystems_comstep_UserType_httpwww_stibosystems_comstepGUISetup', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5928, 12), )

    
    GUISetup = property(__GUISetup.value, __GUISetup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GUITop uses Python identifier GUITop
    __GUITop = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUITop'), 'GUITop', '__httpwww_stibosystems_comstep_UserType_httpwww_stibosystems_comstepGUITop', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5929, 12), )

    
    GUITop = property(__GUITop.value, __GUITop.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SystemSetup uses Python identifier SystemSetup
    __SystemSetup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SystemSetup'), 'SystemSetup', '__httpwww_stibosystems_comstep_UserType_httpwww_stibosystems_comstepSystemSetup', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5930, 12), )

    
    SystemSetup = property(__SystemSetup.value, __SystemSetup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_UserType_ID', _module_typeBindings.StepUserID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5932, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5932, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ForceAuthentication uses Python identifier ForceAuthentication
    __ForceAuthentication = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ForceAuthentication'), 'ForceAuthentication', '__httpwww_stibosystems_comstep_UserType_ForceAuthentication', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ForceAuthentication._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5933, 8)
    __ForceAuthentication._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5933, 8)
    
    ForceAuthentication = property(__ForceAuthentication.value, __ForceAuthentication.set, None, None)

    
    # Attribute Password uses Python identifier Password
    __Password = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Password'), 'Password', '__httpwww_stibosystems_comstep_UserType_Password', pyxb.binding.datatypes.string)
    __Password._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5934, 8)
    __Password._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5934, 8)
    
    Password = property(__Password.value, __Password.set, None, None)

    
    # Attribute EMail uses Python identifier EMail
    __EMail = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EMail'), 'EMail', '__httpwww_stibosystems_comstep_UserType_EMail', pyxb.binding.datatypes.string)
    __EMail._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5935, 8)
    __EMail._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5935, 8)
    
    EMail = property(__EMail.value, __EMail.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __UserGroupLink.name() : __UserGroupLink,
        __GUISetup.name() : __GUISetup,
        __GUITop.name() : __GUITop,
        __SystemSetup.name() : __SystemSetup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ForceAuthentication.name() : __ForceAuthentication,
        __Password.name() : __Password,
        __EMail.name() : __EMail
    })
_module_typeBindings.UserType = UserType
Namespace.addCategoryObject('typeBinding', 'UserType', UserType)


# Complex type {http://www.stibosystems.com/step}UserGroupType with content type ELEMENT_ONLY
class UserGroupType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserGroupType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5939, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_UserGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5941, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserGroup uses Python identifier UserGroup
    __UserGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserGroup'), 'UserGroup', '__httpwww_stibosystems_comstep_UserGroupType_httpwww_stibosystems_comstepUserGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5942, 12), )

    
    UserGroup = property(__UserGroup.value, __UserGroup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_UserGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5943, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}PrivilegeRule uses Python identifier PrivilegeRule
    __PrivilegeRule = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PrivilegeRule'), 'PrivilegeRule', '__httpwww_stibosystems_comstep_UserGroupType_httpwww_stibosystems_comstepPrivilegeRule', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5944, 12), )

    
    PrivilegeRule = property(__PrivilegeRule.value, __PrivilegeRule.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GUISetup uses Python identifier GUISetup
    __GUISetup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUISetup'), 'GUISetup', '__httpwww_stibosystems_comstep_UserGroupType_httpwww_stibosystems_comstepGUISetup', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5945, 12), )

    
    GUISetup = property(__GUISetup.value, __GUISetup.set, None, None)

    
    # Element {http://www.stibosystems.com/step}GUITop uses Python identifier GUITop
    __GUITop = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GUITop'), 'GUITop', '__httpwww_stibosystems_comstep_UserGroupType_httpwww_stibosystems_comstepGUITop', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5946, 12), )

    
    GUITop = property(__GUITop.value, __GUITop.set, None, None)

    
    # Attribute ReadOnly uses Python identifier ReadOnly
    __ReadOnly = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReadOnly'), 'ReadOnly', '__httpwww_stibosystems_comstep_UserGroupType_ReadOnly', _module_typeBindings.TrueFalseType, unicode_default='false')
    __ReadOnly._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5948, 8)
    __ReadOnly._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5948, 8)
    
    ReadOnly = property(__ReadOnly.value, __ReadOnly.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_UserGroupType_ID', _module_typeBindings.StepUserGroupID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5949, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5949, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute LDAPSynchronizationID uses Python identifier LDAPSynchronizationID
    __LDAPSynchronizationID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LDAPSynchronizationID'), 'LDAPSynchronizationID', '__httpwww_stibosystems_comstep_UserGroupType_LDAPSynchronizationID', pyxb.binding.datatypes.string)
    __LDAPSynchronizationID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5950, 8)
    __LDAPSynchronizationID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5950, 8)
    
    LDAPSynchronizationID = property(__LDAPSynchronizationID.value, __LDAPSynchronizationID.set, None, '\n                    ID for LDAP synchronization.\n                ')

    
    # Attribute VendorRoot uses Python identifier VendorRoot
    __VendorRoot = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'VendorRoot'), 'VendorRoot', '__httpwww_stibosystems_comstep_UserGroupType_VendorRoot', pyxb.binding.datatypes.string)
    __VendorRoot._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5957, 8)
    __VendorRoot._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5957, 8)
    
    VendorRoot = property(__VendorRoot.value, __VendorRoot.set, None, '\n                    Mark this user group as a supplier user group.\n                    The items for the vendor is stored under the vendor\n                    classification.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_UserGroupType_ParentID', _module_typeBindings.StepUserGroupID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5966, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5966, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    The parent group, if the group is a part of a hierarchy.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_UserGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5973, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5973, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __UserGroup.name() : __UserGroup,
        __MetaData.name() : __MetaData,
        __PrivilegeRule.name() : __PrivilegeRule,
        __GUISetup.name() : __GUISetup,
        __GUITop.name() : __GUITop
    })
    _AttributeMap.update({
        __ReadOnly.name() : __ReadOnly,
        __ID.name() : __ID,
        __LDAPSynchronizationID.name() : __LDAPSynchronizationID,
        __VendorRoot.name() : __VendorRoot,
        __ParentID.name() : __ParentID,
        __Selected.name() : __Selected
    })
_module_typeBindings.UserGroupType = UserGroupType
Namespace.addCategoryObject('typeBinding', 'UserGroupType', UserGroupType)


# Complex type {http://www.stibosystems.com/step}UserGroupLinkType with content type EMPTY
class UserGroupLinkType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserGroupLinkType with content type EMPTY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserGroupLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5977, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute UserGroupID uses Python identifier UserGroupID
    __UserGroupID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserGroupID'), 'UserGroupID', '__httpwww_stibosystems_comstep_UserGroupLinkType_UserGroupID', _module_typeBindings.StepUserGroupID, required=True)
    __UserGroupID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5978, 8)
    __UserGroupID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5978, 8)
    
    UserGroupID = property(__UserGroupID.value, __UserGroupID.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __UserGroupID.name() : __UserGroupID
    })
_module_typeBindings.UserGroupLinkType = UserGroupLinkType
Namespace.addCategoryObject('typeBinding', 'UserGroupLinkType', UserGroupLinkType)


# Complex type {http://www.stibosystems.com/step}UserTypeType with content type ELEMENT_ONLY
class UserTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}UserTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5996, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5998, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Icon uses Python identifier Icon
    __Icon = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Icon'), 'Icon', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepIcon', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5999, 12), )

    
    Icon = property(__Icon.value, __Icon.set, None, None)

    
    # Element {http://www.stibosystems.com/step}VisibleTermFields uses Python identifier VisibleTermFields
    __VisibleTermFields = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'VisibleTermFields'), 'VisibleTermFields', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepVisibleTermFields', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6000, 12), )

    
    VisibleTermFields = property(__VisibleTermFields.value, __VisibleTermFields.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6001, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DimensionLink uses Python identifier DimensionLink
    __DimensionLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), 'DimensionLink', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepDimensionLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6002, 12), )

    
    DimensionLink = property(__DimensionLink.value, __DimensionLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6003, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, '\n                        Link to a parent UserType. For Product Override types, the product override link must be first.\n                    ')

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6010, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, '\n                        Link to a valid attribute if the UserType is for products.\n                        Export only; to import, list the UserTypes within the Attribute/UserTypeLink instead.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Validation uses Python identifier Validation
    __Validation = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Validation'), 'Validation', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepValidation', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6019, 12), )

    
    Validation = property(__Validation.value, __Validation.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MIMEType uses Python identifier MIMEType
    __MIMEType = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MIMEType'), 'MIMEType', '__httpwww_stibosystems_comstep_UserTypeType_httpwww_stibosystems_comstepMIMEType', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6020, 12), )

    
    MIMEType = property(__MIMEType.value, __MIMEType.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_UserTypeType_ID', _module_typeBindings.StepObjectTypeID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6022, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6022, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute AllowOverlappingTerms uses Python identifier AllowOverlappingTerms
    __AllowOverlappingTerms = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AllowOverlappingTerms'), 'AllowOverlappingTerms', '__httpwww_stibosystems_comstep_UserTypeType_AllowOverlappingTerms', _module_typeBindings.TrueFalseType)
    __AllowOverlappingTerms._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6023, 8)
    __AllowOverlappingTerms._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6023, 8)
    
    AllowOverlappingTerms = property(__AllowOverlappingTerms.value, __AllowOverlappingTerms.set, None, None)

    
    # Attribute AllowQuarkTemplate uses Python identifier AllowQuarkTemplate
    __AllowQuarkTemplate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AllowQuarkTemplate'), 'AllowQuarkTemplate', '__httpwww_stibosystems_comstep_UserTypeType_AllowQuarkTemplate', _module_typeBindings.TrueFalseType)
    __AllowQuarkTemplate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6024, 8)
    __AllowQuarkTemplate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6024, 8)
    
    AllowQuarkTemplate = property(__AllowQuarkTemplate.value, __AllowQuarkTemplate.set, None, None)

    
    # Attribute AllowInDesignTemplate uses Python identifier AllowInDesignTemplate
    __AllowInDesignTemplate = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AllowInDesignTemplate'), 'AllowInDesignTemplate', '__httpwww_stibosystems_comstep_UserTypeType_AllowInDesignTemplate', _module_typeBindings.TrueFalseType)
    __AllowInDesignTemplate._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6025, 8)
    __AllowInDesignTemplate._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6025, 8)
    
    AllowInDesignTemplate = property(__AllowInDesignTemplate.value, __AllowInDesignTemplate.set, None, None)

    
    # Attribute Revisability uses Python identifier Revisability
    __Revisability = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Revisability'), 'Revisability', '__httpwww_stibosystems_comstep_UserTypeType_Revisability', _module_typeBindings.EntityRevisabilityType)
    __Revisability._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6026, 8)
    __Revisability._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6026, 8)
    
    Revisability = property(__Revisability.value, __Revisability.set, None, None)

    
    # Attribute IsCategory uses Python identifier IsCategory
    __IsCategory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IsCategory'), 'IsCategory', '__httpwww_stibosystems_comstep_UserTypeType_IsCategory', _module_typeBindings.TrueFalseType)
    __IsCategory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6027, 8)
    __IsCategory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6027, 8)
    
    IsCategory = property(__IsCategory.value, __IsCategory.set, None, None)

    
    # Attribute ClassificationOwnsProductLinks uses Python identifier ClassificationOwnsProductLinks
    __ClassificationOwnsProductLinks = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ClassificationOwnsProductLinks'), 'ClassificationOwnsProductLinks', '__httpwww_stibosystems_comstep_UserTypeType_ClassificationOwnsProductLinks', _module_typeBindings.TrueFalseType)
    __ClassificationOwnsProductLinks._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6028, 8)
    __ClassificationOwnsProductLinks._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6028, 8)
    
    ClassificationOwnsProductLinks = property(__ClassificationOwnsProductLinks.value, __ClassificationOwnsProductLinks.set, None, None)

    
    # Attribute NamePattern uses Python identifier NamePattern
    __NamePattern = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'NamePattern'), 'NamePattern', '__httpwww_stibosystems_comstep_UserTypeType_NamePattern', pyxb.binding.datatypes.string)
    __NamePattern._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6029, 8)
    __NamePattern._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6029, 8)
    
    NamePattern = property(__NamePattern.value, __NamePattern.set, None, None)

    
    # Attribute IDPattern uses Python identifier IDPattern
    __IDPattern = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IDPattern'), 'IDPattern', '__httpwww_stibosystems_comstep_UserTypeType_IDPattern', pyxb.binding.datatypes.string)
    __IDPattern._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6030, 8)
    __IDPattern._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6030, 8)
    
    IDPattern = property(__IDPattern.value, __IDPattern.set, None, None)

    
    # Attribute ManuallySorted uses Python identifier ManuallySorted
    __ManuallySorted = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ManuallySorted'), 'ManuallySorted', '__httpwww_stibosystems_comstep_UserTypeType_ManuallySorted', _module_typeBindings.TrueFalseType)
    __ManuallySorted._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6031, 8)
    __ManuallySorted._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6031, 8)
    
    ManuallySorted = property(__ManuallySorted.value, __ManuallySorted.set, None, None)

    
    # Attribute ReferenceTargetLockPolicy uses Python identifier ReferenceTargetLockPolicy
    __ReferenceTargetLockPolicy = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReferenceTargetLockPolicy'), 'ReferenceTargetLockPolicy', '__httpwww_stibosystems_comstep_UserTypeType_ReferenceTargetLockPolicy', _module_typeBindings.ReferenceTargetLockPolicyType)
    __ReferenceTargetLockPolicy._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6033, 8)
    __ReferenceTargetLockPolicy._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6033, 8)
    
    ReferenceTargetLockPolicy = property(__ReferenceTargetLockPolicy.value, __ReferenceTargetLockPolicy.set, None, None)

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_UserTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6034, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6034, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_UserTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6035, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6035, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    When exporting from STEP, this flag indicates the object was referenced in other exported data.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __Icon.name() : __Icon,
        __VisibleTermFields.name() : __VisibleTermFields,
        __MetaData.name() : __MetaData,
        __DimensionLink.name() : __DimensionLink,
        __UserTypeLink.name() : __UserTypeLink,
        __AttributeLink.name() : __AttributeLink,
        __Validation.name() : __Validation,
        __MIMEType.name() : __MIMEType
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __AllowOverlappingTerms.name() : __AllowOverlappingTerms,
        __AllowQuarkTemplate.name() : __AllowQuarkTemplate,
        __AllowInDesignTemplate.name() : __AllowInDesignTemplate,
        __Revisability.name() : __Revisability,
        __IsCategory.name() : __IsCategory,
        __ClassificationOwnsProductLinks.name() : __ClassificationOwnsProductLinks,
        __NamePattern.name() : __NamePattern,
        __IDPattern.name() : __IDPattern,
        __ManuallySorted.name() : __ManuallySorted,
        __ReferenceTargetLockPolicy.name() : __ReferenceTargetLockPolicy,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.UserTypeType = UserTypeType
Namespace.addCategoryObject('typeBinding', 'UserTypeType', UserTypeType)


# Complex type {http://www.stibosystems.com/step}UserTypeLinkType with content type EMPTY
class UserTypeLinkType (pyxb.binding.basis.complexTypeDefinition):
    """
                Links an attribute to an object type of which objects are allowed to have values for the attribute
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'UserTypeLinkType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6045, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_UserTypeLinkType_UserTypeID', _module_typeBindings.StepObjectTypeID, required=True)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6051, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6051, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    The ID of the object type to link to.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __UserTypeID.name() : __UserTypeID
    })
_module_typeBindings.UserTypeLinkType = UserTypeLinkType
Namespace.addCategoryObject('typeBinding', 'UserTypeLinkType', UserTypeLinkType)


# Complex type {http://www.stibosystems.com/step}DataContainerTypeType with content type ELEMENT_ONLY
class DataContainerTypeType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}DataContainerTypeType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6080, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_DataContainerTypeType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6083, 12), )

    
    Name = property(__Name.value, __Name.set, None, '\n                        Name for the DataContainerType.\n                    ')

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_DataContainerTypeType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6090, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, '\n                        MetaData for the DataContainerType.\n                    ')

    
    # Element {http://www.stibosystems.com/step}AttributeGroupLink uses Python identifier AttributeGroupLink
    __AttributeGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), 'AttributeGroupLink', '__httpwww_stibosystems_comstep_DataContainerTypeType_httpwww_stibosystems_comstepAttributeGroupLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6097, 12), )

    
    AttributeGroupLink = property(__AttributeGroupLink.value, __AttributeGroupLink.set, None, '\n                        Link to a parent AttributeGroup.\n                    ')

    
    # Element {http://www.stibosystems.com/step}AttributeLink uses Python identifier AttributeLink
    __AttributeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), 'AttributeLink', '__httpwww_stibosystems_comstep_DataContainerTypeType_httpwww_stibosystems_comstepAttributeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6104, 12), )

    
    AttributeLink = property(__AttributeLink.value, __AttributeLink.set, None, '\n                        Link to an Attribute which is valid for this DataContainerType.\n                    ')

    
    # Element {http://www.stibosystems.com/step}UserTypeLink uses Python identifier UserTypeLink
    __UserTypeLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), 'UserTypeLink', '__httpwww_stibosystems_comstep_DataContainerTypeType_httpwww_stibosystems_comstepUserTypeLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6111, 12), )

    
    UserTypeLink = property(__UserTypeLink.value, __UserTypeLink.set, None, '\n                        Link to a UserType where this DataContainerType is valid.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_DataContainerTypeType_ID', _module_typeBindings.StepDataContainerTypeID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6120, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6120, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    If auto IDs is enabled for data container types then this ID can be omitted.\n                ')

    
    # Attribute IDPattern uses Python identifier IDPattern
    __IDPattern = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IDPattern'), 'IDPattern', '__httpwww_stibosystems_comstep_DataContainerTypeType_IDPattern', pyxb.binding.datatypes.string)
    __IDPattern._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6127, 8)
    __IDPattern._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6127, 8)
    
    IDPattern = property(__IDPattern.value, __IDPattern.set, None, '\n                    The pattern used for auto-id with this DataContainerType.\n                ')

    
    # Attribute MultiValued uses Python identifier MultiValued
    __MultiValued = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiValued'), 'MultiValued', '__httpwww_stibosystems_comstep_DataContainerTypeType_MultiValued', _module_typeBindings.TrueFalseType)
    __MultiValued._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6134, 8)
    __MultiValued._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6134, 8)
    
    MultiValued = property(__MultiValued.value, __MultiValued.set, None, '\n                    Whether DataContainerType can have multiple instances or not.\n                    If value is omitted when creating data container type on import the default value is false.\n                ')

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_DataContainerTypeType_Inherited', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6142, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6142, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, '\n                    Whether DataContainerType can inherit container instances via the hierarchy or only works with local containers.\n                ')

    
    # Attribute Restricted uses Python identifier Restricted
    __Restricted = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Restricted'), 'Restricted', '__httpwww_stibosystems_comstep_DataContainerTypeType_Restricted', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Restricted._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6149, 8)
    __Restricted._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6149, 8)
    
    Restricted = property(__Restricted.value, __Restricted.set, None, '\n                    Whether DataContainerType is restricted to parts of hierarchies or not.\n                ')

    
    # Attribute Mandatory uses Python identifier Mandatory
    __Mandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Mandatory'), 'Mandatory', '__httpwww_stibosystems_comstep_DataContainerTypeType_Mandatory', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Mandatory._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6156, 8)
    __Mandatory._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6156, 8)
    
    Mandatory = property(__Mandatory.value, __Mandatory.set, None, '\n                    Whether DataContainerType requires containers in order to approve, or not.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_DataContainerTypeType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6163, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6163, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_DataContainerTypeType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6164, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6164, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    When exporting from STEP, this flag indicates the object was referenced in other exported data.\n                ')

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __AttributeGroupLink.name() : __AttributeGroupLink,
        __AttributeLink.name() : __AttributeLink,
        __UserTypeLink.name() : __UserTypeLink
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __IDPattern.name() : __IDPattern,
        __MultiValued.name() : __MultiValued,
        __Inherited.name() : __Inherited,
        __Restricted.name() : __Restricted,
        __Mandatory.name() : __Mandatory,
        __Selected.name() : __Selected,
        __Referenced.name() : __Referenced
    })
_module_typeBindings.DataContainerTypeType = DataContainerTypeType
Namespace.addCategoryObject('typeBinding', 'DataContainerTypeType', DataContainerTypeType)


# Complex type {http://www.stibosystems.com/step}ValueType with content type MIXED
class ValueType (pyxb.binding.basis.complexTypeDefinition):
    """
                A value describes the parts that makes up the attribute-value of a product
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValueType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6222, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute UnitID uses Python identifier UnitID
    __UnitID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitID'), 'UnitID', '__httpwww_stibosystems_comstep_ValueType_UnitID', _module_typeBindings.StepUnitID)
    __UnitID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6229, 8)
    __UnitID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6229, 8)
    
    UnitID = property(__UnitID.value, __UnitID.set, None, '\n                    The ID of the unit of this value. Alternatively the UnitName can be used,\n                    however be aware that the name of a unit might not be unique, so if possible use the UnitID.\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ValueType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6238, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6238, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute LOVQualifierID uses Python identifier LOVQualifierID
    __LOVQualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'LOVQualifierID'), 'LOVQualifierID', '__httpwww_stibosystems_comstep_ValueType_LOVQualifierID', _module_typeBindings.StepQualifierID)
    __LOVQualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6240, 8)
    __LOVQualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6240, 8)
    
    LOVQualifierID = property(__LOVQualifierID.value, __LOVQualifierID.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_ValueType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6241, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6241, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, '\n                    The ID of the attribute of this value. Can be omitted if value is part of a MultiValue element.\n                ')

    
    # Attribute DerivedContextID uses Python identifier DerivedContextID
    __DerivedContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DerivedContextID'), 'DerivedContextID', '__httpwww_stibosystems_comstep_ValueType_DerivedContextID', _module_typeBindings.StepQualifierID)
    __DerivedContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6249, 8)
    __DerivedContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6249, 8)
    
    DerivedContextID = property(__DerivedContextID.value, __DerivedContextID.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ValueType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6250, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6250, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ValueType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6251, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6251, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used.\n                ')

    
    # Attribute InheritedFrom uses Python identifier InheritedFrom
    __InheritedFrom = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'InheritedFrom'), 'InheritedFrom', '__httpwww_stibosystems_comstep_ValueType_InheritedFrom', pyxb.binding.datatypes.string)
    __InheritedFrom._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6259, 8)
    __InheritedFrom._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6259, 8)
    
    InheritedFrom = property(__InheritedFrom.value, __InheritedFrom.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_ValueType_Inherited', pyxb.binding.datatypes.string)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6260, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6260, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute Derived uses Python identifier Derived
    __Derived = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Derived'), 'Derived', '__httpwww_stibosystems_comstep_ValueType_Derived', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Derived._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6261, 8)
    __Derived._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6261, 8)
    
    Derived = property(__Derived.value, __Derived.set, None, None)

    
    # Attribute UnitName uses Python identifier UnitName
    __UnitName = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UnitName'), 'UnitName', '__httpwww_stibosystems_comstep_ValueType_UnitName', pyxb.binding.datatypes.string)
    __UnitName._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6263, 8)
    __UnitName._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6263, 8)
    
    UnitName = property(__UnitName.value, __UnitName.set, None, '\n                    The name of the unit of this value. However if possible use the UnitID\n                    instead – see UnitID description.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __UnitID.name() : __UnitID,
        __Changed.name() : __Changed,
        __LOVQualifierID.name() : __LOVQualifierID,
        __AttributeID.name() : __AttributeID,
        __DerivedContextID.name() : __DerivedContextID,
        __ID.name() : __ID,
        __QualifierID.name() : __QualifierID,
        __InheritedFrom.name() : __InheritedFrom,
        __Inherited.name() : __Inherited,
        __Derived.name() : __Derived,
        __UnitName.name() : __UnitName
    })
_module_typeBindings.ValueType = ValueType
Namespace.addCategoryObject('typeBinding', 'ValueType', ValueType)


# Complex type {http://www.stibosystems.com/step}ValueGroupType with content type ELEMENT_ONLY
class ValueGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                This element encapsulates a number of translated values for the same logical value in a LOV
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValueGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6314, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Value uses Python identifier Value
    __Value = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Value'), 'Value', '__httpwww_stibosystems_comstep_ValueGroupType_httpwww_stibosystems_comstepValue', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6321, 12), )

    
    Value = property(__Value.value, __Value.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_ValueGroupType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6323, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6323, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_ValueGroupType_Inherited', pyxb.binding.datatypes.string)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6324, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6324, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_ValueGroupType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6325, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6325, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute AttributeID uses Python identifier AttributeID
    __AttributeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AttributeID'), 'AttributeID', '__httpwww_stibosystems_comstep_ValueGroupType_AttributeID', _module_typeBindings.StepAttributeID)
    __AttributeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6327, 8)
    __AttributeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6327, 8)
    
    AttributeID = property(__AttributeID.value, __AttributeID.set, None, None)

    _ElementMap.update({
        __Value.name() : __Value
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Inherited.name() : __Inherited,
        __Changed.name() : __Changed,
        __AttributeID.name() : __AttributeID
    })
_module_typeBindings.ValueGroupType = ValueGroupType
Namespace.addCategoryObject('typeBinding', 'ValueGroupType', ValueGroupType)


# Complex type {http://www.stibosystems.com/step}ValueTemplateType with content type MIXED
class ValueTemplateType (pyxb.binding.basis.complexTypeDefinition):
    """
                The template of the value part of a derived attribute value.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_MIXED
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'ValueTemplateType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6345, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute QualifierID uses Python identifier QualifierID
    __QualifierID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QualifierID'), 'QualifierID', '__httpwww_stibosystems_comstep_ValueTemplateType_QualifierID', _module_typeBindings.StepQualifierID)
    __QualifierID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6355, 8)
    __QualifierID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6355, 8)
    
    QualifierID = property(__QualifierID.value, __QualifierID.set, None, '\n                    Identifies which contexts this object is visible in. If not specified the current\n                    context is used.\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __QualifierID.name() : __QualifierID
    })
_module_typeBindings.ValueTemplateType = ValueTemplateType
Namespace.addCategoryObject('typeBinding', 'ValueTemplateType', ValueTemplateType)


# Complex type {http://www.stibosystems.com/step}SingleDataContainerType with content type ELEMENT_ONLY
class SingleDataContainerType (pyxb.binding.basis.complexTypeDefinition):
    """
                A Data Container that holds a group of related data. Used with single valued DataContainers only.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SingleDataContainerType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6365, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Values uses Python identifier Values
    __Values = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Values'), 'Values', '__httpwww_stibosystems_comstep_SingleDataContainerType_httpwww_stibosystems_comstepValues', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6372, 12), )

    
    Values = property(__Values.value, __Values.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_SingleDataContainerType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6375, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6375, 8)
    
    ID = property(__ID.value, __ID.set, None, '\n                    Global identification of the object. Not required during import when auto-ID is used, in which\n                    case a new SingleDataContainer object is created.\n                ')

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_SingleDataContainerType_Type', _module_typeBindings.StepDataContainerTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6383, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6383, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The ID of the DataContainerType.\n                    Not required if updating existing data container by having specified ID.\n                    Note that this attribute cannot be used for changing the type of an existing SingleDataContainer, it can only be\n                    used for creation, where it is required. Specifying a different type from the one used on the SingleDataContainer\n                    with the specified ID is an error.\n                ')

    
    # Attribute Changed uses Python identifier Changed
    __Changed = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Changed'), 'Changed', '__httpwww_stibosystems_comstep_SingleDataContainerType_Changed', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Changed._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6394, 8)
    __Changed._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6394, 8)
    
    Changed = property(__Changed.value, __Changed.set, None, None)

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_SingleDataContainerType_Inherited', pyxb.binding.datatypes.string)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6395, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6395, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    _ElementMap.update({
        __Values.name() : __Values
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __Type.name() : __Type,
        __Changed.name() : __Changed,
        __Inherited.name() : __Inherited
    })
_module_typeBindings.SingleDataContainerType = SingleDataContainerType
Namespace.addCategoryObject('typeBinding', 'SingleDataContainerType', SingleDataContainerType)


# Complex type {http://www.stibosystems.com/step}MultiDataContainerType with content type ELEMENT_ONLY
class MultiDataContainerType (pyxb.binding.basis.complexTypeDefinition):
    """
                A multi valued DataContainer holds a set of DataContainers of the same type, each identified by an ID.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MultiDataContainerType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6419, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}DataContainer uses Python identifier DataContainer
    __DataContainer = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataContainer'), 'DataContainer', '__httpwww_stibosystems_comstep_MultiDataContainerType_httpwww_stibosystems_comstepDataContainer', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6426, 12), )

    
    DataContainer = property(__DataContainer.value, __DataContainer.set, None, None)

    
    # Element {http://www.stibosystems.com/step}DeleteDataContainer uses Python identifier DeleteDataContainer
    __DeleteDataContainer = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainer'), 'DeleteDataContainer', '__httpwww_stibosystems_comstep_MultiDataContainerType_httpwww_stibosystems_comstepDeleteDataContainer', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6427, 12), )

    
    DeleteDataContainer = property(__DeleteDataContainer.value, __DeleteDataContainer.set, None, None)

    
    # Attribute Type uses Python identifier Type
    __Type = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Type'), 'Type', '__httpwww_stibosystems_comstep_MultiDataContainerType_Type', _module_typeBindings.StepDataContainerTypeID)
    __Type._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6430, 8)
    __Type._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6430, 8)
    
    Type = property(__Type.value, __Type.set, None, '\n                    The ID of the DataContainerType.\n                    Not required if updating existing DataContainer by having specified ID.\n                    Note that this attribute cannot be used for changing the type of an existing MultiDataContainer, it can only be\n                    used for creation, where it is required. Specifying a different type from the one used on any one of its DataContainers\n                    with the specified ID is an error.\n                ')

    
    # Attribute Inherited uses Python identifier Inherited
    __Inherited = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Inherited'), 'Inherited', '__httpwww_stibosystems_comstep_MultiDataContainerType_Inherited', pyxb.binding.datatypes.string)
    __Inherited._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6441, 8)
    __Inherited._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6441, 8)
    
    Inherited = property(__Inherited.value, __Inherited.set, None, None)

    _ElementMap.update({
        __DataContainer.name() : __DataContainer,
        __DeleteDataContainer.name() : __DeleteDataContainer
    })
    _AttributeMap.update({
        __Type.name() : __Type,
        __Inherited.name() : __Inherited
    })
_module_typeBindings.MultiDataContainerType = MultiDataContainerType
Namespace.addCategoryObject('typeBinding', 'MultiDataContainerType', MultiDataContainerType)


# Complex type {http://www.stibosystems.com/step}VersionType with content type ELEMENT_ONLY
class VersionType (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.stibosystems.com/step}VersionType with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'VersionType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6459, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_VersionType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6461, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_VersionType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6462, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}TermsListLink uses Python identifier TermsListLink
    __TermsListLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TermsListLink'), 'TermsListLink', '__httpwww_stibosystems_comstep_VersionType_httpwww_stibosystems_comstepTermsListLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6463, 12), )

    
    TermsListLink = property(__TermsListLink.value, __TermsListLink.set, None, None)

    
    # Element {http://www.stibosystems.com/step}LayerMapping uses Python identifier LayerMapping
    __LayerMapping = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LayerMapping'), 'LayerMapping', '__httpwww_stibosystems_comstep_VersionType_httpwww_stibosystems_comstepLayerMapping', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6464, 12), )

    
    LayerMapping = property(__LayerMapping.value, __LayerMapping.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_VersionType_ID', _module_typeBindings.StepID)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6466, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6466, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute ContextID uses Python identifier ContextID
    __ContextID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ContextID'), 'ContextID', '__httpwww_stibosystems_comstep_VersionType_ContextID', _module_typeBindings.StepQualifierID, required=True)
    __ContextID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6467, 8)
    __ContextID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6467, 8)
    
    ContextID = property(__ContextID.value, __ContextID.set, None, None)

    
    # Attribute IsMaster uses Python identifier IsMaster
    __IsMaster = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'IsMaster'), 'IsMaster', '__httpwww_stibosystems_comstep_VersionType_IsMaster', pyxb.binding.datatypes.string)
    __IsMaster._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6468, 8)
    __IsMaster._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6468, 8)
    
    IsMaster = property(__IsMaster.value, __IsMaster.set, None, None)

    
    # Attribute WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_VersionType_WorkspaceID', _module_typeBindings.StepID, required=True)
    __WorkspaceID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6469, 8)
    __WorkspaceID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6469, 8)
    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __TermsListLink.name() : __TermsListLink,
        __LayerMapping.name() : __LayerMapping
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __ContextID.name() : __ContextID,
        __IsMaster.name() : __IsMaster,
        __WorkspaceID.name() : __WorkspaceID
    })
_module_typeBindings.VersionType = VersionType
Namespace.addCategoryObject('typeBinding', 'VersionType', VersionType)


# Complex type {http://www.stibosystems.com/step}EventProcessorType with content type ELEMENT_ONLY
class EventProcessorType (pyxb.binding.basis.complexTypeDefinition):
    """
                An Event Processor.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'EventProcessorType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6588, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_EventProcessorType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6595, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the event processor is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_EventProcessorType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6602, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_EventProcessorType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6603, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_EventProcessorType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6604, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        The configuration is an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}EventQueue uses Python identifier EventQueue
    __EventQueue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EventQueue'), 'EventQueue', '__httpwww_stibosystems_comstep_EventProcessorType_httpwww_stibosystems_comstepEventQueue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6611, 12), )

    
    EventQueue = property(__EventQueue.value, __EventQueue.set, None, '\n                        The behind-the-scenes event-queue of the Event Processor.\n                        This Event Queue is privately owned by this Event Processor and thus not accessible from anywhere else.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_EventProcessorType_ID', _module_typeBindings.StepEventProcessorID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6620, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6620, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_EventProcessorType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6621, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6621, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of Event Processor this is.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_EventProcessorType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6628, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6628, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration,
        __EventQueue.name() : __EventQueue
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __Selected.name() : __Selected
    })
_module_typeBindings.EventProcessorType = EventProcessorType
Namespace.addCategoryObject('typeBinding', 'EventProcessorType', EventProcessorType)


# Complex type {http://www.stibosystems.com/step}SetupEntityType with content type ELEMENT_ONLY
class SetupEntityType (pyxb.binding.basis.complexTypeDefinition):
    """
                An Setup Entity.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SetupEntityType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6642, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_SetupEntityType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6649, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the Setup Entity is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_SetupEntityType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6656, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_SetupEntityType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6657, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_SetupEntityType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6658, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        The configuration is an internal format.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_SetupEntityType_ID', _module_typeBindings.StepSetupEntityID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6666, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6666, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_SetupEntityType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6667, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6667, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of Setup Entity this is.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_SetupEntityType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6674, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6674, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __Selected.name() : __Selected
    })
_module_typeBindings.SetupEntityType = SetupEntityType
Namespace.addCategoryObject('typeBinding', 'SetupEntityType', SetupEntityType)


# Complex type {http://www.stibosystems.com/step}GatewayIntegrationEndpointType with content type ELEMENT_ONLY
class GatewayIntegrationEndpointType (pyxb.binding.basis.complexTypeDefinition):
    """
                An Integration End Point node for communication with external systems.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'GatewayIntegrationEndpointType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6691, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6698, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the endpoint is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6705, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6706, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}Configuration uses Python identifier Configuration
    __Configuration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), 'Configuration', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_httpwww_stibosystems_comstepConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6707, 12), )

    
    Configuration = property(__Configuration.value, __Configuration.set, None, '\n                        The configuration is in an internal format.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_ID', _module_typeBindings.StepGatewayEndPointID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6715, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6715, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6716, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6716, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of Integration Endpoint this is.\n                ')

    
    # Attribute Description uses Python identifier Description
    __Description = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Description'), 'Description', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_Description', pyxb.binding.datatypes.string)
    __Description._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6723, 8)
    __Description._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6723, 8)
    
    Description = property(__Description.value, __Description.set, None, None)

    
    # Attribute Enabled uses Python identifier Enabled
    __Enabled = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Enabled'), 'Enabled', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_Enabled', _module_typeBindings.TrueFalseType, unicode_default='false')
    __Enabled._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6724, 8)
    __Enabled._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6724, 8)
    
    Enabled = property(__Enabled.value, __Enabled.set, None, '\n                    Whether or not gateway integration endpoint is enabled. This setting cannot be imported.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_GatewayIntegrationEndpointType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6731, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6731, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __Configuration.name() : __Configuration
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __Description.name() : __Description,
        __Enabled.name() : __Enabled,
        __Selected.name() : __Selected
    })
_module_typeBindings.GatewayIntegrationEndpointType = GatewayIntegrationEndpointType
Namespace.addCategoryObject('typeBinding', 'GatewayIntegrationEndpointType', GatewayIntegrationEndpointType)


# Complex type {http://www.stibosystems.com/step}OutBoundIntegrationEndpointType with content type ELEMENT_ONLY
class OutBoundIntegrationEndpointType (pyxb.binding.basis.complexTypeDefinition):
    """
                An Integration End Point node for outbound communication.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'OutBoundIntegrationEndpointType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6734, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6741, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the endpoint is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6748, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6749, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ScheduleSpecification uses Python identifier ScheduleSpecification
    __ScheduleSpecification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ScheduleSpecification'), 'ScheduleSpecification', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepScheduleSpecification', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6750, 12), )

    
    ScheduleSpecification = property(__ScheduleSpecification.value, __ScheduleSpecification.set, None, '\n                        The receiver plugin configuration is an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}PreProcessorPluginConfiguration uses Python identifier PreProcessorPluginConfiguration
    __PreProcessorPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PreProcessorPluginConfiguration'), 'PreProcessorPluginConfiguration', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepPreProcessorPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6757, 12), )

    
    PreProcessorPluginConfiguration = property(__PreProcessorPluginConfiguration.value, __PreProcessorPluginConfiguration.set, None, '\n                        The pre processor plugin configuration in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}PostProcessorPluginConfiguration uses Python identifier PostProcessorPluginConfiguration
    __PostProcessorPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PostProcessorPluginConfiguration'), 'PostProcessorPluginConfiguration', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepPostProcessorPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6764, 12), )

    
    PostProcessorPluginConfiguration = property(__PostProcessorPluginConfiguration.value, __PostProcessorPluginConfiguration.set, None, '\n                        The post processor plugin configuration in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}DataSourcePluginConfiguration uses Python identifier DataSourcePluginConfiguration
    __DataSourcePluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DataSourcePluginConfiguration'), 'DataSourcePluginConfiguration', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepDataSourcePluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6771, 12), )

    
    DataSourcePluginConfiguration = property(__DataSourcePluginConfiguration.value, __DataSourcePluginConfiguration.set, None, '\n                        The data source plugin configuration in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}DeliveryMethodPluginConfiguration uses Python identifier DeliveryMethodPluginConfiguration
    __DeliveryMethodPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DeliveryMethodPluginConfiguration'), 'DeliveryMethodPluginConfiguration', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepDeliveryMethodPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6778, 12), )

    
    DeliveryMethodPluginConfiguration = property(__DeliveryMethodPluginConfiguration.value, __DeliveryMethodPluginConfiguration.set, None, '\n                        The delivery method plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}EventQueue uses Python identifier EventQueue
    __EventQueue = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EventQueue'), 'EventQueue', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepEventQueue', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6785, 12), )

    
    EventQueue = property(__EventQueue.value, __EventQueue.set, None, '\n                        The behind-the-scenes event-queue of the integration endpoint.\n                        This Event Queue is privately owned by this integration endpoint and thus not accessible from anywhere else.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ProcessPluginConfiguration uses Python identifier ProcessPluginConfiguration
    __ProcessPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProcessPluginConfiguration'), 'ProcessPluginConfiguration', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepProcessPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6793, 12), )

    
    ProcessPluginConfiguration = property(__ProcessPluginConfiguration.value, __ProcessPluginConfiguration.set, None, '\n                        The process plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ErrorReporterPluginConfiguration uses Python identifier ErrorReporterPluginConfiguration
    __ErrorReporterPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ErrorReporterPluginConfiguration'), 'ErrorReporterPluginConfiguration', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepErrorReporterPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6800, 12), )

    
    ErrorReporterPluginConfiguration = property(__ErrorReporterPluginConfiguration.value, __ErrorReporterPluginConfiguration.set, None, '\n                        The error reporter plugin configuration in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ContextLink uses Python identifier ContextLink
    __ContextLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ContextLink'), 'ContextLink', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepContextLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6807, 12), )

    
    ContextLink = property(__ContextLink.value, __ContextLink.set, None, '\n                        The context IDs the integration endpoint is using during export.\n                    ')

    
    # Element {http://www.stibosystems.com/step}WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_httpwww_stibosystems_comstepWorkspaceID', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6814, 12), )

    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, '\n                        Specifies the ID of the workspace that provides the content selection for an export.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_ID', _module_typeBindings.StepOutboundEndPointID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6822, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6822, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6823, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6823, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of Integration Endpoint this is.\n                ')

    
    # Attribute Description uses Python identifier Description
    __Description = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Description'), 'Description', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_Description', pyxb.binding.datatypes.string)
    __Description._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6830, 8)
    __Description._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6830, 8)
    
    Description = property(__Description.value, __Description.set, None, None)

    
    # Attribute ResponsibleUserID uses Python identifier ResponsibleUserID
    __ResponsibleUserID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ResponsibleUserID'), 'ResponsibleUserID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_ResponsibleUserID', _module_typeBindings.StepID, required=True)
    __ResponsibleUserID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6831, 8)
    __ResponsibleUserID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6831, 8)
    
    ResponsibleUserID = property(__ResponsibleUserID.value, __ResponsibleUserID.set, None, '\n                    The user to be notified, if the end point stops working.\n                ')

    
    # Attribute MaximumNumberOfBackgroundProcesses uses Python identifier MaximumNumberOfBackgroundProcesses
    __MaximumNumberOfBackgroundProcesses = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaximumNumberOfBackgroundProcesses'), 'MaximumNumberOfBackgroundProcesses', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_MaximumNumberOfBackgroundProcesses', pyxb.binding.datatypes.string)
    __MaximumNumberOfBackgroundProcesses._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6838, 8)
    __MaximumNumberOfBackgroundProcesses._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6838, 8)
    
    MaximumNumberOfBackgroundProcesses = property(__MaximumNumberOfBackgroundProcesses.value, __MaximumNumberOfBackgroundProcesses.set, None, '\n                    The maximum number of old backgroundprocesses to keep for this endpoint. When the limit\n                    is reached, the oldest endpoints will be pruned at regular intervals.\n                ')

    
    # Attribute MaximumAgeOfBackgroundProcesses uses Python identifier MaximumAgeOfBackgroundProcesses
    __MaximumAgeOfBackgroundProcesses = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaximumAgeOfBackgroundProcesses'), 'MaximumAgeOfBackgroundProcesses', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_MaximumAgeOfBackgroundProcesses', pyxb.binding.datatypes.string)
    __MaximumAgeOfBackgroundProcesses._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6846, 8)
    __MaximumAgeOfBackgroundProcesses._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6846, 8)
    
    MaximumAgeOfBackgroundProcesses = property(__MaximumAgeOfBackgroundProcesses.value, __MaximumAgeOfBackgroundProcesses.set, None, '\n                    The maximum age of old backgroundprocesses to keep for this endpoint. All older endpoints\n                    will be deleted at regular intervals. Age should be specified in milliseconds.\n                ')

    
    # Attribute MaxNumberOfActiveBackgroundProcesses uses Python identifier MaxNumberOfActiveBackgroundProcesses
    __MaxNumberOfActiveBackgroundProcesses = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaxNumberOfActiveBackgroundProcesses'), 'MaxNumberOfActiveBackgroundProcesses', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_MaxNumberOfActiveBackgroundProcesses', pyxb.binding.datatypes.string)
    __MaxNumberOfActiveBackgroundProcesses._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6854, 8)
    __MaxNumberOfActiveBackgroundProcesses._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6854, 8)
    
    MaxNumberOfActiveBackgroundProcesses = property(__MaxNumberOfActiveBackgroundProcesses.value, __MaxNumberOfActiveBackgroundProcesses.set, None, '\n                    The maximum number of active background processes.\n                ')

    
    # Attribute PollInterval uses Python identifier PollInterval
    __PollInterval = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PollInterval'), 'PollInterval', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_PollInterval', pyxb.binding.datatypes.string)
    __PollInterval._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6861, 8)
    __PollInterval._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6861, 8)
    
    PollInterval = property(__PollInterval.value, __PollInterval.set, None, '\n                    The time interval between an endpoint has handled the last requests in the receiver and the endpoint\n                    checks the receiver for new content. The poll interval is assumed to be in seconds and defaults to 30 seconds.\n                ')

    
    # Attribute ProcessPluginID uses Python identifier ProcessPluginID
    __ProcessPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessPluginID'), 'ProcessPluginID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_ProcessPluginID', pyxb.binding.datatypes.string)
    __ProcessPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6869, 8)
    __ProcessPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6869, 8)
    
    ProcessPluginID = property(__ProcessPluginID.value, __ProcessPluginID.set, None, '\n                    The ID of the process plugin.\n                ')

    
    # Attribute PreProcessorPluginID uses Python identifier PreProcessorPluginID
    __PreProcessorPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PreProcessorPluginID'), 'PreProcessorPluginID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_PreProcessorPluginID', pyxb.binding.datatypes.string)
    __PreProcessorPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6876, 8)
    __PreProcessorPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6876, 8)
    
    PreProcessorPluginID = property(__PreProcessorPluginID.value, __PreProcessorPluginID.set, None, '\n                    The ID of the pre processor plugin.\n                ')

    
    # Attribute PostProcessorPluginID uses Python identifier PostProcessorPluginID
    __PostProcessorPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PostProcessorPluginID'), 'PostProcessorPluginID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_PostProcessorPluginID', pyxb.binding.datatypes.string)
    __PostProcessorPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6883, 8)
    __PostProcessorPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6883, 8)
    
    PostProcessorPluginID = property(__PostProcessorPluginID.value, __PostProcessorPluginID.set, None, '\n                    The ID of the post processor plugin.\n                ')

    
    # Attribute DataSourcePluginID uses Python identifier DataSourcePluginID
    __DataSourcePluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DataSourcePluginID'), 'DataSourcePluginID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_DataSourcePluginID', pyxb.binding.datatypes.string)
    __DataSourcePluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6890, 8)
    __DataSourcePluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6890, 8)
    
    DataSourcePluginID = property(__DataSourcePluginID.value, __DataSourcePluginID.set, None, '\n                    The ID of the data source plugin.\n                ')

    
    # Attribute ErrorReporterPluginID uses Python identifier ErrorReporterPluginID
    __ErrorReporterPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ErrorReporterPluginID'), 'ErrorReporterPluginID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_ErrorReporterPluginID', pyxb.binding.datatypes.string)
    __ErrorReporterPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6897, 8)
    __ErrorReporterPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6897, 8)
    
    ErrorReporterPluginID = property(__ErrorReporterPluginID.value, __ErrorReporterPluginID.set, None, '\n                    The ID of the error reporter plugin.\n                ')

    
    # Attribute DeliveryMethodPluginID uses Python identifier DeliveryMethodPluginID
    __DeliveryMethodPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'DeliveryMethodPluginID'), 'DeliveryMethodPluginID', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_DeliveryMethodPluginID', pyxb.binding.datatypes.string)
    __DeliveryMethodPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6904, 8)
    __DeliveryMethodPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6904, 8)
    
    DeliveryMethodPluginID = property(__DeliveryMethodPluginID.value, __DeliveryMethodPluginID.set, None, '\n                    The ID of the delivery method plugin.\n                ')

    
    # Attribute QueueForEndpoint uses Python identifier QueueForEndpoint
    __QueueForEndpoint = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QueueForEndpoint'), 'QueueForEndpoint', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_QueueForEndpoint', _module_typeBindings.StepEventQueueID)
    __QueueForEndpoint._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6911, 8)
    __QueueForEndpoint._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6911, 8)
    
    QueueForEndpoint = property(__QueueForEndpoint.value, __QueueForEndpoint.set, None, '\n                    The queue the endpoint poller background process for this endpoint is started in.\n                ')

    
    # Attribute QueueForProcssing uses Python identifier QueueForProcssing
    __QueueForProcssing = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QueueForProcssing'), 'QueueForProcssing', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_QueueForProcssing', _module_typeBindings.StepEventQueueID)
    __QueueForProcssing._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6918, 8)
    __QueueForProcssing._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6918, 8)
    
    QueueForProcssing = property(__QueueForProcssing.value, __QueueForProcssing.set, None, '\n                    The queue used when a background process is started to handle the processing part of the endpoint.\n                    The processing part in the endpoint is where data is exported.\n                ')

    
    # Attribute TransactionType uses Python identifier TransactionType
    __TransactionType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TransactionType'), 'TransactionType', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_TransactionType', pyxb.binding.datatypes.string)
    __TransactionType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6926, 8)
    __TransactionType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6926, 8)
    
    TransactionType = property(__TransactionType.value, __TransactionType.set, None, '\n                    The transactional type of the endpoint.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6933, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6933, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    
    # Attribute MultiThreadCount uses Python identifier MultiThreadCount
    __MultiThreadCount = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MultiThreadCount'), 'MultiThreadCount', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_MultiThreadCount', pyxb.binding.datatypes.string)
    __MultiThreadCount._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6934, 8)
    __MultiThreadCount._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6934, 8)
    
    MultiThreadCount = property(__MultiThreadCount.value, __MultiThreadCount.set, None, '\n                    The amount of threads allocated to execution of the pre-processing, main processing and post-processing steps of the endpoint.\n                ')

    
    # Attribute RefreshCollections uses Python identifier RefreshCollections
    __RefreshCollections = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'RefreshCollections'), 'RefreshCollections', '__httpwww_stibosystems_comstep_OutBoundIntegrationEndpointType_RefreshCollections', pyxb.binding.datatypes.boolean, unicode_default='false')
    __RefreshCollections._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6941, 8)
    __RefreshCollections._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6941, 8)
    
    RefreshCollections = property(__RefreshCollections.value, __RefreshCollections.set, None, "\n                    When exporting from STEP, this flag indicates if it's needed to refresh the collections before every single run.\n                ")

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ScheduleSpecification.name() : __ScheduleSpecification,
        __PreProcessorPluginConfiguration.name() : __PreProcessorPluginConfiguration,
        __PostProcessorPluginConfiguration.name() : __PostProcessorPluginConfiguration,
        __DataSourcePluginConfiguration.name() : __DataSourcePluginConfiguration,
        __DeliveryMethodPluginConfiguration.name() : __DeliveryMethodPluginConfiguration,
        __EventQueue.name() : __EventQueue,
        __ProcessPluginConfiguration.name() : __ProcessPluginConfiguration,
        __ErrorReporterPluginConfiguration.name() : __ErrorReporterPluginConfiguration,
        __ContextLink.name() : __ContextLink,
        __WorkspaceID.name() : __WorkspaceID
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __Description.name() : __Description,
        __ResponsibleUserID.name() : __ResponsibleUserID,
        __MaximumNumberOfBackgroundProcesses.name() : __MaximumNumberOfBackgroundProcesses,
        __MaximumAgeOfBackgroundProcesses.name() : __MaximumAgeOfBackgroundProcesses,
        __MaxNumberOfActiveBackgroundProcesses.name() : __MaxNumberOfActiveBackgroundProcesses,
        __PollInterval.name() : __PollInterval,
        __ProcessPluginID.name() : __ProcessPluginID,
        __PreProcessorPluginID.name() : __PreProcessorPluginID,
        __PostProcessorPluginID.name() : __PostProcessorPluginID,
        __DataSourcePluginID.name() : __DataSourcePluginID,
        __ErrorReporterPluginID.name() : __ErrorReporterPluginID,
        __DeliveryMethodPluginID.name() : __DeliveryMethodPluginID,
        __QueueForEndpoint.name() : __QueueForEndpoint,
        __QueueForProcssing.name() : __QueueForProcssing,
        __TransactionType.name() : __TransactionType,
        __Selected.name() : __Selected,
        __MultiThreadCount.name() : __MultiThreadCount,
        __RefreshCollections.name() : __RefreshCollections
    })
_module_typeBindings.OutBoundIntegrationEndpointType = OutBoundIntegrationEndpointType
Namespace.addCategoryObject('typeBinding', 'OutBoundIntegrationEndpointType', OutBoundIntegrationEndpointType)


# Complex type {http://www.stibosystems.com/step}InBoundIntegrationEndpointType with content type ELEMENT_ONLY
class InBoundIntegrationEndpointType (pyxb.binding.basis.complexTypeDefinition):
    """
                An Integration End Point node for inbound communication. When created on import, an endpoint will be disabled.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'InBoundIntegrationEndpointType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6950, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}SetupGroupLink uses Python identifier SetupGroupLink
    __SetupGroupLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), 'SetupGroupLink', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepSetupGroupLink', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6957, 12), )

    
    SetupGroupLink = property(__SetupGroupLink.value, __SetupGroupLink.set, None, '\n                        The setup group the endpoint is located in.\n                    ')

    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6964, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6965, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}ScheduleSpecification uses Python identifier ScheduleSpecification
    __ScheduleSpecification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ScheduleSpecification'), 'ScheduleSpecification', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepScheduleSpecification', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6966, 12), )

    
    ScheduleSpecification = property(__ScheduleSpecification.value, __ScheduleSpecification.set, None, '\n                        The receiver plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}PreProcessorPluginConfiguration uses Python identifier PreProcessorPluginConfiguration
    __PreProcessorPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PreProcessorPluginConfiguration'), 'PreProcessorPluginConfiguration', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepPreProcessorPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6973, 12), )

    
    PreProcessorPluginConfiguration = property(__PreProcessorPluginConfiguration.value, __PreProcessorPluginConfiguration.set, None, '\n                        The pre processor plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}PostProcessorPluginConfiguration uses Python identifier PostProcessorPluginConfiguration
    __PostProcessorPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PostProcessorPluginConfiguration'), 'PostProcessorPluginConfiguration', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepPostProcessorPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6980, 12), )

    
    PostProcessorPluginConfiguration = property(__PostProcessorPluginConfiguration.value, __PostProcessorPluginConfiguration.set, None, '\n                        The post processor plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ReceiverPluginConfiguration uses Python identifier ReceiverPluginConfiguration
    __ReceiverPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ReceiverPluginConfiguration'), 'ReceiverPluginConfiguration', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepReceiverPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6987, 12), )

    
    ReceiverPluginConfiguration = property(__ReceiverPluginConfiguration.value, __ReceiverPluginConfiguration.set, None, '\n                        The receiver plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ProcessPluginConfiguration uses Python identifier ProcessPluginConfiguration
    __ProcessPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProcessPluginConfiguration'), 'ProcessPluginConfiguration', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepProcessPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6994, 12), )

    
    ProcessPluginConfiguration = property(__ProcessPluginConfiguration.value, __ProcessPluginConfiguration.set, None, '\n                        The process plugin configuration is in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}SampleFileConfiguration uses Python identifier SampleFileConfiguration
    __SampleFileConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SampleFileConfiguration'), 'SampleFileConfiguration', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepSampleFileConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7001, 12), )

    
    SampleFileConfiguration = property(__SampleFileConfiguration.value, __SampleFileConfiguration.set, None, '\n                        The samplefile contents is encoded as binary zipped data.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ErrorReporterPluginConfiguration uses Python identifier ErrorReporterPluginConfiguration
    __ErrorReporterPluginConfiguration = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ErrorReporterPluginConfiguration'), 'ErrorReporterPluginConfiguration', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepErrorReporterPluginConfiguration', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7008, 12), )

    
    ErrorReporterPluginConfiguration = property(__ErrorReporterPluginConfiguration.value, __ErrorReporterPluginConfiguration.set, None, '\n                        The error reporter plugin configuration in an internal format.\n                    ')

    
    # Element {http://www.stibosystems.com/step}ContextLink uses Python identifier ContextLink
    __ContextLink = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ContextLink'), 'ContextLink', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepContextLink', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7015, 12), )

    
    ContextLink = property(__ContextLink.value, __ContextLink.set, None, '\n                        The context IDs the integration endpoint is using during export.\n                    ')

    
    # Element {http://www.stibosystems.com/step}WorkspaceID uses Python identifier WorkspaceID
    __WorkspaceID = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceID'), 'WorkspaceID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_httpwww_stibosystems_comstepWorkspaceID', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7022, 12), )

    
    WorkspaceID = property(__WorkspaceID.value, __WorkspaceID.set, None, '\n                        Specifies the ID of the workspace that provides the content selection for an export.\n                    ')

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_ID', _module_typeBindings.StepInboundEndPointID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7030, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7030, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7031, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7031, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of Integration Endpoint this is.\n                ')

    
    # Attribute Description uses Python identifier Description
    __Description = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Description'), 'Description', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_Description', pyxb.binding.datatypes.string)
    __Description._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7038, 8)
    __Description._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7038, 8)
    
    Description = property(__Description.value, __Description.set, None, None)

    
    # Attribute ResponsibleUserID uses Python identifier ResponsibleUserID
    __ResponsibleUserID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ResponsibleUserID'), 'ResponsibleUserID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_ResponsibleUserID', _module_typeBindings.StepID, required=True)
    __ResponsibleUserID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7039, 8)
    __ResponsibleUserID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7039, 8)
    
    ResponsibleUserID = property(__ResponsibleUserID.value, __ResponsibleUserID.set, None, '\n                    The user to be notified, if the end point stops working.\n                ')

    
    # Attribute MaximumNumberOfBackgroundProcesses uses Python identifier MaximumNumberOfBackgroundProcesses
    __MaximumNumberOfBackgroundProcesses = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaximumNumberOfBackgroundProcesses'), 'MaximumNumberOfBackgroundProcesses', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_MaximumNumberOfBackgroundProcesses', pyxb.binding.datatypes.string)
    __MaximumNumberOfBackgroundProcesses._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7046, 8)
    __MaximumNumberOfBackgroundProcesses._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7046, 8)
    
    MaximumNumberOfBackgroundProcesses = property(__MaximumNumberOfBackgroundProcesses.value, __MaximumNumberOfBackgroundProcesses.set, None, '\n                    The maximum number of old backgroundprocesses to keep for this endpoint. When the limit\n                    is reached, the oldest endpoints will be pruned at regular intervals.\n                ')

    
    # Attribute MaximumAgeOfBackgroundProcesses uses Python identifier MaximumAgeOfBackgroundProcesses
    __MaximumAgeOfBackgroundProcesses = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaximumAgeOfBackgroundProcesses'), 'MaximumAgeOfBackgroundProcesses', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_MaximumAgeOfBackgroundProcesses', pyxb.binding.datatypes.string)
    __MaximumAgeOfBackgroundProcesses._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7054, 8)
    __MaximumAgeOfBackgroundProcesses._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7054, 8)
    
    MaximumAgeOfBackgroundProcesses = property(__MaximumAgeOfBackgroundProcesses.value, __MaximumAgeOfBackgroundProcesses.set, None, '\n                    The maximum age of old backgroundprocesses to keep for this endpoint. All older endpoints\n                    will be deleted at regular intervals. Age should be specified in milliseconds.\n                ')

    
    # Attribute MaxNumberOfActiveBackgroundProcesses uses Python identifier MaxNumberOfActiveBackgroundProcesses
    __MaxNumberOfActiveBackgroundProcesses = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MaxNumberOfActiveBackgroundProcesses'), 'MaxNumberOfActiveBackgroundProcesses', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_MaxNumberOfActiveBackgroundProcesses', pyxb.binding.datatypes.string)
    __MaxNumberOfActiveBackgroundProcesses._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7062, 8)
    __MaxNumberOfActiveBackgroundProcesses._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7062, 8)
    
    MaxNumberOfActiveBackgroundProcesses = property(__MaxNumberOfActiveBackgroundProcesses.value, __MaxNumberOfActiveBackgroundProcesses.set, None, '\n                    The maximum number of active background processes.\n                ')

    
    # Attribute PollInterval uses Python identifier PollInterval
    __PollInterval = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PollInterval'), 'PollInterval', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_PollInterval', pyxb.binding.datatypes.string)
    __PollInterval._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7069, 8)
    __PollInterval._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7069, 8)
    
    PollInterval = property(__PollInterval.value, __PollInterval.set, None, '\n                    The time interval between an endpoint has handled the last requests in the receiver and the endpoint\n                    checks the receiver for new content. The poll interval is assumed to be in seconds and defaults to 30 seconds.\n                ')

    
    # Attribute ReceiverPluginID uses Python identifier ReceiverPluginID
    __ReceiverPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ReceiverPluginID'), 'ReceiverPluginID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_ReceiverPluginID', pyxb.binding.datatypes.string)
    __ReceiverPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7077, 8)
    __ReceiverPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7077, 8)
    
    ReceiverPluginID = property(__ReceiverPluginID.value, __ReceiverPluginID.set, None, '\n                    The type of the receiver plugin.\n                ')

    
    # Attribute ProcessPluginID uses Python identifier ProcessPluginID
    __ProcessPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ProcessPluginID'), 'ProcessPluginID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_ProcessPluginID', pyxb.binding.datatypes.string)
    __ProcessPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7084, 8)
    __ProcessPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7084, 8)
    
    ProcessPluginID = property(__ProcessPluginID.value, __ProcessPluginID.set, None, '\n                    The ID of the process plugin.\n                ')

    
    # Attribute PreProcessorPluginID uses Python identifier PreProcessorPluginID
    __PreProcessorPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PreProcessorPluginID'), 'PreProcessorPluginID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_PreProcessorPluginID', pyxb.binding.datatypes.string)
    __PreProcessorPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7091, 8)
    __PreProcessorPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7091, 8)
    
    PreProcessorPluginID = property(__PreProcessorPluginID.value, __PreProcessorPluginID.set, None, '\n                    The ID of the pre processor plugin.\n                ')

    
    # Attribute PostProcessorPluginID uses Python identifier PostProcessorPluginID
    __PostProcessorPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'PostProcessorPluginID'), 'PostProcessorPluginID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_PostProcessorPluginID', pyxb.binding.datatypes.string)
    __PostProcessorPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7098, 8)
    __PostProcessorPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7098, 8)
    
    PostProcessorPluginID = property(__PostProcessorPluginID.value, __PostProcessorPluginID.set, None, '\n                    The ID of the post processor plugin.\n                ')

    
    # Attribute ErrorReporterPluginID uses Python identifier ErrorReporterPluginID
    __ErrorReporterPluginID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ErrorReporterPluginID'), 'ErrorReporterPluginID', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_ErrorReporterPluginID', pyxb.binding.datatypes.string)
    __ErrorReporterPluginID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7105, 8)
    __ErrorReporterPluginID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7105, 8)
    
    ErrorReporterPluginID = property(__ErrorReporterPluginID.value, __ErrorReporterPluginID.set, None, '\n                    The ID of the post processor plugin.\n                ')

    
    # Attribute QueueForEndpoint uses Python identifier QueueForEndpoint
    __QueueForEndpoint = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QueueForEndpoint'), 'QueueForEndpoint', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_QueueForEndpoint', _module_typeBindings.StepEventQueueID)
    __QueueForEndpoint._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7112, 8)
    __QueueForEndpoint._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7112, 8)
    
    QueueForEndpoint = property(__QueueForEndpoint.value, __QueueForEndpoint.set, None, '\n                    The queue the endpoint poller background process for this endpoint is started in.\n                ')

    
    # Attribute QueueForProcssing uses Python identifier QueueForProcssing
    __QueueForProcssing = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'QueueForProcssing'), 'QueueForProcssing', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_QueueForProcssing', _module_typeBindings.StepEventQueueID)
    __QueueForProcssing._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7119, 8)
    __QueueForProcssing._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7119, 8)
    
    QueueForProcssing = property(__QueueForProcssing.value, __QueueForProcssing.set, None, '\n                    The queue used when a background process is started to handle the processing part of the endpoint.\n                    The processing part in the endpoint is where data is exported.\n                ')

    
    # Attribute TransactionType uses Python identifier TransactionType
    __TransactionType = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'TransactionType'), 'TransactionType', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_TransactionType', pyxb.binding.datatypes.string)
    __TransactionType._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7127, 8)
    __TransactionType._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7127, 8)
    
    TransactionType = property(__TransactionType.value, __TransactionType.set, None, '\n                    The transactional type of the endpoint.\n                ')

    
    # Attribute MessagesPerBackgroundProcess uses Python identifier MessagesPerBackgroundProcess
    __MessagesPerBackgroundProcess = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'MessagesPerBackgroundProcess'), 'MessagesPerBackgroundProcess', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_MessagesPerBackgroundProcess', pyxb.binding.datatypes.string)
    __MessagesPerBackgroundProcess._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7134, 8)
    __MessagesPerBackgroundProcess._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7134, 8)
    
    MessagesPerBackgroundProcess = property(__MessagesPerBackgroundProcess.value, __MessagesPerBackgroundProcess.set, None, '\n                    Controls the number of mesages to handle per background process when an Endpoint is run in Strict mode\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7141, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7141, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    When exporting from STEP, this flag indicates the object was referenced in other exported data.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_InBoundIntegrationEndpointType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7148, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7148, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __SetupGroupLink.name() : __SetupGroupLink,
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __ScheduleSpecification.name() : __ScheduleSpecification,
        __PreProcessorPluginConfiguration.name() : __PreProcessorPluginConfiguration,
        __PostProcessorPluginConfiguration.name() : __PostProcessorPluginConfiguration,
        __ReceiverPluginConfiguration.name() : __ReceiverPluginConfiguration,
        __ProcessPluginConfiguration.name() : __ProcessPluginConfiguration,
        __SampleFileConfiguration.name() : __SampleFileConfiguration,
        __ErrorReporterPluginConfiguration.name() : __ErrorReporterPluginConfiguration,
        __ContextLink.name() : __ContextLink,
        __WorkspaceID.name() : __WorkspaceID
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __Description.name() : __Description,
        __ResponsibleUserID.name() : __ResponsibleUserID,
        __MaximumNumberOfBackgroundProcesses.name() : __MaximumNumberOfBackgroundProcesses,
        __MaximumAgeOfBackgroundProcesses.name() : __MaximumAgeOfBackgroundProcesses,
        __MaxNumberOfActiveBackgroundProcesses.name() : __MaxNumberOfActiveBackgroundProcesses,
        __PollInterval.name() : __PollInterval,
        __ReceiverPluginID.name() : __ReceiverPluginID,
        __ProcessPluginID.name() : __ProcessPluginID,
        __PreProcessorPluginID.name() : __PreProcessorPluginID,
        __PostProcessorPluginID.name() : __PostProcessorPluginID,
        __ErrorReporterPluginID.name() : __ErrorReporterPluginID,
        __QueueForEndpoint.name() : __QueueForEndpoint,
        __QueueForProcssing.name() : __QueueForProcssing,
        __TransactionType.name() : __TransactionType,
        __MessagesPerBackgroundProcess.name() : __MessagesPerBackgroundProcess,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected
    })
_module_typeBindings.InBoundIntegrationEndpointType = InBoundIntegrationEndpointType
Namespace.addCategoryObject('typeBinding', 'InBoundIntegrationEndpointType', InBoundIntegrationEndpointType)


# Complex type {http://www.stibosystems.com/step}SetupGroupType with content type ELEMENT_ONLY
class SetupGroupType (pyxb.binding.basis.complexTypeDefinition):
    """
                An Setup Group node for grouping different Setup Objects, like ie. Integration Endpoints.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'SetupGroupType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7162, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.stibosystems.com/step}Name uses Python identifier Name
    __Name = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Name'), 'Name', '__httpwww_stibosystems_comstep_SetupGroupType_httpwww_stibosystems_comstepName', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7169, 12), )

    
    Name = property(__Name.value, __Name.set, None, None)

    
    # Element {http://www.stibosystems.com/step}MetaData uses Python identifier MetaData
    __MetaData = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), 'MetaData', '__httpwww_stibosystems_comstep_SetupGroupType_httpwww_stibosystems_comstepMetaData', False, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7170, 12), )

    
    MetaData = property(__MetaData.value, __MetaData.set, None, None)

    
    # Element {http://www.stibosystems.com/step}SetupGroup uses Python identifier SetupGroup
    __SetupGroup = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SetupGroup'), 'SetupGroup', '__httpwww_stibosystems_comstep_SetupGroupType_httpwww_stibosystems_comstepSetupGroup', True, pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7171, 12), )

    
    SetupGroup = property(__SetupGroup.value, __SetupGroup.set, None, None)

    
    # Attribute ID uses Python identifier ID
    __ID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ID'), 'ID', '__httpwww_stibosystems_comstep_SetupGroupType_ID', _module_typeBindings.StepSetupGroupID, required=True)
    __ID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7174, 8)
    __ID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7174, 8)
    
    ID = property(__ID.value, __ID.set, None, None)

    
    # Attribute UserTypeID uses Python identifier UserTypeID
    __UserTypeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'UserTypeID'), 'UserTypeID', '__httpwww_stibosystems_comstep_SetupGroupType_UserTypeID', _module_typeBindings.StepObjectTypeID)
    __UserTypeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7176, 8)
    __UserTypeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7176, 8)
    
    UserTypeID = property(__UserTypeID.value, __UserTypeID.set, None, '\n                    Determines what kind of SetupGroup this is.\n                ')

    
    # Attribute ParentID uses Python identifier ParentID
    __ParentID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'ParentID'), 'ParentID', '__httpwww_stibosystems_comstep_SetupGroupType_ParentID', _module_typeBindings.StepSetupGroupID)
    __ParentID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7184, 8)
    __ParentID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7184, 8)
    
    ParentID = property(__ParentID.value, __ParentID.set, None, '\n                    ID of the parent setup group. When creating new group during import either ParentID or parent node is required.\n                ')

    
    # Attribute Referenced uses Python identifier Referenced
    __Referenced = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Referenced'), 'Referenced', '__httpwww_stibosystems_comstep_SetupGroupType_Referenced', pyxb.binding.datatypes.boolean, unicode_default='false')
    __Referenced._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7192, 8)
    __Referenced._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7192, 8)
    
    Referenced = property(__Referenced.value, __Referenced.set, None, '\n                    When exporting from STEP, this flag indicates the object was referenced in other exported data.\n                ')

    
    # Attribute Selected uses Python identifier Selected
    __Selected = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Selected'), 'Selected', '__httpwww_stibosystems_comstep_SetupGroupType_Selected', _module_typeBindings.SelectedType, unicode_default='true')
    __Selected._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7200, 8)
    __Selected._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7200, 8)
    
    Selected = property(__Selected.value, __Selected.set, None, None)

    _ElementMap.update({
        __Name.name() : __Name,
        __MetaData.name() : __MetaData,
        __SetupGroup.name() : __SetupGroup
    })
    _AttributeMap.update({
        __ID.name() : __ID,
        __UserTypeID.name() : __UserTypeID,
        __ParentID.name() : __ParentID,
        __Referenced.name() : __Referenced,
        __Selected.name() : __Selected
    })
_module_typeBindings.SetupGroupType = SetupGroupType
Namespace.addCategoryObject('typeBinding', 'SetupGroupType', SetupGroupType)


# Complex type {http://www.stibosystems.com/step}TaskType with content type EMPTY
class TaskType (pyxb.binding.basis.complexTypeDefinition):
    """
                Information about a task - like assignee, deadline, priority etc.
            """
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_EMPTY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'TaskType')
    _XSDLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7215, 4)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Attribute STEPWorkflowID uses Python identifier STEPWorkflowID
    __STEPWorkflowID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'STEPWorkflowID'), 'STEPWorkflowID', '__httpwww_stibosystems_comstep_TaskType_STEPWorkflowID', _module_typeBindings.StepWorkflowID, required=True)
    __STEPWorkflowID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7221, 8)
    __STEPWorkflowID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7221, 8)
    
    STEPWorkflowID = property(__STEPWorkflowID.value, __STEPWorkflowID.set, None, '\n                    The ID of the STEP Workflow\n                ')

    
    # Attribute StateID uses Python identifier StateID
    __StateID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StateID'), 'StateID', '__httpwww_stibosystems_comstep_TaskType_StateID', pyxb.binding.datatypes.string, required=True)
    __StateID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7228, 8)
    __StateID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7228, 8)
    
    StateID = property(__StateID.value, __StateID.set, None, '\n                    The ID of the State\n                ')

    
    # Attribute AssigneeID uses Python identifier AssigneeID
    __AssigneeID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssigneeID'), 'AssigneeID', '__httpwww_stibosystems_comstep_TaskType_AssigneeID', _module_typeBindings.StepID, required=True)
    __AssigneeID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7235, 8)
    __AssigneeID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7235, 8)
    
    AssigneeID = property(__AssigneeID.value, __AssigneeID.set, None, '\n                    The ID of the assignee\n                ')

    
    # Attribute AssignedToGroup uses Python identifier AssignedToGroup
    __AssignedToGroup = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'AssignedToGroup'), 'AssignedToGroup', '__httpwww_stibosystems_comstep_TaskType_AssignedToGroup', _module_typeBindings.TrueFalseType, required=True)
    __AssignedToGroup._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7242, 8)
    __AssignedToGroup._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7242, 8)
    
    AssignedToGroup = property(__AssignedToGroup.value, __AssignedToGroup.set, None, '\n                    Is the task assigned to a group (or individual user).\n                ')

    
    # Attribute EntryTime uses Python identifier EntryTime
    __EntryTime = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'EntryTime'), 'EntryTime', '__httpwww_stibosystems_comstep_TaskType_EntryTime', pyxb.binding.datatypes.string, required=True)
    __EntryTime._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7249, 8)
    __EntryTime._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7249, 8)
    
    EntryTime = property(__EntryTime.value, __EntryTime.set, None, '\n                    The time the task was created.\n                ')

    
    # Attribute Deadline uses Python identifier Deadline
    __Deadline = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Deadline'), 'Deadline', '__httpwww_stibosystems_comstep_TaskType_Deadline', pyxb.binding.datatypes.string)
    __Deadline._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7256, 8)
    __Deadline._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7256, 8)
    
    Deadline = property(__Deadline.value, __Deadline.set, None, '\n                    The deadline of the task.\n                ')

    
    # Attribute Priority uses Python identifier Priority
    __Priority = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'Priority'), 'Priority', '__httpwww_stibosystems_comstep_TaskType_Priority', pyxb.binding.datatypes.integer)
    __Priority._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7263, 8)
    __Priority._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7263, 8)
    
    Priority = property(__Priority.value, __Priority.set, None, '\n                    The priority of the task.\n                ')

    
    # Attribute StatusID uses Python identifier StatusID
    __StatusID = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'StatusID'), 'StatusID', '__httpwww_stibosystems_comstep_TaskType_StatusID', _module_typeBindings.StepID)
    __StatusID._DeclarationLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7270, 8)
    __StatusID._UseLocation = pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7270, 8)
    
    StatusID = property(__StatusID.value, __StatusID.set, None, '\n                    The (ID of the) status of the task\n                ')

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __STEPWorkflowID.name() : __STEPWorkflowID,
        __StateID.name() : __StateID,
        __AssigneeID.name() : __AssigneeID,
        __AssignedToGroup.name() : __AssignedToGroup,
        __EntryTime.name() : __EntryTime,
        __Deadline.name() : __Deadline,
        __Priority.name() : __Priority,
        __StatusID.name() : __StatusID
    })
_module_typeBindings.TaskType = TaskType
Namespace.addCategoryObject('typeBinding', 'TaskType', TaskType)


STEP_ProductInformation = pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'STEP-ProductInformation'), CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 8, 4))
Namespace.addCategoryObject('elementBinding', STEP_ProductInformation.name().localName(), STEP_ProductInformation)



ActionSetListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ActionSet'), ActionSetType, scope=ActionSetListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 364, 12)))

def _BuildAutomaton ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton
    del _BuildAutomaton
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 364, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ActionSetListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ActionSet')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 364, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ActionSetListType._Automaton = _BuildAutomaton()




AnalyzerItemsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItem'), AnalyzerItemType, scope=AnalyzerItemsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 453, 12)))

def _BuildAutomaton_ ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_
    del _BuildAutomaton_
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 453, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AnalyzerItemsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItem')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 453, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AnalyzerItemsType._Automaton = _BuildAutomaton_()




AnalyzerListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerElement'), AnalyzerElementType, scope=AnalyzerListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 466, 12)))

def _BuildAutomaton_2 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_2
    del _BuildAutomaton_2
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 466, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AnalyzerListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 466, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AnalyzerListType._Automaton = _BuildAutomaton_2()




AnalyzerListsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerList'), AnalyzerListType, scope=AnalyzerListsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 485, 12)))

def _BuildAutomaton_3 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_3
    del _BuildAutomaton_3
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 485, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AnalyzerListsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 485, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AnalyzerListsType._Automaton = _BuildAutomaton_3()




AnalyzerResultType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerLists'), AnalyzerListsType, scope=AnalyzerResultType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 514, 12)))

AnalyzerResultType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItems'), AnalyzerItemsType, scope=AnalyzerResultType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 515, 12)))

def _BuildAutomaton_4 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_4
    del _BuildAutomaton_4
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(AnalyzerResultType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerLists')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 514, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(AnalyzerResultType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerItems')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 515, 12))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
AnalyzerResultType._Automaton = _BuildAutomaton_4()




AssetContentType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetContentSpecification'), AssetContentSpecificationType, scope=AssetContentType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 597, 12)))

def _BuildAutomaton_5 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_5
    del _BuildAutomaton_5
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 597, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetContentType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetContentSpecification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 597, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetContentType._Automaton = _BuildAutomaton_5()




AssetBinaryContentType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Checksum'), pyxb.binding.datatypes.string, scope=AssetBinaryContentType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 624, 12)))

AssetBinaryContentType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BinaryContent'), ConfigurationType, scope=AssetBinaryContentType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 625, 12)))

def _BuildAutomaton_6 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_6
    del _BuildAutomaton_6
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(AssetBinaryContentType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Checksum')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 624, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(AssetBinaryContentType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BinaryContent')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 625, 12))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
AssetBinaryContentType._Automaton = _BuildAutomaton_6()




AttributeSequenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=AttributeSequenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 957, 12)))

def _BuildAutomaton_7 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_7
    del _BuildAutomaton_7
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 957, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeSequenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 957, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeSequenceType._Automaton = _BuildAutomaton_7()




AttributeGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroup'), AttributeGroupType, scope=AttributeGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1044, 12)))

def _BuildAutomaton_8 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_8
    del _BuildAutomaton_8
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1044, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1044, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeGroupListType._Automaton = _BuildAutomaton_8()




AttributeListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Attribute'), AttributeType, scope=AttributeListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1182, 12)))

def _BuildAutomaton_9 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_9
    del _BuildAutomaton_9
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1182, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Attribute')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1182, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeListType._Automaton = _BuildAutomaton_9()




AttributeTransformationGroupsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroup'), AttributeTransformationGroupType, scope=AttributeTransformationGroupsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1238, 12)))

def _BuildAutomaton_10 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_10
    del _BuildAutomaton_10
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1238, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationGroupsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1238, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeTransformationGroupsType._Automaton = _BuildAutomaton_10()




BasketType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationBasketLink'), ClassificationBasketLinkType, scope=BasketType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1246, 12)))

BasketType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductBasketLink'), ProductBasketLinkType, scope=BasketType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1247, 12)))

BasketType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetBasketLink'), AssetBasketLinkType, scope=BasketType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1248, 12)))

def _BuildAutomaton_11 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_11
    del _BuildAutomaton_11
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1245, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BasketType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationBasketLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1246, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BasketType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductBasketLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1247, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BasketType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetBasketLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1248, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
BasketType._Automaton = _BuildAutomaton_11()




BulkUpdateConfigurationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfiguration'), BulkUpdateConfigurationType, scope=BulkUpdateConfigurationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1280, 12)))

def _BuildAutomaton_12 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_12
    del _BuildAutomaton_12
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1280, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BulkUpdateConfigurationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1280, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
BulkUpdateConfigurationsType._Automaton = _BuildAutomaton_12()




ClassificationTemplateType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=ClassificationTemplateType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1675, 12)))

def _BuildAutomaton_13 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_13
    del _BuildAutomaton_13
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ClassificationTemplateType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1675, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
ClassificationTemplateType._Automaton = _BuildAutomaton_13()




PublicationTypeValidityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IncludedPublicationType'), PublicationTypeLinkType, scope=PublicationTypeValidityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1744, 12)))

PublicationTypeValidityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ExcludedPublicationType'), PublicationTypeLinkType, scope=PublicationTypeValidityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1745, 12)))

def _BuildAutomaton_14 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_14
    del _BuildAutomaton_14
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1744, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1745, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PublicationTypeValidityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IncludedPublicationType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1744, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(PublicationTypeValidityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ExcludedPublicationType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1745, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PublicationTypeValidityType._Automaton = _BuildAutomaton_14()




ColumnTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ColumnType'), ColumnTypeType, scope=ColumnTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1784, 12)))

def _BuildAutomaton_15 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_15
    del _BuildAutomaton_15
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1784, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ColumnTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ColumnType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1784, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ColumnTypesType._Automaton = _BuildAutomaton_15()




ContextListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Context'), ContextType, scope=ContextListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1918, 12)))

def _BuildAutomaton_16 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_16
    del _BuildAutomaton_16
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1918, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ContextListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Context')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1918, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ContextListType._Automaton = _BuildAutomaton_16()




CrossContextsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Context'), ContextType, scope=CrossContextsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1926, 12)))

def _BuildAutomaton_17 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_17
    del _BuildAutomaton_17
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1926, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossContextsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Context')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1926, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CrossContextsType._Automaton = _BuildAutomaton_17()




DeleteAssetsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAsset'), DeleteAssetType, scope=DeleteAssetsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1998, 12)))

def _BuildAutomaton_18 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_18
    del _BuildAutomaton_18
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1998, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteAssetsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAsset')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1998, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteAssetsType._Automaton = _BuildAutomaton_18()




DeleteEntitiesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntity'), DeleteEntityType, scope=DeleteEntitiesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2027, 12)))

def _BuildAutomaton_19 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_19
    del _BuildAutomaton_19
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2027, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteEntitiesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2027, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteEntitiesType._Automaton = _BuildAutomaton_19()




DeleteClassificationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassification'), DeleteClassificationType, scope=DeleteClassificationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2094, 12)))

def _BuildAutomaton_20 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_20
    del _BuildAutomaton_20
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2094, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteClassificationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2094, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteClassificationsType._Automaton = _BuildAutomaton_20()




DeleteProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteProduct'), DeleteProductType, scope=DeleteProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2142, 12)))

def _BuildAutomaton_21 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_21
    del _BuildAutomaton_21
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2142, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteProduct')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2142, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteProductsType._Automaton = _BuildAutomaton_21()




DeleteAttributesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeOrGroup'), DeleteAttributeOrGroupType, scope=DeleteAttributesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2149, 12)))

def _BuildAutomaton_22 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_22
    del _BuildAutomaton_22
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2149, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteAttributesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeOrGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2149, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteAttributesType._Automaton = _BuildAutomaton_22()




DeleteUnitsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteUnitOrFamily'), DeleteUnitOrFamilyType, scope=DeleteUnitsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2156, 12)))

def _BuildAutomaton_23 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_23
    del _BuildAutomaton_23
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2156, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteUnitsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteUnitOrFamily')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2156, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteUnitsType._Automaton = _BuildAutomaton_23()




DeleteListOfValuesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValue'), DeleteListOfValueType, scope=DeleteListOfValuesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2163, 12)))

def _BuildAutomaton_24 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_24
    del _BuildAutomaton_24
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2163, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteListOfValuesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2163, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteListOfValuesType._Automaton = _BuildAutomaton_24()




DimensionListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Dimension'), DimensionType, scope=DimensionListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2222, 12)))

def _BuildAutomaton_25 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_25
    del _BuildAutomaton_25
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2222, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DimensionListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Dimension')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2222, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DimensionListType._Automaton = _BuildAutomaton_25()




ECatalogsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ECatalog'), ECatalogType, scope=ECatalogsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2317, 12)))

def _BuildAutomaton_26 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_26
    del _BuildAutomaton_26
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2317, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ECatalogsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ECatalog')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2317, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ECatalogsType._Automaton = _BuildAutomaton_26()




EdgeTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EdgeType'), EdgeTypeType, scope=EdgeTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2348, 12)))

def _BuildAutomaton_27 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_27
    del _BuildAutomaton_27
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2348, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EdgeTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EdgeType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2348, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EdgeTypesType._Automaton = _BuildAutomaton_27()




DerivedEventTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DerivedEventType'), STD_ANON_6, scope=DerivedEventTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2355, 12)))

def _BuildAutomaton_28 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_28
    del _BuildAutomaton_28
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2355, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DerivedEventTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DerivedEventType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2355, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DerivedEventTypesType._Automaton = _BuildAutomaton_28()




EventQueuesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EventQueue'), EventQueueType, scope=EventQueuesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2386, 12)))

def _BuildAutomaton_29 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_29
    del _BuildAutomaton_29
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2386, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EventQueuesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EventQueue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2386, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EventQueuesType._Automaton = _BuildAutomaton_29()




ExportConfigurationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ExportConfiguration'), ExportConfigurationType, scope=ExportConfigurationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2418, 12)))

def _BuildAutomaton_30 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_30
    del _BuildAutomaton_30
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2418, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ExportConfigurationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ExportConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2418, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ExportConfigurationsType._Automaton = _BuildAutomaton_30()




GUISetupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUISetupEnabled'), GUISetupEnabledType, scope=GUISetupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2431, 16)))

GUISetupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUISetupDisabled'), GUISetupDisabledType, scope=GUISetupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2432, 16)))

GUISetupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUISetupAdvanced'), GUISetupAdvancedType, scope=GUISetupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2433, 16)))

def _BuildAutomaton_31 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_31
    del _BuildAutomaton_31
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2430, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GUISetupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUISetupEnabled')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2431, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GUISetupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUISetupDisabled')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2432, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GUISetupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUISetupAdvanced')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2433, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
GUISetupType._Automaton = _BuildAutomaton_31()




ImportConfigurationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ImportConfiguration'), ImportConfigurationType, scope=ImportConfigurationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2502, 12)))

def _BuildAutomaton_32 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_32
    del _BuildAutomaton_32
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2502, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ImportConfigurationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ImportConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2502, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ImportConfigurationsType._Automaton = _BuildAutomaton_32()




def _BuildAutomaton_33 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_33
    del _BuildAutomaton_33
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
KeyFormulaType._Automaton = _BuildAutomaton_33()




KeysType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Key'), KeyType, scope=KeysType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2550, 12)))

def _BuildAutomaton_34 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_34
    del _BuildAutomaton_34
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2550, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(KeysType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Key')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2550, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
KeysType._Automaton = _BuildAutomaton_34()




ListOfValuesGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroup'), ListOfValuesGroupType, scope=ListOfValuesGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2619, 12)))

def _BuildAutomaton_35 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_35
    del _BuildAutomaton_35
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2619, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValuesGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2619, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ListOfValuesGroupListType._Automaton = _BuildAutomaton_35()




ListsOfValuesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ListOfValue'), ListOfValueType, scope=ListsOfValuesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2737, 12)))

def _BuildAutomaton_36 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_36
    del _BuildAutomaton_36
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2737, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ListsOfValuesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ListOfValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2737, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ListsOfValuesType._Automaton = _BuildAutomaton_36()




MetaDataType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Value'), ValueType, scope=MetaDataType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2750, 12)))

MetaDataType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MultiValue'), MultiValueType, scope=MetaDataType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2751, 12)))

MetaDataType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), ValueGroupType, scope=MetaDataType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2752, 12)))

def _BuildAutomaton_37 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_37
    del _BuildAutomaton_37
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2749, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MetaDataType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Value')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2750, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MetaDataType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MultiValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2751, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MetaDataType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2752, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MetaDataType._Automaton = _BuildAutomaton_37()




def _BuildAutomaton_38 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_38
    del _BuildAutomaton_38
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
MIMETypeType._Automaton = _BuildAutomaton_38()




MissingObjectsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classifications'), ClassificationsType, scope=MissingObjectsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2761, 12)))

MissingObjectsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Products'), ProductsType, scope=MissingObjectsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2762, 12)))

MissingObjectsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Assets'), AssetsType, scope=MissingObjectsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2763, 12)))

MissingObjectsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroups'), PublicationGroupsType, scope=MissingObjectsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2764, 12)))

MissingObjectsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Publication'), PublicationType, scope=MissingObjectsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2765, 12)))

MissingObjectsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlannedPage'), PlannedPageType, scope=MissingObjectsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2766, 12)))

def _BuildAutomaton_39 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_39
    del _BuildAutomaton_39
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2765, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2766, 12))
    counters.add(cc_1)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MissingObjectsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classifications')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2761, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MissingObjectsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Products')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2762, 12))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MissingObjectsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Assets')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2763, 12))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MissingObjectsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroups')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2764, 12))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MissingObjectsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Publication')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2765, 12))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(MissingObjectsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlannedPage')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2766, 12))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
         ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MissingObjectsType._Automaton = _BuildAutomaton_39()




def _BuildAutomaton_40 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_40
    del _BuildAutomaton_40
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
NoteRecordType._Automaton = _BuildAutomaton_40()




PageContentsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Frame'), FrameType, scope=PageContentsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2892, 12)))

PageContentsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'NoteFrame'), NoteFrameType, scope=PageContentsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2893, 12)))

PageContentsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GalleyFrame'), GalleyFrameType, scope=PageContentsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2894, 12)))

def _BuildAutomaton_41 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_41
    del _BuildAutomaton_41
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2891, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PageContentsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Frame')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2892, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PageContentsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'NoteFrame')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2893, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PageContentsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GalleyFrame')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2894, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PageContentsType._Automaton = _BuildAutomaton_41()




PagesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Page'), PageType, scope=PagesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2950, 12)))

def _BuildAutomaton_42 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_42
    del _BuildAutomaton_42
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2950, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PagesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Page')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2950, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PagesType._Automaton = _BuildAutomaton_42()




ProductTemplateType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=ProductTemplateType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3317, 12)))

def _BuildAutomaton_43 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_43
    del _BuildAutomaton_43
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ProductTemplateType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3317, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
ProductTemplateType._Automaton = _BuildAutomaton_43()




PublicationGroupsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup'), PublicationGroupType, scope=PublicationGroupsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3602, 12)))

def _BuildAutomaton_44 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_44
    del _BuildAutomaton_44
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3602, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PublicationGroupsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3602, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PublicationGroupsType._Automaton = _BuildAutomaton_44()




QualifiersType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Qualifier'), QualifierType, scope=QualifiersType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3684, 12)))

def _BuildAutomaton_45 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_45
    del _BuildAutomaton_45
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3684, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(QualifiersType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Qualifier')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3684, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
QualifiersType._Automaton = _BuildAutomaton_45()




ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Attributes'), ReplaceAttributesType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for attribute definitions\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3696, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LinkTypes'), ReplaceLinkTypesType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for link type definitions, i.e. reference type and classification product link type definitions\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3703, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypes'), ReplaceUserTypesType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for user type a.k.a. object type definitions\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3710, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserGroups'), ReplaceUserGroupsType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for user group definitions\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3717, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Products'), ReplaceProductsType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for products\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3724, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classifications'), ReplaceClassificationsType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for classifications\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3731, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Entities'), ReplaceEntitiesType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for entities\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3738, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Assets'), ReplaceAssetsType, scope=ReplacementRulesType, documentation='\n                        Replacement rules for assets\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3745, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductValuesForAttributeGroup'), ReplaceProductValuesForAttributeGroupType, scope=ReplacementRulesType, documentation='\n                        @Deprecated Replaced by ReplaceValues in ReplacementRules structure.\n                        This only works for products.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3752, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToProductCrossReference'), ReplaceProductToProductCrossReferenceType, scope=ReplacementRulesType, documentation='\n                        @Deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3761, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToAssetCrossReference'), ReplaceProductToAssetCrossReferenceType, scope=ReplacementRulesType, documentation='\n                        @Deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3769, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReference'), ReplaceClassificationReferenceType, scope=ReplacementRulesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3777, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReference'), ReplaceCrossReferenceType, scope=ReplacementRulesType, documentation='\n                        @Deprecated Replaced by ReplaceCrossReferences in ReplacementRulesStructure.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3779, 12)))

ReplacementRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainer'), ReplaceDataContainerTypeType, scope=ReplacementRulesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3787, 12)))

def _BuildAutomaton_46 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_46
    del _BuildAutomaton_46
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3696, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3703, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3710, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3717, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3724, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3731, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3738, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3745, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3752, 12))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3761, 12))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3769, 12))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3777, 12))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3779, 12))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3787, 12))
    counters.add(cc_13)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Attributes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3696, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LinkTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3703, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3710, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserGroups')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3717, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Products')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3724, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classifications')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3731, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Entities')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3738, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Assets')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3745, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductValuesForAttributeGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3752, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3761, 12))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductToAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3769, 12))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3777, 12))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3779, 12))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(ReplacementRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainer')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3787, 12))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_10, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_12, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_13, True) ]))
    st_13._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplacementRulesType._Automaton = _BuildAutomaton_46()




ReplaceAttributesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeGroupLinks'), ReplaceAttributeGroupLinksType, scope=ReplaceAttributesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3794, 12)))

ReplaceAttributesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks'), ReplaceUserTypeLinksType, scope=ReplaceAttributesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3795, 12)))

ReplaceAttributesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUnitLinks'), ReplaceUnitLinksType, scope=ReplaceAttributesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3796, 12)))

def _BuildAutomaton_47 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_47
    del _BuildAutomaton_47
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3794, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3795, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3796, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceAttributesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeGroupLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3794, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceAttributesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3795, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceAttributesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUnitLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3796, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceAttributesType._Automaton = _BuildAutomaton_47()




ReplaceLinkTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks'), ReplaceSourceUserTypeLinksType, scope=ReplaceLinkTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3832, 12)))

ReplaceLinkTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceTargetUserTypeLinks'), ReplaceTargetUserTypeLinksType, scope=ReplaceLinkTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3833, 12)))

def _BuildAutomaton_48 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_48
    del _BuildAutomaton_48
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3832, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3833, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceLinkTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3832, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceLinkTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceTargetUserTypeLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3833, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceLinkTypesType._Automaton = _BuildAutomaton_48()




ReplaceUserTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks'), ReplaceUserTypeLinksType, scope=ReplaceUserTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3863, 12)))

def _BuildAutomaton_49 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_49
    del _BuildAutomaton_49
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3863, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceUserTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceUserTypeLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3863, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceUserTypesType._Automaton = _BuildAutomaton_49()




ReplaceUserGroupsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplacePrivilegeRules'), ReplacePrivilegeRulesType, scope=ReplaceUserGroupsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3869, 12)))

def _BuildAutomaton_50 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_50
    del _BuildAutomaton_50
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3869, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceUserGroupsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplacePrivilegeRules')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3869, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceUserGroupsType._Automaton = _BuildAutomaton_50()




ReplaceProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), ReplaceValuesType, scope=ReplaceProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3884, 12)))

ReplaceProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), ReplaceCrossReferencesType, scope=ReplaceProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3885, 12)))

ReplaceProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinks'), ReplaceAttributeLinksType, scope=ReplaceProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3886, 12)))

ReplaceProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceOverrideSubProducts'), ReplaceOverrideSubProductsType, scope=ReplaceProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3887, 12)))

ReplaceProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReferences'), ReplaceClassificationReferencesType, scope=ReplaceProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3888, 12)))

ReplaceProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainers'), ReplaceDataContainersType, scope=ReplaceProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3889, 12)))

def _BuildAutomaton_51 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_51
    del _BuildAutomaton_51
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3884, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3885, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3886, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3887, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3888, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3889, 12))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3884, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3885, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3886, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceOverrideSubProducts')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3887, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceClassificationReferences')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3888, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainers')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3889, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceProductsType._Automaton = _BuildAutomaton_51()




ReplaceClassificationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), ReplaceValuesType, scope=ReplaceClassificationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3895, 12)))

ReplaceClassificationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), ReplaceCrossReferencesType, scope=ReplaceClassificationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3896, 12)))

ReplaceClassificationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinks'), ReplaceAttributeLinksType, scope=ReplaceClassificationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3897, 12)))

ReplaceClassificationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductReferences'), ReplaceProductReferencesType, scope=ReplaceClassificationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3898, 12)))

def _BuildAutomaton_52 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_52
    del _BuildAutomaton_52
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3895, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3896, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3897, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3898, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceClassificationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3895, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceClassificationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3896, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceClassificationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceAttributeLinks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3897, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceClassificationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceProductReferences')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3898, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceClassificationsType._Automaton = _BuildAutomaton_52()




ReplaceEntitiesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), ReplaceValuesType, scope=ReplaceEntitiesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3904, 12)))

ReplaceEntitiesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), ReplaceCrossReferencesType, scope=ReplaceEntitiesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3905, 12)))

ReplaceEntitiesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainers'), ReplaceAttributeLinksType, scope=ReplaceEntitiesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3906, 12)))

def _BuildAutomaton_53 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_53
    del _BuildAutomaton_53
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3904, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3905, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3906, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceEntitiesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3904, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceEntitiesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3905, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceEntitiesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceDataContainers')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3906, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceEntitiesType._Automaton = _BuildAutomaton_53()




ReplaceAssetsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues'), ReplaceValuesType, scope=ReplaceAssetsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3912, 12)))

ReplaceAssetsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences'), ReplaceCrossReferencesType, scope=ReplaceAssetsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3913, 12)))

def _BuildAutomaton_54 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_54
    del _BuildAutomaton_54
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3912, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3913, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceAssetsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceValues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3912, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ReplaceAssetsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplaceCrossReferences')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3913, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ReplaceAssetsType._Automaton = _BuildAutomaton_54()




RowTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RowType'), RowTypeType, scope=RowTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4191, 12)))

def _BuildAutomaton_55 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_55
    del _BuildAutomaton_55
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4191, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(RowTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RowType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4191, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
RowTypesType._Automaton = _BuildAutomaton_55()




SystemSetupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SystemSetupValue'), SystemSetupValueType, scope=SystemSetupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4391, 12)))

def _BuildAutomaton_56 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_56
    del _BuildAutomaton_56
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4391, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SystemSetupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SystemSetupValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4391, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SystemSetupType._Automaton = _BuildAutomaton_56()




TablesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableDefinition'), TableDefinitionType, scope=TablesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4439, 12)))

TablesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Table'), TableType, scope=TablesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4440, 12)))

def _BuildAutomaton_57 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_57
    del _BuildAutomaton_57
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4438, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TablesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableDefinition')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4439, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TablesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Table')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4440, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TablesType._Automaton = _BuildAutomaton_57()




TableDefinitionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableXML'), TableConfigurationType, scope=TableDefinitionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4446, 12)))

TableDefinitionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableFreeTextXML'), TableConfigurationType, scope=TableDefinitionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4447, 12)))

def _BuildAutomaton_58 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_58
    del _BuildAutomaton_58
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4447, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(TableDefinitionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableXML')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4446, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableDefinitionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableFreeTextXML')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4447, 12))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
TableDefinitionType._Automaton = _BuildAutomaton_58()




TableConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=TableConfigurationType, documentation='\n                        The configuration is an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4458, 12)))

def _BuildAutomaton_59 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_59
    del _BuildAutomaton_59
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4458, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4458, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TableConfigurationType._Automaton = _BuildAutomaton_59()




TableColorsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableColor'), TableColorType, scope=TableColorsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4524, 12)))

def _BuildAutomaton_60 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_60
    del _BuildAutomaton_60
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4524, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableColorsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableColor')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4524, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TableColorsType._Automaton = _BuildAutomaton_60()




TableRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableRule'), TableRuleType, scope=TableRulesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4548, 12)))

def _BuildAutomaton_61 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_61
    del _BuildAutomaton_61
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4548, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableRule')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4548, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TableRulesType._Automaton = _BuildAutomaton_61()




RowColumnTableGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroup'), RowColumnTableGroupType, scope=RowColumnTableGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4578, 12)))

def _BuildAutomaton_62 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_62
    del _BuildAutomaton_62
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4578, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(RowColumnTableGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4578, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
RowColumnTableGroupListType._Automaton = _BuildAutomaton_62()




TableTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableType'), TableTypeType, scope=TableTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4607, 12)))

def _BuildAutomaton_63 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_63
    del _BuildAutomaton_63
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4607, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4607, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TableTypesType._Automaton = _BuildAutomaton_63()




TagGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroup'), StyleTagGroupType, scope=TagGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4764, 12)))

TagGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroup'), SpecialCharacterTagGroupType, scope=TagGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4765, 12)))

TagGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroup'), CharacterTagGroupType, scope=TagGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4766, 12)))

TagGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroup'), FootnoteTagGroupType, scope=TagGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4767, 12)))

TagGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroup'), HyperlinkTagGroupType, scope=TagGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4768, 12)))

def _BuildAutomaton_64 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_64
    del _BuildAutomaton_64
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4764, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4765, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4766, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4767, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4768, 12))
    counters.add(cc_4)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4764, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(TagGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4765, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(TagGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4766, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(TagGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4767, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(TagGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4768, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TagGroupListType._Automaton = _BuildAutomaton_64()




TagListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Tag'), TagType, scope=TagListType, documentation='\n                        DEPRECATED. For backward compatibility. Contains all the step tags only.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4781, 12)))

TagListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'StyleTag'), StyleTagType, scope=TagListType, documentation='\n                        A style tag.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4788, 12)))

TagListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTag'), SpecialCharacterTagType, scope=TagListType, documentation='\n                        A special character tag.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4795, 12)))

TagListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CharacterTag'), CharacterTagType, scope=TagListType, documentation='\n                        A character tag.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4802, 12)))

TagListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTag'), FootnoteTagType, scope=TagListType, documentation='\n                        A footnote tag.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4809, 12)))

TagListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTag'), HyperlinkTagType, scope=TagListType, documentation='\n                        A hyperlink tag.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4816, 12)))

def _BuildAutomaton_65 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_65
    del _BuildAutomaton_65
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4780, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Tag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4781, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'StyleTag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4788, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4795, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CharacterTag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4802, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4809, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4816, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TagListType._Automaton = _BuildAutomaton_65()




TagFormatType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FormattingStart'), pyxb.binding.datatypes.string, scope=TagFormatType, documentation='\n                        How tag should be converted to given output format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5032, 12)))

TagFormatType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FormattingStop'), pyxb.binding.datatypes.string, scope=TagFormatType, documentation='\n                        How end tag should be converted to given output format. Not relevant for character and special character tags.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5039, 12)))

def _BuildAutomaton_66 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_66
    del _BuildAutomaton_66
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5039, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(TagFormatType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FormattingStart')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5032, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TagFormatType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FormattingStop')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5039, 12))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
TagFormatType._Automaton = _BuildAutomaton_66()




def _BuildAutomaton_67 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_67
    del _BuildAutomaton_67
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
FormattingType._Automaton = _BuildAutomaton_67()




TermsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Term'), TermType, scope=TermsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5096, 12)))

def _BuildAutomaton_68 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_68
    del _BuildAutomaton_68
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5096, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TermsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Term')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5096, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TermsType._Automaton = _BuildAutomaton_68()




TextType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Image'), pyxb.binding.datatypes.anyType, scope=TextType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5108, 13)))

def _BuildAutomaton_69 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_69
    del _BuildAutomaton_69
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5107, 9))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TextType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Image')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5108, 13))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TextType._Automaton = _BuildAutomaton_69()




TransformationLookupTableConfigurationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfiguration'), TransformationLookupTableConfigurationType, scope=TransformationLookupTableConfigurationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5146, 12)))

def _BuildAutomaton_70 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_70
    del _BuildAutomaton_70
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5146, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TransformationLookupTableConfigurationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5146, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TransformationLookupTableConfigurationsType._Automaton = _BuildAutomaton_70()




UnitListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UnitFamily'), UnitFamilyType, scope=UnitListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5318, 16)))

UnitListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Unit'), UnitType, scope=UnitListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5319, 16)))

def _BuildAutomaton_71 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_71
    del _BuildAutomaton_71
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5317, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UnitListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UnitFamily')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5318, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UnitListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Unit')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5319, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UnitListType._Automaton = _BuildAutomaton_71()




CollectionListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CollectionGroup'), CollectionGroupType, scope=CollectionListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5331, 16)))

CollectionListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Collection'), CollectionType, scope=CollectionListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5332, 16)))

def _BuildAutomaton_72 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_72
    del _BuildAutomaton_72
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5331, 16))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5332, 16))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CollectionListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CollectionGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5331, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CollectionListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Collection')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5332, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CollectionListType._Automaton = _BuildAutomaton_72()




BusinessLibrariesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BusinessRule'), BusinessRuleType, scope=BusinessLibrariesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5343, 16)))

def _BuildAutomaton_73 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_73
    del _BuildAutomaton_73
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5343, 16))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BusinessLibrariesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BusinessRule')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5343, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
BusinessLibrariesType._Automaton = _BuildAutomaton_73()




BusinessRulesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BusinessRule'), BusinessRuleType, scope=BusinessRulesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5354, 16)))

def _BuildAutomaton_74 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_74
    del _BuildAutomaton_74
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5354, 16))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRulesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BusinessRule')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5354, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
BusinessRulesType._Automaton = _BuildAutomaton_74()




ValidObjectTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectType'), ValidObjectTypeType, scope=ValidObjectTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5449, 12)))

def _BuildAutomaton_75 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_75
    del _BuildAutomaton_75
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5449, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValidObjectTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5449, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ValidObjectTypesType._Automaton = _BuildAutomaton_75()




def _BuildAutomaton_76 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_76
    del _BuildAutomaton_76
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
BusinessRuleDescriptionType._Automaton = _BuildAutomaton_76()




PortalConfigurationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PortalConfiguration'), PortalConfigurationType, scope=PortalConfigurationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5629, 16)))

def _BuildAutomaton_77 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_77
    del _BuildAutomaton_77
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5629, 16))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PortalConfigurationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PortalConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5629, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PortalConfigurationsType._Automaton = _BuildAutomaton_77()




MatchCodesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MatchCode'), MatchCodeType, scope=MatchCodesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5729, 16)))

def _BuildAutomaton_78 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_78
    del _BuildAutomaton_78
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5729, 16))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MatchCode')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5729, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MatchCodesType._Automaton = _BuildAutomaton_78()




def _BuildAutomaton_79 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_79
    del _BuildAutomaton_79
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
MatchCodeTemplateType._Automaton = _BuildAutomaton_79()




MatchingAlgorithmsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithm'), MatchingAlgorithmType, scope=MatchingAlgorithmsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5822, 16)))

def _BuildAutomaton_80 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_80
    del _BuildAutomaton_80
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5822, 16))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MatchingAlgorithmsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithm')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5822, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MatchingAlgorithmsType._Automaton = _BuildAutomaton_80()




def _BuildAutomaton_81 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_81
    del _BuildAutomaton_81
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
MatchingAlgorithmConfigurationType._Automaton = _BuildAutomaton_81()




UnitOutputTemplateType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=UnitOutputTemplateType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5894, 12)))

def _BuildAutomaton_82 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_82
    del _BuildAutomaton_82
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(UnitOutputTemplateType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5894, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
UnitOutputTemplateType._Automaton = _BuildAutomaton_82()




UserGroupListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserGroup'), UserGroupType, scope=UserGroupListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5984, 12)))

def _BuildAutomaton_83 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_83
    del _BuildAutomaton_83
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5984, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5984, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UserGroupListType._Automaton = _BuildAutomaton_83()




UserListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'User'), UserType, scope=UserListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5991, 12)))

def _BuildAutomaton_84 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_84
    del _BuildAutomaton_84
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5991, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UserListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'User')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5991, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UserListType._Automaton = _BuildAutomaton_84()




UserTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserType'), UserTypeType, scope=UserTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6064, 12)))

def _BuildAutomaton_85 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_85
    del _BuildAutomaton_85
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6064, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UserTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6064, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UserTypesType._Automaton = _BuildAutomaton_85()




DataContainerTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainerType'), DataContainerTypeType, scope=DataContainerTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6076, 12)))

def _BuildAutomaton_86 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_86
    del _BuildAutomaton_86
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6076, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainerType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6076, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DataContainerTypesType._Automaton = _BuildAutomaton_86()




ValidationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UnitLink'), UnitLinkType, scope=ValidationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6183, 12)))

def _BuildAutomaton_87 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_87
    del _BuildAutomaton_87
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6183, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValidationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UnitLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6183, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ValidationType._Automaton = _BuildAutomaton_87()




ValueFilterType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Value'), ValueType, scope=ValueFilterType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6308, 12)))

ValueFilterType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), ValueGroupType, scope=ValueFilterType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6309, 12)))

def _BuildAutomaton_88 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_88
    del _BuildAutomaton_88
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6308, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6309, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValueFilterType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Value')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6308, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ValueFilterType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6309, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ValueFilterType._Automaton = _BuildAutomaton_88()




ValuesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Value'), ValueType, scope=ValuesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6338, 12)))

ValuesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MultiValue'), MultiValueType, scope=ValuesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6339, 12)))

ValuesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), ValueGroupType, scope=ValuesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6340, 12)))

def _BuildAutomaton_89 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_89
    del _BuildAutomaton_89
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6337, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValuesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Value')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6338, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValuesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MultiValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6339, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValuesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6340, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ValuesType._Automaton = _BuildAutomaton_89()




DataContainersType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainer'), SingleDataContainerType, scope=DataContainersType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6452, 12)))

DataContainersType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MultiDataContainer'), MultiDataContainerType, scope=DataContainersType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6453, 12)))

DataContainersType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainer'), DeleteSingleDataContainerType, scope=DataContainersType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6454, 12)))

def _BuildAutomaton_90 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_90
    del _BuildAutomaton_90
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6451, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DataContainersType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainer')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6452, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DataContainersType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MultiDataContainer')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6453, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DataContainersType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainer')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6454, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DataContainersType._Automaton = _BuildAutomaton_90()




VisibleTermFieldsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'VisibleTermField'), VisibleTermFieldType, scope=VisibleTermFieldsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6503, 12)))

def _BuildAutomaton_91 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_91
    del _BuildAutomaton_91
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6503, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(VisibleTermFieldsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'VisibleTermField')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6503, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
VisibleTermFieldsType._Automaton = _BuildAutomaton_91()




WebSitesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'WebSite'), WebSiteType, scope=WebSitesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6530, 12)))

def _BuildAutomaton_92 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_92
    del _BuildAutomaton_92
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6530, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(WebSitesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'WebSite')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6530, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
WebSitesType._Automaton = _BuildAutomaton_92()




CalculatedAttributeSettingsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=CalculatedAttributeSettingsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6546, 12)))

def _BuildAutomaton_93 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_93
    del _BuildAutomaton_93
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6546, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CalculatedAttributeSettingsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6546, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CalculatedAttributeSettingsType._Automaton = _BuildAutomaton_93()




AssetSettingsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=AssetSettingsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6561, 12)))

def _BuildAutomaton_94 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_94
    del _BuildAutomaton_94
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6561, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetSettingsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6561, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetSettingsType._Automaton = _BuildAutomaton_94()




GlobalSettingsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CalculatedAttributeSettings'), CalculatedAttributeSettingsType, scope=GlobalSettingsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6572, 12)))

GlobalSettingsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetSettings'), AssetSettingsType, scope=GlobalSettingsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6573, 12)))

def _BuildAutomaton_95 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_95
    del _BuildAutomaton_95
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6572, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6573, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GlobalSettingsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CalculatedAttributeSettings')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6572, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(GlobalSettingsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetSettings')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6573, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
GlobalSettingsType._Automaton = _BuildAutomaton_95()




EventProcessorsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EventProcessor'), EventProcessorType, scope=EventProcessorsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6584, 12)))

def _BuildAutomaton_96 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_96
    del _BuildAutomaton_96
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6584, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EventProcessorsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EventProcessor')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6584, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EventProcessorsType._Automaton = _BuildAutomaton_96()




SetupEntitiesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupEntity'), SetupEntityType, scope=SetupEntitiesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6638, 12)))

def _BuildAutomaton_97 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_97
    del _BuildAutomaton_97
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6638, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SetupEntitiesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupEntity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6638, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SetupEntitiesType._Automaton = _BuildAutomaton_97()




IntegrationEndpointsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'OutBoundIntegrationEndpoint'), OutBoundIntegrationEndpointType, scope=IntegrationEndpointsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6685, 12)))

IntegrationEndpointsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'InBoundIntegrationEndpoint'), InBoundIntegrationEndpointType, scope=IntegrationEndpointsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6686, 12)))

IntegrationEndpointsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GatewayIntegrationEndpoint'), GatewayIntegrationEndpointType, scope=IntegrationEndpointsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6687, 12)))

def _BuildAutomaton_98 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_98
    del _BuildAutomaton_98
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6685, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6686, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6687, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(IntegrationEndpointsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'OutBoundIntegrationEndpoint')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6685, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(IntegrationEndpointsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'InBoundIntegrationEndpoint')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6686, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(IntegrationEndpointsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GatewayIntegrationEndpoint')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6687, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
IntegrationEndpointsType._Automaton = _BuildAutomaton_98()




SetupGroupsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroup'), SetupGroupType, scope=SetupGroupsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7158, 12)))

def _BuildAutomaton_99 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_99
    del _BuildAutomaton_99
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7158, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SetupGroupsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7158, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SetupGroupsType._Automaton = _BuildAutomaton_99()




CurrentTasksType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Task'), TaskType, scope=CurrentTasksType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7211, 12)))

def _BuildAutomaton_100 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_100
    del _BuildAutomaton_100
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7211, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CurrentTasksType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Task')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7211, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CurrentTasksType._Automaton = _BuildAutomaton_100()




ChangePackagesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ChangePackage'), ChangePackageType, scope=ChangePackagesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7282, 12)))

def _BuildAutomaton_101 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_101
    del _BuildAutomaton_101
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7282, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ChangePackagesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ChangePackage')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7282, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ChangePackagesType._Automaton = _BuildAutomaton_101()




StatusFlagsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'StatusFlag'), StatusFlagType, scope=StatusFlagsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7310, 12)))

def _BuildAutomaton_102 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_102
    del _BuildAutomaton_102
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7310, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(StatusFlagsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'StatusFlag')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7310, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
StatusFlagsType._Automaton = _BuildAutomaton_102()




AnalyzerItemType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerProp'), AnalyzerPropType, scope=AnalyzerItemType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 418, 12)))

def _BuildAutomaton_103 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_103
    del _BuildAutomaton_103
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 418, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AnalyzerItemType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerProp')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 418, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AnalyzerItemType._Automaton = _BuildAutomaton_103()




def _BuildAutomaton_104 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_104
    del _BuildAutomaton_104
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
AnalyzerPropType._Automaton = _BuildAutomaton_104()




AssetBasketLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AssetBasketLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 645, 12)))

def _BuildAutomaton_105 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_105
    del _BuildAutomaton_105
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 644, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetBasketLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 645, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetBasketLinkType._Automaton = _BuildAutomaton_105()




AssetElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout'), RuleBasedLayoutType, scope=AssetElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 743, 12)))

AssetElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AssetElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 744, 12)))

AssetElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), TemplateLayoutType, scope=AssetElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 745, 12)))

AssetElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), PickupLayoutType, scope=AssetElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 746, 12)))

def _BuildAutomaton_106 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_106
    del _BuildAutomaton_106
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 742, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 743, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 744, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 745, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 746, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetElementType._Automaton = _BuildAutomaton_106()




def _BuildAutomaton_107 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_107
    del _BuildAutomaton_107
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
AssetPushLocationType._Automaton = _BuildAutomaton_107()




BulkUpdateConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=BulkUpdateConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1258, 12)))

BulkUpdateConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=BulkUpdateConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1259, 12)))

BulkUpdateConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=BulkUpdateConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1260, 12)))

BulkUpdateConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=BulkUpdateConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1262, 12)))

def _BuildAutomaton_108 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_108
    del _BuildAutomaton_108
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1258, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1259, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1260, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1262, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BulkUpdateConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1258, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(BulkUpdateConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1259, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(BulkUpdateConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1260, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(BulkUpdateConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1262, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
BulkUpdateConfigurationType._Automaton = _BuildAutomaton_108()




ClassificationBasketLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ClassificationBasketLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1448, 12)))

def _BuildAutomaton_109 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_109
    del _BuildAutomaton_109
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1447, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationBasketLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1448, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationBasketLinkType._Automaton = _BuildAutomaton_109()




ClassificationElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout'), RuleBasedLayoutType, scope=ClassificationElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1544, 12)))

ClassificationElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ClassificationElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1545, 12)))

ClassificationElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), TemplateLayoutType, scope=ClassificationElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1546, 12)))

ClassificationElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), PickupLayoutType, scope=ClassificationElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1547, 12)))

def _BuildAutomaton_110 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_110
    del _BuildAutomaton_110
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ClassificationElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1544, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ClassificationElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1545, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ClassificationElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1546, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ClassificationElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1547, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    st_0._set_transitionSet(transitions)
    transitions = []
    st_1._set_transitionSet(transitions)
    transitions = []
    st_2._set_transitionSet(transitions)
    transitions = []
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
ClassificationElementType._Automaton = _BuildAutomaton_110()




ContextType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ContextType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1883, 12)))

ContextType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink'), DimensionPointLinkType, scope=ContextType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1884, 12)))

def _BuildAutomaton_111 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_111
    del _BuildAutomaton_111
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1883, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1884, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ContextType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1883, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ContextType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1884, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ContextType._Automaton = _BuildAutomaton_111()




SampleFileType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SampleFileContents'), ConfigurationType, scope=SampleFileType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1948, 12)))

def _BuildAutomaton_112 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_112
    del _BuildAutomaton_112
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(SampleFileType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SampleFileContents')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1948, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
SampleFileType._Automaton = _BuildAutomaton_112()




CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReferenceType'), AssetCrossReferenceTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1964, 16)))

CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReferenceType'), ProductCrossReferenceTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1965, 16)))

CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReferenceType'), ClassificationCrossReferenceTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1966, 16)))

CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReferenceType'), EntityCrossReferenceTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1967, 16)))

CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationProductLinkType'), ClassificationProductLinkTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1968, 16)))

CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReferenceType'), ContextCrossReferenceTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1969, 16)))

CrossReferenceTypesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReferenceType'), WorkspaceCrossReferenceTypeType, scope=CrossReferenceTypesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1970, 16)))

def _BuildAutomaton_113 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_113
    del _BuildAutomaton_113
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1963, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReferenceType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1964, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReferenceType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1965, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReferenceType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1966, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReferenceType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1967, 16))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationProductLinkType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1968, 16))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReferenceType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1969, 16))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CrossReferenceTypesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReferenceType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1970, 16))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CrossReferenceTypesType._Automaton = _BuildAutomaton_113()




DeleteAssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteAssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1979, 12)))

def _BuildAutomaton_114 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_114
    del _BuildAutomaton_114
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1979, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteAssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1979, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteAssetType._Automaton = _BuildAutomaton_114()




DeleteEntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteEntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2020, 12)))

def _BuildAutomaton_115 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_115
    del _BuildAutomaton_115
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2020, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteEntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2020, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteEntityType._Automaton = _BuildAutomaton_115()




DeleteClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2051, 12)))

def _BuildAutomaton_116 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_116
    del _BuildAutomaton_116
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2051, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2051, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteClassificationType._Automaton = _BuildAutomaton_116()




DeleteProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2108, 12)))

def _BuildAutomaton_117 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_117
    del _BuildAutomaton_117
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2108, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2108, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteProductType._Automaton = _BuildAutomaton_117()




ECatalogType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ECatalogType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2287, 12)))

ECatalogType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=ECatalogType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2288, 12)))

ECatalogType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CommercialList'), CommercialListType, scope=ECatalogType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2289, 12)))

ECatalogType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SelectionList'), CollectionType, scope=ECatalogType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2290, 12)))

ECatalogType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ECatalog'), ECatalogType, scope=ECatalogType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2291, 12)))

def _BuildAutomaton_118 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_118
    del _BuildAutomaton_118
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2287, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2288, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2289, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2290, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2291, 12))
    counters.add(cc_4)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ECatalogType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2287, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ECatalogType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2288, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ECatalogType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CommercialList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2289, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ECatalogType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SelectionList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2290, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ECatalogType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ECatalog')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2291, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ECatalogType._Automaton = _BuildAutomaton_118()




EdgeTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=EdgeTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2324, 12)))

EdgeTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=EdgeTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2325, 12)))

def _BuildAutomaton_119 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_119
    del _BuildAutomaton_119
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2324, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2325, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EdgeTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2324, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(EdgeTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2325, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EdgeTypeType._Automaton = _BuildAutomaton_119()




ExportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ExportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2396, 12)))

ExportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ExportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2397, 12)))

ExportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=ExportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2398, 12)))

ExportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=ExportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2400, 12)))

def _BuildAutomaton_120 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_120
    del _BuildAutomaton_120
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2396, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2397, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2398, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2400, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ExportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2396, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ExportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2397, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ExportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2398, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ExportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2400, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ExportConfigurationType._Automaton = _BuildAutomaton_120()




ImportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ImportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2480, 12)))

ImportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ImportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2481, 12)))

ImportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=ImportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2482, 12)))

ImportConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=ImportConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2484, 12)))

def _BuildAutomaton_121 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_121
    del _BuildAutomaton_121
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2480, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2481, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2482, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2484, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ImportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2480, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ImportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2481, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ImportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2482, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ImportConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2484, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ImportConfigurationType._Automaton = _BuildAutomaton_121()




NoteElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'NoteRecord'), NoteRecordType, scope=NoteElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2820, 12)))

def _BuildAutomaton_122 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_122
    del _BuildAutomaton_122
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2820, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(NoteElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'NoteRecord')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2820, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
NoteElementType._Automaton = _BuildAutomaton_122()




OverrideSubProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Product'), ProductType, scope=OverrideSubProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2842, 16)))

def _BuildAutomaton_123 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_123
    del _BuildAutomaton_123
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2841, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2842, 16))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(OverrideSubProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Product')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2842, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
OverrideSubProductType._Automaton = _BuildAutomaton_123()




PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2871, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference'), SuppressedClassificationReferenceType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2872, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2874, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), SuppressedProductCrossReferenceType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2876, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), ProductCrossReferenceType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2878, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), SuppressedAssetCrossReferenceType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2880, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), AssetCrossReferenceType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2882, 12)))

PageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Values'), ValuesType, scope=PageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2883, 12)))

def _BuildAutomaton_124 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_124
    del _BuildAutomaton_124
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2871, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2872, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2874, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2876, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2878, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2880, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2882, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2883, 12))
    counters.add(cc_7)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2871, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2872, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2874, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2876, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2878, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2880, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2882, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(PageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Values')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2883, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    st_7._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PageType._Automaton = _BuildAutomaton_124()




PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2973, 12)))

PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2974, 12)))

PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Basket'), BasketType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2975, 12)))

PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'VersionLink'), VersionLinkType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2976, 12)))

PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), TemplateLayoutType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2978, 16)))

PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PickupPage'), PickupPageType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2979, 16)))

PlannedPageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PageContents'), PageContentsType, scope=PlannedPageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2981, 12)))

def _BuildAutomaton_125 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_125
    del _BuildAutomaton_125
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2973, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2974, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2975, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2976, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2977, 12))
    counters.add(cc_4)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2973, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2974, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Basket')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2975, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'VersionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2976, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2978, 16))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PickupPage')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2979, 16))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(PlannedPageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PageContents')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2981, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
PlannedPageType._Automaton = _BuildAutomaton_125()




ProductBasketLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ProductBasketLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3142, 12)))

def _BuildAutomaton_126 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_126
    del _BuildAutomaton_126
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3141, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductBasketLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3142, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductBasketLinkType._Automaton = _BuildAutomaton_126()




GalleyElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductElement'), ProductElementType, scope=GalleyElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3244, 12)))

def _BuildAutomaton_127 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_127
    del _BuildAutomaton_127
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3244, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GalleyElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3244, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
GalleyElementType._Automaton = _BuildAutomaton_127()




ProductElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ProductElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3253, 12)))

ProductElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), TemplateLayoutType, scope=ProductElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3254, 12)))

ProductElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), PickupLayoutType, scope=ProductElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3255, 12)))

def _BuildAutomaton_128 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_128
    del _BuildAutomaton_128
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3252, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3253, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3254, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3255, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductElementType._Automaton = _BuildAutomaton_128()




EntityElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout'), RuleBasedLayoutType, scope=EntityElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3520, 13)))

EntityElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout'), TemplateLayoutType, scope=EntityElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3521, 13)))

EntityElementType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout'), PickupLayoutType, scope=EntityElementType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3522, 13)))

def _BuildAutomaton_129 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_129
    del _BuildAutomaton_129
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(EntityElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RuleBasedLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3520, 13))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(EntityElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TemplateLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3521, 13))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(EntityElementType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PickupLayout')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3522, 13))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    st_0._set_transitionSet(transitions)
    transitions = []
    st_1._set_transitionSet(transitions)
    transitions = []
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
EntityElementType._Automaton = _BuildAutomaton_129()




AutoPageProductLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AutoPageProductLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3634, 12)))

def _BuildAutomaton_130 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_130
    del _BuildAutomaton_130
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3633, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AutoPageProductLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3634, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AutoPageProductLinkType._Automaton = _BuildAutomaton_130()




AutoPageAssetLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AutoPageAssetLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3641, 12)))

def _BuildAutomaton_131 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_131
    del _BuildAutomaton_131
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3640, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AutoPageAssetLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3641, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AutoPageAssetLinkType._Automaton = _BuildAutomaton_131()




AutoPageClassificationLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AutoPageClassificationLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3648, 12)))

def _BuildAutomaton_132 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_132
    del _BuildAutomaton_132
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3647, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AutoPageClassificationLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3648, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AutoPageClassificationLinkType._Automaton = _BuildAutomaton_132()




SequenceProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=SequenceProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4213, 12)))

def _BuildAutomaton_133 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_133
    del _BuildAutomaton_133
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4213, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SequenceProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4213, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SequenceProductType._Automaton = _BuildAutomaton_133()




RowColumnTableGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=RowColumnTableGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4584, 12)))

RowColumnTableGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroup'), RowColumnTableGroupType, scope=RowColumnTableGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4585, 12)))

def _BuildAutomaton_134 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_134
    del _BuildAutomaton_134
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4584, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4585, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(RowColumnTableGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4584, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(RowColumnTableGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RowColumnTableGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4585, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
RowColumnTableGroupType._Automaton = _BuildAutomaton_134()




StyleTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=StyleTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4619, 12)))

StyleTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=StyleTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4620, 12)))

StyleTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=StyleTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4621, 12)))

StyleTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroup'), StyleTagGroupType, scope=StyleTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4622, 12)))

def _BuildAutomaton_135 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_135
    del _BuildAutomaton_135
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4619, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4620, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4621, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4622, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(StyleTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4619, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(StyleTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4620, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(StyleTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4621, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(StyleTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'StyleTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4622, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
StyleTagGroupType._Automaton = _BuildAutomaton_135()




SpecialCharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=SpecialCharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4648, 12)))

SpecialCharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=SpecialCharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4649, 12)))

SpecialCharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=SpecialCharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4650, 12)))

SpecialCharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroup'), SpecialCharacterTagGroupType, scope=SpecialCharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4651, 12)))

def _BuildAutomaton_136 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_136
    del _BuildAutomaton_136
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4648, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4649, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4650, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4651, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SpecialCharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4648, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(SpecialCharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4649, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(SpecialCharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4650, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(SpecialCharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SpecialCharacterTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4651, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SpecialCharacterTagGroupType._Automaton = _BuildAutomaton_136()




CharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=CharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4677, 12)))

CharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=CharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4678, 12)))

CharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=CharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4679, 12)))

CharacterTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroup'), CharacterTagGroupType, scope=CharacterTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4680, 12)))

def _BuildAutomaton_137 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_137
    del _BuildAutomaton_137
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4677, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4678, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4679, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4680, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4677, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4678, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(CharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4679, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(CharacterTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CharacterTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4680, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CharacterTagGroupType._Automaton = _BuildAutomaton_137()




FootnoteTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=FootnoteTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4706, 12)))

FootnoteTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=FootnoteTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4707, 12)))

FootnoteTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=FootnoteTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4708, 12)))

FootnoteTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroup'), FootnoteTagGroupType, scope=FootnoteTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4709, 12)))

def _BuildAutomaton_138 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_138
    del _BuildAutomaton_138
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4706, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4707, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4708, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4709, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(FootnoteTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4706, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(FootnoteTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4707, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(FootnoteTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4708, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(FootnoteTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FootnoteTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4709, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
FootnoteTagGroupType._Automaton = _BuildAutomaton_138()




HyperlinkTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=HyperlinkTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4735, 12)))

HyperlinkTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=HyperlinkTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4736, 12)))

HyperlinkTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=HyperlinkTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4737, 12)))

HyperlinkTagGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroup'), HyperlinkTagGroupType, scope=HyperlinkTagGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4738, 12)))

def _BuildAutomaton_139 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_139
    del _BuildAutomaton_139
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4735, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4736, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4737, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4738, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(HyperlinkTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4735, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(HyperlinkTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4736, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(HyperlinkTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4737, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(HyperlinkTagGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'HyperlinkTagGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4738, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
HyperlinkTagGroupType._Automaton = _BuildAutomaton_139()




StyleTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=StyleTagType, documentation='\n                        How tag content should be styled in STEP GUI.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4843, 12)))

StyleTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TagFormat'), TagFormatType, scope=StyleTagType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4850, 12)))

def _BuildAutomaton_140 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_140
    del _BuildAutomaton_140
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4843, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4850, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(StyleTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4843, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(StyleTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TagFormat')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4850, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
StyleTagType._Automaton = _BuildAutomaton_140()




SpecialCharacterTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Formatting'), FormattingType, scope=SpecialCharacterTagType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4882, 12)))

def _BuildAutomaton_141 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_141
    del _BuildAutomaton_141
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4882, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SpecialCharacterTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Formatting')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4882, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SpecialCharacterTagType._Automaton = _BuildAutomaton_141()




CharacterTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=CharacterTagType, documentation='\n                        How tag content should be styled in STEP GUI.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4908, 12)))

CharacterTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Formatting'), FormattingType, scope=CharacterTagType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4915, 12)))

def _BuildAutomaton_142 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_142
    del _BuildAutomaton_142
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4908, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4915, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CharacterTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4908, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CharacterTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Formatting')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4915, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CharacterTagType._Automaton = _BuildAutomaton_142()




FootnoteTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TagFormat'), TagFormatType, scope=FootnoteTagType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4954, 12)))

def _BuildAutomaton_143 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_143
    del _BuildAutomaton_143
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4954, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(FootnoteTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TagFormat')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4954, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
FootnoteTagType._Automaton = _BuildAutomaton_143()




HyperlinkTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=HyperlinkTagType, documentation='\n                        How tag content should be styled in STEP GUI.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4986, 12)))

HyperlinkTagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TagFormat'), TagFormatType, scope=HyperlinkTagType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4993, 12)))

def _BuildAutomaton_144 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_144
    del _BuildAutomaton_144
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4986, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4993, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(HyperlinkTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4986, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(HyperlinkTagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TagFormat')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4993, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
HyperlinkTagType._Automaton = _BuildAutomaton_144()




def _BuildAutomaton_145 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_145
    del _BuildAutomaton_145
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
TextElementType._Automaton = _BuildAutomaton_145()




TransformationLookupTableConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=TransformationLookupTableConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5124, 12)))

TransformationLookupTableConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=TransformationLookupTableConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5125, 12)))

TransformationLookupTableConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=TransformationLookupTableConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5126, 12)))

TransformationLookupTableConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=TransformationLookupTableConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5128, 12)))

def _BuildAutomaton_146 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_146
    del _BuildAutomaton_146
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5124, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5125, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5126, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5128, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TransformationLookupTableConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5124, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(TransformationLookupTableConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5125, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(TransformationLookupTableConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5126, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(TransformationLookupTableConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5128, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TransformationLookupTableConfigurationType._Automaton = _BuildAutomaton_146()




CollectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=CollectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5199, 12)))

CollectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=CollectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5200, 12)))

def _BuildAutomaton_147 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_147
    del _BuildAutomaton_147
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5199, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5200, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CollectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5199, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CollectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5200, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CollectionType._Automaton = _BuildAutomaton_147()




CollectionGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=CollectionGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5277, 12)))

CollectionGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=CollectionGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5278, 12)))

CollectionGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CollectionGroup'), CollectionGroupType, scope=CollectionGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5279, 12)))

CollectionGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Collection'), CollectionType, scope=CollectionGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5280, 12)))

def _BuildAutomaton_148 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_148
    del _BuildAutomaton_148
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5277, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5278, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5279, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5280, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CollectionGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5277, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CollectionGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5278, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(CollectionGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CollectionGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5279, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(CollectionGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Collection')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5280, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CollectionGroupType._Automaton = _BuildAutomaton_148()




OnApproveType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRule'), LocalBusinessRuleType, scope=OnApproveType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5575, 12)))

def _BuildAutomaton_149 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_149
    del _BuildAutomaton_149
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5575, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(OnApproveType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRule')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5575, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
OnApproveType._Automaton = _BuildAutomaton_149()




STEPWorkflowsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Stateflow'), STEPWorkflowType, scope=STEPWorkflowsType, documentation='\n                            @deprecated Replaced by STEPWorkflow.\n                        ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5610, 16)))

STEPWorkflowsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflow'), STEPWorkflowType, scope=STEPWorkflowsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5617, 16)))

def _BuildAutomaton_150 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_150
    del _BuildAutomaton_150
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5610, 16))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5617, 16))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Stateflow')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5610, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflow')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5617, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
STEPWorkflowsType._Automaton = _BuildAutomaton_150()




def _BuildAutomaton_151 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_151
    del _BuildAutomaton_151
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteValueType._Automaton = _BuildAutomaton_151()




DataContainerType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Values'), ValuesType, scope=DataContainerType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6405, 12)))

def _BuildAutomaton_152 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_152
    del _BuildAutomaton_152
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6405, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Values')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6405, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DataContainerType._Automaton = _BuildAutomaton_152()




WebSiteType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=WebSiteType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6510, 12)))

WebSiteType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=WebSiteType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6511, 12)))

WebSiteType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=WebSiteType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6512, 12)))

def _BuildAutomaton_153 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_153
    del _BuildAutomaton_153
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6510, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6511, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6512, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(WebSiteType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6510, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(WebSiteType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6511, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(WebSiteType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6512, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
WebSiteType._Automaton = _BuildAutomaton_153()




ChangePackageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=ChangePackageType, documentation='\n                        The setup group the package is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7293, 12)))

ChangePackageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ChangePackageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7300, 12)))

ChangePackageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ChangePackageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7301, 12)))

ChangePackageType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=ChangePackageType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7302, 12)))

def _BuildAutomaton_154 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_154
    del _BuildAutomaton_154
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7293, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7300, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7301, 12))
    counters.add(cc_2)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(ChangePackageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7293, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(ChangePackageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7300, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(ChangePackageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7301, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ChangePackageType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7302, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
ChangePackageType._Automaton = _BuildAutomaton_154()




StatusFlagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=StatusFlagType, documentation='\n                        Setup groups the status flag is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7321, 12)))

StatusFlagType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=StatusFlagType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7328, 12)))

def _BuildAutomaton_155 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_155
    del _BuildAutomaton_155
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7321, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7328, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(StatusFlagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7321, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(StatusFlagType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7328, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
StatusFlagType._Automaton = _BuildAutomaton_155()




CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerResult'), AnalyzerResultType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 11, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReplacementRules'), ReplacementRulesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 12, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TagGroupList'), TagGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 13, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TagList'), TagListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 14, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionList'), DimensionListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 15, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Qualifiers'), QualifiersType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 16, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ContextList'), ContextListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 17, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CrossContexts'), CrossContextsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 18, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GlobalSettings'), GlobalSettingsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 19, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypes'), UserTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 20, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Keys'), KeysType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 21, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EdgeTypes'), EdgeTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 22, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DerivedEventTypes'), DerivedEventTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 23, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CrossReferenceTypes'), CrossReferenceTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 24, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssets'), DeleteAssetsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 25, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteProducts'), DeleteProductsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 26, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntities'), DeleteEntitiesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 27, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassifications'), DeleteClassificationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 28, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UnitList'), UnitListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 29, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CollectionList'), CollectionListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 30, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroupList'), ListOfValuesGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 31, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ListsOfValues'), ListsOfValuesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 32, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupList'), AttributeGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 33, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeList'), AttributeListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 34, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroups'), AttributeTransformationGroupsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 35, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableColors'), TableColorsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 37, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableRules'), TableRulesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 38, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableTypeGroupList'), RowColumnTableGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 39, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ColumnTypeGroupList'), RowColumnTableGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 40, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RowTypeGroupList'), RowColumnTableGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 41, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableTypes'), TableTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 42, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ColumnTypes'), ColumnTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 43, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RowTypes'), RowTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 44, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypes'), DataContainerTypesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 45, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroups'), SetupGroupsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 46, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupEntities'), SetupEntitiesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 47, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BusinessLibraries'), BusinessLibrariesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 48, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BusinessRules'), BusinessRulesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 49, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflows'), STEPWorkflowsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 50, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'StatusFlags'), StatusFlagsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 51, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MatchCodes'), MatchCodesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 52, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithms'), MatchingAlgorithmsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 53, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classifications'), ClassificationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 54, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroups'), PublicationGroupsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 55, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Assets'), AssetsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 56, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Entities'), EntitiesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 57, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Products'), ProductsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 58, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ActionSetList'), ActionSetListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 59, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserGroupList'), UserGroupListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 60, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserList'), UserListType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 61, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SystemSetup'), SystemSetupType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 62, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ImportConfigurations'), ImportConfigurationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 63, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ExportConfigurations'), ExportConfigurationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 64, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfigurations'), BulkUpdateConfigurationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 65, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfigurations'), TransformationLookupTableConfigurationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 66, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'WebSites'), WebSitesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 68, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ECatalogs'), ECatalogsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 69, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Stateflows'), STEPWorkflowsType, scope=CTD_ANON, documentation='\n                            @deprecated Replaced by STEPWorkflows.\n                        ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 70, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PortalConfigurations'), PortalConfigurationsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 77, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteUnits'), DeleteUnitsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 78, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributes'), DeleteAttributesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 79, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValues'), DeleteListOfValuesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 80, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EventQueues'), EventQueuesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 81, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MissingObjects'), MissingObjectsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 82, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IntegrationEndpoints'), IntegrationEndpointsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 83, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EventProcessors'), EventProcessorsType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 84, 16)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ChangePackages'), ChangePackagesType, scope=CTD_ANON, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 85, 16)))

def _BuildAutomaton_156 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_156
    del _BuildAutomaton_156
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 11, 16))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 12, 16))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 13, 16))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 14, 16))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 15, 16))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 16, 16))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 17, 16))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 18, 16))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 19, 16))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 20, 16))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 21, 16))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 22, 16))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 23, 16))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 24, 16))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 25, 16))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 26, 16))
    counters.add(cc_15)
    cc_16 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 27, 16))
    counters.add(cc_16)
    cc_17 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 28, 16))
    counters.add(cc_17)
    cc_18 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 29, 16))
    counters.add(cc_18)
    cc_19 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 30, 16))
    counters.add(cc_19)
    cc_20 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 31, 16))
    counters.add(cc_20)
    cc_21 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 32, 16))
    counters.add(cc_21)
    cc_22 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 33, 16))
    counters.add(cc_22)
    cc_23 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 34, 16))
    counters.add(cc_23)
    cc_24 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 35, 16))
    counters.add(cc_24)
    cc_25 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 37, 16))
    counters.add(cc_25)
    cc_26 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 38, 16))
    counters.add(cc_26)
    cc_27 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 39, 16))
    counters.add(cc_27)
    cc_28 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 40, 16))
    counters.add(cc_28)
    cc_29 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 41, 16))
    counters.add(cc_29)
    cc_30 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 42, 16))
    counters.add(cc_30)
    cc_31 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 43, 16))
    counters.add(cc_31)
    cc_32 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 44, 16))
    counters.add(cc_32)
    cc_33 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 45, 16))
    counters.add(cc_33)
    cc_34 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 46, 16))
    counters.add(cc_34)
    cc_35 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 47, 16))
    counters.add(cc_35)
    cc_36 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 48, 16))
    counters.add(cc_36)
    cc_37 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 49, 16))
    counters.add(cc_37)
    cc_38 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 50, 16))
    counters.add(cc_38)
    cc_39 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 51, 16))
    counters.add(cc_39)
    cc_40 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 52, 16))
    counters.add(cc_40)
    cc_41 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 53, 16))
    counters.add(cc_41)
    cc_42 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 54, 16))
    counters.add(cc_42)
    cc_43 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 55, 16))
    counters.add(cc_43)
    cc_44 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 56, 16))
    counters.add(cc_44)
    cc_45 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 57, 16))
    counters.add(cc_45)
    cc_46 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 58, 16))
    counters.add(cc_46)
    cc_47 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 59, 16))
    counters.add(cc_47)
    cc_48 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 60, 16))
    counters.add(cc_48)
    cc_49 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 61, 16))
    counters.add(cc_49)
    cc_50 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 62, 16))
    counters.add(cc_50)
    cc_51 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 63, 16))
    counters.add(cc_51)
    cc_52 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 64, 16))
    counters.add(cc_52)
    cc_53 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 65, 16))
    counters.add(cc_53)
    cc_54 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 66, 16))
    counters.add(cc_54)
    cc_55 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 68, 16))
    counters.add(cc_55)
    cc_56 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 69, 16))
    counters.add(cc_56)
    cc_57 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 70, 16))
    counters.add(cc_57)
    cc_58 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 77, 16))
    counters.add(cc_58)
    cc_59 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 78, 16))
    counters.add(cc_59)
    cc_60 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 79, 16))
    counters.add(cc_60)
    cc_61 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 80, 16))
    counters.add(cc_61)
    cc_62 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 81, 16))
    counters.add(cc_62)
    cc_63 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 82, 16))
    counters.add(cc_63)
    cc_64 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 83, 16))
    counters.add(cc_64)
    cc_65 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 84, 16))
    counters.add(cc_65)
    cc_66 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 85, 16))
    counters.add(cc_66)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AnalyzerResult')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 11, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReplacementRules')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 12, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TagGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 13, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TagList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 14, 16))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 15, 16))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Qualifiers')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 16, 16))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ContextList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 17, 16))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CrossContexts')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 18, 16))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GlobalSettings')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 19, 16))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 20, 16))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Keys')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 21, 16))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EdgeTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 22, 16))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DerivedEventTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 23, 16))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CrossReferenceTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 24, 16))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssets')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 25, 16))
    st_14 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteProducts')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 26, 16))
    st_15 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_16, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntities')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 27, 16))
    st_16 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_17, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassifications')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 28, 16))
    st_17 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_18, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UnitList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 29, 16))
    st_18 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CollectionList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 30, 16))
    st_19 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_20, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 31, 16))
    st_20 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_21, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ListsOfValues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 32, 16))
    st_21 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_22, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 33, 16))
    st_22 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_23, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 34, 16))
    st_23 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_24, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroups')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 35, 16))
    st_24 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_25, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableColors')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 37, 16))
    st_25 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_26, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableRules')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 38, 16))
    st_26 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_27, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableTypeGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 39, 16))
    st_27 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_27)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_28, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ColumnTypeGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 40, 16))
    st_28 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_28)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_29, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RowTypeGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 41, 16))
    st_29 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_29)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_30, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 42, 16))
    st_30 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_30)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_31, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ColumnTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 43, 16))
    st_31 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_31)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_32, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RowTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 44, 16))
    st_32 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_32)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_33, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 45, 16))
    st_33 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_33)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_34, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroups')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 46, 16))
    st_34 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_34)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_35, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupEntities')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 47, 16))
    st_35 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_35)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_36, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BusinessLibraries')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 48, 16))
    st_36 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_36)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_37, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BusinessRules')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 49, 16))
    st_37 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_37)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_38, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflows')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 50, 16))
    st_38 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_38)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_39, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'StatusFlags')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 51, 16))
    st_39 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_39)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_40, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MatchCodes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 52, 16))
    st_40 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_40)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_41, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithms')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 53, 16))
    st_41 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_41)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_42, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classifications')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 54, 16))
    st_42 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_42)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_43, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroups')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 55, 16))
    st_43 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_43)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_44, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Assets')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 56, 16))
    st_44 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_44)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_45, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Entities')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 57, 16))
    st_45 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_45)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_46, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Products')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 58, 16))
    st_46 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_46)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_47, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ActionSetList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 59, 16))
    st_47 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_47)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_48, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserGroupList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 60, 16))
    st_48 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_48)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_49, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserList')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 61, 16))
    st_49 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_49)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_50, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SystemSetup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 62, 16))
    st_50 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_50)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_51, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ImportConfigurations')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 63, 16))
    st_51 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_51)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_52, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ExportConfigurations')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 64, 16))
    st_52 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_52)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_53, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BulkUpdateConfigurations')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 65, 16))
    st_53 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_53)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_54, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TransformationLookupTableConfigurations')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 66, 16))
    st_54 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_54)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_55, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'WebSites')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 68, 16))
    st_55 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_55)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_56, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ECatalogs')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 69, 16))
    st_56 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_56)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_57, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Stateflows')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 70, 16))
    st_57 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_57)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_58, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PortalConfigurations')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 77, 16))
    st_58 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_58)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_59, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteUnits')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 78, 16))
    st_59 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_59)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_60, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 79, 16))
    st_60 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_60)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_61, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteListOfValues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 80, 16))
    st_61 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_61)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_62, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EventQueues')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 81, 16))
    st_62 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_62)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_63, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MissingObjects')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 82, 16))
    st_63 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_63)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_64, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IntegrationEndpoints')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 83, 16))
    st_64 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_64)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_65, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EventProcessors')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 84, 16))
    st_65 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_65)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_66, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ChangePackages')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 85, 16))
    st_66 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_66)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_9, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_10, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_11, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_12, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_13, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_14, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_15, False) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_16, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_16, False) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_17, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_17, False) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_18, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_18, False) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_19, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_19, False) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_20, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_20, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_21, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_21, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_22, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_22, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_23, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_23, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_24, False) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_25, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_25, False) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_26, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_26, False) ]))
    st_26._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_27, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_27, False) ]))
    st_27._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_28, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_28, False) ]))
    st_28._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_29, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_29, False) ]))
    st_29._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_30, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_30, False) ]))
    st_30._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_31, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_31, False) ]))
    st_31._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_32, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_32, False) ]))
    st_32._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_33, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_33, False) ]))
    st_33._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_34, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_34, False) ]))
    st_34._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_35, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_35, False) ]))
    st_35._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_36, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_36, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_36, False) ]))
    st_36._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_37, True) ]))
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_37, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_37, False) ]))
    st_37._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_38, [
        fac.UpdateInstruction(cc_38, True) ]))
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_38, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_38, False) ]))
    st_38._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_39, [
        fac.UpdateInstruction(cc_39, True) ]))
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_39, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_39, False) ]))
    st_39._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_40, [
        fac.UpdateInstruction(cc_40, True) ]))
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_40, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_40, False) ]))
    st_40._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_41, [
        fac.UpdateInstruction(cc_41, True) ]))
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_41, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_41, False) ]))
    st_41._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_42, [
        fac.UpdateInstruction(cc_42, True) ]))
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_42, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_42, False) ]))
    st_42._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_43, [
        fac.UpdateInstruction(cc_43, True) ]))
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_43, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_43, False) ]))
    st_43._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_44, [
        fac.UpdateInstruction(cc_44, True) ]))
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_44, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_44, False) ]))
    st_44._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_45, [
        fac.UpdateInstruction(cc_45, True) ]))
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_45, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_45, False) ]))
    st_45._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_46, [
        fac.UpdateInstruction(cc_46, True) ]))
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_46, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_46, False) ]))
    st_46._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_47, [
        fac.UpdateInstruction(cc_47, True) ]))
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_47, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_47, False) ]))
    st_47._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_48, [
        fac.UpdateInstruction(cc_48, True) ]))
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_48, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_48, False) ]))
    st_48._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_49, [
        fac.UpdateInstruction(cc_49, True) ]))
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_49, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_49, False) ]))
    st_49._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_50, [
        fac.UpdateInstruction(cc_50, True) ]))
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_50, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_50, False) ]))
    st_50._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_51, [
        fac.UpdateInstruction(cc_51, True) ]))
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_51, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_51, False) ]))
    st_51._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_52, [
        fac.UpdateInstruction(cc_52, True) ]))
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_52, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_52, False) ]))
    st_52._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_53, [
        fac.UpdateInstruction(cc_53, True) ]))
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_53, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_53, False) ]))
    st_53._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_54, [
        fac.UpdateInstruction(cc_54, True) ]))
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_54, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_54, False) ]))
    st_54._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_55, [
        fac.UpdateInstruction(cc_55, True) ]))
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_55, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_55, False) ]))
    st_55._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_56, [
        fac.UpdateInstruction(cc_56, True) ]))
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_56, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_56, False) ]))
    st_56._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_57, [
        fac.UpdateInstruction(cc_57, True) ]))
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_57, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_57, False) ]))
    st_57._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_58, [
        fac.UpdateInstruction(cc_58, True) ]))
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_58, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_58, False) ]))
    st_58._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_59, [
        fac.UpdateInstruction(cc_59, True) ]))
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_59, False) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_59, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_59, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_59, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_59, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_59, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_59, False) ]))
    st_59._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_60, [
        fac.UpdateInstruction(cc_60, True) ]))
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_60, False) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_60, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_60, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_60, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_60, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_60, False) ]))
    st_60._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_61, [
        fac.UpdateInstruction(cc_61, True) ]))
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_61, False) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_61, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_61, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_61, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_61, False) ]))
    st_61._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_62, [
        fac.UpdateInstruction(cc_62, True) ]))
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_62, False) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_62, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_62, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_62, False) ]))
    st_62._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_63, [
        fac.UpdateInstruction(cc_63, True) ]))
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_63, False) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_63, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_63, False) ]))
    st_63._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_64, [
        fac.UpdateInstruction(cc_64, True) ]))
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_64, False) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_64, False) ]))
    st_64._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_65, [
        fac.UpdateInstruction(cc_65, True) ]))
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_65, False) ]))
    st_65._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_66, [
        fac.UpdateInstruction(cc_66, True) ]))
    st_66._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CTD_ANON._Automaton = _BuildAutomaton_156()




ActionSetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ActionSetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 333, 12)))

ActionSetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ActionSetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 334, 12)))

ActionSetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ActionLink'), ActionLinkType, scope=ActionSetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 335, 12)))

def _BuildAutomaton_157 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_157
    del _BuildAutomaton_157
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 333, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 334, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 335, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ActionSetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 333, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ActionSetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 334, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ActionSetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ActionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 335, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ActionSetType._Automaton = _BuildAutomaton_157()




AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 530, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 531, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetPushLocation'), AssetPushLocationType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 532, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference'), SuppressedClassificationReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 533, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 535, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), SuppressedEntityCrossReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 537, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), EntityCrossReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 539, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Values'), ValuesType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 541, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), CurrentTasksType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 542, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference'), DeleteClassificationReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 543, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), DeleteEntityCrossReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 545, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReference'), DeleteSuppressedClassificationReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 546, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), DeleteSuppressedEntityCrossReferenceType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 547, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Pages'), PagesType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 548, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetContent'), AssetContentType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 549, 12)))

AssetType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetBinaryContent'), AssetBinaryContentType, scope=AssetType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 550, 12)))

def _BuildAutomaton_158 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_158
    del _BuildAutomaton_158
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 530, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 531, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 532, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 533, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 535, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 537, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 539, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 541, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 542, 12))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 543, 12))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 545, 12))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 546, 12))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 547, 12))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 548, 12))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 549, 12))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 550, 12))
    counters.add(cc_15)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 530, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 531, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetPushLocation')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 532, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 533, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 535, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 537, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 539, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Values')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 541, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 542, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 543, 12))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 545, 12))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 546, 12))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 547, 12))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Pages')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 548, 12))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetContent')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 549, 12))
    st_14 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(AssetType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetBinaryContent')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 550, 12))
    st_15 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_10, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_12, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_13, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_15, True) ]))
    st_15._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetType._Automaton = _BuildAutomaton_158()




AssetCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=AssetCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 658, 12)))

AssetCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=AssetCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 660, 16)))

AssetCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Asset'), AssetType, scope=AssetCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 661, 16)))

def _BuildAutomaton_159 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_159
    del _BuildAutomaton_159
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 658, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 659, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 660, 16))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 661, 16))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 658, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 660, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Asset')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 661, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetCrossReferenceType._Automaton = _BuildAutomaton_159()




AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 704, 12)))

AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 705, 12)))

AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 706, 12)))

AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 707, 12)))

AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 708, 12)))

AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 709, 12)))

AssetCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=AssetCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 710, 12)))

def _BuildAutomaton_160 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_160
    del _BuildAutomaton_160
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 704, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 705, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 706, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 707, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 708, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 709, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 710, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 704, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 705, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 706, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 707, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 708, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 709, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(AssetCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 710, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetCrossReferenceTypeType._Automaton = _BuildAutomaton_160()




AssetsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Asset'), AssetType, scope=AssetsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 773, 12)))

def _BuildAutomaton_161 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_161
    del _BuildAutomaton_161
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 773, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AssetsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Asset')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 773, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AssetsType._Automaton = _BuildAutomaton_161()




AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 808, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Validation'), ValidationType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 810, 16)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ListOfValueLink'), ListOfValueLinkType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 811, 16)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueTemplate'), ValueTemplateType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 814, 16)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UnitTemplate'), UnitTemplateType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 815, 16)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 817, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 818, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 819, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 820, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LinkType'), LinkTypeType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 821, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueFilter'), ValueFilterType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 822, 12)))

AttributeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), CurrentTasksType, scope=AttributeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 823, 12)))

def _BuildAutomaton_162 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_162
    del _BuildAutomaton_162
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 808, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 813, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 817, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 818, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 819, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 820, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 821, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 822, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 823, 12))
    counters.add(cc_8)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 808, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Validation')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 810, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ListOfValueLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 811, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueTemplate')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 814, 16))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UnitTemplate')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 815, 16))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 817, 12))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 818, 12))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 819, 12))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 820, 12))
    st_8 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LinkType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 821, 12))
    st_9 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueFilter')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 822, 12))
    st_10 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(AttributeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 823, 12))
    st_11 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_11._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
AttributeType._Automaton = _BuildAutomaton_162()




AttributeGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=AttributeGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 968, 12)))

AttributeGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=AttributeGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 969, 12)))

AttributeGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=AttributeGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 970, 12)))

AttributeGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeSequence'), AttributeSequenceType, scope=AttributeGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 971, 12)))

AttributeGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroup'), AttributeGroupType, scope=AttributeGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 972, 12)))

def _BuildAutomaton_163 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_163
    del _BuildAutomaton_163
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 968, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 969, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 970, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 971, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 972, 12))
    counters.add(cc_4)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 968, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AttributeGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 969, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AttributeGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 970, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(AttributeGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeSequence')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 971, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(AttributeGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 972, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeGroupType._Automaton = _BuildAutomaton_163()




AttributeLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=AttributeLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1057, 12)))

AttributeLinkType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueFilter'), ValueFilterType, scope=AttributeLinkType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1058, 12)))

def _BuildAutomaton_164 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_164
    del _BuildAutomaton_164
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1057, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1058, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1057, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AttributeLinkType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueFilter')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1058, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeLinkType._Automaton = _BuildAutomaton_164()




AttributeTransformationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=AttributeTransformationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1196, 12)))

AttributeTransformationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=AttributeTransformationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1197, 12)))

AttributeTransformationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=AttributeTransformationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1198, 12)))

AttributeTransformationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=AttributeTransformationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1199, 12)))

AttributeTransformationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=AttributeTransformationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1200, 12)))

def _BuildAutomaton_165 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_165
    del _BuildAutomaton_165
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1196, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1197, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1198, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1199, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1200, 12))
    counters.add(cc_4)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1196, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1197, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1198, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1199, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1200, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeTransformationType._Automaton = _BuildAutomaton_165()




AttributeTransformationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=AttributeTransformationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1221, 12)))

AttributeTransformationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroup'), AttributeTransformationGroupType, scope=AttributeTransformationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1222, 12)))

AttributeTransformationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformation'), AttributeTransformationType, scope=AttributeTransformationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1224, 12)))

def _BuildAutomaton_166 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_166
    del _BuildAutomaton_166
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1221, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1222, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1224, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1221, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformationGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1222, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(AttributeTransformationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeTransformation')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1224, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
AttributeTransformationGroupType._Automaton = _BuildAutomaton_166()




CellType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin'), ProductOriginType, scope=CellType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1291, 12)))

CellType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin'), ClassificationOriginType, scope=CellType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1292, 12)))

CellType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin'), EntityOriginType, scope=CellType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1293, 12)))

CellType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin'), AssetOriginType, scope=CellType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1294, 12)))

CellType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin'), AttributeOriginType, scope=CellType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1295, 12)))

CellType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Text'), TextType, scope=CellType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1296, 12)))

def _BuildAutomaton_167 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_167
    del _BuildAutomaton_167
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1291, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1292, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1293, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1294, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1295, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1296, 12))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CellType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1291, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CellType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1292, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(CellType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1293, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(CellType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1294, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(CellType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1295, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(CellType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Text')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1296, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CellType._Automaton = _BuildAutomaton_167()




ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1328, 12)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue'), ParentKeyValueType, scope=ClassificationType, documentation='\n                        Only exported when ParentID is also exported - ie. exported for root objects in export, and not exported for nested objects.\n                        \n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1329, 12)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1338, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1339, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLink'), DataContainerTypeLinkType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1340, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SequenceProduct'), SequenceProductType, scope=ClassificationType, documentation='\n                            Product sequences are used to show the sequence of child products under manually sorted classifications.\n                            By default the sequences are not exported. And there is no option to turn it on using the export wiard.\n                            In order for them to be exported, you must put it explicitly in the export recorder file:\n                            \n                        ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1341, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classification'), ClassificationType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1351, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference'), SuppressedClassificationCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1352, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductReference'), ProductReferenceType, scope=ClassificationType, documentation='\n                            If a Classification has Product to Classification links owned by the product,\n                            information about these links will be exported under the classification using the ProductReference-tag.\n                        ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1353, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference'), ClassificationCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1361, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), SuppressedProductCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1362, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), ProductCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1363, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), SuppressedEntityCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1364, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), EntityCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1365, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), SuppressedAssetCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1366, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), AssetCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1367, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1368, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Tables'), TablesType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1369, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Asset'), AssetType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1370, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup'), PublicationGroupType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1371, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductReference'), DeleteProductReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1372, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductReference'), DeleteSuppressedProductReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1374, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReference'), DeleteClassificationCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1375, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference'), DeleteProductCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1376, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), DeleteEntityCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1377, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference'), DeleteSuppressedClassificationCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1378, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference'), DeleteSuppressedProductCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1379, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), DeleteSuppressedEntityCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1380, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference'), DeleteSuppressedAssetCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1381, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLink'), DeleteAttributeLinkType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1382, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLink'), DeleteDataContainerTypeLinkType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1383, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference'), DeleteAssetCrossReferenceType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1384, 16)))

ClassificationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), CurrentTasksType, scope=ClassificationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1385, 16)))

def _BuildAutomaton_168 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_168
    del _BuildAutomaton_168
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1328, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1329, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1337, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1353, 16))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1372, 16))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1374, 16))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1375, 16))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1376, 16))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1377, 16))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1378, 16))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1379, 16))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1380, 16))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1381, 16))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1382, 16))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1383, 16))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1384, 16))
    counters.add(cc_15)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1328, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1329, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1338, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1339, 16))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1340, 16))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SequenceProduct')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1341, 16))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1351, 16))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1352, 16))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1353, 16))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1361, 16))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1362, 16))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1363, 16))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1364, 16))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1365, 16))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1366, 16))
    st_14 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1367, 16))
    st_15 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1368, 16))
    st_16 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Tables')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1369, 16))
    st_17 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Asset')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1370, 16))
    st_18 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1371, 16))
    st_19 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1372, 16))
    st_20 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1374, 16))
    st_21 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1375, 16))
    st_22 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1376, 16))
    st_23 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1377, 16))
    st_24 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1378, 16))
    st_25 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1379, 16))
    st_26 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1380, 16))
    st_27 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_27)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1381, 16))
    st_28 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_28)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1382, 16))
    st_29 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_29)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1383, 16))
    st_30 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_30)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1384, 16))
    st_31 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_31)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1385, 16))
    st_32 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_32)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_6, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_7, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_8, False) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_9, False) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_10, False) ]))
    st_26._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_11, False) ]))
    st_27._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_12, False) ]))
    st_28._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_13, False) ]))
    st_29._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_14, False) ]))
    st_30._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_15, False) ]))
    st_31._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_32._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationType._Automaton = _BuildAutomaton_168()




ClassificationCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ClassificationCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1456, 12)))

ClassificationCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ClassificationCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1458, 16)))

ClassificationCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classification'), ClassificationType, scope=ClassificationCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1459, 16)))

def _BuildAutomaton_169 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_169
    del _BuildAutomaton_169
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1456, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1457, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1458, 16))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1459, 16))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1456, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1458, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1459, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationCrossReferenceType._Automaton = _BuildAutomaton_169()




ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1505, 12)))

ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1506, 12)))

ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1507, 12)))

ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1508, 12)))

ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1509, 12)))

ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1510, 12)))

ClassificationCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=ClassificationCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1511, 12)))

def _BuildAutomaton_170 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_170
    del _BuildAutomaton_170
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1505, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1506, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1507, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1508, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1509, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1510, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1511, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1505, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1506, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1507, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1508, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1509, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1510, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1511, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationCrossReferenceTypeType._Automaton = _BuildAutomaton_170()




ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1558, 12)))

ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1559, 12)))

ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1560, 12)))

ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1561, 12)))

ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1562, 12)))

ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1563, 12)))

ClassificationProductLinkTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=ClassificationProductLinkTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1564, 12)))

def _BuildAutomaton_171 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_171
    del _BuildAutomaton_171
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1558, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1559, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1560, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1561, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1562, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1563, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1564, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1558, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1559, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1560, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1561, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1562, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1563, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationProductLinkTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1564, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationProductLinkTypeType._Automaton = _BuildAutomaton_171()




ClassificationReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ClassificationReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1595, 16)))

ClassificationReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ClassificationReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1596, 16)))

ClassificationReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classification'), ClassificationType, scope=ClassificationReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1597, 16)))

def _BuildAutomaton_172 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_172
    del _BuildAutomaton_172
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1594, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1595, 16))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1596, 16))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1597, 16))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1595, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1596, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1597, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationReferenceType._Automaton = _BuildAutomaton_172()




ClassificationsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Classification'), ClassificationType, scope=ClassificationsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1653, 12)))

def _BuildAutomaton_173 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_173
    del _BuildAutomaton_173
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1653, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ClassificationsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Classification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1653, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ClassificationsType._Automaton = _BuildAutomaton_173()




ColumnType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Origin'), OriginType, scope=ColumnType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1716, 12)))

ColumnType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin'), ProductOriginType, scope=ColumnType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1717, 12)))

ColumnType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin'), ClassificationOriginType, scope=ColumnType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1718, 12)))

ColumnType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin'), EntityOriginType, scope=ColumnType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1719, 12)))

ColumnType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin'), AssetOriginType, scope=ColumnType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1720, 12)))

ColumnType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin'), AttributeOriginType, scope=ColumnType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1721, 12)))

def _BuildAutomaton_174 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_174
    del _BuildAutomaton_174
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1716, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1717, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1718, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1719, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1720, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1721, 12))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ColumnType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Origin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1716, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ColumnType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1717, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ColumnType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1718, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ColumnType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1719, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ColumnType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1720, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ColumnType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1721, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ColumnType._Automaton = _BuildAutomaton_174()




ColumnTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ColumnTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1752, 12)))

ColumnTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableTypeLink'), TableTypeLinkType, scope=ColumnTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1753, 12)))

ColumnTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidity'), PublicationTypeValidityType, scope=ColumnTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1754, 12)))

def _BuildAutomaton_175 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_175
    del _BuildAutomaton_175
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1752, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1753, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1754, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ColumnTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1752, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ColumnTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1753, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ColumnTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1754, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ColumnTypeType._Automaton = _BuildAutomaton_175()




CommercialListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=CommercialListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1796, 12)))

CommercialListType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=CommercialListType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1797, 12)))

def _BuildAutomaton_176 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_176
    del _BuildAutomaton_176
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1796, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1797, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CommercialListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1796, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CommercialListType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1797, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
CommercialListType._Automaton = _BuildAutomaton_176()




DeleteAssetCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteAssetCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1987, 12)))

def _BuildAutomaton_177 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_177
    del _BuildAutomaton_177
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1987, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteAssetCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 1987, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteAssetCrossReferenceType._Automaton = _BuildAutomaton_177()




DeleteEntityCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteEntityCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2005, 12)))

def _BuildAutomaton_178 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_178
    del _BuildAutomaton_178
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2005, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteEntityCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2005, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteEntityCrossReferenceType._Automaton = _BuildAutomaton_178()




DeleteClassificationCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteClassificationCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2066, 12)))

def _BuildAutomaton_179 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_179
    del _BuildAutomaton_179
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2066, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteClassificationCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2066, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteClassificationCrossReferenceType._Automaton = _BuildAutomaton_179()




DeleteClassificationReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteClassificationReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2076, 12)))

def _BuildAutomaton_180 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_180
    del _BuildAutomaton_180
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2076, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteClassificationReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2076, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteClassificationReferenceType._Automaton = _BuildAutomaton_180()




DeleteProductReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteProductReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2085, 12)))

def _BuildAutomaton_181 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_181
    del _BuildAutomaton_181
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2085, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteProductReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2085, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteProductReferenceType._Automaton = _BuildAutomaton_181()




DeleteProductCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteProductCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2131, 12)))

def _BuildAutomaton_182 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_182
    del _BuildAutomaton_182
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2131, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteProductCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2131, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteProductCrossReferenceType._Automaton = _BuildAutomaton_182()




DimensionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=DimensionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2175, 12)))

DimensionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=DimensionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2176, 12)))

DimensionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionPoint'), DimensionPointType, scope=DimensionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2177, 12)))

def _BuildAutomaton_183 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_183
    del _BuildAutomaton_183
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2175, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2176, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2177, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DimensionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2175, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(DimensionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2176, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(DimensionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionPoint')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2177, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DimensionType._Automaton = _BuildAutomaton_183()




DimensionPointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=DimensionPointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2234, 12)))

DimensionPointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=DimensionPointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2235, 12)))

DimensionPointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink'), DimensionPointLinkType, scope=DimensionPointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2236, 12)))

def _BuildAutomaton_184 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_184
    del _BuildAutomaton_184
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2234, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2235, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2236, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DimensionPointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2234, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(DimensionPointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2235, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(DimensionPointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2236, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DimensionPointType._Automaton = _BuildAutomaton_184()




EventQueueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=EventQueueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2367, 12)))

EventQueueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=EventQueueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2368, 12)))

EventQueueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=EventQueueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2369, 12)))

def _BuildAutomaton_185 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_185
    del _BuildAutomaton_185
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2367, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2368, 12))
    counters.add(cc_1)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(EventQueueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2367, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(EventQueueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2368, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(EventQueueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2369, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
EventQueueType._Automaton = _BuildAutomaton_185()




def _BuildAutomaton_186 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_186
    del _BuildAutomaton_186
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
KeyValueType._Automaton = _BuildAutomaton_186()




def _BuildAutomaton_187 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_187
    del _BuildAutomaton_187
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
ParentKeyValueType._Automaton = _BuildAutomaton_187()




KeyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=KeyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2521, 12)))

KeyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyFormula'), KeyFormulaType, scope=KeyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2522, 12)))

KeyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=KeyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2523, 12)))

KeyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=KeyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2524, 12)))

KeyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=KeyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2525, 12)))

def _BuildAutomaton_188 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_188
    del _BuildAutomaton_188
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2521, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2523, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2524, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2525, 12))
    counters.add(cc_3)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(KeyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2521, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(KeyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyFormula')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2522, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(KeyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2523, 12))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(KeyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2524, 12))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(KeyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2525, 12))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
KeyType._Automaton = _BuildAutomaton_188()




ListOfValuesGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ListOfValuesGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2590, 12)))

ListOfValuesGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ListOfValuesGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2591, 12)))

ListOfValuesGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=ListOfValuesGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2592, 12)))

ListOfValuesGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroup'), ListOfValuesGroupType, scope=ListOfValuesGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2593, 12)))

def _BuildAutomaton_189 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_189
    del _BuildAutomaton_189
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2590, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2591, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2592, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2593, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValuesGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2590, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValuesGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2591, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValuesGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2592, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValuesGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ListOfValuesGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2593, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ListOfValuesGroupType._Automaton = _BuildAutomaton_189()




ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2632, 12)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Validation'), ValidationType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2633, 12)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2634, 12)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2635, 12)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2636, 12)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Value'), ValueType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2638, 16)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), ValueGroupType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2639, 16)))

ListOfValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteValue'), DeleteValueType, scope=ListOfValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2641, 12)))

def _BuildAutomaton_190 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_190
    del _BuildAutomaton_190
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2632, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2634, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2635, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2636, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2638, 16))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2639, 16))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2641, 12))
    counters.add(cc_6)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2632, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Validation')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2633, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2634, 12))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2635, 12))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2636, 12))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Value')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2638, 16))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2639, 16))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ListOfValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2641, 12))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_7._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
ListOfValueType._Automaton = _BuildAutomaton_190()




MultiValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Value'), ValueType, scope=MultiValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2781, 16)))

MultiValueType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup'), ValueGroupType, scope=MultiValueType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2782, 16)))

def _BuildAutomaton_191 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_191
    del _BuildAutomaton_191
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2780, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MultiValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Value')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2781, 16))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MultiValueType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValueGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2782, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MultiValueType._Automaton = _BuildAutomaton_191()




def _BuildAutomaton_192 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_192
    del _BuildAutomaton_192
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
NameType._Automaton = _BuildAutomaton_192()




FrameType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductElement'), ProductElementType, scope=FrameType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2900, 11)))

FrameType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetElement'), AssetElementType, scope=FrameType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2901, 11)))

FrameType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TextElement'), TextElementType, scope=FrameType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2902, 11)))

FrameType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationElement'), ClassificationElementType, scope=FrameType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2903, 11)))

def _BuildAutomaton_193 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_193
    del _BuildAutomaton_193
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2899, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(FrameType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2900, 11))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(FrameType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2901, 11))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(FrameType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TextElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2902, 11))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(FrameType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2903, 11))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
FrameType._Automaton = _BuildAutomaton_193()




NoteFrameType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'NoteRecord'), NoteRecordType, scope=NoteFrameType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2916, 12)))

def _BuildAutomaton_194 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_194
    del _BuildAutomaton_194
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(NoteFrameType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'NoteRecord')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2916, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
         ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
NoteFrameType._Automaton = _BuildAutomaton_194()




GalleyFrameType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductElement'), ProductElementType, scope=GalleyFrameType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2930, 12)))

def _BuildAutomaton_195 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_195
    del _BuildAutomaton_195
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2930, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GalleyFrameType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductElement')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 2930, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
GalleyFrameType._Automaton = _BuildAutomaton_195()




ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3024, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue'), ParentKeyValueType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3025, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3026, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3027, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLink'), DataContainerTypeLinkType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3028, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference'), SuppressedClassificationReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3029, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference'), ClassificationReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3031, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflowStateBind'), STEPWorkflowStateBindType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3033, 12)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Product'), ProductType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3035, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SequenceProduct'), SequenceProductType, scope=ProductType, documentation='\n                            Product sequences are used to show the sequence of child products under manually sorted parent products.\n                            The product sequences are only exported, when the child products them selves are not exported.\n                            By default the sequences are not exported. And there is no option to turn it on using the export wiard.\n                            In order for them to be exported, you must put it explicitly in the export recorder file:\n                            \n                        ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3036, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), SuppressedProductCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3047, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), ProductCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3048, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductReference'), ProductReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3049, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference'), SuppressedClassificationCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3050, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference'), ClassificationCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3051, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), SuppressedEntityCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3052, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), EntityCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3053, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), SuppressedAssetCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3054, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), AssetCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3055, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Values'), ValuesType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3056, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainers'), DataContainersType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3057, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), CurrentTasksType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3058, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Terms'), TermsType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3059, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'OverrideSubProduct'), OverrideSubProductType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3060, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PackagingReference'), PackagingReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3061, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Tables'), TablesType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3062, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference'), DeleteClassificationReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3063, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference'), DeleteProductCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3064, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference'), DeleteAssetCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3065, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReference'), DeleteClassificationCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3066, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), DeleteEntityCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3067, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLink'), DeleteAttributeLinkType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3068, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLink'), DeleteDataContainerTypeLinkType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3069, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference'), DeleteSuppressedProductCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3070, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference'), DeleteSuppressedClassificationCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3071, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), DeleteSuppressedEntityCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3072, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference'), DeleteSuppressedAssetCrossReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3073, 16)))

ProductType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReference'), DeleteSuppressedClassificationReferenceType, scope=ProductType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3074, 16)))

def _BuildAutomaton_196 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_196
    del _BuildAutomaton_196
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3024, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3025, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3026, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3027, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3028, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3029, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3031, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3033, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3034, 12))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3063, 16))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3064, 16))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3065, 16))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3066, 16))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3067, 16))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3068, 16))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3069, 16))
    counters.add(cc_15)
    cc_16 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3070, 16))
    counters.add(cc_16)
    cc_17 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3071, 16))
    counters.add(cc_17)
    cc_18 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3072, 16))
    counters.add(cc_18)
    cc_19 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3073, 16))
    counters.add(cc_19)
    cc_20 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3074, 16))
    counters.add(cc_20)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3024, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3025, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3026, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3027, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainerTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3028, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3029, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3031, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'STEPWorkflowStateBind')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3033, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Product')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3035, 16))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SequenceProduct')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3036, 16))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3047, 16))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3048, 16))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3049, 16))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3050, 16))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3051, 16))
    st_14 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3052, 16))
    st_15 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3053, 16))
    st_16 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3054, 16))
    st_17 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3055, 16))
    st_18 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Values')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3056, 16))
    st_19 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainers')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3057, 16))
    st_20 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3058, 16))
    st_21 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Terms')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3059, 16))
    st_22 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'OverrideSubProduct')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3060, 16))
    st_23 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PackagingReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3061, 16))
    st_24 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Tables')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3062, 16))
    st_25 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3063, 16))
    st_26 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3064, 16))
    st_27 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_27)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3065, 16))
    st_28 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_28)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3066, 16))
    st_29 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_29)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3067, 16))
    st_30 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_30)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3068, 16))
    st_31 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_31)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainerTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3069, 16))
    st_32 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_32)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_16, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3070, 16))
    st_33 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_33)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_17, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3071, 16))
    st_34 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_34)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_18, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3072, 16))
    st_35 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_35)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_19, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3073, 16))
    st_36 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_36)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_20, False))
    symbol = pyxb.binding.content.ElementUse(ProductType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3074, 16))
    st_37 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_37)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    st_26._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    st_27._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    st_28._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    st_29._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    st_30._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    st_31._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    st_32._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_16, False) ]))
    st_33._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_17, True) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_17, False) ]))
    st_34._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_18, True) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_18, False) ]))
    st_35._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_19, True) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_19, False) ]))
    st_36._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_36, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_37, [
        fac.UpdateInstruction(cc_20, True) ]))
    st_37._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductType._Automaton = _BuildAutomaton_196()




ProductCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=ProductCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3156, 12)))

ProductCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ProductCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3158, 16)))

ProductCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Product'), ProductType, scope=ProductCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3159, 16)))

def _BuildAutomaton_197 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_197
    del _BuildAutomaton_197
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3156, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3157, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3158, 16))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3159, 16))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3156, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3158, 16))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Product')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3159, 16))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductCrossReferenceType._Automaton = _BuildAutomaton_197()




ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3212, 12)))

ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3213, 12)))

ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3214, 12)))

ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3215, 12)))

ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3216, 12)))

ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3217, 12)))

ProductCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=ProductCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3218, 12)))

def _BuildAutomaton_198 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_198
    del _BuildAutomaton_198
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3212, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3213, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3214, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3215, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3216, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3217, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3218, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3212, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3213, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3214, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3215, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3216, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3217, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ProductCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3218, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductCrossReferenceTypeType._Automaton = _BuildAutomaton_198()




ProductReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ProductReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3268, 12)))

def _BuildAutomaton_199 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_199
    del _BuildAutomaton_199
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3268, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3268, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductReferenceType._Automaton = _BuildAutomaton_199()




ProductsType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Product'), ProductType, scope=ProductsType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3283, 12)))

def _BuildAutomaton_200 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_200
    del _BuildAutomaton_200
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3283, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ProductsType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Product')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3283, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ProductsType._Automaton = _BuildAutomaton_200()




EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3329, 13)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue'), ParentKeyValueType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3330, 13)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3331, 13)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Entity'), EntityType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3333, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference'), SuppressedProductCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3334, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference'), ProductCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3335, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference'), SuppressedClassificationCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3336, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference'), ClassificationCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3337, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), SuppressedEntityCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3338, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), EntityCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3339, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference'), SuppressedAssetCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3340, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference'), AssetCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3341, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedContextCrossReference'), SuppressedContextCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3342, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReference'), ContextCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3343, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedWorkspaceCrossReference'), SuppressedWorkspaceCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3344, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReference'), WorkspaceCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3345, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Values'), ValuesType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3346, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainers'), DataContainersType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3347, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks'), CurrentTasksType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3348, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference'), DeleteClassificationReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3349, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference'), DeleteProductCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3350, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference'), DeleteAssetCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3351, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference'), DeleteEntityCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3352, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference'), DeleteSuppressedClassificationCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3353, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference'), DeleteSuppressedProductCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3354, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference'), DeleteSuppressedEntityCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3355, 17)))

EntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference'), DeleteSuppressedAssetCrossReferenceType, scope=EntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3356, 17)))

def _BuildAutomaton_201 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_201
    del _BuildAutomaton_201
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3329, 13))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3330, 13))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3331, 13))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3332, 13))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3349, 17))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3350, 17))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3351, 17))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3352, 17))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3353, 17))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3354, 17))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3355, 17))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3356, 17))
    counters.add(cc_11)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3329, 13))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ParentKeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3330, 13))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3331, 13))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Entity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3333, 17))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3334, 17))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3335, 17))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3336, 17))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3337, 17))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3338, 17))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3339, 17))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3340, 17))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3341, 17))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedContextCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3342, 17))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ContextCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3343, 17))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedWorkspaceCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3344, 17))
    st_14 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3345, 17))
    st_15 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Values')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3346, 17))
    st_16 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainers')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3347, 17))
    st_17 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrentTasks')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3348, 17))
    st_18 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteClassificationReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3349, 17))
    st_19 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3350, 17))
    st_20 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3351, 17))
    st_21 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3352, 17))
    st_22 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedClassificationCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3353, 17))
    st_23 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedProductCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3354, 17))
    st_24 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3355, 17))
    st_25 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(EntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteSuppressedAssetCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3356, 17))
    st_26 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, True) ]))
    st_26._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EntityType._Automaton = _BuildAutomaton_201()




EntityCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=EntityCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3381, 13)))

EntityCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=EntityCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3383, 17)))

EntityCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Entity'), EntityType, scope=EntityCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3384, 17)))

def _BuildAutomaton_202 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_202
    del _BuildAutomaton_202
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3381, 13))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3382, 13))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3383, 17))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3384, 17))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3381, 13))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3383, 17))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Entity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3384, 17))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EntityCrossReferenceType._Automaton = _BuildAutomaton_202()




EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3398, 13)))

EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3399, 13)))

EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3400, 13)))

EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3401, 13)))

EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3402, 13)))

EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3403, 13)))

EntityCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=EntityCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3404, 13)))

def _BuildAutomaton_203 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_203
    del _BuildAutomaton_203
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3398, 13))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3399, 13))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3400, 13))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3401, 13))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3402, 13))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3403, 13))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3404, 13))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3398, 13))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3399, 13))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3400, 13))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3401, 13))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3402, 13))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3403, 13))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(EntityCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3404, 13))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EntityCrossReferenceTypeType._Automaton = _BuildAutomaton_203()




ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3432, 12)))

ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3433, 12)))

ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3434, 12)))

ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3435, 12)))

ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3436, 12)))

ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3437, 12)))

ContextCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=ContextCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3438, 12)))

def _BuildAutomaton_204 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_204
    del _BuildAutomaton_204
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3432, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3433, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3434, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3435, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3436, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3437, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3438, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3432, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3433, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3434, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3435, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3436, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3437, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3438, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ContextCrossReferenceTypeType._Automaton = _BuildAutomaton_204()




WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3464, 12)))

WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3465, 12)))

WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3466, 12)))

WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3467, 12)))

WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3468, 12)))

WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3469, 12)))

WorkspaceCrossReferenceTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink'), TargetUserTypeLinkType, scope=WorkspaceCrossReferenceTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3470, 12)))

def _BuildAutomaton_205 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_205
    del _BuildAutomaton_205
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3464, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3465, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3466, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3467, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3468, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3469, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3470, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3464, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3465, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3466, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3467, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3468, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3469, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TargetUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3470, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
WorkspaceCrossReferenceTypeType._Automaton = _BuildAutomaton_205()




ContextCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=ContextCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3496, 12)))

def _BuildAutomaton_206 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_206
    del _BuildAutomaton_206
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3496, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ContextCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3496, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ContextCrossReferenceType._Automaton = _BuildAutomaton_206()




WorkspaceCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=WorkspaceCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3508, 12)))

def _BuildAutomaton_207 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_207
    del _BuildAutomaton_207
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3508, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(WorkspaceCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3508, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
WorkspaceCrossReferenceType._Automaton = _BuildAutomaton_207()




EntitiesType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Entity'), EntityType, scope=EntitiesType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3536, 13)))

def _BuildAutomaton_208 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_208
    del _BuildAutomaton_208
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3536, 13))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(EntitiesType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Entity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3536, 13))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
EntitiesType._Automaton = _BuildAutomaton_208()




PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3558, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3559, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Version'), VersionType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3560, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Basket'), BasketType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3561, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PaginationRules'), ConfigurationType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3562, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PageTemplateLink'), PageTemplateLinkType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3563, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductTemplateLink'), ProductTemplateLinkType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3564, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationSection'), PublicationSectionType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3565, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference'), SuppressedEntityCrossReferenceType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3566, 12)))

PublicationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference'), EntityCrossReferenceType, scope=PublicationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3567, 12)))

def _BuildAutomaton_209 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_209
    del _BuildAutomaton_209
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3558, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3559, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3560, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3561, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3562, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3563, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3564, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3565, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3566, 12))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3567, 12))
    counters.add(cc_9)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3558, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3559, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Version')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3560, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Basket')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3561, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PaginationRules')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3562, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PageTemplateLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3563, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductTemplateLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3564, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationSection')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3565, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SuppressedEntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3566, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(PublicationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityCrossReference')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3567, 12))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_9, True) ]))
    st_9._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PublicationType._Automaton = _BuildAutomaton_209()




PublicationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=PublicationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3588, 12)))

PublicationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=PublicationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3589, 12)))

PublicationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup'), PublicationGroupType, scope=PublicationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3590, 12)))

PublicationGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Publication'), PublicationType, scope=PublicationGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3591, 12)))

def _BuildAutomaton_210 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_210
    del _BuildAutomaton_210
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3588, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3589, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3590, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3591, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PublicationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3588, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(PublicationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3589, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(PublicationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3590, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(PublicationGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Publication')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3591, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PublicationGroupType._Automaton = _BuildAutomaton_210()




PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3616, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3617, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationSection'), PublicationSectionType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3618, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Basket'), BasketType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3619, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlannedPage'), PlannedPageType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3620, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AutoPageProductLink'), AutoPageProductLinkType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3621, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AutoPageAssetLink'), AutoPageAssetLinkType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3622, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AutoPageClassificationLink'), AutoPageClassificationLinkType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3623, 12)))

PublicationSectionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PaginationRules'), ConfigurationType, scope=PublicationSectionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3624, 12)))

def _BuildAutomaton_211 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_211
    del _BuildAutomaton_211
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3616, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3617, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3618, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3619, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3620, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3621, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3622, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3623, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3624, 12))
    counters.add(cc_8)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3616, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3617, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationSection')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3618, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Basket')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3619, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlannedPage')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3620, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AutoPageProductLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3621, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AutoPageAssetLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3622, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AutoPageClassificationLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3623, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(PublicationSectionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PaginationRules')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3624, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_8._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PublicationSectionType._Automaton = _BuildAutomaton_211()




QualifierType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink'), DimensionPointLinkType, scope=QualifierType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3664, 12)))

QualifierType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Context'), ContextType, scope=QualifierType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3665, 12)))

def _BuildAutomaton_212 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_212
    del _BuildAutomaton_212
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3664, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3665, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(QualifierType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionPointLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3664, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(QualifierType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Context')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 3665, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
QualifierType._Automaton = _BuildAutomaton_212()




RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Origin'), OriginType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4133, 12)))

RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin'), ProductOriginType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4134, 12)))

RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin'), ClassificationOriginType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4135, 12)))

RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin'), EntityOriginType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4136, 12)))

RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin'), AssetOriginType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4137, 12)))

RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin'), AttributeOriginType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4138, 12)))

RowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Cell'), CellType, scope=RowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4139, 12)))

def _BuildAutomaton_213 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_213
    del _BuildAutomaton_213
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4133, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4134, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4135, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4136, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4137, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4138, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4139, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Origin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4133, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProductOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4134, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ClassificationOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4135, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntityOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4136, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AssetOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4137, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeOrigin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4138, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(RowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Cell')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4139, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
RowType._Automaton = _BuildAutomaton_213()




RowTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=RowTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4158, 12)))

RowTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableTypeLink'), TableTypeLinkType, scope=RowTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4159, 12)))

RowTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidity'), PublicationTypeValidityType, scope=RowTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4160, 12)))

def _BuildAutomaton_214 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_214
    del _BuildAutomaton_214
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4158, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4159, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4160, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(RowTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4158, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(RowTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4159, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(RowTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PublicationTypeValidity')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4160, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
RowTypeType._Automaton = _BuildAutomaton_214()




SuppressedAssetCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=SuppressedAssetCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4222, 12)))

def _BuildAutomaton_215 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_215
    del _BuildAutomaton_215
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4222, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SuppressedAssetCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4222, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SuppressedAssetCrossReferenceType._Automaton = _BuildAutomaton_215()




SuppressedClassificationCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=SuppressedClassificationCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4234, 12)))

def _BuildAutomaton_216 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_216
    del _BuildAutomaton_216
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4234, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SuppressedClassificationCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4234, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SuppressedClassificationCrossReferenceType._Automaton = _BuildAutomaton_216()




SuppressedClassificationReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=SuppressedClassificationReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4246, 12)))

def _BuildAutomaton_217 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_217
    del _BuildAutomaton_217
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4246, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SuppressedClassificationReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4246, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SuppressedClassificationReferenceType._Automaton = _BuildAutomaton_217()




SuppressedProductCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=SuppressedProductCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4259, 12)))

def _BuildAutomaton_218 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_218
    del _BuildAutomaton_218
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4259, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SuppressedProductCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4259, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SuppressedProductCrossReferenceType._Automaton = _BuildAutomaton_218()




SuppressedEntityCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=SuppressedEntityCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4270, 12)))

def _BuildAutomaton_219 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_219
    del _BuildAutomaton_219
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4270, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SuppressedEntityCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4270, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SuppressedEntityCrossReferenceType._Automaton = _BuildAutomaton_219()




DeleteSuppressedClassificationCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteSuppressedClassificationCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4299, 12)))

def _BuildAutomaton_220 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_220
    del _BuildAutomaton_220
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4299, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteSuppressedClassificationCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4299, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteSuppressedClassificationCrossReferenceType._Automaton = _BuildAutomaton_220()




DeleteSuppressedClassificationReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteSuppressedClassificationReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4309, 12)))

def _BuildAutomaton_221 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_221
    del _BuildAutomaton_221
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4309, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteSuppressedClassificationReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4309, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteSuppressedClassificationReferenceType._Automaton = _BuildAutomaton_221()




DeleteSuppressedProductReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteSuppressedProductReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4318, 12)))

def _BuildAutomaton_222 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_222
    del _BuildAutomaton_222
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4318, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteSuppressedProductReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4318, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteSuppressedProductReferenceType._Automaton = _BuildAutomaton_222()




DeleteSuppressedProductCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteSuppressedProductCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4327, 12)))

def _BuildAutomaton_223 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_223
    del _BuildAutomaton_223
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4327, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteSuppressedProductCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4327, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteSuppressedProductCrossReferenceType._Automaton = _BuildAutomaton_223()




DeleteSuppressedEntityCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteSuppressedEntityCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4337, 12)))

def _BuildAutomaton_224 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_224
    del _BuildAutomaton_224
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4337, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteSuppressedEntityCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4337, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteSuppressedEntityCrossReferenceType._Automaton = _BuildAutomaton_224()




DeleteSuppressedAssetCrossReferenceType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'KeyValue'), KeyValueType, scope=DeleteSuppressedAssetCrossReferenceType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4346, 12)))

def _BuildAutomaton_225 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_225
    del _BuildAutomaton_225
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4346, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DeleteSuppressedAssetCrossReferenceType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'KeyValue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4346, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DeleteSuppressedAssetCrossReferenceType._Automaton = _BuildAutomaton_225()




def _BuildAutomaton_226 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_226
    del _BuildAutomaton_226
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
SystemSetupValueType._Automaton = _BuildAutomaton_226()




TableType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Column'), ColumnType, scope=TableType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4429, 12)))

TableType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Row'), RowType, scope=TableType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4430, 12)))

def _BuildAutomaton_227 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_227
    del _BuildAutomaton_227
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4429, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4430, 12))
    counters.add(cc_1)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Column')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4429, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(TableType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Row')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4430, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TableType._Automaton = _BuildAutomaton_227()




TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4477, 12)))

TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4478, 12)))

TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ColumnType'), ColumnTypeType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4479, 12)))

TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'RowType'), RowTypeType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4480, 12)))

TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4481, 12)))

TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TableTransformation'), TableConfigurationType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4482, 12)))

TableTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TablePaginationPlugin'), TableConfigurationType, scope=TableTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4483, 12)))

def _BuildAutomaton_228 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_228
    del _BuildAutomaton_228
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4477, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4478, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4479, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4480, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4481, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4482, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4483, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4477, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4478, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ColumnType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4479, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'RowType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4480, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4481, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TableTransformation')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4482, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(TableTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TablePaginationPlugin')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 4483, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
TableTypeType._Automaton = _BuildAutomaton_228()




def _BuildAutomaton_229 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_229
    del _BuildAutomaton_229
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
TermType._Automaton = _BuildAutomaton_229()




UnitType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=UnitType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5160, 12)))

UnitType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UnitConversion'), UnitConversionType, scope=UnitType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5161, 12)))

UnitType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=UnitType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5162, 12)))

def _BuildAutomaton_230 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_230
    del _BuildAutomaton_230
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5160, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5161, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5162, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UnitType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5160, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(UnitType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UnitConversion')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5161, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(UnitType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5162, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UnitType._Automaton = _BuildAutomaton_230()




UnitFamilyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=UnitFamilyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5254, 12)))

UnitFamilyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=UnitFamilyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5255, 12)))

UnitFamilyType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Unit'), UnitType, scope=UnitFamilyType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5256, 12)))

def _BuildAutomaton_231 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_231
    del _BuildAutomaton_231
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5254, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5255, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5256, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UnitFamilyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5254, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(UnitFamilyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5255, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(UnitFamilyType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Unit')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5256, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UnitFamilyType._Automaton = _BuildAutomaton_231()




BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5365, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5366, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Description'), BusinessRuleDescriptionType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5367, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Dependency'), BusinessRuleDependencyType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5368, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FunctionDependency'), BusinessFunctionDependencyType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5369, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'OnApprove'), OnApproveType, scope=BusinessRuleType, documentation='\n                        Ignored for business rules of type Library.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5370, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5377, 12)))

BusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypes'), ValidObjectTypesType, scope=BusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5378, 12)))

def _BuildAutomaton_232 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_232
    del _BuildAutomaton_232
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5365, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5366, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5367, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5368, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5369, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5370, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5377, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5378, 12))
    counters.add(cc_7)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5365, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5366, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Description')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5367, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Dependency')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5368, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FunctionDependency')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5369, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'OnApprove')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5370, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5377, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(BusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5378, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    st_7._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
BusinessRuleType._Automaton = _BuildAutomaton_232()




LocalBusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=LocalBusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5468, 12)))

LocalBusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Description'), BusinessRuleDescriptionType, scope=LocalBusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5469, 12)))

LocalBusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Dependency'), BusinessRuleDependencyType, scope=LocalBusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5470, 12)))

LocalBusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=LocalBusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5471, 12)))

LocalBusinessRuleType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypes'), ValidObjectTypesType, scope=LocalBusinessRuleType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5472, 12)))

def _BuildAutomaton_233 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_233
    del _BuildAutomaton_233
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5468, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5469, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5470, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5471, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5472, 12))
    counters.add(cc_4)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(LocalBusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5468, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(LocalBusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Description')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5469, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(LocalBusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Dependency')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5470, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(LocalBusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5471, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(LocalBusinessRuleType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectTypes')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5472, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
LocalBusinessRuleType._Automaton = _BuildAutomaton_233()




STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleLink'), BusinessRuleLinkType, scope=STEPWorkflowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5640, 12)))

STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=STEPWorkflowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5641, 12)))

STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=STEPWorkflowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5642, 12)))

STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=STEPWorkflowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5643, 12)))

STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidUserTypeLink'), UserTypeLinkType, scope=STEPWorkflowType, documentation='\n                        A list of object types valid in the context of the STEP Workflow.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5644, 12)))

STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=STEPWorkflowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5651, 12)))

STEPWorkflowType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRule'), LocalBusinessRuleType, scope=STEPWorkflowType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5652, 12)))

def _BuildAutomaton_234 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_234
    del _BuildAutomaton_234
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5640, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5641, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5642, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5643, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5644, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5651, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5652, 12))
    counters.add(cc_6)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'BusinessRuleLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5640, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5641, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5642, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5643, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidUserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5644, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5651, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(STEPWorkflowType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LocalBusinessRule')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5652, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    st_6._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
STEPWorkflowType._Automaton = _BuildAutomaton_234()




PortalConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=PortalConfigurationType, documentation='\n                        The setup group the PortalConfiguration is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5702, 12)))

PortalConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=PortalConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5709, 12)))

PortalConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=PortalConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5710, 12)))

PortalConfigurationType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=PortalConfigurationType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5711, 12)))

def _BuildAutomaton_235 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_235
    del _BuildAutomaton_235
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5702, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5709, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5710, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5711, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(PortalConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5702, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(PortalConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5709, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(PortalConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5710, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(PortalConfigurationType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5711, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
PortalConfigurationType._Automaton = _BuildAutomaton_235()




MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=MatchCodeType, documentation='\n                        The setup group the Match Code is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5740, 12)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5747, 12)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5748, 12)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectType'), ValidObjectTypeType, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5749, 12)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidForProductHierarchy'), MatchCodeObjectSubsetLink, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5751, 16)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidForClassificationHierarchy'), MatchCodeObjectSubsetLink, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5752, 16)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidForEntityHierarchy'), MatchCodeObjectSubsetLink, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5753, 16)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ValidForCollection'), MatchCodeObjectSubsetLink, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5754, 16)))

MatchCodeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Template'), MatchCodeTemplateType, scope=MatchCodeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5756, 12)))

def _BuildAutomaton_236 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_236
    del _BuildAutomaton_236
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5740, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5747, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5748, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5749, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5750, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5756, 12))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5740, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5747, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5748, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidObjectType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5749, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidForProductHierarchy')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5751, 16))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidForClassificationHierarchy')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5752, 16))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidForEntityHierarchy')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5753, 16))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ValidForCollection')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5754, 16))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(MatchCodeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Template')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5756, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_8._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MatchCodeType._Automaton = _BuildAutomaton_236()




MatchingAlgorithmType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=MatchingAlgorithmType, documentation='\n                        The setup group the Match Code is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5833, 12)))

MatchingAlgorithmType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=MatchingAlgorithmType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5840, 12)))

MatchingAlgorithmType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=MatchingAlgorithmType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5841, 12)))

MatchingAlgorithmType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithmConfiguration'), MatchingAlgorithmConfigurationType, scope=MatchingAlgorithmType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5842, 12)))

def _BuildAutomaton_237 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_237
    del _BuildAutomaton_237
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5833, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5840, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5841, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5842, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MatchingAlgorithmType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5833, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(MatchingAlgorithmType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5840, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(MatchingAlgorithmType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5841, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(MatchingAlgorithmType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MatchingAlgorithmConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5842, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MatchingAlgorithmType._Automaton = _BuildAutomaton_237()




def _BuildAutomaton_238 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_238
    del _BuildAutomaton_238
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
UnitTemplateType._Automaton = _BuildAutomaton_238()




UserType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=UserType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5925, 12)))

UserType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=UserType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5926, 12)))

UserType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserGroupLink'), UserGroupLinkType, scope=UserType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5927, 12)))

UserType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUISetup'), GUISetupType, scope=UserType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5928, 12)))

UserType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUITop'), GUITopType, scope=UserType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5929, 12)))

UserType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SystemSetup'), SystemSetupType, scope=UserType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5930, 12)))

def _BuildAutomaton_239 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_239
    del _BuildAutomaton_239
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5925, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5926, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5927, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5928, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5929, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5930, 12))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UserType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5925, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(UserType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5926, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(UserType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5927, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(UserType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUISetup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5928, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(UserType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUITop')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5929, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(UserType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SystemSetup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5930, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UserType._Automaton = _BuildAutomaton_239()




UserGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=UserGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5941, 12)))

UserGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserGroup'), UserGroupType, scope=UserGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5942, 12)))

UserGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=UserGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5943, 12)))

UserGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PrivilegeRule'), PrivilegeRuleType, scope=UserGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5944, 12)))

UserGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUISetup'), GUISetupType, scope=UserGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5945, 12)))

UserGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GUITop'), GUITopType, scope=UserGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5946, 12)))

def _BuildAutomaton_240 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_240
    del _BuildAutomaton_240
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5941, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5942, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5943, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5944, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5945, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5946, 12))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5941, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5942, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5943, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PrivilegeRule')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5944, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUISetup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5945, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(UserGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GUITop')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5946, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UserGroupType._Automaton = _BuildAutomaton_240()




UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5998, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Icon'), pyxb.binding.datatypes.base64Binary, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5999, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'VisibleTermFields'), VisibleTermFieldsType, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6000, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6001, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink'), DimensionLinkType, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6002, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=UserTypeType, documentation='\n                        Link to a parent UserType. For Product Override types, the product override link must be first.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6003, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeLinkType, scope=UserTypeType, documentation='\n                        Link to a valid attribute if the UserType is for products.\n                        Export only; to import, list the UserTypes within the Attribute/UserTypeLink instead.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6010, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Validation'), ValidationType, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6019, 12)))

UserTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MIMEType'), MIMETypeType, scope=UserTypeType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6020, 12)))

def _BuildAutomaton_241 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_241
    del _BuildAutomaton_241
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5998, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5999, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6000, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6001, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6002, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6003, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6010, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6019, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6020, 12))
    counters.add(cc_8)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5998, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Icon')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 5999, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'VisibleTermFields')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6000, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6001, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DimensionLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6002, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6003, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6010, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Validation')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6019, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(UserTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MIMEType')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6020, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    st_8._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
UserTypeType._Automaton = _BuildAutomaton_241()




DataContainerTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=DataContainerTypeType, documentation='\n                        Name for the DataContainerType.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6083, 12)))

DataContainerTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=DataContainerTypeType, documentation='\n                        MetaData for the DataContainerType.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6090, 12)))

DataContainerTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink'), AttributeGroupLinkType, scope=DataContainerTypeType, documentation='\n                        Link to a parent AttributeGroup.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6097, 12)))

DataContainerTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink'), AttributeValidationType, scope=DataContainerTypeType, documentation='\n                        Link to an Attribute which is valid for this DataContainerType.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6104, 12)))

DataContainerTypeType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink'), UserTypeLinkType, scope=DataContainerTypeType, documentation='\n                        Link to a UserType where this DataContainerType is valid.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6111, 12)))

def _BuildAutomaton_242 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_242
    del _BuildAutomaton_242
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6083, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6090, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6097, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6104, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6111, 12))
    counters.add(cc_4)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6083, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6090, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6097, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AttributeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6104, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(DataContainerTypeType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'UserTypeLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6111, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
DataContainerTypeType._Automaton = _BuildAutomaton_242()




def _BuildAutomaton_243 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_243
    del _BuildAutomaton_243
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
ValueType._Automaton = _BuildAutomaton_243()




ValueGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Value'), ValueType, scope=ValueGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6321, 12)))

def _BuildAutomaton_244 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_244
    del _BuildAutomaton_244
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6321, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(ValueGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Value')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6321, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
ValueGroupType._Automaton = _BuildAutomaton_244()




def _BuildAutomaton_245 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_245
    del _BuildAutomaton_245
    import pyxb.utils.fac as fac

    counters = set()
    states = []
    return fac.Automaton(states, counters, True, containing_state=None)
ValueTemplateType._Automaton = _BuildAutomaton_245()




SingleDataContainerType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Values'), ValuesType, scope=SingleDataContainerType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6372, 12)))

def _BuildAutomaton_246 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_246
    del _BuildAutomaton_246
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6372, 12))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SingleDataContainerType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Values')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6372, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SingleDataContainerType._Automaton = _BuildAutomaton_246()




MultiDataContainerType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataContainer'), DataContainerType, scope=MultiDataContainerType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6426, 12)))

MultiDataContainerType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainer'), DeleteDataContainerType, scope=MultiDataContainerType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6427, 12)))

def _BuildAutomaton_247 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_247
    del _BuildAutomaton_247
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6425, 8))
    counters.add(cc_0)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MultiDataContainerType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataContainer')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6426, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MultiDataContainerType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeleteDataContainer')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6427, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    st_1._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MultiDataContainerType._Automaton = _BuildAutomaton_247()




VersionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=VersionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6461, 12)))

VersionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=VersionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6462, 12)))

VersionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TermsListLink'), TermsListLinkType, scope=VersionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6463, 12)))

VersionType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LayerMapping'), LayerMappingType, scope=VersionType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6464, 12)))

def _BuildAutomaton_248 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_248
    del _BuildAutomaton_248
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6461, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6462, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6463, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6464, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(VersionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6461, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(VersionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6462, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(VersionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TermsListLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6463, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(VersionType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LayerMapping')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6464, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
VersionType._Automaton = _BuildAutomaton_248()




EventProcessorType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=EventProcessorType, documentation='\n                        The setup group the event processor is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6595, 12)))

EventProcessorType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=EventProcessorType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6602, 12)))

EventProcessorType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=EventProcessorType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6603, 12)))

EventProcessorType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=EventProcessorType, documentation='\n                        The configuration is an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6604, 12)))

EventProcessorType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EventQueue'), EventQueueType, scope=EventProcessorType, documentation='\n                        The behind-the-scenes event-queue of the Event Processor.\n                        This Event Queue is privately owned by this Event Processor and thus not accessible from anywhere else.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6611, 12)))

def _BuildAutomaton_249 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_249
    del _BuildAutomaton_249
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6595, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6602, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6603, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6604, 12))
    counters.add(cc_3)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(EventProcessorType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6595, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(EventProcessorType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6602, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(EventProcessorType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6603, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(EventProcessorType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6604, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(EventProcessorType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EventQueue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6611, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
EventProcessorType._Automaton = _BuildAutomaton_249()




SetupEntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=SetupEntityType, documentation='\n                        The setup group the Setup Entity is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6649, 12)))

SetupEntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=SetupEntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6656, 12)))

SetupEntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=SetupEntityType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6657, 12)))

SetupEntityType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=SetupEntityType, documentation='\n                        The configuration is an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6658, 12)))

def _BuildAutomaton_250 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_250
    del _BuildAutomaton_250
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6649, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6656, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6657, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6658, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SetupEntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6649, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(SetupEntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6656, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(SetupEntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6657, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(SetupEntityType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6658, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SetupEntityType._Automaton = _BuildAutomaton_250()




GatewayIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=GatewayIntegrationEndpointType, documentation='\n                        The setup group the endpoint is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6698, 12)))

GatewayIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=GatewayIntegrationEndpointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6705, 12)))

GatewayIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=GatewayIntegrationEndpointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6706, 12)))

GatewayIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Configuration'), ConfigurationType, scope=GatewayIntegrationEndpointType, documentation='\n                        The configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6707, 12)))

def _BuildAutomaton_251 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_251
    del _BuildAutomaton_251
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6698, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6705, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6706, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6707, 12))
    counters.add(cc_3)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(GatewayIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6698, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(GatewayIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6705, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(GatewayIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6706, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(GatewayIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Configuration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6707, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
GatewayIntegrationEndpointType._Automaton = _BuildAutomaton_251()




OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The setup group the endpoint is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6741, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=OutBoundIntegrationEndpointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6748, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=OutBoundIntegrationEndpointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6749, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ScheduleSpecification'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The receiver plugin configuration is an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6750, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PreProcessorPluginConfiguration'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The pre processor plugin configuration in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6757, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PostProcessorPluginConfiguration'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The post processor plugin configuration in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6764, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DataSourcePluginConfiguration'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The data source plugin configuration in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6771, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DeliveryMethodPluginConfiguration'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The delivery method plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6778, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EventQueue'), EventQueueType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The behind-the-scenes event-queue of the integration endpoint.\n                        This Event Queue is privately owned by this integration endpoint and thus not accessible from anywhere else.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6785, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProcessPluginConfiguration'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The process plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6793, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ErrorReporterPluginConfiguration'), ConfigurationType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The error reporter plugin configuration in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6800, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ContextLink'), ContextLinkType, scope=OutBoundIntegrationEndpointType, documentation='\n                        The context IDs the integration endpoint is using during export.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6807, 12)))

OutBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceID'), StepID, scope=OutBoundIntegrationEndpointType, documentation='\n                        Specifies the ID of the workspace that provides the content selection for an export.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6814, 12)))

def _BuildAutomaton_252 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_252
    del _BuildAutomaton_252
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6741, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6748, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6749, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6750, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6757, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6764, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6771, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6778, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6785, 12))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6793, 12))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6800, 12))
    counters.add(cc_10)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6741, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6748, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6749, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ScheduleSpecification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6750, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PreProcessorPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6757, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PostProcessorPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6764, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DataSourcePluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6771, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DeliveryMethodPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6778, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EventQueue')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6785, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProcessPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6793, 12))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ErrorReporterPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6800, 12))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ContextLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6807, 12))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(OutBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceID')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6814, 12))
    st_12 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_10, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    st_12._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
OutBoundIntegrationEndpointType._Automaton = _BuildAutomaton_252()




InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink'), SetupGroupLinkType, scope=InBoundIntegrationEndpointType, documentation='\n                        The setup group the endpoint is located in.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6957, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=InBoundIntegrationEndpointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6964, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=InBoundIntegrationEndpointType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6965, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ScheduleSpecification'), ConfigurationType, scope=InBoundIntegrationEndpointType, documentation='\n                        The receiver plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6966, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PreProcessorPluginConfiguration'), ConfigurationType, scope=InBoundIntegrationEndpointType, documentation='\n                        The pre processor plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6973, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PostProcessorPluginConfiguration'), ConfigurationType, scope=InBoundIntegrationEndpointType, documentation='\n                        The post processor plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6980, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ReceiverPluginConfiguration'), ConfigurationType, scope=InBoundIntegrationEndpointType, documentation='\n                        The receiver plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6987, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProcessPluginConfiguration'), ConfigurationType, scope=InBoundIntegrationEndpointType, documentation='\n                        The process plugin configuration is in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6994, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SampleFileConfiguration'), SampleFileType, scope=InBoundIntegrationEndpointType, documentation='\n                        The samplefile contents is encoded as binary zipped data.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7001, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ErrorReporterPluginConfiguration'), ConfigurationType, scope=InBoundIntegrationEndpointType, documentation='\n                        The error reporter plugin configuration in an internal format.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7008, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ContextLink'), ContextLinkType, scope=InBoundIntegrationEndpointType, documentation='\n                        The context IDs the integration endpoint is using during export.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7015, 12)))

InBoundIntegrationEndpointType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceID'), StepID, scope=InBoundIntegrationEndpointType, documentation='\n                        Specifies the ID of the workspace that provides the content selection for an export.\n                    ', location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7022, 12)))

def _BuildAutomaton_253 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_253
    del _BuildAutomaton_253
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6957, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6964, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6965, 12))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6966, 12))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6973, 12))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6980, 12))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6987, 12))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6994, 12))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7001, 12))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7008, 12))
    counters.add(cc_9)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroupLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6957, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6964, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6965, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ScheduleSpecification')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6966, 12))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PreProcessorPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6973, 12))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PostProcessorPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6980, 12))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ReceiverPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6987, 12))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProcessPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 6994, 12))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SampleFileConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7001, 12))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ErrorReporterPluginConfiguration')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7008, 12))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ContextLink')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7015, 12))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(InBoundIntegrationEndpointType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'WorkspaceID')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7022, 12))
    st_11 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    st_11._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
InBoundIntegrationEndpointType._Automaton = _BuildAutomaton_253()




SetupGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Name'), NameType, scope=SetupGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7169, 12)))

SetupGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MetaData'), MetaDataType, scope=SetupGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7170, 12)))

SetupGroupType._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SetupGroup'), SetupGroupType, scope=SetupGroupType, location=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7171, 12)))

def _BuildAutomaton_254 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_254
    del _BuildAutomaton_254
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7169, 12))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7170, 12))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7171, 12))
    counters.add(cc_2)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(SetupGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Name')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7169, 12))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(SetupGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MetaData')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7170, 12))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(SetupGroupType._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SetupGroup')), pyxb.utils.utility.Location('/Users/dave/git/gitlab.stibo.dk/step/misc/javascript-snippets/Stibo/StepXML/PIM.xsd', 7171, 12))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
SetupGroupType._Automaton = _BuildAutomaton_254()

