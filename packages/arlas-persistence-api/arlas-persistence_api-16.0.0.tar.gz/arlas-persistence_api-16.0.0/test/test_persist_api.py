# coding: utf-8

"""
    ARLAS persistence API

    persistence REST services

    OpenAPI spec version: 13.0.0-beta.3
    Contact: contact@gisaia.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import arlas_persistence_api_python
from arlas_persistence_api_python.rest import ApiException
from arlas_persistence_api_python.apis.persist_api import PersistApi


class TestPersistApi(unittest.TestCase):
    """ PersistApi unit test stubs """

    def setUp(self):
        self.api = arlas_persistence_api_python.apis.persist_api.PersistApi()

    def tearDown(self):
        pass

    def test_create(self):
        """
        Test case for create

        Store a new piece of data for the provided zone and key (auto generate id).
        """
        pass

    def test_delete(self):
        """
        Test case for delete

        Delete an entry given its key and id.
        """
        pass

    def test_delete_by_id(self):
        """
        Test case for delete_by_id

        Delete an entry given its key and id.
        """
        pass

    def test_exists_by_id(self):
        """
        Test case for exists_by_id

        Check the existence of an entry given its id.
        """
        pass

    def test_exists_by_key(self):
        """
        Test case for exists_by_key

        Check the existence of an entry given its zone and key.
        """
        pass

    def test_get_by_id(self):
        """
        Test case for get_by_id

        Fetch an entry given its id.
        """
        pass

    def test_get_by_key(self):
        """
        Test case for get_by_key

        Fetch an entry given its zone and key.
        """
        pass

    def test_get_groups_by_zone(self):
        """
        Test case for get_groups_by_zone

        Returns the users' groups allowed to interact with the given zone.
        """
        pass

    def test_list(self):
        """
        Test case for list

        Fetch a list of data related to a zone.
        """
        pass

    def test_update(self):
        """
        Test case for update

        Update an existing value.
        """
        pass


if __name__ == '__main__':
    unittest.main()
