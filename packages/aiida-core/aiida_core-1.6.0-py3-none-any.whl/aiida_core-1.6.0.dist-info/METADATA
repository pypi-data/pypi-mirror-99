Metadata-Version: 2.1
Name: aiida-core
Version: 1.6.0
Summary: AiiDA is a workflow manager for computational science with a strong focus on provenance, performance and extensibility.
Home-page: http://www.aiida.net/
Author: The AiiDA team
Author-email: developers@aiida.net
License: MIT License
Platform: UNKNOWN
Classifier: Framework :: AiiDA
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: aldjemy (~=0.9.1)
Requires-Dist: alembic (~=1.2)
Requires-Dist: archive-path (~=0.2.1)
Requires-Dist: aio-pika (~=6.6)
Requires-Dist: circus (~=0.17.1)
Requires-Dist: click-completion (~=0.5.1)
Requires-Dist: click-config-file (~=0.6.0)
Requires-Dist: click-spinner (~=0.1.8)
Requires-Dist: click (~=7.1)
Requires-Dist: django (~=2.2)
Requires-Dist: ete3 (~=3.1)
Requires-Dist: graphviz (~=0.13)
Requires-Dist: ipython (~=7.20)
Requires-Dist: jinja2 (~=2.10)
Requires-Dist: jsonschema (~=3.0)
Requires-Dist: kiwipy[rmq] (~=0.7.4)
Requires-Dist: numpy (~=1.17)
Requires-Dist: pamqp (~=2.3)
Requires-Dist: paramiko (>=2.7.2,~=2.7)
Requires-Dist: plumpy (~=0.19.0)
Requires-Dist: pgsu (~=0.1.0)
Requires-Dist: psutil (~=5.6)
Requires-Dist: psycopg2-binary (>=2.8.3,~=2.8)
Requires-Dist: python-dateutil (~=2.8)
Requires-Dist: pytz (~=2019.3)
Requires-Dist: pyyaml (~=5.1.2)
Requires-Dist: reentry (~=1.3)
Requires-Dist: simplejson (~=3.16)
Requires-Dist: sqlalchemy-utils (~=0.36.0)
Requires-Dist: sqlalchemy (~=1.3.10)
Requires-Dist: tabulate (~=0.8.5)
Requires-Dist: tqdm (~=4.45)
Requires-Dist: tzlocal (~=2.0)
Requires-Dist: upf-to-json (~=0.9.2)
Requires-Dist: wrapt (~=1.11.1)
Provides-Extra: all
Requires-Dist: coverage (<5.0) ; extra == 'all'
Requires-Dist: docutils (==0.15.2) ; extra == 'all'
Requires-Dist: bpython (~=0.18.0) ; extra == 'all'
Requires-Dist: pyparsing (~=2.4) ; extra == 'all'
Requires-Dist: pygments (~=2.5) ; extra == 'all'
Requires-Dist: jupyter (~=1.0) ; extra == 'all'
Requires-Dist: aiida-export-migration-tests (==0.9.0) ; extra == 'all'
Requires-Dist: pylint (~=2.5.0) ; extra == 'all'
Requires-Dist: pre-commit (~=2.2) ; extra == 'all'
Requires-Dist: tomlkit (~=0.7.0) ; extra == 'all'
Requires-Dist: pytest-cov (~=2.7) ; extra == 'all'
Requires-Dist: pytest (~=6.0) ; extra == 'all'
Requires-Dist: sphinxcontrib-details-directive (~=0.1.0) ; extra == 'all'
Requires-Dist: mypy (==0.790) ; extra == 'all'
Requires-Dist: notebook (>=6.1.5,~=6.1) ; extra == 'all'
Requires-Dist: pgtest (>=1.3.1,~=1.3) ; extra == 'all'
Requires-Dist: pydata-sphinx-theme (~=0.4.0) ; extra == 'all'
Requires-Dist: astroid (<2.5) ; extra == 'all'
Requires-Dist: pytest-benchmark (~=3.2) ; extra == 'all'
Requires-Dist: seekpath (>=1.9.3,~=1.9) ; extra == 'all'
Requires-Dist: sqlalchemy-diff (~=0.1.3) ; extra == 'all'
Requires-Dist: pyasn1 (~=0.4.8) ; extra == 'all'
Requires-Dist: pympler (~=0.9) ; extra == 'all'
Requires-Dist: spglib (~=1.14) ; extra == 'all'
Requires-Dist: pytest-rerunfailures (>=9.1.1,~=9.1) ; extra == 'all'
Requires-Dist: packaging (==20.3) ; extra == 'all'
Requires-Dist: pytest-asyncio (~=0.12) ; extra == 'all'
Requires-Dist: PyCifRW (~=4.4) ; extra == 'all'
Requires-Dist: pylint-django (<2.4.0,>=2.0) ; extra == 'all'
Requires-Dist: sphinx (~=3.2.1) ; extra == 'all'
Requires-Dist: sphinx-panels (~=0.5.0) ; extra == 'all'
Requires-Dist: pymysql (~=0.9.3) ; extra == 'all'
Requires-Dist: sphinxext-rediraffe (~=0.2.4) ; extra == 'all'
Requires-Dist: flask (~=1.1) ; extra == 'all'
Requires-Dist: pytest-timeout (~=1.3) ; extra == 'all'
Requires-Dist: sphinx-notfound-page (~=0.5) ; extra == 'all'
Requires-Dist: sphinx-copybutton (~=0.3.0) ; extra == 'all'
Requires-Dist: ase (~=3.18) ; extra == 'all'
Requires-Dist: pg8000 (~=1.13) ; extra == 'all'
Requires-Dist: gssapi (~=1.6) ; extra == 'all'
Requires-Dist: python-memcached (~=1.59) ; extra == 'all'
Requires-Dist: flask-cors (~=3.0) ; extra == 'all'
Requires-Dist: pymatgen (!=2019.9.7,<=2022.02.03,>=2019.7.2) ; extra == 'all'
Requires-Dist: flask-restful (~=0.3.7) ; extra == 'all'
Provides-Extra: atomic_tools
Requires-Dist: PyCifRW (~=4.4) ; extra == 'atomic_tools'
Requires-Dist: ase (~=3.18) ; extra == 'atomic_tools'
Requires-Dist: pymatgen (!=2019.9.7,<=2022.02.03,>=2019.7.2) ; extra == 'atomic_tools'
Requires-Dist: pymysql (~=0.9.3) ; extra == 'atomic_tools'
Requires-Dist: seekpath (>=1.9.3,~=1.9) ; extra == 'atomic_tools'
Requires-Dist: spglib (~=1.14) ; extra == 'atomic_tools'
Provides-Extra: bpython
Requires-Dist: bpython (~=0.18.0) ; extra == 'bpython'
Provides-Extra: docs
Requires-Dist: docutils (==0.15.2) ; extra == 'docs'
Requires-Dist: pygments (~=2.5) ; extra == 'docs'
Requires-Dist: pyparsing (~=2.4) ; extra == 'docs'
Requires-Dist: sphinxcontrib-details-directive (~=0.1.0) ; extra == 'docs'
Requires-Dist: pydata-sphinx-theme (~=0.4.0) ; extra == 'docs'
Requires-Dist: seekpath (>=1.9.3,~=1.9) ; extra == 'docs'
Requires-Dist: spglib (~=1.14) ; extra == 'docs'
Requires-Dist: PyCifRW (~=4.4) ; extra == 'docs'
Requires-Dist: sphinx (~=3.2.1) ; extra == 'docs'
Requires-Dist: sphinx-panels (~=0.5.0) ; extra == 'docs'
Requires-Dist: pymysql (~=0.9.3) ; extra == 'docs'
Requires-Dist: flask (~=1.1) ; extra == 'docs'
Requires-Dist: sphinxext-rediraffe (~=0.2.4) ; extra == 'docs'
Requires-Dist: sphinx-notfound-page (~=0.5) ; extra == 'docs'
Requires-Dist: sphinx-copybutton (~=0.3.0) ; extra == 'docs'
Requires-Dist: ase (~=3.18) ; extra == 'docs'
Requires-Dist: python-memcached (~=1.59) ; extra == 'docs'
Requires-Dist: flask-cors (~=3.0) ; extra == 'docs'
Requires-Dist: pymatgen (!=2019.9.7,<=2022.02.03,>=2019.7.2) ; extra == 'docs'
Requires-Dist: flask-restful (~=0.3.7) ; extra == 'docs'
Provides-Extra: notebook
Requires-Dist: jupyter (~=1.0) ; extra == 'notebook'
Requires-Dist: notebook (>=6.1.5,~=6.1) ; extra == 'notebook'
Provides-Extra: pre-commit
Requires-Dist: astroid (<2.5) ; extra == 'pre-commit'
Requires-Dist: mypy (==0.790) ; extra == 'pre-commit'
Requires-Dist: packaging (==20.3) ; extra == 'pre-commit'
Requires-Dist: pre-commit (~=2.2) ; extra == 'pre-commit'
Requires-Dist: pylint (~=2.5.0) ; extra == 'pre-commit'
Requires-Dist: pylint-django (<2.4.0,>=2.0) ; extra == 'pre-commit'
Requires-Dist: tomlkit (~=0.7.0) ; extra == 'pre-commit'
Provides-Extra: rest
Requires-Dist: flask-cors (~=3.0) ; extra == 'rest'
Requires-Dist: flask-restful (~=0.3.7) ; extra == 'rest'
Requires-Dist: flask (~=1.1) ; extra == 'rest'
Requires-Dist: pyparsing (~=2.4) ; extra == 'rest'
Requires-Dist: python-memcached (~=1.59) ; extra == 'rest'
Requires-Dist: seekpath (>=1.9.3,~=1.9) ; extra == 'rest'
Provides-Extra: ssh_kerberos
Requires-Dist: gssapi (~=1.6) ; extra == 'ssh_kerberos'
Requires-Dist: pyasn1 (~=0.4.8) ; extra == 'ssh_kerberos'
Provides-Extra: tests
Requires-Dist: coverage (<5.0) ; extra == 'tests'
Requires-Dist: pyparsing (~=2.4) ; extra == 'tests'
Requires-Dist: aiida-export-migration-tests (==0.9.0) ; extra == 'tests'
Requires-Dist: pytest-cov (~=2.7) ; extra == 'tests'
Requires-Dist: pytest (~=6.0) ; extra == 'tests'
Requires-Dist: pgtest (>=1.3.1,~=1.3) ; extra == 'tests'
Requires-Dist: pytest-benchmark (~=3.2) ; extra == 'tests'
Requires-Dist: sqlalchemy-diff (~=0.1.3) ; extra == 'tests'
Requires-Dist: seekpath (>=1.9.3,~=1.9) ; extra == 'tests'
Requires-Dist: pympler (~=0.9) ; extra == 'tests'
Requires-Dist: spglib (~=1.14) ; extra == 'tests'
Requires-Dist: pytest-rerunfailures (>=9.1.1,~=9.1) ; extra == 'tests'
Requires-Dist: pytest-asyncio (~=0.12) ; extra == 'tests'
Requires-Dist: PyCifRW (~=4.4) ; extra == 'tests'
Requires-Dist: pymysql (~=0.9.3) ; extra == 'tests'
Requires-Dist: flask (~=1.1) ; extra == 'tests'
Requires-Dist: pytest-timeout (~=1.3) ; extra == 'tests'
Requires-Dist: ase (~=3.18) ; extra == 'tests'
Requires-Dist: pg8000 (~=1.13) ; extra == 'tests'
Requires-Dist: python-memcached (~=1.59) ; extra == 'tests'
Requires-Dist: flask-cors (~=3.0) ; extra == 'tests'
Requires-Dist: pymatgen (!=2019.9.7,<=2022.02.03,>=2019.7.2) ; extra == 'tests'
Requires-Dist: flask-restful (~=0.3.7) ; extra == 'tests'

# <img src="http://www.aiida.net/wp-content/uploads/2020/06/logo_aiida.png" alt="AiiDA" width="200"/>

AiiDA (www.aiida.net) is a workflow manager for computational science with a strong focus on provenance, performance and extensibility.

|    | |
|-----|----------------------------------------------------------------------------|
|Latest release| [![PyPI version](https://badge.fury.io/py/aiida-core.svg)](https://badge.fury.io/py/aiida-core) [![conda-forge](https://img.shields.io/conda/vn/conda-forge/aiida-core.svg?style=flat)](https://anaconda.org/conda-forge/aiida-core) [![PyPI pyversions](https://img.shields.io/pypi/pyversions/aiida-core.svg)](https://pypi.python.org/pypi/aiida-core/) |
|Getting help| [![Docs status](https://readthedocs.org/projects/aiida-core/badge)](http://aiida-core.readthedocs.io/) [![Google Group](https://img.shields.io/badge/-Google%20Group-lightgrey.svg)](https://groups.google.com/forum/#!forum/aiidausers)
|Build status| [![Build Status](https://github.com/aiidateam/aiida-core/workflows/aiida-core/badge.svg)](https://github.com/aiidateam/aiida-core/actions) [![Coverage Status](https://codecov.io/gh/aiidateam/aiida-core/branch/develop/graph/badge.svg)](https://codecov.io/gh/aiidateam/aiida-core) |
|Activity| [![PyPI-downloads](https://img.shields.io/pypi/dm/aiida-core.svg?style=flat)](https://pypistats.org/packages/aiida-core) [![Commit Activity](https://img.shields.io/github/commit-activity/m/aiidateam/aiida-core.svg)](https://github.com/aiidateam/aiida-core/pulse)
|Community| [![Affiliated with NumFOCUS](https://img.shields.io/badge/NumFOCUS-affiliated%20project-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org/sponsored-projects/affiliated-projects) [![Twitter](https://img.shields.io/twitter/follow/aiidateam.svg?style=social&label=Follow)](https://twitter.com/aiidateam)


## Features

 -   **Workflows:** Write complex, auto-documenting workflows in
     python, linked to arbitrary executables on local and remote
     computers. The event-based workflow engine supports tens of
     thousands of processes per hour with full checkpointing.
 -   **Data provenance:** Automatically track inputs, outputs & metadata
     of all calculations in a provenance graph for full
     reproducibility. Perform fast queries on graphs containing
     millions of nodes.
 -   **HPC interface:** Move your calculations to a different computer
     by changing one line of code. AiiDA is compatible with schedulers
     like [SLURM](https://slurm.schedmd.com), [PBS
     Pro](https://www.pbspro.org/),
     [torque](http://www.adaptivecomputing.com/products/torque/),
     [SGE](http://gridscheduler.sourceforge.net/) or
     [LSF](https://www.ibm.com/support/knowledgecenter/SSETD4/product_welcome_platform_lsf.html)
     out of the box.
 -   **Plugin interface:** Extend AiiDA with [plugins](https://aiidateam.github.io/aiida-registry/) for new simulation codes (input generation & parsing), data types, schedulers, transport modes and more.
 -   **Open Science:** Export subsets of your provenance graph and share them with peers or make them available online for everyone
     on the [Materials Cloud](https://www.materialscloud.org).
 -   **Open source:** AiiDA is released under the [MIT open source license](LICENSE.txt)

## Installation

Please see AiiDA's [documentation](https://aiida-core.readthedocs.io/en/latest/).

## How to contribute [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com) [![GitHub issues by-label](https://img.shields.io/github/issues/aiidateam/aiida-core/good%20first%20issue)](https://github.com/aiidateam/aiida-core/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)

The AiiDA team appreciates help from a wide range of different backgrounds.
Small improvements of the documentation or minor bug fixes are always welcome.

Please see the [Contributor wiki](https://github.com/aiidateam/aiida-core/wiki) on how to get started.

## Frequently Asked Questions

If you are experiencing problems with your AiiDA installation, please refer to the [FAQ page of the documentation](https://aiida-core.readthedocs.io/en/latest/howto/faq.html).

## How to cite

If you use AiiDA in your research, please consider citing the following publications:

 * **AiiDA >= 1.0**: S. P. Huber *et al.*, *AiiDA 1.0, a scalable computational infrastructure for automated reproducible workflows and data provenance*, Scientific Data **7**, 300 (2020); DOI: [10.1038/s41597-020-00638-4](https://doi.org/10.1038/s41597-020-00638-4)
 * **AiiDA >= 1.0**: M. Uhrin *et al.*, *Workflows in AiiDA: Engineering a high-throughput, event-based engine for robust and modular computational workflows*, Computational Materials Science **187**, 110086 (2021); DOI: [10.1016/j.commatsci.2020.110086](https://doi.org/10.1016/j.commatsci.2020.110086)
 * **AiiDA < 1.0**: Giovanni Pizzi, Andrea Cepellotti, Riccardo Sabatini, Nicola Marzari,and Boris Kozinsky, *AiiDA: automated interactive infrastructure and database for computational science*, Computational Materials Science **111**, 218-230 (2016); DOI: [10.1016/j.commatsci.2015.09.013](https://doi.org/10.1016/j.commatsci.2015.09.013)

## License

AiiDA is distributed under the MIT open source license (see [`LICENSE.txt`](LICENSE.txt)).
For a list of other open source components included in AiiDA, see [`open_source_licenses.txt`](open_source_licenses.txt).

## Acknowledgements

AiiDA is a [NumFOCUS Affiliated Project](https://www.numfocus.org) and supported by the [MARVEL National Centre of Competence in Research](http://www.marvel-nccr.ch), the [MaX European Centre of Excellence](http://www.max-centre.eu) and by a number of other supporting projects, partners and institutions, whose complete list is available on the [AiiDA website acknowledgements page](http://www.aiida.net/acknowledgements/).


