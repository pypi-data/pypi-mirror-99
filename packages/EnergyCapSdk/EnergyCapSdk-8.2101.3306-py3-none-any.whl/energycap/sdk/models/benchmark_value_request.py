# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class BenchmarkValueRequest(Model):
    """BenchmarkValueRequest.

    :param effective_date: The effective date for the benchmark <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Required</span>
    :type effective_date: datetime
    :param value: The benchmark value <span
     class='property-internal'>Required</span> <span class='property-info'>Max
     scale of 6</span> <span class='property-internal'>Must be between 0 and
     1.7976931348623157E+308</span> <span
     class='property-internal'>Required</span> <span class='property-info'>Max
     scale of 6</span> <span class='property-internal'>Must be between 0 and
     1.7976931348623157E+308</span>
    :type value: float
    """

    _validation = {
        'effective_date': {'required': True},
        'value': {'required': True, 'minimum': 0},
    }

    _attribute_map = {
        'effective_date': {'key': 'effectiveDate', 'type': 'iso-8601'},
        'value': {'key': 'value', 'type': 'float'},
    }

    def __init__(self, effective_date, value):
        super(BenchmarkValueRequest, self).__init__()
        self.effective_date = effective_date
        self.value = value
