# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class EnergyProjectEdit(Model):
    """EnergyProjectEdit.

    :param place_id: The place identifier <span
     class='property-internal'>Required (defined)</span>
    :type place_id: int
    :param energy_project_code: The energy project code <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 128 characters</span>
    :type energy_project_code: str
    :param energy_project_info: The energy project info <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 128 characters</span>
    :type energy_project_info: str
    :param installation_begin_date: The energy project installation begin date
     <span class='property-internal'>Required (defined)</span>
    :type installation_begin_date: datetime
    :param installation_end_date: The energy project installation end date
     <span class='property-internal'>Required (defined)</span>
    :type installation_end_date: datetime
    :param installation_cost: The energy project installation cost <span
     class='property-internal'>Required (defined)</span>
    :type installation_cost: float
    :param energy_project_type_code: The energy project type code <span
     class='property-internal'>Required</span>
    :type energy_project_type_code: str
    :param utility_rebate: The rebate amount of energy project <span
     class='property-internal'>Required (defined)</span>
    :type utility_rebate: float
    :param funding_source: The funding source of the project <span
     class='property-internal'>Required (defined)</span>
    :type funding_source: str
    :param project_manager: The project manager of the energy project <span
     class='property-internal'>Required (defined)</span>
    :type project_manager: str
    :param note: The miscellaneous note about the project <span
     class='property-internal'>Required (defined)</span>
    :type note: str
    :param energy_savings: The energy savings amount <span
     class='property-internal'>Required (defined)</span>
    :type energy_savings: float
    :param energy_savings_unit_code: The energy savings unit code <span
     class='property-internal'>Required (defined)</span>
    :type energy_savings_unit_code: str
    :param cost_savings: The cost savings amount <span
     class='property-internal'>Required (defined)</span>
    :type cost_savings: float
    :param cost_savings_unit_code: The cost savings unit code <span
     class='property-internal'>Required (defined)</span>
    :type cost_savings_unit_code: str
    """

    _validation = {
        'energy_project_code': {'required': True, 'max_length': 128, 'min_length': 0},
        'energy_project_info': {'required': True, 'max_length': 128, 'min_length': 0},
        'energy_project_type_code': {'required': True},
    }

    _attribute_map = {
        'place_id': {'key': 'placeId', 'type': 'int'},
        'energy_project_code': {'key': 'energyProjectCode', 'type': 'str'},
        'energy_project_info': {'key': 'energyProjectInfo', 'type': 'str'},
        'installation_begin_date': {'key': 'installationBeginDate', 'type': 'iso-8601'},
        'installation_end_date': {'key': 'installationEndDate', 'type': 'iso-8601'},
        'installation_cost': {'key': 'installationCost', 'type': 'float'},
        'energy_project_type_code': {'key': 'energyProjectTypeCode', 'type': 'str'},
        'utility_rebate': {'key': 'utilityRebate', 'type': 'float'},
        'funding_source': {'key': 'fundingSource', 'type': 'str'},
        'project_manager': {'key': 'projectManager', 'type': 'str'},
        'note': {'key': 'note', 'type': 'str'},
        'energy_savings': {'key': 'energySavings', 'type': 'float'},
        'energy_savings_unit_code': {'key': 'energySavingsUnitCode', 'type': 'str'},
        'cost_savings': {'key': 'costSavings', 'type': 'float'},
        'cost_savings_unit_code': {'key': 'costSavingsUnitCode', 'type': 'str'},
    }

    def __init__(self, energy_project_code, energy_project_info, energy_project_type_code, place_id=None, installation_begin_date=None, installation_end_date=None, installation_cost=None, utility_rebate=None, funding_source=None, project_manager=None, note=None, energy_savings=None, energy_savings_unit_code=None, cost_savings=None, cost_savings_unit_code=None):
        super(EnergyProjectEdit, self).__init__()
        self.place_id = place_id
        self.energy_project_code = energy_project_code
        self.energy_project_info = energy_project_info
        self.installation_begin_date = installation_begin_date
        self.installation_end_date = installation_end_date
        self.installation_cost = installation_cost
        self.energy_project_type_code = energy_project_type_code
        self.utility_rebate = utility_rebate
        self.funding_source = funding_source
        self.project_manager = project_manager
        self.note = note
        self.energy_savings = energy_savings
        self.energy_savings_unit_code = energy_savings_unit_code
        self.cost_savings = cost_savings
        self.cost_savings_unit_code = cost_savings_unit_code
