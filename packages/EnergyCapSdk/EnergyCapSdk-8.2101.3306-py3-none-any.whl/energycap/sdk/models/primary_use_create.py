# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PrimaryUseCreate(Model):
    """PrimaryUseCreate.

    :param primary_use_code: The Primary Use Code <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 64 characters</span>
    :type primary_use_code: str
    :param primary_use_info: The Primary Use Info <span
     class='property-internal'>Required</span> <span
     class='property-internal'>Must be between 0 and 64 characters</span>
    :type primary_use_info: str
    :param primary_use_type: The Primary Use Type. Possible value include:
     "place" and "meter" <span class='property-internal'>Required</span> <span
     class='property-internal'>One of place, meter </span>
    :type primary_use_type: str
    """

    _validation = {
        'primary_use_code': {'required': True, 'max_length': 64, 'min_length': 0},
        'primary_use_info': {'required': True, 'max_length': 64, 'min_length': 0},
        'primary_use_type': {'required': True},
    }

    _attribute_map = {
        'primary_use_code': {'key': 'primaryUseCode', 'type': 'str'},
        'primary_use_info': {'key': 'primaryUseInfo', 'type': 'str'},
        'primary_use_type': {'key': 'primaryUseType', 'type': 'str'},
    }

    def __init__(self, primary_use_code, primary_use_info, primary_use_type):
        super(PrimaryUseCreate, self).__init__()
        self.primary_use_code = primary_use_code
        self.primary_use_info = primary_use_info
        self.primary_use_type = primary_use_type
