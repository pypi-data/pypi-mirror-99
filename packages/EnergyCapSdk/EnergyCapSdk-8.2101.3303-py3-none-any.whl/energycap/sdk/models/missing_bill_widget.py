# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MissingBillWidget(Model):
    """MissingBillWidget.

    :param gap_begin_date: The begin date of the gap in billing data
    :type gap_begin_date: datetime
    :param gap_end_date: The end date of the gap in billing data
    :type gap_end_date: datetime
    :param gap_days: The number of days in the gap in billing data
    :type gap_days: int
    :param account_id: The account that is missing billing data
    :type account_id: int
    :param account_info: The account that is missing billing data
    :type account_info: str
    :param meter_info: The meter that is missing billing data
    :type meter_info: str
    """

    _attribute_map = {
        'gap_begin_date': {'key': 'gapBeginDate', 'type': 'iso-8601'},
        'gap_end_date': {'key': 'gapEndDate', 'type': 'iso-8601'},
        'gap_days': {'key': 'gapDays', 'type': 'int'},
        'account_id': {'key': 'accountId', 'type': 'int'},
        'account_info': {'key': 'accountInfo', 'type': 'str'},
        'meter_info': {'key': 'meterInfo', 'type': 'str'},
    }

    def __init__(self, gap_begin_date=None, gap_end_date=None, gap_days=None, account_id=None, account_info=None, meter_info=None):
        super(MissingBillWidget, self).__init__()
        self.gap_begin_date = gap_begin_date
        self.gap_end_date = gap_end_date
        self.gap_days = gap_days
        self.account_id = account_id
        self.account_info = account_info
        self.meter_info = meter_info
