# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RateVersionResponse(Model):
    """RateVersionResponse.

    :param version_id: ID of the rate schedule version
    :type version_id: int
    :param begin_date: Begin date for the version
    :type begin_date: datetime
    :param end_date: End date for the version
    :type end_date: datetime
    :param created_date: Created date
    :type created_date: datetime
    :param modified_date: Last modified date
    :type modified_date: datetime
    :param note: Note
    :type note: str
    :param created_by:
    :type created_by: ~energycap.sdk.models.UserChild
    :param modified_by:
    :type modified_by: ~energycap.sdk.models.UserChild
    :param use_unit_cost: Unit cost for the use
    :type use_unit_cost: float
    :param use_unit:
    :type use_unit: ~energycap.sdk.models.UnitChild
    :param demand_unit_cost: Unit cost for the demand
    :type demand_unit_cost: float
    :param demand_unit:
    :type demand_unit: ~energycap.sdk.models.UnitChild
    :param cost_unit:
    :type cost_unit: ~energycap.sdk.models.UnitChild
    :param account_line_items: Cost bodylines for the account
    :type account_line_items:
     list[~energycap.sdk.models.GenericBodylineResponse]
    :param meter_line_items: Cost bodylines for the meter
    :type meter_line_items:
     list[~energycap.sdk.models.GenericBodylineResponse]
    """

    _attribute_map = {
        'version_id': {'key': 'versionId', 'type': 'int'},
        'begin_date': {'key': 'beginDate', 'type': 'iso-8601'},
        'end_date': {'key': 'endDate', 'type': 'iso-8601'},
        'created_date': {'key': 'createdDate', 'type': 'iso-8601'},
        'modified_date': {'key': 'modifiedDate', 'type': 'iso-8601'},
        'note': {'key': 'note', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'UserChild'},
        'modified_by': {'key': 'modifiedBy', 'type': 'UserChild'},
        'use_unit_cost': {'key': 'useUnitCost', 'type': 'float'},
        'use_unit': {'key': 'useUnit', 'type': 'UnitChild'},
        'demand_unit_cost': {'key': 'demandUnitCost', 'type': 'float'},
        'demand_unit': {'key': 'demandUnit', 'type': 'UnitChild'},
        'cost_unit': {'key': 'costUnit', 'type': 'UnitChild'},
        'account_line_items': {'key': 'accountLineItems', 'type': '[GenericBodylineResponse]'},
        'meter_line_items': {'key': 'meterLineItems', 'type': '[GenericBodylineResponse]'},
    }

    def __init__(self, version_id=None, begin_date=None, end_date=None, created_date=None, modified_date=None, note=None, created_by=None, modified_by=None, use_unit_cost=None, use_unit=None, demand_unit_cost=None, demand_unit=None, cost_unit=None, account_line_items=None, meter_line_items=None):
        super(RateVersionResponse, self).__init__()
        self.version_id = version_id
        self.begin_date = begin_date
        self.end_date = end_date
        self.created_date = created_date
        self.modified_date = modified_date
        self.note = note
        self.created_by = created_by
        self.modified_by = modified_by
        self.use_unit_cost = use_unit_cost
        self.use_unit = use_unit
        self.demand_unit_cost = demand_unit_cost
        self.demand_unit = demand_unit
        self.cost_unit = cost_unit
        self.account_line_items = account_line_items
        self.meter_line_items = meter_line_items
