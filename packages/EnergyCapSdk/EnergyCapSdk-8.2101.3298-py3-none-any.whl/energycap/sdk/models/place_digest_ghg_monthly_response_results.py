# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PlaceDigestGHGMonthlyResponseResults(Model):
    """PlaceDigestGHGMonthlyResponseResults.

    :param period_name: Calendar Period Name
    :type period_name: str
    :param calendar_period: Calendar Period
    :type calendar_period: int
    :param calendar_year: Calendar Year
    :type calendar_year: int
    :param fiscal_period: Fiscal Period
    :type fiscal_period: int
    :param fiscal_year: Fiscal Year
    :type fiscal_year: int
    :param equivalent_co2_emissions: Equivalent CO2 emissions
    :type equivalent_co2_emissions: float
    """

    _attribute_map = {
        'period_name': {'key': 'periodName', 'type': 'str'},
        'calendar_period': {'key': 'calendarPeriod', 'type': 'int'},
        'calendar_year': {'key': 'calendarYear', 'type': 'int'},
        'fiscal_period': {'key': 'fiscalPeriod', 'type': 'int'},
        'fiscal_year': {'key': 'fiscalYear', 'type': 'int'},
        'equivalent_co2_emissions': {'key': 'equivalentCO2Emissions', 'type': 'float'},
    }

    def __init__(self, period_name=None, calendar_period=None, calendar_year=None, fiscal_period=None, fiscal_year=None, equivalent_co2_emissions=None):
        super(PlaceDigestGHGMonthlyResponseResults, self).__init__()
        self.period_name = period_name
        self.calendar_period = calendar_period
        self.calendar_year = calendar_year
        self.fiscal_period = fiscal_period
        self.fiscal_year = fiscal_year
        self.equivalent_co2_emissions = equivalent_co2_emissions
