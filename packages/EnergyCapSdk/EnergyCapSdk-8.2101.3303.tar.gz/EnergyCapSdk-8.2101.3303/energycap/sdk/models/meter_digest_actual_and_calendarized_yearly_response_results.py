# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MeterDigestActualAndCalendarizedYearlyResponseResults(Model):
    """MeterDigestActualAndCalendarizedYearlyResponseResults.

    :param year: Year
    :type year: str
    :param total_cost: Total Cost
    :type total_cost: float
    :param native_use: Native Use
    :type native_use: float
    :param native_use_unit_cost: Native Use Unit Cost
    :type native_use_unit_cost: float
    :param common_use: Common Use
    :type common_use: float
    :param common_use_unit_cost: Common Use Unit Cost
    :type common_use_unit_cost: float
    :param native_demand: Native Demand
    :type native_demand: float
    :param native_demand_unit_cost: Native Demand Unit Cost
    :type native_demand_unit_cost: float
    """

    _attribute_map = {
        'year': {'key': 'year', 'type': 'str'},
        'total_cost': {'key': 'totalCost', 'type': 'float'},
        'native_use': {'key': 'nativeUse', 'type': 'float'},
        'native_use_unit_cost': {'key': 'nativeUseUnitCost', 'type': 'float'},
        'common_use': {'key': 'commonUse', 'type': 'float'},
        'common_use_unit_cost': {'key': 'commonUseUnitCost', 'type': 'float'},
        'native_demand': {'key': 'nativeDemand', 'type': 'float'},
        'native_demand_unit_cost': {'key': 'nativeDemandUnitCost', 'type': 'float'},
    }

    def __init__(self, year=None, total_cost=None, native_use=None, native_use_unit_cost=None, common_use=None, common_use_unit_cost=None, native_demand=None, native_demand_unit_cost=None):
        super(MeterDigestActualAndCalendarizedYearlyResponseResults, self).__init__()
        self.year = year
        self.total_cost = total_cost
        self.native_use = native_use
        self.native_use_unit_cost = native_use_unit_cost
        self.common_use = common_use
        self.common_use_unit_cost = common_use_unit_cost
        self.native_demand = native_demand
        self.native_demand_unit_cost = native_demand_unit_cost
