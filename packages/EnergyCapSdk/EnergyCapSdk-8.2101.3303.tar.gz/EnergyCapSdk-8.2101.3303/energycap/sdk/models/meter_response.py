# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MeterResponse(Model):
    """MeterResponse.

    :param meter_id: The identifier for the meter
    :type meter_id: int
    :param meter_code: The meter code
    :type meter_code: str
    :param meter_info: The meter info
    :type meter_info: str
    :param meter_type:
    :type meter_type: ~energycap.sdk.models.MeterTypeChild
    :param channels: An array of channels assigned to this meter
    :type channels: list[~energycap.sdk.models.ChannelChild]
    :param accounts:
    :type accounts: list[~energycap.sdk.models.MeterAccountChild]
    :param commodity:
    :type commodity: ~energycap.sdk.models.CommodityChild
    :param place:
    :type place: ~energycap.sdk.models.PlaceChild
    :param address:
    :type address: ~energycap.sdk.models.AddressChild
    :param bill_entry_note: The bill entry note
    :type bill_entry_note: str
    :param include_in_energy_star: Indicates if the building is included in
     ENERGY STAR submissions
    :type include_in_energy_star: bool
    :param primary_use:
    :type primary_use: ~energycap.sdk.models.PrimaryUseChild
    :param created_by:
    :type created_by: ~energycap.sdk.models.UserChild
    :param created_date: The date and time the meter was created
    :type created_date: datetime
    :param modified_by:
    :type modified_by: ~energycap.sdk.models.UserChild
    :param modified_date: The date and time of the most recent modification of
     the meter
    :type modified_date: datetime
    :param properties: An array of meter properties
    :type properties: dict[str, str]
    :param include_in_cost_avoidance: Indicates if the meter should be
     included in cost avoidance
    :type include_in_cost_avoidance: bool
    :param route:
    :type route: ~energycap.sdk.models.RouteChild
    :param meter_time_zone:
    :type meter_time_zone: ~energycap.sdk.models.TimeZoneChild
    :param active: Indicates whether the Meter is Active
    :type active: bool
    :param is_calculated_meter: Indicates whether the Meter is a calculated
     meter
    :type is_calculated_meter: bool
    :param is_split_parent_meter: Indicates whether the Meter is a parent of a
     split
    :type is_split_parent_meter: bool
    :param is_split_child_meter: Indicates whether the Meter is a child of a
     split
    :type is_split_child_meter: bool
    :param use_unit:
    :type use_unit: ~energycap.sdk.models.UnitChild
    :param demand_unit:
    :type demand_unit: ~energycap.sdk.models.UnitChild
    :param serial_number: Meter's currently assigned serial number
    :type serial_number: str
    :param serial_number_history:
    :type serial_number_history:
     ~energycap.sdk.models.MeterSerialNumberHistoryChild
    :param meter_description: A description of the meter
    :type meter_description: str
    """

    _attribute_map = {
        'meter_id': {'key': 'meterId', 'type': 'int'},
        'meter_code': {'key': 'meterCode', 'type': 'str'},
        'meter_info': {'key': 'meterInfo', 'type': 'str'},
        'meter_type': {'key': 'meterType', 'type': 'MeterTypeChild'},
        'channels': {'key': 'channels', 'type': '[ChannelChild]'},
        'accounts': {'key': 'accounts', 'type': '[MeterAccountChild]'},
        'commodity': {'key': 'commodity', 'type': 'CommodityChild'},
        'place': {'key': 'place', 'type': 'PlaceChild'},
        'address': {'key': 'address', 'type': 'AddressChild'},
        'bill_entry_note': {'key': 'billEntryNote', 'type': 'str'},
        'include_in_energy_star': {'key': 'includeInEnergyStar', 'type': 'bool'},
        'primary_use': {'key': 'primaryUse', 'type': 'PrimaryUseChild'},
        'created_by': {'key': 'createdBy', 'type': 'UserChild'},
        'created_date': {'key': 'createdDate', 'type': 'iso-8601'},
        'modified_by': {'key': 'modifiedBy', 'type': 'UserChild'},
        'modified_date': {'key': 'modifiedDate', 'type': 'iso-8601'},
        'properties': {'key': 'properties', 'type': '{str}'},
        'include_in_cost_avoidance': {'key': 'includeInCostAvoidance', 'type': 'bool'},
        'route': {'key': 'route', 'type': 'RouteChild'},
        'meter_time_zone': {'key': 'meterTimeZone', 'type': 'TimeZoneChild'},
        'active': {'key': 'active', 'type': 'bool'},
        'is_calculated_meter': {'key': 'isCalculatedMeter', 'type': 'bool'},
        'is_split_parent_meter': {'key': 'isSplitParentMeter', 'type': 'bool'},
        'is_split_child_meter': {'key': 'isSplitChildMeter', 'type': 'bool'},
        'use_unit': {'key': 'useUnit', 'type': 'UnitChild'},
        'demand_unit': {'key': 'demandUnit', 'type': 'UnitChild'},
        'serial_number': {'key': 'serialNumber', 'type': 'str'},
        'serial_number_history': {'key': 'serialNumberHistory', 'type': 'MeterSerialNumberHistoryChild'},
        'meter_description': {'key': 'meterDescription', 'type': 'str'},
    }

    def __init__(self, meter_id=None, meter_code=None, meter_info=None, meter_type=None, channels=None, accounts=None, commodity=None, place=None, address=None, bill_entry_note=None, include_in_energy_star=None, primary_use=None, created_by=None, created_date=None, modified_by=None, modified_date=None, properties=None, include_in_cost_avoidance=None, route=None, meter_time_zone=None, active=None, is_calculated_meter=None, is_split_parent_meter=None, is_split_child_meter=None, use_unit=None, demand_unit=None, serial_number=None, serial_number_history=None, meter_description=None):
        super(MeterResponse, self).__init__()
        self.meter_id = meter_id
        self.meter_code = meter_code
        self.meter_info = meter_info
        self.meter_type = meter_type
        self.channels = channels
        self.accounts = accounts
        self.commodity = commodity
        self.place = place
        self.address = address
        self.bill_entry_note = bill_entry_note
        self.include_in_energy_star = include_in_energy_star
        self.primary_use = primary_use
        self.created_by = created_by
        self.created_date = created_date
        self.modified_by = modified_by
        self.modified_date = modified_date
        self.properties = properties
        self.include_in_cost_avoidance = include_in_cost_avoidance
        self.route = route
        self.meter_time_zone = meter_time_zone
        self.active = active
        self.is_calculated_meter = is_calculated_meter
        self.is_split_parent_meter = is_split_parent_meter
        self.is_split_child_meter = is_split_child_meter
        self.use_unit = use_unit
        self.demand_unit = demand_unit
        self.serial_number = serial_number
        self.serial_number_history = serial_number_history
        self.meter_description = meter_description
