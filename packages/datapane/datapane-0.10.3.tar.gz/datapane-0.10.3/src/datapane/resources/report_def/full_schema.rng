<?xml version="1.0" encoding="UTF-8"?>
<!--
  This schema currently covers all report states - eventually to be split out to handle all substates
  (want to delay splitting out as long as possible for simplicities sake)
  NOTE - the .rng file is autogenerated using the `trang` java tool
  run `java -jar /path/to/trang.jar full_schema.rnc full_schema.rng`
  default namespace = "https://datapane.com/report"
-->
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <start>
    <element name="Report">
      <attribute name="xml:id">
        <data type="ID"/>
      </attribute>
      <!-- unsignedByte ? -->
      <attribute name="version">
        <data type="positiveInteger"/>
      </attribute>
      <ref name="Meta"/>
      <ref name="Main"/>
    </element>
  </start>
  <!--
    Metadata fields
    we extract these into the Report DB fields for quick lookup
  -->
  <define name="Meta">
    <a:documentation/>
    <element name="Meta">
      <interleave>
        <element name="Author">
          <data type="string">
            <param name="minLength">1</param>
            <param name="maxLength">127</param>
          </data>
        </element>
        <element name="CreatedOn">
          <data type="dateTime"/>
        </element>
        <element name="Title">
          <data type="string">
            <param name="minLength">1</param>
            <param name="maxLength">127</param>
          </data>
        </element>
        <element name="Description">
          <data type="string">
            <param name="maxLength">10240</param>
          </data>
        </element>
      </interleave>
    </element>
  </define>
  <!-- Main Report Tree -->
  <define name="Main">
    <a:documentation/>
    <element name="Main">
      <group>
        <oneOrMore>
          <ref name="Page"/>
        </oneOrMore>
        <attribute name="type">
          <choice>
            <value type="string" datatypeLibrary="">dashboard</value>
            <value type="string" datatypeLibrary="">report</value>
            <value type="string" datatypeLibrary="">article</value>
          </choice>
        </attribute>
      </group>
      <!-- attribute full_width { xsd:boolean }, -->
    </element>
  </define>
  <define name="block_id">
    <attribute name="id">
      <data type="string">
        <param name="minLength">1</param>
        <param name="maxLength">64</param>
      </data>
    </attribute>
  </define>
  <define name="block_label">
    <attribute name="label">
      <data type="string">
        <param name="minLength">1</param>
      </data>
    </attribute>
  </define>
  <define name="block_id_label">
    <optional>
      <ref name="block_id"/>
    </optional>
    <optional>
      <ref name="block_label"/>
    </optional>
  </define>
  <define name="Page">
    <element name="Page">
      <ref name="block_id_label"/>
      <oneOrMore>
        <ref name="LayoutBlock"/>
      </oneOrMore>
    </element>
  </define>
  <define name="LayoutBlock">
    <choice>
      <ref name="Group"/>
      <ref name="Select"/>
    </choice>
  </define>
  <define name="Select">
    <element name="Select">
      <group>
        <ref name="block_id_label"/>
        <optional>
          <attribute name="type">
            <choice>
              <value type="string" datatypeLibrary="">dropdown</value>
              <value type="string" datatypeLibrary="">tabs</value>
            </choice>
          </attribute>
        </optional>
        <ref name="Block"/>
        <oneOrMore>
          <ref name="Block"/>
        </oneOrMore>
      </group>
      <!-- at least 2 block elements in a Select -->
    </element>
  </define>
  <define name="Group">
    <element name="Group">
      <ref name="block_id_label"/>
      <attribute name="rows">
        <data type="nonNegativeInteger"/>
      </attribute>
      <attribute name="columns">
        <data type="nonNegativeInteger"/>
      </attribute>
      <oneOrMore>
        <ref name="Block"/>
      </oneOrMore>
    </element>
  </define>
  <define name="Block">
    <choice>
      <ref name="LayoutBlock"/>
      <ref name="DataBlock"/>
    </choice>
  </define>
  <define name="DataBlock">
    <choice>
      <ref name="EmbeddedTextBlock"/>
      <ref name="AssetBlock"/>
      <ref name="BigNumber"/>
    </choice>
  </define>
  <define name="EmbeddedTextBlock">
    <choice>
      <ref name="Text"/>
      <ref name="HTML"/>
      <ref name="Code"/>
      <ref name="Embed"/>
    </choice>
  </define>
  <define name="AssetBlock">
    <choice>
      <ref name="File"/>
      <ref name="Plot"/>
      <ref name="Table"/>
      <ref name="DataTable"/>
    </choice>
  </define>
  <!--
    EmbeddedTextBlocks
    Markdown Text
  -->
  <define name="Text">
    <a:documentation/>
    <element name="Text">
      <ref name="block_id_label"/>
      <data type="string">
        <param name="minLength">1</param>
        <param name="pattern">(.|\s)*\S(.|\s)*</param>
      </data>
    </element>
  </define>
  <define name="HTML">
    <element name="HTML">
      <ref name="block_id_label"/>
      <data type="string">
        <param name="minLength">1</param>
      </data>
    </element>
  </define>
  <define name="Code">
    <element name="Code">
      <ref name="block_id_label"/>
      <attribute name="language">
        <data type="string">
          <param name="minLength">1</param>
          <param name="maxLength">127</param>
        </data>
      </attribute>
      <data type="string">
        <param name="minLength">1</param>
      </data>
    </element>
  </define>
  <define name="Embed">
    <element name="Embed">
      <ref name="block_id_label"/>
      <attribute name="url">
        <data type="anyURI"/>
      </attribute>
      <attribute name="title">
        <data type="string">
          <param name="minLength">1</param>
          <param name="maxLength">256</param>
        </data>
      </attribute>
      <attribute name="provider_name">
        <data type="string">
          <param name="minLength">1</param>
          <param name="maxLength">127</param>
        </data>
      </attribute>
      <data type="string">
        <param name="minLength">1</param>
      </data>
    </element>
  </define>
  <define name="BigNumber">
    <element name="BigNumber">
      <ref name="block_id_label"/>
      <attribute name="heading">
        <data type="string">
          <param name="minLength">1</param>
          <param name="maxLength">127</param>
        </data>
      </attribute>
      <attribute name="value">
        <data type="string">
          <param name="minLength">1</param>
          <param name="maxLength">127</param>
        </data>
      </attribute>
      <optional>
        <!-- optional attributes -->
        <attribute name="change">
          <data type="string">
            <param name="minLength">1</param>
            <param name="maxLength">127</param>
          </data>
        </attribute>
      </optional>
      <optional>
        <attribute name="prev_value">
          <data type="string">
            <param name="minLength">1</param>
            <param name="maxLength">127</param>
          </data>
        </attribute>
      </optional>
      <optional>
        <attribute name="is_positive_intent">
          <data type="boolean"/>
        </attribute>
      </optional>
      <optional>
        <attribute name="is_upward_change">
          <data type="boolean"/>
        </attribute>
      </optional>
    </element>
  </define>
  <!-- AssetBlocks -->
  <define name="assetAttributes">
    <a:documentation/>
    <ref name="block_id_label"/>
    <!-- TODO - should attachment be it's own attribute? -->
    <attribute name="src">
      <data type="anyURI">
        <param name="pattern">((http|https|cas|file|data|attachment):|/).+</param>
      </data>
    </attribute>
    <optional>
      <attribute name="cas_ref">
        <data type="string">
          <param name="pattern">[0-9a-f]{64}</param>
        </data>
      </attribute>
    </optional>
    <attribute name="type">
      <data type="string">
        <param name="pattern">\w+/[\w.+\-]+</param>
      </data>
    </attribute>
    <attribute name="size">
      <data type="positiveInteger"/>
    </attribute>
    <optional>
      <element name="Caption">
        <text/>
      </element>
    </optional>
  </define>
  <define name="File">
    <element name="File">
      <ref name="assetAttributes"/>
      <attribute name="can_download" a:defaultValue="true">
        <data type="boolean"/>
      </attribute>
      <attribute name="name">
        <data type="string"/>
      </attribute>
    </element>
  </define>
  <define name="Plot">
    <element name="Plot">
      <ref name="assetAttributes"/>
      <attribute name="width">
        <data type="positiveInteger"/>
      </attribute>
      <attribute name="height">
        <data type="positiveInteger"/>
      </attribute>
      <attribute name="responsive" a:defaultValue="true">
        <data type="boolean"/>
      </attribute>
    </element>
  </define>
  <define name="Table">
    <element name="Table">
      <ref name="assetAttributes"/>
    </element>
  </define>
  <define name="DataTable">
    <element name="DataTable">
      <group>
        <ref name="assetAttributes"/>
        <attribute name="rows">
          <data type="positiveInteger"/>
        </attribute>
        <attribute name="columns">
          <data type="positiveInteger"/>
        </attribute>
      </group>
      <!-- attribute cells { xsd:positiveInteger } -->
    </element>
  </define>
</grammar>
