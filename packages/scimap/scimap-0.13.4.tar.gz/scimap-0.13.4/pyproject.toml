[tool.poetry]

name = "scimap"
version = "0.13.4"
description = "Single-Cell Image Analysis Package"

license = "MIT"

authors = ["Ajit Johnson Nirmal <ajitjohnson.n@gmail.com>"]

readme = "README.md"

homepage = "https://pypi.org/project/scimap"
documentation = "https://scimap.readthedocs.io"
repository = "https://github.com/ajitjohnson/scimap"

keywords = ["image analysis","multiplex imaging","single cell analysis"]

classifiers = [
    # TODO: update this list to match your application: https://pypi.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 2 - Pre-Alpha",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]

[tool.poetry.dependencies]

python = "^3.7"
pytest = "^5.4.3"
anndata = "^0.7.4"
pandas = "^1.0.4"
sklearn = "^0.0"
scipy = "^1.4.1"
seaborn = "^0.11.0"
tifffile = "^2020.6.3"
numpy = "^1.18.5"
pytest-xvfb = "^2.0.0"
matplotlib = "^3.2.1"
PhenoGraph = "^1.5.7"
scanpy = "^1.6.0"
mkdocs = "^1.1.2"
plotly = "^4.12.0"
TiffFile = "^2020.11.18"
dask = {extras = ["array"], version = "^2.30.0"}
zarr = "^2.5.0"
napari = "^0.4.2"
numba = "<=0.51.2"
llvmlite = "<=0.34.0"
shapely = "^1.7.1"
gensim = "^3.8.3"

[tool.poetry.dev-dependencies]

# Formatters
black = "19.10b0"
isort = "4.3.21"

# Linters
mypy = "*"
pydocstyle = "*"
pylint = { git = "https://github.com/PyCQA/pylint", rev = "e169e83e52fedc6624235d45e8e8737294a0fedf" } # use 2.4.5 when released

# Testing
pytest = "^5.3.2"
pytest-cov = "*"
pytest-describe = { git = "https://github.com/pytest-dev/pytest-describe", rev = "453aa9045b265e313f356f1492d8991c02a6aea6" } # use 2.0 when released
pytest-expecter = "^2.1"
pytest-random = "*"
freezegun = "*"

# Reports
coveragespace = "^3.1.1"

# Documentation
mkdocs = "^1.0"
pygments = "^2.5.2"

# Tooling
pyinstaller = "*"
sniffer = "*"
MacFSEvents = { version = "*", platform = "darwin" }
pync = { version = "*", platform = "darwin" }
ipython = "^7.12.0"

[tool.poetry.scripts]

scimap = "scimap.cli:main"

[tool.black]

target-version = ["py36", "py37"]
skip-string-normalization = true

[build-system]

requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
