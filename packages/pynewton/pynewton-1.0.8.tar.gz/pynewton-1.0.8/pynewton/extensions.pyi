from typing import Optional

class Result:
    operation: Optional[str]
    expression: Optional[str]
    result: Optional[str]
    raw: dict

async def simplify(expr: str) -> Result: ...
async def factor(expr: str) -> Result: ...
async def derive(expr: str) -> Result: ...
async def integrate(expr: str) -> Result: ...
async def zeroes(expr: str) -> Result: ...
async def tangent(expr: str, x: Optional[int]) -> Result: ...
async def area(expr: str, start: Optional[int], end: Optional[int]) -> Result: ...
async def cos(expr: str) -> Result: ...
async def sin(expr: str) -> Result: ...
async def tan(expr: str) -> Result: ...
async def arccos(expr: str) -> Result: ...
async def arcsin(expr: str) -> Result: ...
async def arctan(expr: str) -> Result: ...
async def abs(expr: str) -> Result: ...
async def log(expr: str, base: Optional[int]) -> Result: ...
