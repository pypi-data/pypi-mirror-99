[tox]
envlist =
    docs,manifest,
    py{27,35,36,37}-dj111-drf{37,38,39}-codecov
    py{35,36,37}-dj20-drf{37,38,39}-codecov
    py{35,36,37}-dj21-drf{37,38,39,310}-codecov
    py{35,36,37}-dj22-drf{37,38,39,310}-codecov
    py{36,37,38}-dj30-drf{311}-codecov

[travis:env]
TRAVIS =
    true: codecov

[testenv]
description = run the test suite
usedevelop = true
passenv =
    CI TRAVIS TRAVIS_*
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONWARNINGS=once
    PYTHONPATH={toxinidir}/demo
deps =
    dj111: Django>=1.11,<1.12
    dj20: Django>=2.0,<2.1
    dj21: Django>=2.1,<2.2
    dj22: Django>=2.2,<2.3
    dj30: Django>=3.0,<3.1
    drf37: djangorestframework>=3.7,<3.8
    drf38: djangorestframework>=3.8,<3.9
    drf39: djangorestframework>=3.9,<3.10
    drf310: djangorestframework>=3.10,<3.11
    drf311: djangorestframework>=3.11,<3.12
    coverage: coverage
    codecov: codecov
# bash is used to create the codecov flags from the envname,
# only when codecov is used in the envname
whitelist_externals =
    /bin/bash,
    /usr/bin/bash
commands =
    pytest {posargs} --cov=rest_framework_jwt
    codecov: bash -ec 'flags={envname}; flags="$\{flags//-/,\}"; codecov --name={envname} --flags="$flags"'
extras =
    test

[testenv:docs]
description = build the documentation
basepython = python3.6
commands = mkdocs {posargs:build}
extras =
    test
    docs

[testenv:changelog]
description = build the changelog
basepython = python3
deps =
    towncrier==18.6.0
skip_install = true
commands =
    python -V
    towncrier {posargs}

[testenv:manifest]
basepython = python3
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:release]
description = build the changelog, bump the package version, commit and tag
basepython=python2.7
skip_install = true
whitelist_externals =
    git
    tox
passenv =
    HOME
deps =
    bumpversion==0.5.3
commands_pre =
    tox -e changelog -- --yes
    git commit -m "Build changelog"
    bumpversion {posargs:minor}
commands =
    git push origin
    git push origin --tags

[testenv:serve]
description = run the development server
usedevelop = true
changedir = {toxinidir}/demo
setenv =
    DJANGO_SETTINGS_MODULE=demo.settings.dev
extras =
    dev
commands =
    python manage.py runserver {posargs}


[testenv:deploy]
description = build the package and deploy it to PyPI.org
basepython = python3
isolated_build = True
skip_install = true
setenv =
    PYTHONPATH = {toxinidir}
requires =
    setuptools>=42.0.2
    wheel>=0.33.6
deps =
    twine>=3.1.1
commands_pre =
    python setup.py sdist bdist_wheel
commands =
    twine upload {posargs} --skip-existing dist/*
