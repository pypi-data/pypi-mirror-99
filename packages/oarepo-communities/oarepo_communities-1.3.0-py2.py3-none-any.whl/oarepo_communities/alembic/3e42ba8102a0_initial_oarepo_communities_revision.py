#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Initial oarepo communities revision."""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import mysql
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3e42ba8102a0'
down_revision = 'fc68521ce662'
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oarepo_communities',
                    sa.Column('created', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
                    sa.Column('updated', sa.DateTime().with_variant(mysql.DATETIME(fsp=6), 'mysql'), nullable=False),
                    sa.Column('id', sa.String(length=64), nullable=False),
                    sa.Column('members_id', sa.Integer(), nullable=False),
                    sa.Column('curators_id', sa.Integer(), nullable=False),
                    sa.Column('publishers_id', sa.Integer(), nullable=False),
                    sa.Column('json',
                              sa.JSON().with_variant(sqlalchemy_utils.types.json.JSONType(), 'mysql').with_variant(
                                  postgresql.JSONB(none_as_null=True, astext_type=sa.Text()),
                                  'postgresql').with_variant(sqlalchemy_utils.types.json.JSONType(), 'sqlite'),
                              nullable=True),
                    sa.Column('is_deleted', sa.Boolean(name='ck_oarepo_community_metadata_is_deleted'), nullable=True),
                    sa.ForeignKeyConstraint(['curators_id'], ['accounts_role.id'],
                                            name=op.f('fk_oarepo_communities_curators_id_accounts_role'),
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['members_id'], ['accounts_role.id'],
                                            name=op.f('fk_oarepo_communities_members_id_accounts_role'),
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['publishers_id'], ['accounts_role.id'],
                                            name=op.f('fk_oarepo_communities_publishers_id_accounts_role'),
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_oarepo_communities'))
                    )
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('oarepo_communities')
    # ### end Alembic commands ###
