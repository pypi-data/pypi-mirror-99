# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .full_name_mapper import *
from .group_mapper import *
from .hardcoded_group_mapper import *
from .hardcoded_role_mapper import *
from .msad_lds_user_account_control_mapper import *
from .msad_user_account_control_mapper import *
from .role_mapper import *
from .user_attribute_mapper import *
from .user_federation import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "keycloak:ldap/fullNameMapper:FullNameMapper":
                return FullNameMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/groupMapper:GroupMapper":
                return GroupMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/hardcodedGroupMapper:HardcodedGroupMapper":
                return HardcodedGroupMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/hardcodedRoleMapper:HardcodedRoleMapper":
                return HardcodedRoleMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/msadLdsUserAccountControlMapper:MsadLdsUserAccountControlMapper":
                return MsadLdsUserAccountControlMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/msadUserAccountControlMapper:MsadUserAccountControlMapper":
                return MsadUserAccountControlMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/roleMapper:RoleMapper":
                return RoleMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/userAttributeMapper:UserAttributeMapper":
                return UserAttributeMapper(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "keycloak:ldap/userFederation:UserFederation":
                return UserFederation(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("keycloak", "ldap/fullNameMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/groupMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/hardcodedGroupMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/hardcodedRoleMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/msadLdsUserAccountControlMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/msadUserAccountControlMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/roleMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/userAttributeMapper", _module_instance)
    pulumi.runtime.register_resource_module("keycloak", "ldap/userFederation", _module_instance)

_register_module()
