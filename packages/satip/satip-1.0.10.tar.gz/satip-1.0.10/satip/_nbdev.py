# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"create_markdown_table": "00_utils.ipynb",
         "set_up_logging": "00_utils.ipynb",
         "request_access_token": "01_eumetsat.ipynb",
         "query_data_products": "01_eumetsat.ipynb",
         "format_dt_str": "01_eumetsat.ipynb",
         "identify_available_datasets": "01_eumetsat.ipynb",
         "dataset_id_to_link": "01_eumetsat.ipynb",
         "json_extract": "01_eumetsat.ipynb",
         "extract_metadata": "01_eumetsat.ipynb",
         "metadata_maps": "01_eumetsat.ipynb",
         "check_valid_request": "01_eumetsat.ipynb",
         "DownloadManager": "01_eumetsat.ipynb",
         "get_dir_size": "01_eumetsat.ipynb",
         "get_filesize_megabytes": "01_eumetsat.ipynb",
         "eumetsat_filename_to_datetime": "01_eumetsat.ipynb",
         "compress_downloaded_files": "01_eumetsat.ipynb",
         "upload_compressed_files": "01_eumetsat.ipynb",
         "calculate_x_offset": "02_reprojection.ipynb",
         "get_seviri_area_def": "02_reprojection.ipynb",
         "load_scene": "02_reprojection.ipynb",
         "construct_area_def": "02_reprojection.ipynb",
         "construct_TM_area_def": "02_reprojection.ipynb",
         "reproj_with_manual_grid": "02_reprojection.ipynb",
         "reproj_to_xarray": "02_reprojection.ipynb",
         "full_scene_pyresample": "02_reprojection.ipynb",
         "full_scene_pyinterp": "02_reprojection.ipynb",
         "Reprojector": "02_reprojection.ipynb",
         "add_constant_coord_to_da": "03_zarr.ipynb",
         "Compressor": "03_zarr.ipynb",
         "save_da_to_zarr": "03_zarr.ipynb",
         "get_time_as_unix": "03_zarr.ipynb",
         "is_retriable": "03_zarr.ipynb",
         "load_from_zarr_bucket": "03_zarr.ipynb",
         "gcsfs.utils.is_retriable": "03_zarr.ipynb",
         "get_unix_as_time": "03_zarr.ipynb",
         "identifying_missing_datasets": "03_zarr.ipynb",
         "list_blobs_with_prefix": "04_gcp.ipynb",
         "blob_metadata": "04_gcp.ipynb",
         "upload_blob": "04_gcp.ipynb",
         "get_eumetsat_filenames": "04_gcp.ipynb",
         "write_metadata_to_gcp": "04_gcp.ipynb",
         "query": "04_gcp.ipynb",
         "sql_query": "04_gcp.ipynb",
         "project_id": "04_gcp.ipynb",
         "download_eumetsat_files": "05_pipeline.ipynb",
         "df_metadata_to_dt_to_fp_map": "05_pipeline.ipynb",
         "reproject_datasets": "05_pipeline.ipynb",
         "compress_and_save_datasets": "05_pipeline.ipynb",
         "save_metadata": "05_pipeline.ipynb",
         "compress_export_then_delete_raw": "05_pipeline.ipynb",
         "download_latest_data_pipeline": "05_pipeline.ipynb",
         "download_missing_eumetsat_files": "05a_pipeline_batch.ipynb",
         "download_missing_data_pipeline": "05a_pipeline_batch.ipynb",
         "DataFrame": "05a_pipeline_batch.ipynb",
         "chunks": "05a_pipeline_batch.ipynb",
         "reproject_compress_save_datasets_batch": "05a_pipeline_batch.ipynb",
         "save_metadata_batch": "05a_pipeline_batch.ipynb",
         "compress_export_then_delete_raw_batch": "05a_pipeline_batch.ipynb"}

modules = ["utils.py",
           "eumetsat.py",
           "reproj.py",
           "io.py",
           "gcp_helpers.py",
           "mario.py",
           "backfill.py"]

doc_url = "https://AyrtonB.github.io/satip/"

git_url = "https://github.com/AyrtonB/satip/tree/master/"

def custom_doc_links(name):
    return None

