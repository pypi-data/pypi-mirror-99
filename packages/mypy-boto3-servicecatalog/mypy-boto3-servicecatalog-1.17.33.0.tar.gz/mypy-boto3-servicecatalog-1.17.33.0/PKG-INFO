Metadata-Version: 2.1
Name: mypy-boto3-servicecatalog
Version: 1.17.33.0
Summary: Type annotations for boto3.ServiceCatalog 1.17.33 service, generated by mypy-boto3-buider 4.4.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Description: # mypy-boto3-servicecatalog
        
        [![PyPI - mypy-boto3-servicecatalog](https://img.shields.io/pypi/v/mypy-boto3-servicecatalog.svg?color=blue)](https://pypi.org/project/mypy-boto3-servicecatalog)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-servicecatalog.svg?color=blue)](https://pypi.org/project/mypy-boto3-servicecatalog)
        [![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
        
        ![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/master/logo.png)
        
        Type annotations for
        [boto3.ServiceCatalog 1.17.33](https://boto3.amazonaws.com/v1/documentation/api/1.17.33/reference/services/servicecatalog.html#ServiceCatalog) service
        compatible with
        [VSCode](https://code.visualstudio.com/),
        [PyCharm](https://www.jetbrains.com/pycharm/),
        [Emacs](https://www.gnu.org/software/emacs/),
        [Sublime Text](https://www.sublimetext.com/),
        [mypy](https://github.com/python/mypy),
        [pyright](https://github.com/microsoft/pyright)
        and other tools.
        
        Generated by [mypy-boto3-buider 4.4.0](https://github.com/vemel/mypy_boto3_builder).
        
        More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.
        
        See how it helps to find and fix potential bugs:
        
        ![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/master/demo.gif)
        
        - [mypy-boto3-servicecatalog](#mypy-boto3-servicecatalog)
          - [How to install](#how-to-install)
          - [Usage](#usage)
            - [VSCode](#vscode)
            - [PyCharm](#pycharm)
            - [Other IDEs](#other-ides)
            - [mypy](#mypy)
            - [pyright](#pyright)
          - [Explicit type annotations](#explicit-type-annotations)
            - [Client annotations](#client-annotations)
            - [Paginators annotations](#paginators-annotations)
            - [Waiters annotations](#waiters-annotations)
            - [Service Resource annotations](#service-resource-annotations)
            - [Other resources annotations](#other-resources-annotations)
            - [Collections annotations](#collections-annotations)
            - [Typed dictionations](#typed-dictionations)
        
        ## How to install
        
        Install `boto3-stubs` for `ServiceCatalog` service.
        
        ```bash
        python -m pip install boto3-stubs[servicecatalog]
        ```
        
        ## Usage
        
        ### VSCode
        
        - Install [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
        - Install [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
        - Set `Pylance` as your Python Language Server
        - Install `boto-stubs[servicecatalog]` in your environment: `python -m pip install 'boto3-stubs[servicecatalog]'`
        
        Both type checking and auto-complete should work for `ServiceCatalog` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### PyCharm
        
        - Install `boto-stubs[servicecatalog]` in your environment: `python -m pip install 'boto3-stubs[servicecatalog]'`
        
        Both type checking and auto-complete should work for `ServiceCatalog` service.
        No explicit type annotations required, write your `boto3` code as usual.
        Auto-complete can be slow on big projects or if you have a lot of installed `boto3-stubs` submodules.
        
        ### Other IDEs
        
        Not tested, but as long as your IDE support `mypy` or `pyright`, everything should work.
        
        ### mypy
        
        - Install `mypy`: `python -m pip install mypy`
        - Install `boto-stubs[servicecatalog]` in your environment: `python -m pip install 'boto3-stubs[servicecatalog]'`
        - Run `mypy` as usual
        
        Type checking should work for `ServiceCatalog` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### pyright
        
        - Install `pyright`: `yarn global add pyright`
        - Install `boto-stubs[servicecatalog]` in your environment: `python -m pip install 'boto3-stubs[servicecatalog]'`
        - Optionally, you can install `boto3-stubs` to `typings` folder.
        
        Type checking should work for `ServiceCatalog` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ## Explicit type annotations
        
        ### Client annotations
        
        `ServiceCatalogClient` provides annotations for `boto3.client("servicecatalog")`.
        
        ```python
        import boto3
        
        from mypy_boto3_servicecatalog import ServiceCatalogClient
        
        client: ServiceCatalogClient = boto3.client("servicecatalog")
        
        # now client usage is checked by mypy and IDE should provide code auto-complete
        
        # works for session as well
        session = boto3.session.Session(region="us-west-1")
        session_client: ServiceCatalogClient = session.client("servicecatalog")
        ```
        
        ### Paginators annotations
        
        `mypy_boto3_servicecatalog.paginator` module contains type annotations for all paginators.
        
        ```python
        from mypy_boto3_servicecatalog import ServiceCatalogClient
        from mypy_boto3_servicecatalog.paginator import (
            ListAcceptedPortfolioSharesPaginator,
            ListConstraintsForPortfolioPaginator,
            ListLaunchPathsPaginator,
            ListOrganizationPortfolioAccessPaginator,
            ListPortfoliosPaginator,
            ListPortfoliosForProductPaginator,
            ListPrincipalsForPortfolioPaginator,
            ListProvisionedProductPlansPaginator,
            ListProvisioningArtifactsForServiceActionPaginator,
            ListRecordHistoryPaginator,
            ListResourcesForTagOptionPaginator,
            ListServiceActionsPaginator,
            ListServiceActionsForProvisioningArtifactPaginator,
            ListTagOptionsPaginator,
            ScanProvisionedProductsPaginator,
            SearchProductsAsAdminPaginator,
        )
        
        client: ServiceCatalogClient = boto3.client("servicecatalog")
        
        # Explicit type annotations are optional here
        # Type should be correctly discovered by mypy and IDEs
        # VSCode requires explicit type annotations
        list_accepted_portfolio_shares_paginator: ListAcceptedPortfolioSharesPaginator = client.get_paginator("list_accepted_portfolio_shares")
        list_constraints_for_portfolio_paginator: ListConstraintsForPortfolioPaginator = client.get_paginator("list_constraints_for_portfolio")
        list_launch_paths_paginator: ListLaunchPathsPaginator = client.get_paginator("list_launch_paths")
        list_organization_portfolio_access_paginator: ListOrganizationPortfolioAccessPaginator = client.get_paginator("list_organization_portfolio_access")
        list_portfolios_paginator: ListPortfoliosPaginator = client.get_paginator("list_portfolios")
        list_portfolios_for_product_paginator: ListPortfoliosForProductPaginator = client.get_paginator("list_portfolios_for_product")
        list_principals_for_portfolio_paginator: ListPrincipalsForPortfolioPaginator = client.get_paginator("list_principals_for_portfolio")
        list_provisioned_product_plans_paginator: ListProvisionedProductPlansPaginator = client.get_paginator("list_provisioned_product_plans")
        list_provisioning_artifacts_for_service_action_paginator: ListProvisioningArtifactsForServiceActionPaginator = client.get_paginator("list_provisioning_artifacts_for_service_action")
        list_record_history_paginator: ListRecordHistoryPaginator = client.get_paginator("list_record_history")
        list_resources_for_tag_option_paginator: ListResourcesForTagOptionPaginator = client.get_paginator("list_resources_for_tag_option")
        list_service_actions_paginator: ListServiceActionsPaginator = client.get_paginator("list_service_actions")
        list_service_actions_for_provisioning_artifact_paginator: ListServiceActionsForProvisioningArtifactPaginator = client.get_paginator("list_service_actions_for_provisioning_artifact")
        list_tag_options_paginator: ListTagOptionsPaginator = client.get_paginator("list_tag_options")
        scan_provisioned_products_paginator: ScanProvisionedProductsPaginator = client.get_paginator("scan_provisioned_products")
        search_products_as_admin_paginator: SearchProductsAsAdminPaginator = client.get_paginator("search_products_as_admin")
        ```
        
        
        
        
        
        
        
        ### Typed dictionations
        
        `mypy_boto3_servicecatalog.type_defs` module contains structures and shapes assembled
        to typed dictionaries for additional type checking.
        
        ```python
        from mypy_boto3_servicecatalog.type_defs import (
            BudgetDetailTypeDef,
            CloudWatchDashboardTypeDef,
            ConstraintDetailTypeDef,
            ConstraintSummaryTypeDef,
            ExecutionParameterTypeDef,
            FailedServiceActionAssociationTypeDef,
            LaunchPathSummaryTypeDef,
            LaunchPathTypeDef,
            OrganizationNodeTypeDef,
            ParameterConstraintsTypeDef,
            PortfolioDetailTypeDef,
            PortfolioShareDetailTypeDef,
            PrincipalTypeDef,
            ProductViewAggregationValueTypeDef,
            ProductViewDetailTypeDef,
            ProductViewSummaryTypeDef,
            ProvisionedProductAttributeTypeDef,
            ProvisionedProductDetailTypeDef,
            ProvisionedProductPlanDetailsTypeDef,
            ProvisionedProductPlanSummaryTypeDef,
            ProvisioningArtifactDetailTypeDef,
            ProvisioningArtifactOutputTypeDef,
            ProvisioningArtifactParameterTypeDef,
            ProvisioningArtifactPreferencesTypeDef,
            ProvisioningArtifactSummaryTypeDef,
            ProvisioningArtifactTypeDef,
            ProvisioningArtifactViewTypeDef,
            RecordDetailTypeDef,
            RecordErrorTypeDef,
            RecordOutputTypeDef,
            RecordTagTypeDef,
            ResourceChangeDetailTypeDef,
            ResourceChangeTypeDef,
            ResourceDetailTypeDef,
            ResourceTargetDefinitionTypeDef,
            ResponseMetadata,
            ServiceActionDetailTypeDef,
            ServiceActionSummaryTypeDef,
            ShareDetailsTypeDef,
            ShareErrorTypeDef,
            StackInstanceTypeDef,
            TagOptionDetailTypeDef,
            TagOptionSummaryTypeDef,
            TagTypeDef,
            UpdateProvisioningParameterTypeDef,
            UsageInstructionTypeDef,
            AccessLevelFilterTypeDef,
            BatchAssociateServiceActionWithProvisioningArtifactOutputTypeDef,
            BatchDisassociateServiceActionFromProvisioningArtifactOutputTypeDef,
            CopyProductOutputTypeDef,
            CreateConstraintOutputTypeDef,
            CreatePortfolioOutputTypeDef,
            CreatePortfolioShareOutputTypeDef,
            CreateProductOutputTypeDef,
            CreateProvisionedProductPlanOutputTypeDef,
            CreateProvisioningArtifactOutputTypeDef,
            CreateServiceActionOutputTypeDef,
            CreateTagOptionOutputTypeDef,
            DeletePortfolioShareOutputTypeDef,
            DescribeConstraintOutputTypeDef,
            DescribeCopyProductStatusOutputTypeDef,
            DescribePortfolioOutputTypeDef,
            DescribePortfolioShareStatusOutputTypeDef,
            DescribePortfolioSharesOutputTypeDef,
            DescribeProductAsAdminOutputTypeDef,
            DescribeProductOutputTypeDef,
            DescribeProductViewOutputTypeDef,
            DescribeProvisionedProductOutputTypeDef,
            DescribeProvisionedProductPlanOutputTypeDef,
            DescribeProvisioningArtifactOutputTypeDef,
            DescribeProvisioningParametersOutputTypeDef,
            DescribeRecordOutputTypeDef,
            DescribeServiceActionExecutionParametersOutputTypeDef,
            DescribeServiceActionOutputTypeDef,
            DescribeTagOptionOutputTypeDef,
            ExecuteProvisionedProductPlanOutputTypeDef,
            ExecuteProvisionedProductServiceActionOutputTypeDef,
            GetAWSOrganizationsAccessStatusOutputTypeDef,
            GetProvisionedProductOutputsOutputTypeDef,
            ImportAsProvisionedProductOutputTypeDef,
            ListAcceptedPortfolioSharesOutputTypeDef,
            ListBudgetsForResourceOutputTypeDef,
            ListConstraintsForPortfolioOutputTypeDef,
            ListLaunchPathsOutputTypeDef,
            ListOrganizationPortfolioAccessOutputTypeDef,
            ListPortfolioAccessOutputTypeDef,
            ListPortfoliosForProductOutputTypeDef,
            ListPortfoliosOutputTypeDef,
            ListPrincipalsForPortfolioOutputTypeDef,
            ListProvisionedProductPlansOutputTypeDef,
            ListProvisioningArtifactsForServiceActionOutputTypeDef,
            ListProvisioningArtifactsOutputTypeDef,
            ListRecordHistoryOutputTypeDef,
            ListRecordHistorySearchFilterTypeDef,
            ListResourcesForTagOptionOutputTypeDef,
            ListServiceActionsForProvisioningArtifactOutputTypeDef,
            ListServiceActionsOutputTypeDef,
            ListStackInstancesForProvisionedProductOutputTypeDef,
            ListTagOptionsFiltersTypeDef,
            ListTagOptionsOutputTypeDef,
            PaginatorConfigTypeDef,
            ProvisionProductOutputTypeDef,
            ProvisioningArtifactPropertiesTypeDef,
            ProvisioningParameterTypeDef,
            ProvisioningPreferencesTypeDef,
            ScanProvisionedProductsOutputTypeDef,
            SearchProductsAsAdminOutputTypeDef,
            SearchProductsOutputTypeDef,
            SearchProvisionedProductsOutputTypeDef,
            ServiceActionAssociationTypeDef,
            TerminateProvisionedProductOutputTypeDef,
            UpdateConstraintOutputTypeDef,
            UpdatePortfolioOutputTypeDef,
            UpdatePortfolioShareOutputTypeDef,
            UpdateProductOutputTypeDef,
            UpdateProvisionedProductOutputTypeDef,
            UpdateProvisionedProductPropertiesOutputTypeDef,
            UpdateProvisioningArtifactOutputTypeDef,
            UpdateProvisioningPreferencesTypeDef,
            UpdateServiceActionOutputTypeDef,
            UpdateTagOptionOutputTypeDef,
        )
        
        def get_structure() -> BudgetDetailTypeDef:
            return {
              ...
            }
        ```
        
Keywords: boto3 servicecatalog type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
