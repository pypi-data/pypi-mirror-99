Metadata-Version: 2.1
Name: qsl
Version: 0.0.2rc8
Summary: Yet another data labeling tool
Home-page: https://github.com/faustomorales/qsl
License: Apache-2.0
Author: Fausto Morales
Author-email: faustomorales@gmail.com
Requires-Python: >=3.6.2,<4.0
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: Authlib (>=0.15.3,<0.16.0)
Requires-Dist: SQLAlchemy (>=1.3.23,<2.0.0)
Requires-Dist: aiofiles
Requires-Dist: async-exit-stack (>=1.0.1,<2.0.0)
Requires-Dist: async_generator (>=1.10,<2.0)
Requires-Dist: boto3 (>=1.17.15,<2.0.0)
Requires-Dist: click
Requires-Dist: fastapi
Requires-Dist: filetype (>=1.0.7,<2.0.0)
Requires-Dist: httpx (>=0.17.0,<0.18.0)
Requires-Dist: itsdangerous (>=1.1.0,<2.0.0)
Requires-Dist: uvicorn[standard] (>=0.13.3,<0.14.0)
Project-URL: Repository, https://github.com/faustomorales/qsl
Description-Content-Type: text/markdown

# QSL: Quick and Simple Labeler

QSL is a simple image labeling tool. It supports batch and single image labeling using images stored locally, on the web, or in cloud storage (currently only S3).

## Getting Started

Documentation for more advanced functions is forthcoming, but the following will get you started with basic labeling tasks.

1. Install using `pip install qsl`
2. Start the labeling application from a desired working directory using `qsl label --port <PORT>`. The application will be running at `http://localhost:<PORT>`.
3. Create your first labeling project, configure the labeling task with your desired classes, add images, and then start labeling in single image or batch mode.
4. Export labels for your project in JSON format.

# Development

1. Install Poetry.
2. Clone this repository.
3. Initialize your development environment using `make init`
4. Launch a live reloading version of the frontend and backend using `make develop`.

