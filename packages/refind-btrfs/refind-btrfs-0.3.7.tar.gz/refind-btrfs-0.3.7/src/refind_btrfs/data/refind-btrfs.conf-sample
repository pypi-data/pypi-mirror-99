#######################
## refind-btrfs.conf ##
#######################

# TOML syntax

# exit_if_root_is_snapshot = <bool>
## Whether to issue a warning and prematurely exit in case the root partition
## is already mounted as a snapshot.
## WARNING: Disabling this option is considered experimental and may result in
## unstable and/or erroneous behavior.

exit_if_root_is_snapshot = true

# [[snapshot-search]]
## Array of objects used to configure the behavior of searching for snapshots.
## The directory (or directories) listed in this array (including nested
## directories, up to "max_depth" - 1) are also watched for changes by the
## background running mode.
#
# dir = <string>
## Directory in which to search for snapshots (absolute filesystem path).
## WARNING: This directory must not be the same as or nested in the directory
## defined by the "destination_dir" option (shown further below).
#
# is_nested = <bool>
## Whether to search for snapshots nested within another snapshot. Only one
## level of nesting is supported and the search is performed in the same
## directory (if it exists) that is, in this context, relative to the found
## snapshot's root directory instead of the system's root directory. The same
## maximum search depth is used, as well.
## Setting this option to "false" potentially also means stopping the search
## prematurely (i.e., before the maximum search depth was ever reached) in
## those branches in which a snapshot was found.
#
# max_depth = <int>
## Maximum search depth relative to the search directory.
## WARNING: Defining a large value can seriously impact performance (of both
## searching for snapshots and watching for directory changes) in case the tree
## (whose root is the search directory) is sufficiently large (deep and/or
## wide).

[[snapshot-search]]
dir = "/.snapshots"
is_nested = false
max_depth = 2

# [snapshot-manipulation]
## Object used to configure the behavior of preparatory steps required
## to enable booting into snapshots as well as deleting those that aren't
## needed anymore.
#
# selection_count = <int> or <string>
## Number of snapshots (sorted descending by creation time) to include or
## "inf" to always include every currently present snapshot.
#
# modify_read_only_flag = <bool>
## Whether to change the read-only flag of a snapshot instead of creating
## a new writable snapshot from it. This option has no meaning for those
## snapshots that are already writable.
#
# destination_dir  = <string>
## Directory in which writable snapshots are to be placed (absolute filesystem
## path). This option has no meaning in case the "modify_read_only_flag" option
## is set to "true". It needn't exist beforehand as it is created in case it
## doesn't (including its missing parents, if any).
## WARNING: This directory must not be the same as or nested in an ony of the
## snapshot search directories.
#
# cleanup_exclusion = <array<string>>
## Array comprised of UUIDs (duplicates are ignored) of previously
## created writable snapshots that are to be excluded during automatic cleanup.
## These snapshots will not be deleted and should always appear as part of a
## generated boot stanza.
## See the output of "btrfs subvolume show <snapshot-filesystem-path>" for
## the expected format (shown in the "UUID" column). Same remark applies here
## with regards to the "modify_read_only_flag" option.

[snapshot-manipulation]
selection_count = 5
modify_read_only_flag = false
destination_dir = "/root/.refind-btrfs"
cleanup_exclusion = []

# [boot-stanza-generation]
## Object used to configure the process of combining the source boot stanza
## with previously prepared snapshots into a generated boot stanza.
#
# refind_config = <string>
## Name of rEFInd's main configuration file which must reside somewhere on
## the ESP. This option must not be defined as a path (neither absolute nor
## relative).
#
# include_paths = <bool>
## Whether to adjust the "loader" and "initrd" paths found in the source boot
## stanza. Setting this option to "true" while having a separate /boot
## partition has no meaning and is ignored.
#
# include_sub_menus = <bool>
## Whether to include sub-menus ("submenuentry") defined as part of the source
## boot stanza in the generated boot stanza. If set to "true", only those
## sub-menus which do not override the main stanza's "loader" and "options"
## fields and which do not delete (i.e., set it to nothing) its "initrd" field
## are taken into consideration.
## WARNING: Enabling this option in combination with setting a large
## "selection_count" value (greater than 10, for example) or, worse yet, by
## setting it to "inf" can potentially result in an overcrowded "Boot Options"
## menu.

[boot-stanza-generation]
refind_config = "refind.conf"
include_paths = true
include_sub_menus = false
