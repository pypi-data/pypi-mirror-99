# coding: utf-8

"""
    Fortanix SDKMS REST API

    This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 

    OpenAPI spec version: 1.0.0-20200608
    Contact: support@fortanix.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


from __future__ import absolute_import

import os
import sys
import unittest

import sdkms/v1
from sdkms/v1.rest import ApiException
from sdkms/v1.apis.security_objects_api import SecurityObjectsApi


class TestSecurityObjectsApi(unittest.TestCase):
    """ SecurityObjectsApi unit test stubs """

    def setUp(self):
        self.api = sdkms/v1.apis.security_objects_api.SecurityObjectsApi()

    def tearDown(self):
        pass

    def test_activate_security_object(self):
        """
        Test case for activate_security_object

        Transitions immediately a security object to Active state
        """
        pass

    def test_agree_key(self):
        """
        Test case for agree_key

        Agree on a key from two other keys
        """
        pass

    def test_delete_private_key(self):
        """
        Test case for delete_private_key

        Remove / Destroy private half of the asymmetric key
        """
        pass

    def test_delete_security_object(self):
        """
        Test case for delete_security_object

        Delete a security object
        """
        pass

    def test_derive_key(self):
        """
        Test case for derive_key

        Derive a key from another key
        """
        pass

    def test_derive_key_ex(self):
        """
        Test case for derive_key_ex

        Derive a key from another key
        """
        pass

    def test_destroy_security_object(self):
        """
        Test case for destroy_security_object

        Destroys a security object, leaving its metadata in place
        """
        pass

    def test_export_sobject_components(self):
        """
        Test case for export_sobject_components

        export key components
        """
        pass

    def test_generate_security_object(self):
        """
        Test case for generate_security_object

        Generate a new security object
        """
        pass

    def test_get_security_object(self):
        """
        Test case for get_security_object

        Get a specific security object
        """
        pass

    def test_get_security_object_digest(self):
        """
        Test case for get_security_object_digest

        Retrieve the digest (hash) of the value of an exportable security object
        """
        pass

    def test_get_security_object_kcv(self):
        """
        Test case for get_security_object_kcv

        Get the key check value (KCV) of a symmetric key
        """
        pass

    def test_get_security_object_value(self):
        """
        Test case for get_security_object_value

        Retrieve the value of an exportable security object
        """
        pass

    def test_get_security_object_value_ex(self):
        """
        Test case for get_security_object_value_ex

        Retrieve the value of an exportable security object
        """
        pass

    def test_get_security_objects(self):
        """
        Test case for get_security_objects

        Get all security objects
        """
        pass

    def test_import_security_object(self):
        """
        Test case for import_security_object

        Import a security object
        """
        pass

    def test_import_sobject_components(self):
        """
        Test case for import_sobject_components

        import key components
        """
        pass

    def test_persist_security_object(self):
        """
        Test case for persist_security_object

        Persist a transient key.
        """
        pass

    def test_revert_history_item(self):
        """
        Test case for revert_history_item

        Reverts a security object to a previous state
        """
        pass

    def test_revoke_security_object(self):
        """
        Test case for revoke_security_object

        Transitions immediately a security object to Deactivated or Compromised state
        """
        pass

    def test_rotate_security_object(self):
        """
        Test case for rotate_security_object

        Rotate a key.
        """
        pass

    def test_update_security_object(self):
        """
        Test case for update_security_object

        Update a security object
        """
        pass

    def test_verify_kcv(self):
        """
        Test case for verify_kcv

        Verify that the KCV of the provided key material matches the provided KCV
        """
        pass


if __name__ == '__main__':
    unittest.main()
