# coding: utf-8

"""
    Fortanix SDKMS REST API

    This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 

    OpenAPI spec version: 1.0.0-20200608
    Contact: support@fortanix.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


from __future__ import absolute_import

import os
import sys
import unittest

import sdkms/v1
from sdkms/v1.rest import ApiException
from sdkms/v1.apis.two_factor_authentication_api import TwoFactorAuthenticationApi


class TestTwoFactorAuthenticationApi(unittest.TestCase):
    """ TwoFactorAuthenticationApi unit test stubs """

    def setUp(self):
        self.api = sdkms/v1.apis.two_factor_authentication_api.TwoFactorAuthenticationApi()

    def tearDown(self):
        pass

    def test_authorize_recovery_code(self):
        """
        Test case for authorize_recovery_code

        Use a backup recovery code to complete authentication
        """
        pass

    def test_authorize_u2_f(self):
        """
        Test case for authorize_u2_f

        Use a U2F key to complete authentication
        """
        pass

    def test_generate_recovery_codes(self):
        """
        Test case for generate_recovery_codes

        Generate backup recovery codes for the current user
        """
        pass

    def test_generate_u2_f_challenge(self):
        """
        Test case for generate_u2_f_challenge

        Generate a new challenge for registering a U2F devices
        """
        pass

    def test_lock2_f(self):
        """
        Test case for lock2_f

        Lock two factor configuration
        """
        pass


if __name__ == '__main__':
    unittest.main()
