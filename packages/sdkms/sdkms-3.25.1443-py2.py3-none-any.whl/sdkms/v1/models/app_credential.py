# coding: utf-8

"""
    Fortanix SDKMS REST API

    This is a set of REST APIs for accessing the Fortanix Self-Defending Key Management System. This includes APIs for managing accounts, and for performing cryptographic and key management operations. 

    OpenAPI spec version: 1.0.0-20200608
    Contact: support@fortanix.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


from pprint import pformat
from six import iteritems
import re




# NOTE: This class is auto generated by the swagger code generator program.
# Do not edit the class manually.
class AppCredential(object):
    """
    @undocumented: swagger_types
    @undocumented: attribute_map
    @undocumented: to_dict
    @undocumented: to_str
    @undocumented: __repr__
    @undocumented: __eq__
    @undocumented: __ne__
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'secret': 'str',
        'certificate': 'str',
        'trustedca': 'AppCredentialTrustedca',
        'googleserviceaccount': 'object',
        'signedjwt': 'AppCredentialSignedjwt'
    }

    attribute_map = {
        'secret': 'secret',
        'certificate': 'certificate',
        'trustedca': 'trustedca',
        'googleserviceaccount': 'googleserviceaccount',
        'signedjwt': 'signedjwt'
    }

    def __init__(self, secret=None, certificate=None, trustedca=None, googleserviceaccount=None, signedjwt=None):
        """
        AppCredential - a model defined in Swagger
        """

        self._secret = None
        self._certificate = None
        self._trustedca = None
        self._googleserviceaccount = None
        self._signedjwt = None

        if secret is not None:
          self.secret = secret
        if certificate is not None:
          self.certificate = certificate
        if trustedca is not None:
          self.trustedca = trustedca
        if googleserviceaccount is not None:
          self.googleserviceaccount = googleserviceaccount
        if signedjwt is not None:
          self.signedjwt = signedjwt

    @property
    def secret(self):
        """
        Gets the secret of this AppCredential.

        Type: L{str}
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """
        Sets the secret of this AppCredential.
        """

        self._secret = secret

    @property
    def certificate(self):
        """
        Gets the certificate of this AppCredential.

        Type: L{str}
        """
        return self._certificate

    @certificate.setter
    def certificate(self, certificate):
        """
        Sets the certificate of this AppCredential.
        """

        self._certificate = certificate

    @property
    def trustedca(self):
        """
        Gets the trustedca of this AppCredential.

        Type: L{AppCredentialTrustedca}
        """
        return self._trustedca

    @trustedca.setter
    def trustedca(self, trustedca):
        """
        Sets the trustedca of this AppCredential.
        """

        self._trustedca = trustedca

    @property
    def googleserviceaccount(self):
        """
        Gets the googleserviceaccount of this AppCredential.

        Type: L{object}
        """
        return self._googleserviceaccount

    @googleserviceaccount.setter
    def googleserviceaccount(self, googleserviceaccount):
        """
        Sets the googleserviceaccount of this AppCredential.
        """

        self._googleserviceaccount = googleserviceaccount

    @property
    def signedjwt(self):
        """
        Gets the signedjwt of this AppCredential.

        Type: L{AppCredentialSignedjwt}
        """
        return self._signedjwt

    @signedjwt.setter
    def signedjwt(self, signedjwt):
        """
        Sets the signedjwt of this AppCredential.
        """

        self._signedjwt = signedjwt

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, AppCredential):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

