---
# Source: consul/templates/server-disruptionbudget.yaml
# PodDisruptionBudget to prevent degrading the server cluster through
# voluntary cluster changes.
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: hashicorp-consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: consul
      release: "hashicorp"
      component: server
---
# Source: consul/templates/client-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hashicorp-consul-client
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
---
# Source: consul/templates/connect-inject-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hashicorp-consul-connect-injector-webhook-svc-account
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
---
# Source: consul/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hashicorp-consul-controller
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
---
# Source: consul/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hashicorp-consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
---
# Source: consul/templates/webhook-cert-manager-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hashicorp-consul-webhook-cert-manager
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: webhook-cert-manager
---
# Source: consul/templates/client-config-configmap.yaml
# ConfigMap with extra configuration specified directly to the chart
# for client agents only.
apiVersion: v1
kind: ConfigMap
metadata:
  name: hashicorp-consul-client-config
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
data:
  extra-from-values.json: |-
    {}
    
  central-config.json: |-
    {
      "enable_central_service_config": true
    }
  
  config.json: |-
    {
      "check_update_interval": "0s"
    }
---
# Source: consul/templates/server-config-configmap.yaml
# StatefulSet to run the actual Consul server cluster.
apiVersion: v1
kind: ConfigMap
metadata:
  name: hashicorp-consul-server-config
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
data:
  extra-from-values.json: |-
    {}
    
  central-config.json: |-
    {
      "enable_central_service_config": true
    }
---
# Source: consul/templates/webhook-cert-manager-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hashicorp-consul-webhook-cert-manager-config
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: webhook-cert-manager
data:
  webhook-config.json: |-
    [
      {
        "name": "hashicorp-consul-controller-mutating-webhook-configuration",
        "tlsAutoHosts": [
          "hashicorp-consul-controller-webhook",
          "hashicorp-consul-controller-webhook.default.svc",
          "hashicorp-consul-controller-webhook.default.svc.cluster.local"
        ],
        "secretName": "hashicorp-consul-controller-webhook-cert",
        "secretNamespace": "default"
      }
    ]
---
# Source: consul/templates/crd-ingressgateways.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: ingressgateways.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: IngressGateway
    listKind: IngressGatewayList
    plural: ingressgateways
    singular: ingressgateway
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: IngressGateway is the Schema for the ingressgateways API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IngressGatewaySpec defines the desired state of IngressGateway
          properties:
            listeners:
              description: Listeners declares what ports the ingress gateway should listen on, and what services to associated to those ports.
              items:
                description: IngressListener manages the configuration for a listener on a specific port.
                properties:
                  port:
                    description: Port declares the port on which the ingress gateway should listen for traffic.
                    type: integer
                  protocol:
                    description: 'Protocol declares what type of traffic this listener is expected to receive. Depending on the protocol, a listener might support multiplexing services over a single port, or additional discovery chain features. The current supported values are: (tcp | http | http2 | grpc).'
                    type: string
                  services:
                    description: "Services declares the set of services to which the listener forwards traffic. \n For \"tcp\" protocol listeners, only a single service is allowed. For \"http\" listeners, multiple services can be declared."
                    items:
                      description: IngressService manages configuration for services that are exposed to ingress traffic.
                      properties:
                        hosts:
                          description: "Hosts is a list of hostnames which should be associated to this service on the defined listener. Only allowed on layer 7 protocols, this will be used to route traffic to the service by matching the Host header of the HTTP request. \n If a host is provided for a service that also has a wildcard specifier defined, the host will override the wildcard-specifier-provided \"<service-name>.*\" domain for that listener. \n This cannot be specified when using the wildcard specifier, \"*\", or when using a \"tcp\" listener."
                          items:
                            type: string
                          type: array
                        name:
                          description: "Name declares the service to which traffic should be forwarded. \n This can either be a specific service, or the wildcard specifier, \"*\". If the wildcard specifier is provided, the listener must be of \"http\" protocol and means that the listener will forward traffic to all services. \n A name can be specified on multiple listeners, and will be exposed on both of the listeners."
                          type: string
                        namespace:
                          description: Namespace is the namespace where the service is located. Namespacing is a Consul Enterprise feature.
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            tls:
              description: TLS holds the TLS configuration for this gateway.
              properties:
                enabled:
                  description: Indicates that TLS should be enabled for this gateway service.
                  type: boolean
              required:
              - enabled
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-proxydefaults.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: proxydefaults.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: ProxyDefaults
    listKind: ProxyDefaultsList
    plural: proxydefaults
    singular: proxydefaults
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ProxyDefaults is the Schema for the proxydefaults API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ProxyDefaultsSpec defines the desired state of ProxyDefaults
          properties:
            config:
              description: Config is an arbitrary map of configuration values used by Connect proxies. Any values that your proxy allows can be configured globally here. Supports JSON config values. See https://www.consul.io/docs/connect/proxies/envoy#configuration-formatting
              type: object
            expose:
              description: Expose controls the default expose path configuration for Envoy.
              properties:
                checks:
                  description: Checks defines whether paths associated with Consul checks will be exposed. This flag triggers exposing all HTTP and GRPC check paths registered for the service.
                  type: boolean
                paths:
                  description: Paths is the list of paths exposed through the proxy.
                  items:
                    properties:
                      listenerPort:
                        description: ListenerPort defines the port of the proxy's listener for exposed paths.
                        type: integer
                      localPathPort:
                        description: LocalPathPort is the port that the service is listening on for the given path.
                        type: integer
                      path:
                        description: Path is the path to expose through the proxy, ie. "/metrics".
                        type: string
                      protocol:
                        description: Protocol describes the upstream's service protocol. Valid values are "http" and "http2", defaults to "http".
                        type: string
                    type: object
                  type: array
              type: object
            meshGateway:
              description: MeshGateway controls the default mesh gateway configuration for this service.
              properties:
                mode:
                  description: Mode is the mode that should be used for the upstream connection. One of none, local, or remote.
                  type: string
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicedefaults.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: servicedefaults.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: ServiceDefaults
    listKind: ServiceDefaultsList
    plural: servicedefaults
    singular: servicedefaults
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceDefaults is the Schema for the servicedefaults API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceDefaultsSpec defines the desired state of ServiceDefaults
          properties:
            expose:
              description: Expose controls the default expose path configuration for Envoy.
              properties:
                checks:
                  description: Checks defines whether paths associated with Consul checks will be exposed. This flag triggers exposing all HTTP and GRPC check paths registered for the service.
                  type: boolean
                paths:
                  description: Paths is the list of paths exposed through the proxy.
                  items:
                    properties:
                      listenerPort:
                        description: ListenerPort defines the port of the proxy's listener for exposed paths.
                        type: integer
                      localPathPort:
                        description: LocalPathPort is the port that the service is listening on for the given path.
                        type: integer
                      path:
                        description: Path is the path to expose through the proxy, ie. "/metrics".
                        type: string
                      protocol:
                        description: Protocol describes the upstream's service protocol. Valid values are "http" and "http2", defaults to "http".
                        type: string
                    type: object
                  type: array
              type: object
            externalSNI:
              description: ExternalSNI is an optional setting that allows for the TLS SNI value to be changed to a non-connect value when federating with an external system.
              type: string
            meshGateway:
              description: MeshGateway controls the default mesh gateway configuration for this service.
              properties:
                mode:
                  description: Mode is the mode that should be used for the upstream connection. One of none, local, or remote.
                  type: string
              type: object
            protocol:
              description: Protocol sets the protocol of the service. This is used by Connect proxies for things like observability features and to unlock usage of the service-splitter and service-router config entries for a service.
              type: string
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-serviceintentions.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: serviceintentions.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: ServiceIntentions
    listKind: ServiceIntentionsList
    plural: serviceintentions
    singular: serviceintentions
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceIntentions is the Schema for the serviceintentions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceIntentionsSpec defines the desired state of ServiceIntentions
          properties:
            destination:
              description: Destination is the intention destination that will have the authorization granted to.
              properties:
                name:
                  description: Name is the destination of all intentions defined in this config entry. This may be set to the wildcard character (*) to match all services that don't otherwise have intentions defined.
                  type: string
                namespace:
                  description: Namespace specifies the namespace the config entry will apply to. This may be set to the wildcard character (*) to match all services in all namespaces that don't otherwise have intentions defined.
                  type: string
              type: object
            sources:
              description: Sources is the list of all intention sources and the authorization granted to those sources. The order of this list does not matter, but out of convenience Consul will always store this reverse sorted by intention precedence, as that is the order that they will be evaluated at enforcement time.
              items:
                properties:
                  action:
                    description: Action is required for an L4 intention, and should be set to one of "allow" or "deny" for the action that should be taken if this intention matches a request.
                    type: string
                  description:
                    description: Description for the intention. This is not used by Consul, but is presented in API responses to assist tooling.
                    type: string
                  name:
                    description: Name is the source of the intention. This is the name of a Consul service. The service doesn't need to be registered.
                    type: string
                  namespace:
                    description: Namespace is the namespace for the Name parameter.
                    type: string
                  permissions:
                    description: Permissions is the list of all additional L7 attributes that extend the intention match criteria. Permission precedence is applied top to bottom. For any given request the first permission to match in the list is terminal and stops further evaluation. As with L4 intentions, traffic that fails to match any of the provided permissions in this intention will be subject to the default intention behavior is defined by the default ACL policy. This should be omitted for an L4 intention as it is mutually exclusive with the Action field.
                    items:
                      properties:
                        action:
                          description: Action is one of "allow" or "deny" for the action that should be taken if this permission matches a request.
                          type: string
                        http:
                          description: HTTP is a set of HTTP-specific authorization criteria.
                          properties:
                            header:
                              description: Header is a set of criteria that can match on HTTP request headers. If more than one is configured all must match for the overall match to apply.
                              items:
                                properties:
                                  exact:
                                    description: Exact matches if the header with the given name is this value.
                                    type: string
                                  invert:
                                    description: Invert inverts the logic of the match.
                                    type: boolean
                                  name:
                                    description: Name is the name of the header to match.
                                    type: string
                                  prefix:
                                    description: Prefix matches if the header with the given name has this prefix.
                                    type: string
                                  present:
                                    description: Present matches if the header with the given name is present with any value.
                                    type: boolean
                                  regex:
                                    description: Regex matches if the header with the given name matches this pattern.
                                    type: string
                                  suffix:
                                    description: Suffix matches if the header with the given name has this suffix.
                                    type: string
                                type: object
                              type: array
                            methods:
                              description: Methods is a list of HTTP methods for which this match applies. If unspecified all HTTP methods are matched. If provided the names must be a valid method.
                              items:
                                type: string
                              type: array
                            pathExact:
                              description: PathExact is the exact path to match on the HTTP request path.
                              type: string
                            pathPrefix:
                              description: PathPrefix is the path prefix to match on the HTTP request path.
                              type: string
                            pathRegex:
                              description: PathRegex is the regular expression to match on the HTTP request path.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              type: array
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-serviceresolvers.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: serviceresolvers.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: ServiceResolver
    listKind: ServiceResolverList
    plural: serviceresolvers
    singular: serviceresolver
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceResolver is the Schema for the serviceresolvers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceResolverSpec defines the desired state of ServiceResolver
          properties:
            connectTimeout:
              description: ConnectTimeout is the timeout for establishing new network connections to this service.
              format: int64
              type: integer
            defaultSubset:
              description: DefaultSubset is the subset to use when no explicit subset is requested. If empty the unnamed subset is used.
              type: string
            failover:
              additionalProperties:
                properties:
                  datacenters:
                    description: Datacenters is a fixed list of datacenters to try during failover.
                    items:
                      type: string
                    type: array
                  namespace:
                    description: Namespace is the namespace to resolve the requested service from to form the failover group of instances. If empty the current namespace is used.
                    type: string
                  service:
                    description: Service is the service to resolve instead of the default as the failover group of instances during failover.
                    type: string
                  serviceSubset:
                    description: ServiceSubset is the named subset of the requested service to resolve as the failover group of instances. If empty the default subset for the requested service is used.
                    type: string
                type: object
              description: Failover controls when and how to reroute traffic to an alternate pool of service instances. The map is keyed by the service subset it applies to and the special string "*" is a wildcard that applies to any subset not otherwise specified here.
              type: object
            loadBalancer:
              description: LoadBalancer determines the load balancing policy and configuration for services issuing requests to this upstream service.
              properties:
                hashPolicies:
                  description: HashPolicies is a list of hash policies to use for hashing load balancing algorithms. Hash policies are evaluated individually and combined such that identical lists result in the same hash. If no hash policies are present, or none are successfully evaluated, then a random backend host will be selected.
                  items:
                    properties:
                      cookieConfig:
                        description: CookieConfig contains configuration for the "cookie" hash policy type.
                        properties:
                          path:
                            description: Path is the path to set for the cookie.
                            type: string
                          session:
                            description: Session determines whether to generate a session cookie with no expiration.
                            type: boolean
                          ttl:
                            description: TTL is the ttl for generated cookies. Cannot be specified for session cookies.
                            format: int64
                            type: integer
                        type: object
                      field:
                        description: Field is the attribute type to hash on. Must be one of "header", "cookie", or "query_parameter". Cannot be specified along with sourceIP.
                        type: string
                      fieldValue:
                        description: FieldValue is the value to hash. ie. header name, cookie name, URL query parameter name Cannot be specified along with sourceIP.
                        type: string
                      sourceIP:
                        description: SourceIP determines whether the hash should be of the source IP rather than of a field and field value. Cannot be specified along with field or fieldValue.
                        type: boolean
                      terminal:
                        description: Terminal will short circuit the computation of the hash when multiple hash policies are present. If a hash is computed when a Terminal policy is evaluated, then that hash will be used and subsequent hash policies will be ignored.
                        type: boolean
                    type: object
                  type: array
                leastRequestConfig:
                  description: LeastRequestConfig contains configuration for the "leastRequest" policy type.
                  properties:
                    choiceCount:
                      description: ChoiceCount determines the number of random healthy hosts from which to select the one with the least requests.
                      format: int32
                      type: integer
                  type: object
                policy:
                  description: Policy is the load balancing policy used to select a host.
                  type: string
                ringHashConfig:
                  description: RingHashConfig contains configuration for the "ringHash" policy type.
                  properties:
                    maximumRingSize:
                      description: MaximumRingSize determines the maximum number of entries in the hash ring.
                      format: int64
                      type: integer
                    minimumRingSize:
                      description: MinimumRingSize determines the minimum number of entries in the hash ring.
                      format: int64
                      type: integer
                  type: object
              type: object
            redirect:
              description: Redirect when configured, all attempts to resolve the service this resolver defines will be substituted for the supplied redirect EXCEPT when the redirect has already been applied. When substituting the supplied redirect, all other fields besides Kind, Name, and Redirect will be ignored.
              properties:
                datacenter:
                  description: Datacenter is the datacenter to resolve the service from instead of the current one.
                  type: string
                namespace:
                  description: Namespace is the namespace to resolve the service from instead of the current one.
                  type: string
                service:
                  description: Service is a service to resolve instead of the current service.
                  type: string
                serviceSubset:
                  description: ServiceSubset is a named subset of the given service to resolve instead of one defined as that service's DefaultSubset If empty the default subset is used.
                  type: string
              type: object
            subsets:
              additionalProperties:
                properties:
                  filter:
                    description: Filter is the filter expression to be used for selecting instances of the requested service. If empty all healthy instances are returned. This expression can filter on the same selectors as the Health API endpoint.
                    type: string
                  onlyPassing:
                    description: OnlyPassing specifies the behavior of the resolver's health check interpretation. If this is set to false, instances with checks in the passing as well as the warning states will be considered healthy. If this is set to true, only instances with checks in the passing state will be considered healthy.
                    type: boolean
                type: object
              description: Subsets is map of subset name to subset definition for all usable named subsets of this service. The map key is the name of the subset and all names must be valid DNS subdomain elements. This may be empty, in which case only the unnamed default subset will be usable.
              type: object
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicerouters.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: servicerouters.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: ServiceRouter
    listKind: ServiceRouterList
    plural: servicerouters
    singular: servicerouter
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceRouter is the Schema for the servicerouters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceRouterSpec defines the desired state of ServiceRouter
          properties:
            routes:
              description: Routes are the list of routes to consider when processing L7 requests. The first route to match in the list is terminal and stops further evaluation. Traffic that fails to match any of the provided routes will be routed to the default service.
              items:
                properties:
                  destination:
                    description: Destination controls how to proxy the matching request(s) to a service.
                    properties:
                      namespace:
                        description: Namespace is the Consul namespace to resolve the service from instead of the current namespace. If empty the current namespace is assumed.
                        type: string
                      numRetries:
                        description: NumRetries is the number of times to retry the request when a retryable result occurs
                        format: int32
                        type: integer
                      prefixRewrite:
                        description: PrefixRewrite defines how to rewrite the HTTP request path before proxying it to its final destination. This requires that either match.http.pathPrefix or match.http.pathExact be configured on this route.
                        type: string
                      requestTimeout:
                        description: RequestTimeout is the total amount of time permitted for the entire downstream request (and retries) to be processed.
                        format: int64
                        type: integer
                      retryOnConnectFailure:
                        description: RetryOnConnectFailure allows for connection failure errors to trigger a retry.
                        type: boolean
                      retryOnStatusCodes:
                        description: RetryOnStatusCodes is a flat list of http response status codes that are eligible for retry.
                        items:
                          format: int32
                          type: integer
                        type: array
                      service:
                        description: Service is the service to resolve instead of the default service. If empty then the default service name is used.
                        type: string
                      serviceSubset:
                        description: ServiceSubset is a named subset of the given service to resolve instead of the one defined as that service's DefaultSubset. If empty, the default subset is used.
                        type: string
                    type: object
                  match:
                    description: Match is a set of criteria that can match incoming L7 requests. If empty or omitted it acts as a catch-all.
                    properties:
                      http:
                        description: HTTP is a set of http-specific match criteria.
                        properties:
                          header:
                            description: Header is a set of criteria that can match on HTTP request headers. If more than one is configured all must match for the overall match to apply.
                            items:
                              properties:
                                exact:
                                  description: Exact will match if the header with the given name is this value.
                                  type: string
                                invert:
                                  description: Invert inverts the logic of the match.
                                  type: boolean
                                name:
                                  description: Name is the name of the header to match.
                                  type: string
                                prefix:
                                  description: Prefix will match if the header with the given name has this prefix.
                                  type: string
                                present:
                                  description: Present will match if the header with the given name is present with any value.
                                  type: boolean
                                regex:
                                  description: Regex will match if the header with the given name matches this pattern.
                                  type: string
                                suffix:
                                  description: Suffix will match if the header with the given name has this suffix.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          methods:
                            description: Methods is a list of HTTP methods for which this match applies. If unspecified all http methods are matched.
                            items:
                              type: string
                            type: array
                          pathExact:
                            description: PathExact is an exact path to match on the HTTP request path.
                            type: string
                          pathPrefix:
                            description: PathPrefix is a path prefix to match on the HTTP request path.
                            type: string
                          pathRegex:
                            description: PathRegex is a regular expression to match on the HTTP request path.
                            type: string
                          queryParam:
                            description: QueryParam is a set of criteria that can match on HTTP query parameters. If more than one is configured all must match for the overall match to apply.
                            items:
                              properties:
                                exact:
                                  description: Exact will match if the query parameter with the given name is this value.
                                  type: string
                                name:
                                  description: Name is the name of the query parameter to match on.
                                  type: string
                                present:
                                  description: Present will match if the query parameter with the given name is present with any value.
                                  type: boolean
                                regex:
                                  description: Regex will match if the query parameter with the given name matches this pattern.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              type: array
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicesplitters.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: servicesplitters.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: ServiceSplitter
    listKind: ServiceSplitterList
    plural: servicesplitters
    singular: servicesplitter
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceSplitter is the Schema for the servicesplitters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceSplitterSpec defines the desired state of ServiceSplitter
          properties:
            splits:
              description: Splits defines how much traffic to send to which set of service instances during a traffic split. The sum of weights across all splits must add up to 100.
              items:
                properties:
                  namespace:
                    description: The namespace to resolve the service from instead of the current namespace. If empty the current namespace is assumed.
                    type: string
                  service:
                    description: Service is the service to resolve instead of the default.
                    type: string
                  serviceSubset:
                    description: ServiceSubset is a named subset of the given service to resolve instead of one defined as that service's DefaultSubset. If empty the default subset is used.
                    type: string
                  weight:
                    description: Weight is a value between 0 and 100 reflecting what portion of traffic should be directed to this split. The smallest representable weight is 1/10000 or .01%.
                    type: number
                type: object
              type: array
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-terminatinggateways.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: terminatinggateways.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: crd
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Synced")].status
    description: The sync status of the resource with Consul
    name: Synced
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: The age of the resource
    name: Age
    type: date
  group: consul.hashicorp.com
  names:
    kind: TerminatingGateway
    listKind: TerminatingGatewayList
    plural: terminatinggateways
    singular: terminatinggateway
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: TerminatingGateway is the Schema for the terminatinggateways API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TerminatingGatewaySpec defines the desired state of TerminatingGateway
          properties:
            services:
              description: Services is a list of service names represented by the terminating gateway.
              items:
                description: A LinkedService is a service represented by a terminating gateway
                properties:
                  caFile:
                    description: CAFile is the optional path to a CA certificate to use for TLS connections from the gateway to the linked service.
                    type: string
                  certFile:
                    description: CertFile is the optional path to a client certificate to use for TLS connections from the gateway to the linked service.
                    type: string
                  keyFile:
                    description: KeyFile is the optional path to a private key to use for TLS connections from the gateway to the linked service.
                    type: string
                  name:
                    description: Name is the name of the service, as defined in Consul's catalog.
                    type: string
                  namespace:
                    description: The namespace the service is registered in.
                    type: string
                  sni:
                    description: SNI is the optional name to specify during the TLS handshake with a linked service.
                    type: string
                type: object
              type: array
          type: object
        status:
          properties:
            conditions:
              description: Conditions indicate the latest available observations of a resource's current state.
              items:
                description: 'Conditions define a readiness condition for a Consul resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/connect-inject-clusterrole.yaml
# The ClusterRole to enable the Connect injector to get, list, watch and patch MutatingWebhookConfiguration.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hashicorp-consul-connect-injector-webhook
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: 
    - "get"
    - "list"
    - "watch"
    - "patch"
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs:
    - "get"
    - "list"
    - "watch"
---
# Source: consul/templates/controller-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hashicorp-consul-controller
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
rules:
- apiGroups:
  - consul.hashicorp.com
  resources:
  - servicedefaults
  - serviceresolvers
  - proxydefaults
  - servicerouters
  - servicesplitters
  - serviceintentions
  - ingressgateways
  - terminatinggateways
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - consul.hashicorp.com
  resources:
  - servicedefaults/status
  - serviceresolvers/status
  - proxydefaults/status
  - servicerouters/status
  - servicesplitters/status
  - serviceintentions/status
  - ingressgateways/status
  - terminatinggateways/status
  verbs:
  - get
  - patch
  - update
---
# Source: consul/templates/webhook-cert-manager-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hashicorp-consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: webhook-cert-manager
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - patch
---
# Source: consul/templates/connect-inject-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hashicorp-consul-connect-injector-webhook-admin-role-binding
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hashicorp-consul-connect-injector-webhook
subjects:
  - kind: ServiceAccount
    name: hashicorp-consul-connect-injector-webhook-svc-account
    namespace: default
---
# Source: consul/templates/controller-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hashicorp-consul-controller
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hashicorp-consul-controller
subjects:
- kind: ServiceAccount
  name: hashicorp-consul-controller
  namespace: default
---
# Source: consul/templates/webhook-cert-manager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hashicorp-consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: webhook-cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hashicorp-consul-webhook-cert-manager
subjects:
- kind: ServiceAccount
  name: hashicorp-consul-webhook-cert-manager
  namespace: default
---
# Source: consul/templates/client-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hashicorp-consul-client
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
rules: []
---
# Source: consul/templates/controller-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hashicorp-consul-controller-leader-election
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: consul/templates/server-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hashicorp-consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
rules: []
---
# Source: consul/templates/client-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hashicorp-consul-client
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hashicorp-consul-client
subjects:
  - kind: ServiceAccount
    name: hashicorp-consul-client
---
# Source: consul/templates/controller-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hashicorp-consul-controller-leader-election
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hashicorp-consul-controller-leader-election
subjects:
- kind: ServiceAccount
  name: hashicorp-consul-controller
---
# Source: consul/templates/server-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hashicorp-consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hashicorp-consul-server
subjects:
  - kind: ServiceAccount
    name: hashicorp-consul-server
---
# Source: consul/templates/connect-inject-service.yaml
# The service for the Connect sidecar injector
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-consul-connect-injector-svc
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
spec:
  ports:
  - port: 443
    targetPort: 8080
  selector:
    app: consul
    release: "hashicorp"
    component: connect-injector
---
# Source: consul/templates/controller-webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-consul-controller-webhook
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
---
# Source: consul/templates/dns-service.yaml
# Service for Consul DNS.
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-consul-dns
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: dns
spec:
  type: ClusterIP
  ports:
    - name: dns-tcp
      port: 53
      protocol: "TCP"
      targetPort: dns-tcp
    - name: dns-udp
      port: 53
      protocol: "UDP"
      targetPort: dns-udp
  selector:
    app: consul
    release: "hashicorp"
    hasDNS: "true"
---
# Source: consul/templates/server-service.yaml
# Headless service for Consul server DNS entries. This service should only
# point to Consul servers. For access to an agent, one should assume that
# the agent is installed locally on the node and the NODE_IP should be used.
# If the node can't run a Consul agent, then this service can be used to
# communicate directly to a server agent.
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: server
  annotations:
    # This must be set in addition to publishNotReadyAddresses due
    # to an open issue where it may not work:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8500
      targetPort: 8500
    - name: serflan-tcp
      protocol: "TCP"
      port: 8301
      targetPort: 8301
    - name: serflan-udp
      protocol: "UDP"
      port: 8301
      targetPort: 8301
    - name: serfwan-tcp
      protocol: "TCP"
      port: 8302
      targetPort: 8302
    - name: serfwan-udp
      protocol: "UDP"
      port: 8302
      targetPort: 8302
    - name: server
      port: 8300
      targetPort: 8300
    - name: dns-tcp
      protocol: "TCP"
      port: 8600
      targetPort: dns-tcp
    - name: dns-udp
      protocol: "UDP"
      port: 8600
      targetPort: dns-udp
  selector:
    app: consul
    release: "hashicorp"
    component: server
---
# Source: consul/templates/ui-service.yaml
# UI Service for Consul Server
apiVersion: v1
kind: Service
metadata:
  name: hashicorp-consul-ui
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: ui
spec:
  selector:
    app: consul
    release: "hashicorp"
    component: server
  ports:
    - name: http
      port: 80
      targetPort: 8500
---
# Source: consul/templates/client-daemonset.yaml
# DaemonSet to run the Consul clients on every node.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hashicorp-consul
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
spec:
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: hashicorp
      component: client
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: hashicorp
        component: client
        hasDNS: "true"
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": 265aa944f365d491293fa5f8e45431394c59c6baeac462fe98da632286cb7742
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: hashicorp-consul-client
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100

      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: hashicorp-consul-client-config
      containers:
        - name: consul
          image: "hashicorp/consul:1.9.3"
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            
          command:
            - "/bin/sh"
            - "-ec"
            - |
              CONSUL_FULLNAME="hashicorp-consul"

              exec /bin/consul agent \
                -node="${NODE}" \
                -advertise="${ADVERTISE_IP}" \
                -bind=0.0.0.0 \
                -client=0.0.0.0 \
                -node-meta=pod-name:${HOSTNAME} \
                -node-meta=host-ip:${HOST_IP} \
                -hcl='leave_on_terminate = true' \
                -disable-host-node-id=false \
                -hcl='ports { grpc = 8502 }' \
                -config-dir=/consul/config \
                -datacenter=hashidc1 \
                -data-dir=/consul/data \
                -retry-join="${CONSUL_FULLNAME}-server-0.${CONSUL_FULLNAME}-server.${NAMESPACE}.svc:8301" \
                -domain=consul
          volumeMounts:
            - name: data
              mountPath: /consul/data
            - name: config
              mountPath: /consul/config
          ports:
            - containerPort: 8500
              hostPort: 8500
              name: http
            - containerPort: 8502
              hostPort: 8502
              name: grpc
            - containerPort: 8301
              protocol: "TCP"
              name: serflan-tcp
            - containerPort: 8301
              protocol: "UDP"
              name: serflan-udp
            - containerPort: 8600
              name: dns-tcp
              protocol: "TCP"
            - containerPort: 8600
              name: dns-udp
              protocol: "UDP"
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
---
# Source: consul/templates/connect-inject-deployment.yaml
# The deployment for running the Connect sidecar injector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hashicorp-consul-connect-injector-webhook-deployment
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: hashicorp
      component: connect-injector
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: hashicorp
        component: connect-injector
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      serviceAccountName: hashicorp-consul-connect-injector-webhook-svc-account
      containers:
        - name: sidecar-injector
          image: "hashicorp/consul-k8s:0.24.0"
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CONSUL_HTTP_ADDR
              value: http://$(HOST_IP):8500
          command:
            - "/bin/sh"
            - "-ec"
            - |
              CONSUL_FULLNAME="hashicorp-consul"

              consul-k8s inject-connect \
                -default-inject=true \
                -consul-image="hashicorp/consul:1.9.3" \
                -envoy-image="envoyproxy/envoy-alpine:v1.16.0" \
                -consul-k8s-image="hashicorp/consul-k8s:0.24.0" \
                -listen=:8080 \
                -log-level=info \
                -enable-health-checks-controller=true \
                -health-checks-reconcile-period=1m \
                -cleanup-controller-reconcile-period=5m \
                -allow-k8s-namespace="*" \
                -tls-auto=${CONSUL_FULLNAME}-connect-injector-cfg \
                -tls-auto-hosts=${CONSUL_FULLNAME}-connect-injector-svc,${CONSUL_FULLNAME}-connect-injector-svc.${NAMESPACE},${CONSUL_FULLNAME}-connect-injector-svc.${NAMESPACE}.svc \
                -init-container-memory-limit=150Mi \
                -init-container-memory-request=25Mi \
                -init-container-cpu-limit=50m \
                -init-container-cpu-request=50m \
                -consul-sidecar-memory-limit=50Mi \
                -consul-sidecar-memory-request=25Mi \
                -consul-sidecar-cpu-limit=20m \
                -consul-sidecar-cpu-request=20m \
          livenessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            failureThreshold: 2
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            failureThreshold: 2
            initialDelaySeconds: 2
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
# Source: consul/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hashicorp-consul-controller
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      heritage: Helm
      release: hashicorp
      component: controller
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        heritage: Helm
        release: hashicorp
        component: controller
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      containers:
      - command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s controller \
            -webhook-tls-cert-dir=/tmp/controller-webhook/certs \
            -datacenter=hashidc1 \
            -enable-leader-election \
            -log-level="info" \
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_HTTP_ADDR
          value: http://$(HOST_IP):8500
        image: hashicorp/consul-k8s:0.24.0
        name: controller
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
        volumeMounts:
        - mountPath: /tmp/controller-webhook/certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: hashicorp-consul-controller-webhook-cert
      serviceAccountName: hashicorp-consul-controller
---
# Source: consul/templates/webhook-cert-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hashicorp-consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: webhook-cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      heritage: Helm
      release: hashicorp
      component: webhook-cert-manager
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        heritage: Helm
        release: hashicorp
        component: webhook-cert-manager
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": f83828d8ae901b9c9fe5001e722fb38477116dd123cdba9449488a638463920c
    spec:
      containers:
      - command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s webhook-cert-manager \
            -config-file=/bootstrap/config/webhook-config.json
        image: hashicorp/consul-k8s:0.24.0
        name: webhook-cert-manager
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - name: config
          mountPath: /bootstrap/config
      terminationGracePeriodSeconds: 10
      serviceAccountName: hashicorp-consul-webhook-cert-manager
      volumes:
      - name: config
        configMap:
          name: hashicorp-consul-webhook-cert-manager-config
---
# Source: consul/templates/server-statefulset.yaml
# StatefulSet to run the actual Consul server cluster.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hashicorp-consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: server
spec:
  serviceName: hashicorp-consul-server
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: hashicorp
      component: server
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: hashicorp
        component: server
        hasDNS: "true"
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": de1fdce597d01ba501c6b8bfd4e86e27b6f8b4580fe980d7223912302238104e
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: consul
                  release: "hashicorp"
                  component: server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      serviceAccountName: hashicorp-consul-server
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      volumes:
        - name: config
          configMap:
            name: hashicorp-consul-server-config
      containers:
        - name: consul
          image: "hashicorp/consul:1.9.3"
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            
          command:
            - "/bin/sh"
            - "-ec"
            - |
              CONSUL_FULLNAME="hashicorp-consul"

              exec /bin/consul agent \
                -advertise="${ADVERTISE_IP}" \
                -bind=0.0.0.0 \
                -bootstrap-expect=1 \
                -client=0.0.0.0 \
                -config-dir=/consul/config \
                -datacenter=hashidc1 \
                -data-dir=/consul/data \
                -domain=consul \
                -hcl="connect { enabled = true }" \
                -ui \
                -retry-join="${CONSUL_FULLNAME}-server-0.${CONSUL_FULLNAME}-server.${NAMESPACE}.svc:8301" \
                -serf-lan-port=8301 \
                -server
          volumeMounts:
            - name: data-default
              mountPath: /consul/data
            - name: config
              mountPath: /consul/config
          ports:
            - containerPort: 8500
              name: http
            - containerPort: 8301
              protocol: "TCP"
              name: serflan-tcp
            - containerPort: 8301
              protocol: "UDP"
              name: serflan-udp
            - containerPort: 8302
              name: serfwan
            - containerPort: 8300
              name: server
            - containerPort: 8600
              name: dns-tcp
              protocol: "TCP"
            - containerPort: 8600
              name: dns-udp
              protocol: "UDP"
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
  volumeClaimTemplates:
    - metadata:
        name: data-default
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Source: consul/templates/connect-inject-mutatingwebhook.yaml
# The MutatingWebhookConfiguration to enable the Connect injector.
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: hashicorp-consul-connect-injector-cfg
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
webhooks:
  - name: hashicorp-consul-connect-injector.consul.hashicorp.com
    failurePolicy: Ignore
    sideEffects: None
    admissionReviewVersions:
      - "v1beta1"
      - "v1"
    clientConfig:
      service:
        name: hashicorp-consul-connect-injector-svc
        namespace: default
        path: "/mutate"
      caBundle: ""
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
---
# Source: consul/templates/controller-mutatingwebhookconfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: hashicorp-consul-controller-mutating-webhook-configuration
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
    component: controller
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-proxydefaults
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-proxydefaults.consul.hashicorp.com
  rules:
    - apiGroups:
      - consul.hashicorp.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - proxydefaults
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-servicedefaults
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-servicedefaults.consul.hashicorp.com
  rules:
    - apiGroups:
      - consul.hashicorp.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - servicedefaults
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-serviceresolver
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-serviceresolver.consul.hashicorp.com
  rules:
    - apiGroups:
      - consul.hashicorp.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - serviceresolvers
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-servicerouter
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-servicerouter.consul.hashicorp.com
  rules:
    - apiGroups:
      - consul.hashicorp.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - servicerouters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-servicesplitter
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-servicesplitter.consul.hashicorp.com
  rules:
    - apiGroups:
      - consul.hashicorp.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - servicesplitters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-serviceintentions
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-serviceintentions.consul.hashicorp.com
  rules:
    - apiGroups:
      - consul.hashicorp.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - serviceintentions
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-ingressgateway
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-ingressgateway.consul.hashicorp.com
  rules:
    - apiGroups:
        - consul.hashicorp.com
      apiVersions:
        - v1alpha1
      operations:
        - CREATE
        - UPDATE
      resources:
        - ingressgateways
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: hashicorp-consul-controller-webhook
      namespace: default
      path: /mutate-v1alpha1-terminatinggateway
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-terminatinggateway.consul.hashicorp.com
  rules:
    - apiGroups:
        - consul.hashicorp.com
      apiVersions:
        - v1alpha1
      operations:
        - CREATE
        - UPDATE
      resources:
        - terminatinggateways
  sideEffects: None
---
# Source: consul/templates/tests/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "hashicorp-consul-test"
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: hashicorp
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: consul-test
      image: "hashicorp/consul:1.9.3"
      env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_HTTP_ADDR
          value: http://$(HOST_IP):8500
      command:
        - "/bin/sh"
        - "-ec"
        - |
            consul members | tee members.txt
            if [ $(grep -c consul-server members.txt) != $(grep consul-server members.txt | grep -c alive) ]
            then
              echo "Failed because not all consul servers are available"
              exit 1
            fi

  restartPolicy: Never
