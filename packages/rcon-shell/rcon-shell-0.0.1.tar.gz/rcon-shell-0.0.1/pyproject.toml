[tool.poetry]
name = "rcon-shell"
version = "0.0.1"
description = "Minecraft rcon shell in Python"
readme = "README.md"
homepage = "https://github.com/jedie/PyRconShell"
authors = ["Jens Diemer <python@jensdiemer.de>"]
license = "GNU General Public License v3.0"
packages = [
    { include = "py_rcon_shell" },
]

[tool.poetry.scripts]
devshell = 'py_rcon_shell.rcon_shell:rcon_shell_cmdloop'

[tool.poetry.dependencies]
python = ">=3.8,<4.0.0"
rcon = "*"  # https://github.com/conqp/rcon
dev-shell = "*"  # https://github.com/jedie/dev-shell

[tool.poetry.dev-dependencies]
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
isort = "*"
cmd2_ext_test = "*"
flake8 = "*"
flynt = "*"
autopep8 = "*"
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
line_length=120
case_sensitive=false
skip_glob=["*/htmlcov/*",]
multi_line_output=3
include_trailing_comma=true
no_lines_before="LOCALFOLDER"
default_section="THIRDPARTY"
sections=["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
lines_after_imports=2


[tool.coverage.run]
omit = [".*"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* .git __pycache__ conf coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --import-mode=importlib
    --cov=.
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
"""


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py39,py38,py37
skip_missing_interpreters = True

[testenv]
passenv = *
whitelist_externals = pytest
commands =
    pytest
"""
