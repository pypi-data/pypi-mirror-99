Metadata-Version: 2.1
Name: mypy-boto3-gamelift
Version: 1.17.34.0
Summary: Type annotations for boto3.GameLift 1.17.34 service, generated by mypy-boto3-buider 4.4.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Description: # mypy-boto3-gamelift
        
        [![PyPI - mypy-boto3-gamelift](https://img.shields.io/pypi/v/mypy-boto3-gamelift.svg?color=blue)](https://pypi.org/project/mypy-boto3-gamelift)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-gamelift.svg?color=blue)](https://pypi.org/project/mypy-boto3-gamelift)
        [![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
        
        ![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/master/logo.png)
        
        Type annotations for
        [boto3.GameLift 1.17.34](https://boto3.amazonaws.com/v1/documentation/api/1.17.34/reference/services/gamelift.html#GameLift) service
        compatible with
        [VSCode](https://code.visualstudio.com/),
        [PyCharm](https://www.jetbrains.com/pycharm/),
        [Emacs](https://www.gnu.org/software/emacs/),
        [Sublime Text](https://www.sublimetext.com/),
        [mypy](https://github.com/python/mypy),
        [pyright](https://github.com/microsoft/pyright)
        and other tools.
        
        Generated by [mypy-boto3-buider 4.4.0](https://github.com/vemel/mypy_boto3_builder).
        
        More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.
        
        See how it helps to find and fix potential bugs:
        
        ![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/master/demo.gif)
        
        - [mypy-boto3-gamelift](#mypy-boto3-gamelift)
          - [How to install](#how-to-install)
          - [Usage](#usage)
            - [VSCode](#vscode)
            - [PyCharm](#pycharm)
            - [Other IDEs](#other-ides)
            - [mypy](#mypy)
            - [pyright](#pyright)
          - [Explicit type annotations](#explicit-type-annotations)
            - [Client annotations](#client-annotations)
            - [Paginators annotations](#paginators-annotations)
            - [Waiters annotations](#waiters-annotations)
            - [Service Resource annotations](#service-resource-annotations)
            - [Other resources annotations](#other-resources-annotations)
            - [Collections annotations](#collections-annotations)
            - [Typed dictionations](#typed-dictionations)
        
        ## How to install
        
        Install `boto3-stubs` for `GameLift` service.
        
        ```bash
        python -m pip install boto3-stubs[gamelift]
        ```
        
        ## Usage
        
        ### VSCode
        
        - Install [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
        - Install [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
        - Set `Pylance` as your Python Language Server
        - Install `boto-stubs[gamelift]` in your environment: `python -m pip install 'boto3-stubs[gamelift]'`
        
        Both type checking and auto-complete should work for `GameLift` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### PyCharm
        
        - Install `boto-stubs[gamelift]` in your environment: `python -m pip install 'boto3-stubs[gamelift]'`
        
        Both type checking and auto-complete should work for `GameLift` service.
        No explicit type annotations required, write your `boto3` code as usual.
        Auto-complete can be slow on big projects or if you have a lot of installed `boto3-stubs` submodules.
        
        ### Other IDEs
        
        Not tested, but as long as your IDE support `mypy` or `pyright`, everything should work.
        
        ### mypy
        
        - Install `mypy`: `python -m pip install mypy`
        - Install `boto-stubs[gamelift]` in your environment: `python -m pip install 'boto3-stubs[gamelift]'`
        - Run `mypy` as usual
        
        Type checking should work for `GameLift` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### pyright
        
        - Install `pyright`: `yarn global add pyright`
        - Install `boto-stubs[gamelift]` in your environment: `python -m pip install 'boto3-stubs[gamelift]'`
        - Optionally, you can install `boto3-stubs` to `typings` folder.
        
        Type checking should work for `GameLift` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ## Explicit type annotations
        
        ### Client annotations
        
        `GameLiftClient` provides annotations for `boto3.client("gamelift")`.
        
        ```python
        import boto3
        
        from mypy_boto3_gamelift import GameLiftClient
        
        client: GameLiftClient = boto3.client("gamelift")
        
        # now client usage is checked by mypy and IDE should provide code auto-complete
        
        # works for session as well
        session = boto3.session.Session(region="us-west-1")
        session_client: GameLiftClient = session.client("gamelift")
        ```
        
        ### Paginators annotations
        
        `mypy_boto3_gamelift.paginator` module contains type annotations for all paginators.
        
        ```python
        from mypy_boto3_gamelift import GameLiftClient
        from mypy_boto3_gamelift.paginator import (
            DescribeFleetAttributesPaginator,
            DescribeFleetCapacityPaginator,
            DescribeFleetEventsPaginator,
            DescribeFleetUtilizationPaginator,
            DescribeGameServerInstancesPaginator,
            DescribeGameSessionDetailsPaginator,
            DescribeGameSessionQueuesPaginator,
            DescribeGameSessionsPaginator,
            DescribeInstancesPaginator,
            DescribeMatchmakingConfigurationsPaginator,
            DescribeMatchmakingRuleSetsPaginator,
            DescribePlayerSessionsPaginator,
            DescribeScalingPoliciesPaginator,
            ListAliasesPaginator,
            ListBuildsPaginator,
            ListFleetsPaginator,
            ListGameServerGroupsPaginator,
            ListGameServersPaginator,
            ListScriptsPaginator,
            SearchGameSessionsPaginator,
        )
        
        client: GameLiftClient = boto3.client("gamelift")
        
        # Explicit type annotations are optional here
        # Type should be correctly discovered by mypy and IDEs
        # VSCode requires explicit type annotations
        describe_fleet_attributes_paginator: DescribeFleetAttributesPaginator = client.get_paginator("describe_fleet_attributes")
        describe_fleet_capacity_paginator: DescribeFleetCapacityPaginator = client.get_paginator("describe_fleet_capacity")
        describe_fleet_events_paginator: DescribeFleetEventsPaginator = client.get_paginator("describe_fleet_events")
        describe_fleet_utilization_paginator: DescribeFleetUtilizationPaginator = client.get_paginator("describe_fleet_utilization")
        describe_game_server_instances_paginator: DescribeGameServerInstancesPaginator = client.get_paginator("describe_game_server_instances")
        describe_game_session_details_paginator: DescribeGameSessionDetailsPaginator = client.get_paginator("describe_game_session_details")
        describe_game_session_queues_paginator: DescribeGameSessionQueuesPaginator = client.get_paginator("describe_game_session_queues")
        describe_game_sessions_paginator: DescribeGameSessionsPaginator = client.get_paginator("describe_game_sessions")
        describe_instances_paginator: DescribeInstancesPaginator = client.get_paginator("describe_instances")
        describe_matchmaking_configurations_paginator: DescribeMatchmakingConfigurationsPaginator = client.get_paginator("describe_matchmaking_configurations")
        describe_matchmaking_rule_sets_paginator: DescribeMatchmakingRuleSetsPaginator = client.get_paginator("describe_matchmaking_rule_sets")
        describe_player_sessions_paginator: DescribePlayerSessionsPaginator = client.get_paginator("describe_player_sessions")
        describe_scaling_policies_paginator: DescribeScalingPoliciesPaginator = client.get_paginator("describe_scaling_policies")
        list_aliases_paginator: ListAliasesPaginator = client.get_paginator("list_aliases")
        list_builds_paginator: ListBuildsPaginator = client.get_paginator("list_builds")
        list_fleets_paginator: ListFleetsPaginator = client.get_paginator("list_fleets")
        list_game_server_groups_paginator: ListGameServerGroupsPaginator = client.get_paginator("list_game_server_groups")
        list_game_servers_paginator: ListGameServersPaginator = client.get_paginator("list_game_servers")
        list_scripts_paginator: ListScriptsPaginator = client.get_paginator("list_scripts")
        search_game_sessions_paginator: SearchGameSessionsPaginator = client.get_paginator("search_game_sessions")
        ```
        
        
        
        
        
        
        
        ### Typed dictionations
        
        `mypy_boto3_gamelift.type_defs` module contains structures and shapes assembled
        to typed dictionaries for additional type checking.
        
        ```python
        from mypy_boto3_gamelift.type_defs import (
            AliasTypeDef,
            AttributeValueTypeDef,
            AwsCredentialsTypeDef,
            BuildTypeDef,
            CertificateConfigurationTypeDef,
            EC2InstanceCountsTypeDef,
            EC2InstanceLimitTypeDef,
            EventTypeDef,
            FilterConfigurationTypeDef,
            FleetAttributesTypeDef,
            FleetCapacityTypeDef,
            FleetUtilizationTypeDef,
            GamePropertyTypeDef,
            GameServerGroupTypeDef,
            GameServerInstanceTypeDef,
            GameServerTypeDef,
            GameSessionConnectionInfoTypeDef,
            GameSessionDetailTypeDef,
            GameSessionPlacementTypeDef,
            GameSessionQueueDestinationTypeDef,
            GameSessionQueueTypeDef,
            GameSessionTypeDef,
            InstanceAccessTypeDef,
            InstanceCredentialsTypeDef,
            InstanceDefinitionTypeDef,
            InstanceTypeDef,
            IpPermissionTypeDef,
            LocationAttributesTypeDef,
            LocationStateTypeDef,
            MatchedPlayerSessionTypeDef,
            MatchmakingConfigurationTypeDef,
            MatchmakingRuleSetTypeDef,
            MatchmakingTicketTypeDef,
            PlacedPlayerSessionTypeDef,
            PlayerLatencyPolicyTypeDef,
            PlayerLatencyTypeDef,
            PlayerSessionTypeDef,
            PlayerTypeDef,
            PriorityConfigurationTypeDef,
            ResourceCreationLimitPolicyTypeDef,
            ResponseMetadata,
            RoutingStrategyTypeDef,
            RuntimeConfigurationTypeDef,
            S3LocationTypeDef,
            ScalingPolicyTypeDef,
            ScriptTypeDef,
            ServerProcessTypeDef,
            TagTypeDef,
            TargetConfigurationTypeDef,
            TargetTrackingConfigurationTypeDef,
            VpcPeeringAuthorizationTypeDef,
            VpcPeeringConnectionStatusTypeDef,
            VpcPeeringConnectionTypeDef,
            ClaimGameServerOutputTypeDef,
            CreateAliasOutputTypeDef,
            CreateBuildOutputTypeDef,
            CreateFleetLocationsOutputTypeDef,
            CreateFleetOutputTypeDef,
            CreateGameServerGroupOutputTypeDef,
            CreateGameSessionOutputTypeDef,
            CreateGameSessionQueueOutputTypeDef,
            CreateMatchmakingConfigurationOutputTypeDef,
            CreateMatchmakingRuleSetOutputTypeDef,
            CreatePlayerSessionOutputTypeDef,
            CreatePlayerSessionsOutputTypeDef,
            CreateScriptOutputTypeDef,
            CreateVpcPeeringAuthorizationOutputTypeDef,
            DeleteFleetLocationsOutputTypeDef,
            DeleteGameServerGroupOutputTypeDef,
            DescribeAliasOutputTypeDef,
            DescribeBuildOutputTypeDef,
            DescribeEC2InstanceLimitsOutputTypeDef,
            DescribeFleetAttributesOutputTypeDef,
            DescribeFleetCapacityOutputTypeDef,
            DescribeFleetEventsOutputTypeDef,
            DescribeFleetLocationAttributesOutputTypeDef,
            DescribeFleetLocationCapacityOutputTypeDef,
            DescribeFleetLocationUtilizationOutputTypeDef,
            DescribeFleetPortSettingsOutputTypeDef,
            DescribeFleetUtilizationOutputTypeDef,
            DescribeGameServerGroupOutputTypeDef,
            DescribeGameServerInstancesOutputTypeDef,
            DescribeGameServerOutputTypeDef,
            DescribeGameSessionDetailsOutputTypeDef,
            DescribeGameSessionPlacementOutputTypeDef,
            DescribeGameSessionQueuesOutputTypeDef,
            DescribeGameSessionsOutputTypeDef,
            DescribeInstancesOutputTypeDef,
            DescribeMatchmakingConfigurationsOutputTypeDef,
            DescribeMatchmakingOutputTypeDef,
            DescribeMatchmakingRuleSetsOutputTypeDef,
            DescribePlayerSessionsOutputTypeDef,
            DescribeRuntimeConfigurationOutputTypeDef,
            DescribeScalingPoliciesOutputTypeDef,
            DescribeScriptOutputTypeDef,
            DescribeVpcPeeringAuthorizationsOutputTypeDef,
            DescribeVpcPeeringConnectionsOutputTypeDef,
            DesiredPlayerSessionTypeDef,
            GameServerGroupAutoScalingPolicyTypeDef,
            GetGameSessionLogUrlOutputTypeDef,
            GetInstanceAccessOutputTypeDef,
            LaunchTemplateSpecificationTypeDef,
            ListAliasesOutputTypeDef,
            ListBuildsOutputTypeDef,
            ListFleetsOutputTypeDef,
            ListGameServerGroupsOutputTypeDef,
            ListGameServersOutputTypeDef,
            ListScriptsOutputTypeDef,
            ListTagsForResourceResponseTypeDef,
            LocationConfigurationTypeDef,
            PaginatorConfigTypeDef,
            PutScalingPolicyOutputTypeDef,
            RegisterGameServerOutputTypeDef,
            RequestUploadCredentialsOutputTypeDef,
            ResolveAliasOutputTypeDef,
            ResumeGameServerGroupOutputTypeDef,
            SearchGameSessionsOutputTypeDef,
            StartFleetActionsOutputTypeDef,
            StartGameSessionPlacementOutputTypeDef,
            StartMatchBackfillOutputTypeDef,
            StartMatchmakingOutputTypeDef,
            StopFleetActionsOutputTypeDef,
            StopGameSessionPlacementOutputTypeDef,
            SuspendGameServerGroupOutputTypeDef,
            UpdateAliasOutputTypeDef,
            UpdateBuildOutputTypeDef,
            UpdateFleetAttributesOutputTypeDef,
            UpdateFleetCapacityOutputTypeDef,
            UpdateFleetPortSettingsOutputTypeDef,
            UpdateGameServerGroupOutputTypeDef,
            UpdateGameServerOutputTypeDef,
            UpdateGameSessionOutputTypeDef,
            UpdateGameSessionQueueOutputTypeDef,
            UpdateMatchmakingConfigurationOutputTypeDef,
            UpdateRuntimeConfigurationOutputTypeDef,
            UpdateScriptOutputTypeDef,
            ValidateMatchmakingRuleSetOutputTypeDef,
        )
        
        def get_structure() -> AliasTypeDef:
            return {
              ...
            }
        ```
        
Keywords: boto3 gamelift type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
