---
#
#  A Kubernetes Pod manifest template. Projects a
#  Tycho system object into a YAML pod definition.
#  Tags the object with a system unique
#  GUID label to enable later management.
#
#  Generated by Tycho {{ now() }}
#
apiVersion: v1
kind: Pod
metadata:
  name: {{ system.name }}
  labels:
    name: {{ system.name }}
    username: {{ system.username }}
    app-name: {{ system.system_name }}
    executor: tycho
    tycho-guid: {{ system.identifier }}
    tycho-app-id: {{ system.app_id }}
spec:
{% if system.serviceaccount %}
  serviceAccountName: {{system.serviceaccount}}
{% endif %}
{% for container in system.containers %}
  {% if container.limits or container.requests %}
  {% if container.limits.gpus != None and loop.first %}
  tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"
  {% endif %}
  {% endif %}
  {% if container.security_context.fsGroup %}
  securityContext:
    fsGroup: {{ container.security_context.fsGroup }}
  {% endif %}
{% if (system.runasroot == "true") and (system.create_home_dirs == "true") and (system.dev_phase != "test") %}
  initContainers:
  - name: volume-permissions
    image: busybox:1.28
    {% if container.security_context.Uid and container.security_context.Gid %}
    command: ['sh', '-c'] 
    args: 
    - chmod 775 {{ system.parent_dir }}/{{ system.subpath_dir }} &&
      chown -R {{ container.security_context.Uid }}:{{ container.security_context.Gid }} {{ system.parent_dir }}/{{ system.subpath_dir }} &&
      chmod 775 {{ system.parent_dir }}/{{ system.shared_dir }} &&
      chown -R {{ container.security_context.Uid }}:{{ container.security_context.Gid }} {{ system.parent_dir }}/{{ system.shared_dir }} &&
      echo OK
    {% else %}
    command: ['sh', '-c']
    args:
    - chmod 775 {{ system.parent_dir }}/{{ system.subpath_dir }} &&
      chown -R {{ system.Uid }}:{{ system.Gid }} {{ system.parent_dir }}/{{ system.subpath_dir }} &&
      chmod 775 {{ system.parent_dir }}/{{ system.shared_dir }} &&
      chown -R {{ system.Uid }}:{{ system.Gid }} {{ system.parent_dir }}/{{ system.shared_dir }} &&
      echo OK
    {% endif %}
    volumeMounts:
    - name: {{ system.stdnfs_pvc }}
      mountPath: {{ system.parent_dir }}/{{ system.subpath_dir }}
      subPath: {{system.username}}
    - name: {{ system.stdnfs_pvc }}
      mountPath: {{ system.parent_dir }}/{{ system.shared_dir }}
      subPath: {{ system.shared_dir }}
{% endif %}
{% endfor %}
#{% for container in system.containers %}
#  {% if container.depends_on|length > 0 %}
#  {% for d in container.depends_on %}
#  - name: init-{{ container.name}}-{{loop.index}}
#    image: busybox:1.28
#    command: ['sh', '-c', 'until nslookup {{d}}-{{system.identifier}}; do echo waiting for mydb; sleep 2; done;']
#  {% endfor %}
#  {% endif %}
#{% endfor %}
  containers:
{% for container in system.containers %}    
  - name: {{ container.name }}
    image: {{ container.image }}
    {% if container.security_context.runAsUser %}
    securityContext:
      runAsUser: {{ container.security_context.runAsUser }}
    {% endif %}
{% if container.command %}
    command: {{ container.command }}
{% endif %}
    env:
{% if container.env %}
    {%for e in container.env %}
    - name : {{ e[0] }}
      value : "{{ e[1] }}"
    {% endfor %}
    - name : GUID
      value: {{ system.identifier }}
    - name: USER_NAME
      value: {{ system.username }}
    {% if system.amb %}
    - name: NB_PREFIX
      value: /private/{{system.system_name}}/{{system.username}}/{{system.identifier}}
    - name: FB_BASEURL
      value: /private/{{system.system_name}}/{{system.username}}/{{system.identifier}}
    {% else %}
    - name: NB_PREFIX
      value: /
    - name: FB_BASEURL
      value: /
    {% endif %}
{% endif %}
{% if not container.env %}
    - name : GUID
      value: {{ system.identifier }}
    - name: USER_NAME
      value: {{ system.username }}
    {% if system.amb %}
    - name: NB_PREFIX
      value: /private/{{system.system_name}}/{{system.username}}/{{system.identifier}}
    - name: FB_BASEURL
      value: /private/{{system.system_name}}/{{system.username}}/{{system.identifier}}
    {% else %}
    - name: NB_PREFIX
      value: /
    - name: FB_BASEURL
      value: /
    {% endif %}
{% endif %}
{% if system.system_env %}
  {% for env in system.system_env %}
    - name: {{ env }}
      value: {{ system.system_env[env]}}
  {% endfor %}
{% endif %}
{% if container.expose|length > 0 %}
    ports:
{% for port in container.expose %}
    - containerPort: {{ container.expose[loop.index-1]['containerPort'] }}
      protocol: TCP
{% endfor %}     
{% endif %} # ports
{% if container.limits or container.requests %}
    resources:
      limits:
      {% if container.limits %}
      {% if container.limits.cpus != None %}
        cpu: "{{ container.limits.cpus }}"
        memory: "{{ container.limits.memory }}"
      {% endif %}
      {% if container.limits.gpus != None %}
        nvidia.com/gpu: {{ container.limits.gpus }}
      {% endif %}
      {% endif %}
      requests:
      {% if container.requests  %}
      {% if container.requests.cpus != None %}
        cpu: "{{ container.requests.cpus }}"
        memory: "{{ container.requests.memory }}"
      {% endif %}
      {% if container.requests.gpus != None %}
        nvidia.com/gpu: {{ container.requests.gpus }}
      {% endif %}
      {% endif %}
{% endif %}
    volumeMounts:
{% if container.volumes %}
{% for volume in system.volumes %}
  {% if container.name == volume['container_name'] %}
    - name: {{ volume["volume_name"] }}
      mountPath: {{ volume["path"] }}
      subPath: {{ volume["subpath"] }}
      readOnly: false
  {% endif %}
  {% endfor %}
  {% endif %}
{% endfor %}

  volumes:
# Changes
{% for container in system.containers %}
{% if container.volumes %}
{% for volume in system.volumes %}
  {% if container.name == volume['container_name']%}
  {% if volume["pvc_name"] != None %}
    - name: {{ volume["volume_name"] }}
      persistentVolumeClaim:
        claimName: {{ volume["pvc_name"] }}
  {% endif %}
  {% endif %}
  {% endfor %}
  {% endif %}
  {% endfor %}

