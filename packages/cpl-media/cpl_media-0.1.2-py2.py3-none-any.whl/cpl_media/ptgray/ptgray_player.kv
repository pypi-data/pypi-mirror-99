

<PTGraySettingsWidget>:
    orientation: 'vertical'
    spacing: '12dp'
    size_hint_min_x: self.minimum_width
    size_hint_y: None
    height: self.minimum_height
    disabled: not self.player.is_available
    BoxLayout:
        orientation: 'vertical'
        size_hint_y: None
        height: self.minimum_height
        size_hint_min_x: self.minimum_width
        padding: '5dp'
        spacing: '5dp'
        GridLayout:
            rows: 1
            size_hint: None, None
            size: self.minimum_width, '34dp'
            padding: '5dp'
            spacing: '5dp'
            disabled: root.player.play_state != 'none' or root.player.config_active
            FlatImageButton:
                scale_down_color: True
                source: 'flat_settings.png'
                flat_color: app.theme.accent
                on_release: root.player.ask_config('gui')
            FlatImageButton:
                scale_down_color: True
                source: 'flat_refresh.png'
                flat_color: app.theme.accent
                on_release: root.player.ask_config('serials')
            FlatLabel:
                text: 'Serial #:'
                size: self.texture_size
                size_hint: None, None
                flat_color: app.theme.text_primary
            ThemedSpinner:
                size_hint_x: None
                width: self.minimum_width
                values: [str(val) for val in root.player.serials]
                text: str(root.player.serial) if root.player.serial else ''
                on_text: root.player.serial = int(self.text) if self.text else 0
            FlatLabel:
                text: 'IP:'
                size: self.texture_size
                size_hint: None, None
                flat_color: app.theme.text_primary
            ThemedSpinner:
                size_hint_x: None
                width: self.minimum_width
                values: root.player.ips
                text: root.player.ip
                on_text: root.player.ip = self.text
        GridLayout:
            size_hint: None, None
            size: self.minimum_size
            spacing: ['5dp']
            rows: 1
            disabled: root.player.play_state != 'playing'
            ThemedSpinner:
                id: pt_settings_opt
                size_hint_x: None
                width: self.minimum_width
                values: [''] + root.player.active_settings
                on_text: root.bind_pt_setting(self.text)
                disabled: root.player.config_active
            LightThemedToggleButton:
                text: 'Auto'
                padding: '5dp', '5dp'
                size_hint: None, None
                size: self.texture_size
                scale_down_color: True
                on_release: root.player.ask_cam_option_config(pt_settings_opt.text, 'auto', self.state == 'down')
                state: 'down' if root.opt_settings and root.opt_settings['auto'] else 'normal'
                disabled: opt_disable.state == 'down' or not pt_settings_opt.text
            LightThemedButton:
                text: 'One push'
                size_hint: None, None
                size: self.texture_size
                padding: '5dp', '5dp'
                on_release: root.player.ask_cam_option_config(pt_settings_opt.text, 'one_push', True)
                disabled: opt_disable.state == 'down' or not pt_settings_opt.text
            LightThemedToggleButton:
                id: opt_disable
                text: 'Disable'
                padding: '5dp', '5dp'
                size_hint: None, None
                size: self.texture_size
                on_release: root.player.ask_cam_option_config(pt_settings_opt.text, 'controllable', self.state == 'normal')
                state: 'normal' if root.opt_settings and root.opt_settings['controllable'] else 'down'
                disabled: not pt_settings_opt.text
            FlatImageButton:
                scale_down_color: True
                source: 'flat_refresh.png'
                flat_color: app.theme.accent
                on_release: root.player.ask_cam_option_config(pt_settings_opt.text, '', None)
                disabled: not pt_settings_opt.text
            FlatLabel:
                padding: '5dp', '5dp'
                flat_color: app.theme.text_primary
                center_texture: True
                size_hint: None, None
                size: self.texture_size
                text: 'min: {:0.2f}'.format(root.opt_settings['min']) if 'min' in root.opt_settings else ''
                disabled: opt_disable.state == 'down' or not pt_settings_opt.text
            FlatSizedTextInput:
                background_color: app.theme.primary_light
                on_focus: if not self.focus: root.player.ask_cam_option_config(pt_settings_opt.text, 'value', float(self.text or 0))
                input_filter: 'float'
                text: '{:0.2f}'.format(root.opt_settings['value']) if 'value' in root.opt_settings else ''
                disabled: opt_disable.state == 'down' or not pt_settings_opt.text
                size_hint_x: None
                width: '60dp'
            FlatLabel:
                padding: '5dp', '5dp'
                flat_color: app.theme.text_primary
                center_texture: True
                size_hint: None, None
                size: self.texture_size
                text: 'max: {:0.2f}'.format(root.opt_settings['max']) if 'max' in root.opt_settings else ''
                disabled: opt_disable.state == 'down' or not pt_settings_opt.text
        FlatSlider:
            size_hint_y: None
            height: '25dp'
            on_release: root.player.ask_cam_option_config(pt_settings_opt.text, 'value', self.value)
            min: root.opt_settings['min'] if 'min' in root.opt_settings else 0
            max: root.opt_settings['max'] if 'max' in root.opt_settings else 1
            value: root.opt_settings['value'] if 'value' in root.opt_settings else 0.5
            disabled: opt_disable.state == 'down' or not pt_settings_opt.text
