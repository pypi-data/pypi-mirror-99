#:import pix_fmts ffpyplayer.tools.pix_fmts

<ImageFileRecordSettingsWidget>:
    orientation: 'vertical'
    spacing: '5dp'
    size_hint_min_x: self.minimum_width
    size_hint_y: None
    height: self.minimum_height
    disabled: self.recorder.record_state != 'none'
    BoxLayout:
        spacing: '5dp'
        size_hint_min_x: self.minimum_width
        size_hint_y: None
        height: self.minimum_height
        FlatLabel:
            text: 'Directory:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            id: directory
            text: root.recorder.record_directory
            background_color: app.theme.primary_light
            hint_text: 'directory'
            on_text: root.recorder.record_directory = self.text
            size_hint_min_x: '100dp'
        FlatImageButton:
            scale_down_color: True
            source: 'flat_folder.png'
            flat_color: app.theme.accent
            on_release: app.open_filechooser(callback=partial(root.set_filename, directory), target=root.recorder.record_directory, dirselect=True, title='Select target directory')
    BoxLayout:
        spacing: '5dp'
        size_hint_min_x: self.minimum_width
        size_hint_y: None
        height: self.minimum_height
        FlatLabel:
            text: 'Prefix:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            text: root.recorder.record_prefix
            background_color: app.theme.primary_light
            hint_text: 'image_'
            on_text: root.recorder.record_prefix = self.text
        FlatLabel:
            text: 'Extension:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        ThemedSpinner:
            values: ['tiff', 'bmp']
            text:  root.recorder.extension
            size_hint_x: None
            width: max(self.minimum_width, 50)
            on_text: root.recorder.extension = self.text
    BoxLayout:
        spacing: '5dp'
        size_hint_min_x: self.minimum_width
        size_hint_y: None
        height: self.minimum_height
        FlatLabel:
            text: 'Tiff compression:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        ThemedSpinner:
            disabled: root.recorder.extension != 'tiff'
            values: ['raw', 'lzw', 'zip']
            text:  root.recorder.compression
            size_hint_x: None
            width: max(self.minimum_width, 50)
            on_text: root.recorder.compression = self.text
    FlatLabel:
        text: root.recorder.recorder_summery
        size: self.texture_size
        size_hint: None, None
        flat_color: app.theme.text_primary


<VideoRecordSettingsWidget>:
    orientation: 'vertical'
    spacing: '12dp'
    size_hint_min_x: self.minimum_width
    size_hint_y: None
    height: self.minimum_height
    disabled: self.recorder.record_state != 'none'
    BoxLayout:
        spacing: '5dp'
        size_hint_min_x: self.minimum_width
        size_hint_y: None
        height: self.minimum_height
        FlatLabel:
            text: 'Pixel type:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        ThemedSpinner:
            id: pix_fmt
            values: ['---']
            text: (root.recorder.metadata_record.fmt or '---') if root.recorder.metadata_record else '---'
            size_hint_x: None
            width: max(self.minimum_width, dp(50))
            on_text: root.recorder._set_metadata_record(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0), int(rate.text or 0))
            on_touch_down: if self.collide_point(*args[1].pos) and len(self.values) == 1: self.values = (['---'] + pix_fmts)
        FlatLabel:
            text: 'Width:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            id: input_w
            text: str(root.recorder.metadata_record.w) if root.recorder.metadata_record else ''
            background_color: app.theme.primary_light
            hint_text: 'width'
            input_filter: 'int'
            size_hint_x: None
            width: '60dp'
            on_text: root.recorder._set_metadata_record(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0), int(rate.text or 0))
        FlatLabel:
            text: 'Height:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            id: input_h
            text: str(root.recorder.metadata_record.h) if root.recorder.metadata_record else ''
            background_color: app.theme.primary_light
            hint_text: 'height'
            input_filter: 'int'
            size_hint_x: None
            width: '60dp'
            on_text: root.recorder._set_metadata_record(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0), int(rate.text or 0))
        FlatLabel:
            text: 'Rate:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            id: rate
            text: str(root.recorder.metadata_record.rate) if root.recorder.metadata_record else ''
            background_color: app.theme.primary_light
            hint_text: 'rate'
            input_filter: 'int'
            size_hint_x: None
            width: '30dp'
            on_text: root.recorder._set_metadata_record(pix_fmt.text if pix_fmt.text != '---' else '', int(input_w.text or 0), int(input_h.text or 0), int(rate.text or 0))
    BoxLayout:
        spacing: '5dp'
        size_hint_min_x: self.minimum_width
        size_hint_y: None
        height: self.minimum_height
        FlatLabel:
            text: 'Directory:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            id: directory
            text: root.recorder.record_directory
            background_color: app.theme.primary_light
            hint_text: 'directory'
            on_text: root.recorder.record_directory = self.text
        FlatImageButton:
            scale_down_color: True
            source: 'flat_folder.png'
            flat_color: app.theme.accent
            on_release: app.open_filechooser(callback=partial(root.set_filename, directory), target=root.recorder.record_directory, dirselect=True, title='Select target directory')
        FlatLabel:
            text: 'Filename:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            text: root.recorder.record_fname
            background_color: app.theme.primary_light
            hint_text: 'filename'
            on_text_validate: root.recorder.record_fname = self.text
        FlatLabel:
            text: 'n:'
            size: self.texture_size
            size_hint: None, None
            flat_color: app.theme.text_primary
        FlatSizedTextInput:
            text: str(root.recorder.record_fname_count)
            background_color: app.theme.primary_light
            hint_text: 'count'
            input_filter: 'int'
            size_hint_x: None
            width: '30dp'
            on_text: root.recorder.record_fname_count = int(self.text or 0)
    FlatLabel:
        text: root.recorder.record_filename
        bold: True
        size: self.texture_size
        size_hint: None, None
        flat_color: app.theme.text_primary
