
Adjust version number
 1. Open the qt designer and adapt the version number in the GUI to "YYYY.M".
 2. Edit setup.py to create a new version number and update information.
 3. Edit the README.md file to point users to download the lates release from the tag YYYY.M
 4. Commit and push
 5. Compile UI: cd treetime; python3 compile-ui.py; cd ..

Build a Python package
 1. yes | rm -r build
 2. python3 setup.py sdist bdist_wheel
 3. tar tzf dist/TreeTime-YYYY.M.tar.gz
 4. twine check dist/*

Upload to PyPi
 1. twine upload dist/TreeTime-YYYY.M.tar.gz

Draft a Release on github
 1. Go to releases and create new draft
 2. Type a tag name "YYYY.M", title "Release YYYY.M"
 3. Create a description (use **x** for bold, and * for bullet points)
 4. Save as draft

Build a Windows Installer
 1. Log into a Windows machine, go to an elevated command line
 2. pip install pyinstaller --upgrade
 3. pip install PyQt5 --upgrade
 4. on a normal command line: E:\treetime
 5. git pull origin master
 6. pyinstaller -n treetime --onefile main.py
 7. Test: dist\treetime.exe
 8. Create a directory dist/treetime, copy dist/treetime.exe and ../data inside and zip to treetime_YYYY-MM_windows.zip
 9. In the github web page, go to treetime/released/YYYY.M and upload the windows zip file

Build a Linux Installer
 1. pyinstaller -n treetime --onefile main.py
 2. Test: dist/treetime
 3. Create tar ball including dist/treetime and data, call it treetime_YYYY-MM_linux.zip
 4. In the github web page, go to treetime/released/YYYY.M and upload the linux zip file

Finalise Release on github
 1. In github page, click "Publish Release".

Advertise
 1. Adapt the text "TreeTime ... just released. New: ... https://github.com/jkanev/treetime#---treetime 
#treetime #tree #editor #software Download here: https://github.com/jkanev/treetime/releases
or on PyPi using pip install." and post on twitter and facebook.

