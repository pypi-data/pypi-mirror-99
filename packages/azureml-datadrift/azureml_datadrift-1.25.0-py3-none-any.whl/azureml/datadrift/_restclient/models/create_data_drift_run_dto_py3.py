# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CreateDataDriftRunDto(Model):
    """CreateDataDriftRunDto.

    :param services:
    :type services: list[str]
    :param compute_target_name:
    :type compute_target_name: str
    :param features:
    :type features: list[str]
    :param drift_threshold:
    :type drift_threshold: float
    :param run_type: Possible values include: 'None', 'Adhoc', 'Scheduler',
     'BackFill'
    :type run_type: str or ~_restclient.models.enum
    :param start_time:
    :type start_time: datetime
    :param end_time:
    :type end_time: datetime
    """

    _attribute_map = {
        'services': {'key': 'services', 'type': '[str]'},
        'compute_target_name': {'key': 'computeTargetName', 'type': 'str'},
        'features': {'key': 'features', 'type': '[str]'},
        'drift_threshold': {'key': 'driftThreshold', 'type': 'float'},
        'run_type': {'key': 'runType', 'type': 'str'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
    }

    def __init__(self, *, services=None, compute_target_name: str=None, features=None, drift_threshold: float=None, run_type=None, start_time=None, end_time=None, **kwargs) -> None:
        super(CreateDataDriftRunDto, self).__init__(**kwargs)
        self.services = services
        self.compute_target_name = compute_target_name
        self.features = features
        self.drift_threshold = drift_threshold
        self.run_type = run_type
        self.start_time = start_time
        self.end_time = end_time
