# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DataDriftDto(Model):
    """DataDriftDto.

    :param frequency:
    :type frequency: str
    :param schedule_start_time:
    :type schedule_start_time: datetime
    :param schedule_id:
    :type schedule_id: str
    :param interval:
    :type interval: int
    :param state: Possible values include: 'Disabled', 'Enabled', 'Deleted',
     'Disabling', 'Enabling', 'Deleting', 'Failed', 'DeleteFailed',
     'EnableFailed', 'DisableFailed'
    :type state: str or ~_restclient.models.enum
    :param alert_configuration:
    :type alert_configuration: ~_restclient.models.AlertConfiguration
    :param alert_id:
    :type alert_id: str
    :param latest_run_time:
    :type latest_run_time: datetime
    :param latest_run_state: Possible values include: 'Failed', 'Canceled',
     'UserError', 'Finished'
    :type latest_run_state: str or ~_restclient.models.enum
    :param azure_monitor_error:
    :type azure_monitor_error: str
    :param id:
    :type id: str
    :param name:
    :type name: str
    :param type: Possible values include: 'ModelBased', 'DatasetBased'
    :type type: str or ~_restclient.models.enum
    :param model_name:
    :type model_name: str
    :param model_version:
    :type model_version: int
    :param base_dataset_id:
    :type base_dataset_id: str
    :param target_dataset_id:
    :type target_dataset_id: str
    :param services:
    :type services: list[str]
    :param compute_target_name:
    :type compute_target_name: str
    :param features:
    :type features: list[str]
    :param drift_threshold:
    :type drift_threshold: float
    :param job_latency:
    :type job_latency: int
    :param created_time:
    :type created_time: datetime
    :param experiment_name:
    :type experiment_name: str
    """

    _attribute_map = {
        'frequency': {'key': 'frequency', 'type': 'str'},
        'schedule_start_time': {'key': 'scheduleStartTime', 'type': 'iso-8601'},
        'schedule_id': {'key': 'scheduleId', 'type': 'str'},
        'interval': {'key': 'interval', 'type': 'int'},
        'state': {'key': 'state', 'type': 'str'},
        'alert_configuration': {'key': 'alertConfiguration', 'type': 'AlertConfiguration'},
        'alert_id': {'key': 'alertId', 'type': 'str'},
        'latest_run_time': {'key': 'latestRunTime', 'type': 'iso-8601'},
        'latest_run_state': {'key': 'latestRunState', 'type': 'str'},
        'azure_monitor_error': {'key': 'azureMonitorError', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'model_name': {'key': 'modelName', 'type': 'str'},
        'model_version': {'key': 'modelVersion', 'type': 'int'},
        'base_dataset_id': {'key': 'baseDatasetId', 'type': 'str'},
        'target_dataset_id': {'key': 'targetDatasetId', 'type': 'str'},
        'services': {'key': 'services', 'type': '[str]'},
        'compute_target_name': {'key': 'computeTargetName', 'type': 'str'},
        'features': {'key': 'features', 'type': '[str]'},
        'drift_threshold': {'key': 'driftThreshold', 'type': 'float'},
        'job_latency': {'key': 'jobLatency', 'type': 'int'},
        'created_time': {'key': 'createdTime', 'type': 'iso-8601'},
        'experiment_name': {'key': 'experimentName', 'type': 'str'},
    }

    def __init__(self, *, frequency: str=None, schedule_start_time=None, schedule_id: str=None, interval: int=None, state=None, alert_configuration=None, alert_id: str=None, latest_run_time=None, latest_run_state=None, azure_monitor_error: str=None, id: str=None, name: str=None, type=None, model_name: str=None, model_version: int=None, base_dataset_id: str=None, target_dataset_id: str=None, services=None, compute_target_name: str=None, features=None, drift_threshold: float=None, job_latency: int=None, created_time=None, experiment_name: str=None, **kwargs) -> None:
        super(DataDriftDto, self).__init__(**kwargs)
        self.frequency = frequency
        self.schedule_start_time = schedule_start_time
        self.schedule_id = schedule_id
        self.interval = interval
        self.state = state
        self.alert_configuration = alert_configuration
        self.alert_id = alert_id
        self.latest_run_time = latest_run_time
        self.latest_run_state = latest_run_state
        self.azure_monitor_error = azure_monitor_error
        self.id = id
        self.name = name
        self.type = type
        self.model_name = model_name
        self.model_version = model_version
        self.base_dataset_id = base_dataset_id
        self.target_dataset_id = target_dataset_id
        self.services = services
        self.compute_target_name = compute_target_name
        self.features = features
        self.drift_threshold = drift_threshold
        self.job_latency = job_latency
        self.created_time = created_time
        self.experiment_name = experiment_name
