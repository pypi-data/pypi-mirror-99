# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DataDriftMetricDto(Model):
    """DataDriftMetricDto.

    :param name:
    :type name: str
    :param value:
    :type value: float
    :param model_name:
    :type model_name: str
    :param model_version:
    :type model_version: int
    :param service_name:
    :type service_name: str
    :param base_dataset_id:
    :type base_dataset_id: str
    :param target_dataset_id:
    :type target_dataset_id: str
    :param start_date:
    :type start_date: datetime
    :param end_date:
    :type end_date: datetime
    :param metric_type:
    :type metric_type: str
    :param column_type:
    :type column_type: str
    :param column_name:
    :type column_name: str
    :param pipeline_start_time:
    :type pipeline_start_time: datetime
    :param custom_dimensions:
    :type custom_dimensions: dict[str, str]
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'value': {'key': 'value', 'type': 'float'},
        'model_name': {'key': 'modelName', 'type': 'str'},
        'model_version': {'key': 'modelVersion', 'type': 'int'},
        'service_name': {'key': 'serviceName', 'type': 'str'},
        'base_dataset_id': {'key': 'baseDatasetId', 'type': 'str'},
        'target_dataset_id': {'key': 'targetDatasetId', 'type': 'str'},
        'start_date': {'key': 'startDate', 'type': 'iso-8601'},
        'end_date': {'key': 'endDate', 'type': 'iso-8601'},
        'metric_type': {'key': 'metricType', 'type': 'str'},
        'column_type': {'key': 'columnType', 'type': 'str'},
        'column_name': {'key': 'columnName', 'type': 'str'},
        'pipeline_start_time': {'key': 'pipelineStartTime', 'type': 'iso-8601'},
        'custom_dimensions': {'key': 'customDimensions', 'type': '{str}'},
    }

    def __init__(self, **kwargs):
        super(DataDriftMetricDto, self).__init__(**kwargs)
        self.name = kwargs.get('name', None)
        self.value = kwargs.get('value', None)
        self.model_name = kwargs.get('model_name', None)
        self.model_version = kwargs.get('model_version', None)
        self.service_name = kwargs.get('service_name', None)
        self.base_dataset_id = kwargs.get('base_dataset_id', None)
        self.target_dataset_id = kwargs.get('target_dataset_id', None)
        self.start_date = kwargs.get('start_date', None)
        self.end_date = kwargs.get('end_date', None)
        self.metric_type = kwargs.get('metric_type', None)
        self.column_type = kwargs.get('column_type', None)
        self.column_name = kwargs.get('column_name', None)
        self.pipeline_start_time = kwargs.get('pipeline_start_time', None)
        self.custom_dimensions = kwargs.get('custom_dimensions', None)
