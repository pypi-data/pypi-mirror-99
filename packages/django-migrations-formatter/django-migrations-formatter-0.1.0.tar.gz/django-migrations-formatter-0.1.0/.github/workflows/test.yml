name: Lint & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - uses: actions/cache@v2
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e '.[dev]'
      - uses: actions/cache@v2
        name: Configure pre-commit caching
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-
      - name: Install pre-commit hooks
        run: |
          pre-commit install-hooks
      - name: Lint
        run: |
          pre-commit run --all-files
  test:
    runs-on: ubuntu-latest
    name: "Test Python ${{ matrix.python-version }} & Django ${{ matrix.django-version }}"
    needs: [lint]
    strategy:
      matrix:
        django-version: ["2.2", "3.0", "3.1"]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install Django~=${{ matrix.django-version }}.0
          python -m pip install '.[test]'
      - name: Run tests
        run: |
          coverage run "$(command -v django-admin.py)" test --pythonpath . -v 2 --settings=tests.settings
          coverage report
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
