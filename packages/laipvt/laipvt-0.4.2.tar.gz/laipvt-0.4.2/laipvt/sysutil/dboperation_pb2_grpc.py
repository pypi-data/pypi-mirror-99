# -*- coding:utf8 -*-
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from laipvt.sysutil import dboperation_pb2 as protos_dot_docUnderstanding_dot_backend_dot_dboperation__pb2


class DbOperationServiceStub(object):
  """db操作服务
  """

  def __init__(self, channel):
    """Constructor.
    Args:
      channel: A grpc.Channel.
    """
    self.Operate = channel.unary_unary(
        '/docUnderstanding.DbOperationService/Operate',
        request_serializer=protos_dot_docUnderstanding_dot_backend_dot_dboperation__pb2.DbOperationRequest.SerializeToString,
        response_deserializer=protos_dot_docUnderstanding_dot_backend_dot_dboperation__pb2.DbOperationResponse.FromString,
        )


class DbOperationServiceServicer(object):
  """db操作服务
  """

  def Operate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DbOperationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Operate': grpc.unary_unary_rpc_method_handler(
          servicer.Operate,
          request_deserializer=protos_dot_docUnderstanding_dot_backend_dot_dboperation__pb2.DbOperationRequest.FromString,
          response_serializer=protos_dot_docUnderstanding_dot_backend_dot_dboperation__pb2.DbOperationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'docUnderstanding.DbOperationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))