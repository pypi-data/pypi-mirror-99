*** api/provider_api.py	2020-07-21 19:59:05.000000000 +0200
--- api/provider_api.py	2020-07-21 16:04:46.000000000 +0200
***************
*** 80,120 ****
  
          local_var_params = locals()
  
!         all_params = [
!             'timeout',
!             'max_events'
!         ]
          all_params.extend(
              [
!                 'async_req',
!                 '_return_http_data_only',
!                 '_preload_content',
!                 '_request_timeout'
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
                      " to method collect_activity_events" % key
                  )
              local_var_params[key] = val
!         del local_var_params['kwargs']
  
!         if self.api_client.client_side_validation and 'timeout' in local_var_params and local_var_params['timeout'] < 0.0:  # noqa: E501
!             raise ApiValueError("Invalid value for parameter `timeout` when calling `collect_activity_events`, must be a value greater than or equal to `0.0`")  # noqa: E501
!         if self.api_client.client_side_validation and 'max_events' in local_var_params and local_var_params['max_events'] < 0:  # noqa: E501
!             raise ApiValueError("Invalid value for parameter `max_events` when calling `collect_activity_events`, must be a value greater than or equal to `0`")  # noqa: E501
          collection_formats = {}
  
          path_params = {}
  
          query_params = []
!         if 'timeout' in local_var_params and local_var_params['timeout'] is not None:  # noqa: E501
!             query_params.append(('timeout', local_var_params['timeout']))  # noqa: E501
!         if 'max_events' in local_var_params and local_var_params['max_events'] is not None:  # noqa: E501
!             query_params.append(('maxEvents', local_var_params['max_events']))  # noqa: E501
  
          header_params = {}
  
--- 72,128 ----
  
          local_var_params = locals()
  
!         all_params = ["timeout", "max_events"]
          all_params.extend(
              [
!                 "async_req",
!                 "_return_http_data_only",
!                 "_preload_content",
!                 "_request_timeout",
              ]
          )
  
!         for key, val in local_var_params["kwargs"].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
                      " to method collect_activity_events" % key
                  )
              local_var_params[key] = val
!         del local_var_params["kwargs"]
  
!         if (
!             self.api_client.client_side_validation
!             and "timeout" in local_var_params
!             and local_var_params["timeout"] < 0.0
!         ):  # noqa: E501
!             raise ApiValueError(
!                 "Invalid value for parameter `timeout` when calling `collect_activity_events`, must be a value greater than or equal to `0.0`"
!             )  # noqa: E501
!         if (
!             self.api_client.client_side_validation
!             and "max_events" in local_var_params
!             and local_var_params["max_events"] < 0
!         ):  # noqa: E501
!             raise ApiValueError(
!                 "Invalid value for parameter `max_events` when calling `collect_activity_events`, must be a value greater than or equal to `0`"
!             )  # noqa: E501
          collection_formats = {}
  
          path_params = {}
  
          query_params = []
!         if (
!             "timeout" in local_var_params and local_var_params["timeout"] is not None
!         ):  # noqa: E501
!             query_params.append(("timeout", local_var_params["timeout"]))  # noqa: E501
!         if (
!             "max_events" in local_var_params
!             and local_var_params["max_events"] is not None
!         ):  # noqa: E501
!             query_params.append(
!                 ("maxEvents", local_var_params["max_events"])
!             )  # noqa: E501
  
          header_params = {}
  
***************
*** 123,149 ****
  
          body_params = None
          # HTTP header `Accept`
!         header_params['Accept'] = self.api_client.select_header_accept(
!             ['application/json'])  # noqa: E501
  
          # Authentication setting
!         auth_settings = ['app_key']  # noqa: E501
  
          return self.api_client.call_api(
!             '/events', 'GET',
              path_params,
              query_params,
              header_params,
              body=body_params,
              post_params=form_params,
              files=local_var_files,
!             response_type='list[OneOfCreateActivityDestroyActivityGetActivityStateGetActivityUsage]',  # noqa: E501
              auth_settings=auth_settings,
!             async_req=local_var_params.get('async_req'),
!             _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
!             _preload_content=local_var_params.get('_preload_content', True),
!             _request_timeout=local_var_params.get('_request_timeout'),
!             collection_formats=collection_formats)
  
      def get_activity_state(self, activity_id, **kwargs):  # noqa: E501
          """Get state of specified Activity.  # noqa: E501
--- 131,162 ----
  
          body_params = None
          # HTTP header `Accept`
!         header_params["Accept"] = self.api_client.select_header_accept(
!             ["application/json"]
!         )  # noqa: E501
  
          # Authentication setting
!         auth_settings = ["app_key"]  # noqa: E501
  
          return self.api_client.call_api(
!             "/events",
!             "GET",
              path_params,
              query_params,
              header_params,
              body=body_params,
              post_params=form_params,
              files=local_var_files,
!             response_type="list[OneOfCreateActivityDestroyActivityGetActivityStateGetActivityUsage]",  # noqa: E501
              auth_settings=auth_settings,
!             async_req=local_var_params.get("async_req"),
!             _return_http_data_only=local_var_params.get(
!                 "_return_http_data_only"
!             ),  # noqa: E501
!             _preload_content=local_var_params.get("_preload_content", True),
!             _request_timeout=local_var_params.get("_request_timeout"),
!             collection_formats=collection_formats,
!         )
  
      def get_activity_state(self, activity_id, **kwargs):  # noqa: E501
          """Get state of specified Activity.  # noqa: E501
***************
*** 360,386 ****
  
          body_params = None
          # HTTP header `Accept`
!         header_params['Accept'] = self.api_client.select_header_accept(
!             ['application/json'])  # noqa: E501
  
          # Authentication setting
!         auth_settings = ['app_key']  # noqa: E501
  
          return self.api_client.call_api(
!             '/activity/{activityId}/usage', 'GET',
              path_params,
              query_params,
              header_params,
              body=body_params,
              post_params=form_params,
              files=local_var_files,
!             response_type='list[float]',  # noqa: E501
              auth_settings=auth_settings,
!             async_req=local_var_params.get('async_req'),
!             _return_http_data_only=local_var_params.get('_return_http_data_only'),  # noqa: E501
!             _preload_content=local_var_params.get('_preload_content', True),
!             _request_timeout=local_var_params.get('_request_timeout'),
!             collection_formats=collection_formats)
  
      def set_activity_state(self, activity_id, activity_state, **kwargs):  # noqa: E501
          """Set state of specified Activity.  # noqa: E501
--- 386,417 ----
  
          body_params = None
          # HTTP header `Accept`
!         header_params["Accept"] = self.api_client.select_header_accept(
!             ["application/json"]
!         )  # noqa: E501
  
          # Authentication setting
!         auth_settings = ["app_key"]  # noqa: E501
  
          return self.api_client.call_api(
!             "/activity/{activityId}/usage",
!             "GET",
              path_params,
              query_params,
              header_params,
              body=body_params,
              post_params=form_params,
              files=local_var_files,
!             response_type="list[float]",  # noqa: E501
              auth_settings=auth_settings,
!             async_req=local_var_params.get("async_req"),
!             _return_http_data_only=local_var_params.get(
!                 "_return_http_data_only"
!             ),  # noqa: E501
!             _preload_content=local_var_params.get("_preload_content", True),
!             _request_timeout=local_var_params.get("_request_timeout"),
!             collection_formats=collection_formats,
!         )
  
      def set_activity_state(self, activity_id, activity_state, **kwargs):  # noqa: E501
          """Set state of specified Activity.  # noqa: E501
