[metadata]
name = oslo.messaging
author = OpenStack
author-email = openstack-discuss@lists.openstack.org
summary = Oslo Messaging API
description-file = 
	README.rst
home-page = https://docs.openstack.org/oslo.messaging/latest/
classifier = 
	Environment :: OpenStack
	Intended Audience :: Developers
	Intended Audience :: Information Technology
	License :: OSI Approved :: Apache Software License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 2
	Programming Language :: Python :: 2.7
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7

[extras]
amqp1 = 
	pyngus>=2.2.0 # Apache-2.0
kafka = 
	confluent-kafka>=0.11.6 # Apache-2.0

[files]
packages = 
	oslo_messaging

[entry_points]
console_scripts = 
	oslo-messaging-send-notification = oslo_messaging.notify.notifier:_send_notification
oslo.messaging.drivers = 
	rabbit = oslo_messaging._drivers.impl_rabbit:RabbitDriver
	amqp = oslo_messaging._drivers.impl_amqp1:ProtonDriver
	
	kafka = oslo_messaging._drivers.impl_kafka:KafkaDriver
	
	kombu = oslo_messaging._drivers.impl_rabbit:RabbitDriver
	
	fake = oslo_messaging._drivers.impl_fake:FakeDriver
oslo.messaging.executors = 
	blocking = futurist:SynchronousExecutor
	eventlet = futurist:GreenThreadPoolExecutor
	threading = futurist:ThreadPoolExecutor
oslo.messaging.notify.drivers = 
	messagingv2 = oslo_messaging.notify.messaging:MessagingV2Driver
	messaging = oslo_messaging.notify.messaging:MessagingDriver
	log = oslo_messaging.notify._impl_log:LogDriver
	test = oslo_messaging.notify._impl_test:TestDriver
	noop = oslo_messaging.notify._impl_noop:NoOpDriver
	routing = oslo_messaging.notify._impl_routing:RoutingDriver
oslo.config.opts = 
	oslo.messaging = oslo_messaging.opts:list_opts

[bdist_wheel]
universal = 1

[compile_catalog]
directory = oslo_messaging/locale
domain = oslo_messaging

[update_catalog]
domain = oslo_messaging
output_dir = oslo_messaging/locale
input_file = oslo_messaging/locale/oslo_messaging.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = oslo_messaging/locale/oslo_messaging.pot

[egg_info]
tag_build = 
tag_date = 0

