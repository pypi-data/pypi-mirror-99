# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import blob_pb2 as blob__pb2


class BlobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBlob = channel.unary_stream(
                '/gitaly.BlobService/GetBlob',
                request_serializer=blob__pb2.GetBlobRequest.SerializeToString,
                response_deserializer=blob__pb2.GetBlobResponse.FromString,
                )
        self.GetBlobs = channel.unary_stream(
                '/gitaly.BlobService/GetBlobs',
                request_serializer=blob__pb2.GetBlobsRequest.SerializeToString,
                response_deserializer=blob__pb2.GetBlobsResponse.FromString,
                )
        self.GetLFSPointers = channel.unary_stream(
                '/gitaly.BlobService/GetLFSPointers',
                request_serializer=blob__pb2.GetLFSPointersRequest.SerializeToString,
                response_deserializer=blob__pb2.GetLFSPointersResponse.FromString,
                )
        self.GetNewLFSPointers = channel.unary_stream(
                '/gitaly.BlobService/GetNewLFSPointers',
                request_serializer=blob__pb2.GetNewLFSPointersRequest.SerializeToString,
                response_deserializer=blob__pb2.GetNewLFSPointersResponse.FromString,
                )
        self.GetAllLFSPointers = channel.unary_stream(
                '/gitaly.BlobService/GetAllLFSPointers',
                request_serializer=blob__pb2.GetAllLFSPointersRequest.SerializeToString,
                response_deserializer=blob__pb2.GetAllLFSPointersResponse.FromString,
                )


class BlobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBlob(self, request, context):
        """GetBlob returns the contents of a blob object referenced by its object
        ID. We use a stream to return a chunked arbitrarily large binary
        response
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLFSPointers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewLFSPointers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllLFSPointers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBlob': grpc.unary_stream_rpc_method_handler(
                    servicer.GetBlob,
                    request_deserializer=blob__pb2.GetBlobRequest.FromString,
                    response_serializer=blob__pb2.GetBlobResponse.SerializeToString,
            ),
            'GetBlobs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetBlobs,
                    request_deserializer=blob__pb2.GetBlobsRequest.FromString,
                    response_serializer=blob__pb2.GetBlobsResponse.SerializeToString,
            ),
            'GetLFSPointers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetLFSPointers,
                    request_deserializer=blob__pb2.GetLFSPointersRequest.FromString,
                    response_serializer=blob__pb2.GetLFSPointersResponse.SerializeToString,
            ),
            'GetNewLFSPointers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNewLFSPointers,
                    request_deserializer=blob__pb2.GetNewLFSPointersRequest.FromString,
                    response_serializer=blob__pb2.GetNewLFSPointersResponse.SerializeToString,
            ),
            'GetAllLFSPointers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllLFSPointers,
                    request_deserializer=blob__pb2.GetAllLFSPointersRequest.FromString,
                    response_serializer=blob__pb2.GetAllLFSPointersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gitaly.BlobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BlobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBlob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gitaly.BlobService/GetBlob',
            blob__pb2.GetBlobRequest.SerializeToString,
            blob__pb2.GetBlobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gitaly.BlobService/GetBlobs',
            blob__pb2.GetBlobsRequest.SerializeToString,
            blob__pb2.GetBlobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLFSPointers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gitaly.BlobService/GetLFSPointers',
            blob__pb2.GetLFSPointersRequest.SerializeToString,
            blob__pb2.GetLFSPointersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewLFSPointers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gitaly.BlobService/GetNewLFSPointers',
            blob__pb2.GetNewLFSPointersRequest.SerializeToString,
            blob__pb2.GetNewLFSPointersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllLFSPointers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gitaly.BlobService/GetAllLFSPointers',
            blob__pb2.GetAllLFSPointersRequest.SerializeToString,
            blob__pb2.GetAllLFSPointersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
