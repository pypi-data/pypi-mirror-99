# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: commit.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import lint_pb2 as lint__pb2
from . import shared_pb2 as shared__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='commit.proto',
  package='gitaly',
  syntax='proto3',
  serialized_options=b'Z.gitlab.com/gitlab-org/gitaly/proto/go/gitalypb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0c\x63ommit.proto\x12\x06gitaly\x1a\nlint.proto\x1a\x0cshared.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"T\n\x12\x43ommitStatsRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\"H\n\x13\x43ommitStatsResponse\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x11\n\tadditions\x18\x02 \x01(\x05\x12\x11\n\tdeletions\x18\x03 \x01(\x05\"n\n\x17\x43ommitIsAncestorRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x13\n\x0b\x61ncestor_id\x18\x02 \x01(\t\x12\x10\n\x08\x63hild_id\x18\x03 \x01(\t\")\n\x18\x43ommitIsAncestorResponse\x12\r\n\x05value\x18\x01 \x01(\x08\"\x81\x01\n\x10TreeEntryRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x0c\n\x04path\x18\x03 \x01(\x0c\x12\r\n\x05limit\x18\x04 \x01(\x03\x12\x10\n\x08max_size\x18\x05 \x01(\x03\"\xb5\x01\n\x11TreeEntryResponse\x12\x32\n\x04type\x18\x01 \x01(\x0e\x32$.gitaly.TreeEntryResponse.ObjectType\x12\x0b\n\x03oid\x18\x02 \x01(\t\x12\x0c\n\x04size\x18\x03 \x01(\x03\x12\x0c\n\x04mode\x18\x04 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x05 \x01(\x0c\"5\n\nObjectType\x12\n\n\x06\x43OMMIT\x10\x00\x12\x08\n\x04\x42LOB\x10\x01\x12\x08\n\x04TREE\x10\x02\x12\x07\n\x03TAG\x10\x03\"_\n\x15\x43ommitsBetweenRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x0c\n\x04\x66rom\x18\x02 \x01(\x0c\x12\n\n\x02to\x18\x03 \x01(\x0c\"<\n\x16\x43ommitsBetweenResponse\x12\"\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x11.gitaly.GitCommit\"\x9f\x02\n\x13\x43ountCommitsRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12)\n\x05\x61\x66ter\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12*\n\x06\x62\x65\x66ore\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04path\x18\x05 \x01(\x0c\x12\x11\n\tmax_count\x18\x06 \x01(\x05\x12\x0b\n\x03\x61ll\x18\x07 \x01(\x08\x12\x14\n\x0c\x66irst_parent\x18\x08 \x01(\x08\x12-\n\x0eglobal_options\x18\t \x01(\x0b\x32\x15.gitaly.GlobalOptions\"%\n\x14\x43ountCommitsResponse\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\"\x8b\x01\n\x1c\x43ountDivergingCommitsRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x0c\n\x04\x66rom\x18\x02 \x01(\x0c\x12\n\n\x02to\x18\x03 \x01(\x0c\x12\x11\n\tmax_count\x18\x07 \x01(\x05J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07\"H\n\x1d\x43ountDivergingCommitsResponse\x12\x12\n\nleft_count\x18\x01 \x01(\x05\x12\x13\n\x0bright_count\x18\x02 \x01(\x05\"\xc5\x01\n\tTreeEntry\x12\x0b\n\x03oid\x18\x01 \x01(\t\x12\x10\n\x08root_oid\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\x0c\x12)\n\x04type\x18\x04 \x01(\x0e\x32\x1b.gitaly.TreeEntry.EntryType\x12\x0c\n\x04mode\x18\x05 \x01(\x05\x12\x12\n\ncommit_oid\x18\x06 \x01(\t\x12\x11\n\tflat_path\x18\x07 \x01(\x0c\"+\n\tEntryType\x12\x08\n\x04\x42LOB\x10\x00\x12\x08\n\x04TREE\x10\x01\x12\n\n\x06\x43OMMIT\x10\x03\"x\n\x15GetTreeEntriesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x0c\n\x04path\x18\x03 \x01(\x0c\x12\x11\n\trecursive\x18\x04 \x01(\x08\"<\n\x16GetTreeEntriesResponse\x12\"\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x11.gitaly.TreeEntry\"R\n\x10ListFilesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\"\"\n\x11ListFilesResponse\x12\r\n\x05paths\x18\x01 \x03(\x0c\"e\n\x11\x46indCommitRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x10\n\x08trailers\x18\x03 \x01(\x08\"7\n\x12\x46indCommitResponse\x12!\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x11.gitaly.GitCommit\"T\n\x17ListCommitsByOidRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x0b\n\x03oid\x18\x02 \x03(\t\">\n\x18ListCommitsByOidResponse\x12\"\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x11.gitaly.GitCommit\"^\n\x1bListCommitsByRefNameRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x11\n\tref_names\x18\x02 \x03(\x0c\"\xb1\x01\n\x1cListCommitsByRefNameResponse\x12\x46\n\x0b\x63ommit_refs\x18\x02 \x03(\x0b\x32\x31.gitaly.ListCommitsByRefNameResponse.CommitForRef\x1a\x43\n\x0c\x43ommitForRef\x12!\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x11.gitaly.GitCommit\x12\x10\n\x08ref_name\x18\x02 \x01(\x0cJ\x04\x08\x01\x10\x02\"\xd3\x01\n\x15\x46indAllCommitsRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x11\n\tmax_count\x18\x03 \x01(\x05\x12\x0c\n\x04skip\x18\x04 \x01(\x05\x12\x32\n\x05order\x18\x05 \x01(\x0e\x32#.gitaly.FindAllCommitsRequest.Order\"%\n\x05Order\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04TOPO\x10\x01\x12\x08\n\x04\x44\x41TE\x10\x02\"<\n\x16\x46indAllCommitsResponse\x12\"\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x11.gitaly.GitCommit\"\xd6\x03\n\x12\x46indCommitsRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\r\n\x05limit\x18\x03 \x01(\x05\x12\x0e\n\x06offset\x18\x04 \x01(\x05\x12\r\n\x05paths\x18\x05 \x03(\x0c\x12\x0e\n\x06\x66ollow\x18\x06 \x01(\x08\x12\x13\n\x0bskip_merges\x18\x07 \x01(\x08\x12\x14\n\x0c\x64isable_walk\x18\x08 \x01(\x08\x12)\n\x05\x61\x66ter\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12*\n\x06\x62\x65\x66ore\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0b\n\x03\x61ll\x18\x0b \x01(\x08\x12\x14\n\x0c\x66irst_parent\x18\x0c \x01(\x08\x12\x0e\n\x06\x61uthor\x18\r \x01(\x0c\x12/\n\x05order\x18\x0e \x01(\x0e\x32 .gitaly.FindCommitsRequest.Order\x12-\n\x0eglobal_options\x18\x0f \x01(\x0b\x32\x15.gitaly.GlobalOptions\x12\x10\n\x08trailers\x18\x10 \x01(\x08\"\x1b\n\x05Order\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04TOPO\x10\x01\"9\n\x13\x46indCommitsResponse\x12\"\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x11.gitaly.GitCommit\"X\n\x16\x43ommitLanguagesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\"\xb1\x01\n\x17\x43ommitLanguagesResponse\x12;\n\tlanguages\x18\x01 \x03(\x0b\x32(.gitaly.CommitLanguagesResponse.Language\x1aY\n\x08Language\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05share\x18\x02 \x01(\x02\x12\r\n\x05\x63olor\x18\x03 \x01(\t\x12\x12\n\nfile_count\x18\x04 \x01(\r\x12\r\n\x05\x62ytes\x18\x05 \x01(\x04\"_\n\x0fRawBlameRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x0c\n\x04path\x18\x03 \x01(\x0c\" \n\x10RawBlameResponse\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"\xb1\x01\n\x18LastCommitForPathRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x0c\n\x04path\x18\x03 \x01(\x0c\x12\x18\n\x10literal_pathspec\x18\x04 \x01(\x08\x12-\n\x0eglobal_options\x18\x05 \x01(\x0b\x32\x15.gitaly.GlobalOptions\">\n\x19LastCommitForPathResponse\x12!\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x11.gitaly.GitCommit\"\xd9\x01\n\x1dListLastCommitsForTreeRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\x0c\x12\r\n\x05limit\x18\x04 \x01(\x05\x12\x0e\n\x06offset\x18\x05 \x01(\x05\x12\x1c\n\x10literal_pathspec\x18\x06 \x01(\x08\x42\x02\x18\x01\x12-\n\x0eglobal_options\x18\x07 \x01(\x0b\x32\x15.gitaly.GlobalOptions\"\xbb\x01\n\x1eListLastCommitsForTreeResponse\x12\x45\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x34.gitaly.ListLastCommitsForTreeResponse.CommitForTree\x1aR\n\rCommitForTree\x12!\n\x06\x63ommit\x18\x02 \x01(\x0b\x32\x11.gitaly.GitCommit\x12\x12\n\npath_bytes\x18\x04 \x01(\x0cJ\x04\x08\x01\x10\x02J\x04\x08\x03\x10\x04\"\xc4\x01\n\x17\x43ommitsByMessageRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x10\n\x08revision\x18\x02 \x01(\x0c\x12\x0e\n\x06offset\x18\x03 \x01(\x05\x12\r\n\x05limit\x18\x04 \x01(\x05\x12\x0c\n\x04path\x18\x05 \x01(\x0c\x12\r\n\x05query\x18\x06 \x01(\t\x12-\n\x0eglobal_options\x18\x07 \x01(\x0b\x32\x15.gitaly.GlobalOptions\">\n\x18\x43ommitsByMessageResponse\x12\"\n\x07\x63ommits\x18\x01 \x03(\x0b\x32\x11.gitaly.GitCommit\"]\n\x1f\x46ilterShasWithSignaturesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x0c\n\x04shas\x18\x02 \x03(\x0c\"0\n FilterShasWithSignaturesResponse\x12\x0c\n\x04shas\x18\x01 \x03(\x0c\"`\n\x1d\x45xtractCommitSignatureRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x11\n\tcommit_id\x18\x02 \x01(\t\"H\n\x1e\x45xtractCommitSignatureResponse\x12\x11\n\tsignature\x18\x01 \x01(\x0c\x12\x13\n\x0bsigned_text\x18\x02 \x01(\x0c\"^\n\x1aGetCommitSignaturesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x12\n\ncommit_ids\x18\x02 \x03(\t\"X\n\x1bGetCommitSignaturesResponse\x12\x11\n\tcommit_id\x18\x01 \x01(\t\x12\x11\n\tsignature\x18\x02 \x01(\x0c\x12\x13\n\x0bsigned_text\x18\x03 \x01(\x0c\"\\\n\x18GetCommitMessagesRequest\x12,\n\nrepository\x18\x01 \x01(\x0b\x32\x12.gitaly.RepositoryB\x04\x98\xc6,\x01\x12\x12\n\ncommit_ids\x18\x02 \x03(\t\"?\n\x19GetCommitMessagesResponse\x12\x11\n\tcommit_id\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\x0c\x32\xb9\x0f\n\rCommitService\x12]\n\x10\x43ommitIsAncestor\x12\x1f.gitaly.CommitIsAncestorRequest\x1a .gitaly.CommitIsAncestorResponse\"\x06\xfa\x97(\x02\x08\x02\x12J\n\tTreeEntry\x12\x18.gitaly.TreeEntryRequest\x1a\x19.gitaly.TreeEntryResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12Y\n\x0e\x43ommitsBetween\x12\x1d.gitaly.CommitsBetweenRequest\x1a\x1e.gitaly.CommitsBetweenResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12Q\n\x0c\x43ountCommits\x12\x1b.gitaly.CountCommitsRequest\x1a\x1c.gitaly.CountCommitsResponse\"\x06\xfa\x97(\x02\x08\x02\x12l\n\x15\x43ountDivergingCommits\x12$.gitaly.CountDivergingCommitsRequest\x1a%.gitaly.CountDivergingCommitsResponse\"\x06\xfa\x97(\x02\x08\x02\x12Y\n\x0eGetTreeEntries\x12\x1d.gitaly.GetTreeEntriesRequest\x1a\x1e.gitaly.GetTreeEntriesResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12J\n\tListFiles\x12\x18.gitaly.ListFilesRequest\x1a\x19.gitaly.ListFilesResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12K\n\nFindCommit\x12\x19.gitaly.FindCommitRequest\x1a\x1a.gitaly.FindCommitResponse\"\x06\xfa\x97(\x02\x08\x02\x12N\n\x0b\x43ommitStats\x12\x1a.gitaly.CommitStatsRequest\x1a\x1b.gitaly.CommitStatsResponse\"\x06\xfa\x97(\x02\x08\x02\x12Y\n\x0e\x46indAllCommits\x12\x1d.gitaly.FindAllCommitsRequest\x1a\x1e.gitaly.FindAllCommitsResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12P\n\x0b\x46indCommits\x12\x1a.gitaly.FindCommitsRequest\x1a\x1b.gitaly.FindCommitsResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12Z\n\x0f\x43ommitLanguages\x12\x1e.gitaly.CommitLanguagesRequest\x1a\x1f.gitaly.CommitLanguagesResponse\"\x06\xfa\x97(\x02\x08\x02\x12G\n\x08RawBlame\x12\x17.gitaly.RawBlameRequest\x1a\x18.gitaly.RawBlameResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12`\n\x11LastCommitForPath\x12 .gitaly.LastCommitForPathRequest\x1a!.gitaly.LastCommitForPathResponse\"\x06\xfa\x97(\x02\x08\x02\x12q\n\x16ListLastCommitsForTree\x12%.gitaly.ListLastCommitsForTreeRequest\x1a&.gitaly.ListLastCommitsForTreeResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12_\n\x10\x43ommitsByMessage\x12\x1f.gitaly.CommitsByMessageRequest\x1a .gitaly.CommitsByMessageResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12_\n\x10ListCommitsByOid\x12\x1f.gitaly.ListCommitsByOidRequest\x1a .gitaly.ListCommitsByOidResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12k\n\x14ListCommitsByRefName\x12#.gitaly.ListCommitsByRefNameRequest\x1a$.gitaly.ListCommitsByRefNameResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12y\n\x18\x46ilterShasWithSignatures\x12\'.gitaly.FilterShasWithSignaturesRequest\x1a(.gitaly.FilterShasWithSignaturesResponse\"\x06\xfa\x97(\x02\x08\x02(\x01\x30\x01\x12h\n\x13GetCommitSignatures\x12\".gitaly.GetCommitSignaturesRequest\x1a#.gitaly.GetCommitSignaturesResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x12\x62\n\x11GetCommitMessages\x12 .gitaly.GetCommitMessagesRequest\x1a!.gitaly.GetCommitMessagesResponse\"\x06\xfa\x97(\x02\x08\x02\x30\x01\x42\x30Z.gitlab.com/gitlab-org/gitaly/proto/go/gitalypbb\x06proto3'
  ,
  dependencies=[lint__pb2.DESCRIPTOR,shared__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])



_TREEENTRYRESPONSE_OBJECTTYPE = _descriptor.EnumDescriptor(
  name='ObjectType',
  full_name='gitaly.TreeEntryResponse.ObjectType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COMMIT', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BLOB', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TREE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TAG', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=659,
  serialized_end=712,
)
_sym_db.RegisterEnumDescriptor(_TREEENTRYRESPONSE_OBJECTTYPE)

_TREEENTRY_ENTRYTYPE = _descriptor.EnumDescriptor(
  name='EntryType',
  full_name='gitaly.TreeEntry.EntryType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BLOB', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TREE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COMMIT', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1573,
  serialized_end=1616,
)
_sym_db.RegisterEnumDescriptor(_TREEENTRY_ENTRYTYPE)

_FINDALLCOMMITSREQUEST_ORDER = _descriptor.EnumDescriptor(
  name='Order',
  full_name='gitaly.FindAllCommitsRequest.Order',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOPO', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DATE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2683,
  serialized_end=2720,
)
_sym_db.RegisterEnumDescriptor(_FINDALLCOMMITSREQUEST_ORDER)

_FINDCOMMITSREQUEST_ORDER = _descriptor.EnumDescriptor(
  name='Order',
  full_name='gitaly.FindCommitsRequest.Order',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TOPO', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2683,
  serialized_end=2710,
)
_sym_db.RegisterEnumDescriptor(_FINDCOMMITSREQUEST_ORDER)


_COMMITSTATSREQUEST = _descriptor.Descriptor(
  name='CommitStatsRequest',
  full_name='gitaly.CommitStatsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CommitStatsRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.CommitStatsRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=167,
)


_COMMITSTATSRESPONSE = _descriptor.Descriptor(
  name='CommitStatsResponse',
  full_name='gitaly.CommitStatsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='oid', full_name='gitaly.CommitStatsResponse.oid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='additions', full_name='gitaly.CommitStatsResponse.additions', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='deletions', full_name='gitaly.CommitStatsResponse.deletions', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=169,
  serialized_end=241,
)


_COMMITISANCESTORREQUEST = _descriptor.Descriptor(
  name='CommitIsAncestorRequest',
  full_name='gitaly.CommitIsAncestorRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CommitIsAncestorRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ancestor_id', full_name='gitaly.CommitIsAncestorRequest.ancestor_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='child_id', full_name='gitaly.CommitIsAncestorRequest.child_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=243,
  serialized_end=353,
)


_COMMITISANCESTORRESPONSE = _descriptor.Descriptor(
  name='CommitIsAncestorResponse',
  full_name='gitaly.CommitIsAncestorResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='gitaly.CommitIsAncestorResponse.value', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=355,
  serialized_end=396,
)


_TREEENTRYREQUEST = _descriptor.Descriptor(
  name='TreeEntryRequest',
  full_name='gitaly.TreeEntryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.TreeEntryRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.TreeEntryRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.TreeEntryRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='gitaly.TreeEntryRequest.limit', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_size', full_name='gitaly.TreeEntryRequest.max_size', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=528,
)


_TREEENTRYRESPONSE = _descriptor.Descriptor(
  name='TreeEntryResponse',
  full_name='gitaly.TreeEntryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='gitaly.TreeEntryResponse.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='oid', full_name='gitaly.TreeEntryResponse.oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='size', full_name='gitaly.TreeEntryResponse.size', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mode', full_name='gitaly.TreeEntryResponse.mode', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='gitaly.TreeEntryResponse.data', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TREEENTRYRESPONSE_OBJECTTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=531,
  serialized_end=712,
)


_COMMITSBETWEENREQUEST = _descriptor.Descriptor(
  name='CommitsBetweenRequest',
  full_name='gitaly.CommitsBetweenRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CommitsBetweenRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='from', full_name='gitaly.CommitsBetweenRequest.from', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='to', full_name='gitaly.CommitsBetweenRequest.to', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=714,
  serialized_end=809,
)


_COMMITSBETWEENRESPONSE = _descriptor.Descriptor(
  name='CommitsBetweenResponse',
  full_name='gitaly.CommitsBetweenResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='gitaly.CommitsBetweenResponse.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=811,
  serialized_end=871,
)


_COUNTCOMMITSREQUEST = _descriptor.Descriptor(
  name='CountCommitsRequest',
  full_name='gitaly.CountCommitsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CountCommitsRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.CountCommitsRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='after', full_name='gitaly.CountCommitsRequest.after', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='before', full_name='gitaly.CountCommitsRequest.before', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.CountCommitsRequest.path', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_count', full_name='gitaly.CountCommitsRequest.max_count', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='all', full_name='gitaly.CountCommitsRequest.all', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='first_parent', full_name='gitaly.CountCommitsRequest.first_parent', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='global_options', full_name='gitaly.CountCommitsRequest.global_options', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=874,
  serialized_end=1161,
)


_COUNTCOMMITSRESPONSE = _descriptor.Descriptor(
  name='CountCommitsResponse',
  full_name='gitaly.CountCommitsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='gitaly.CountCommitsResponse.count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1163,
  serialized_end=1200,
)


_COUNTDIVERGINGCOMMITSREQUEST = _descriptor.Descriptor(
  name='CountDivergingCommitsRequest',
  full_name='gitaly.CountDivergingCommitsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CountDivergingCommitsRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='from', full_name='gitaly.CountDivergingCommitsRequest.from', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='to', full_name='gitaly.CountDivergingCommitsRequest.to', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_count', full_name='gitaly.CountDivergingCommitsRequest.max_count', index=3,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1203,
  serialized_end=1342,
)


_COUNTDIVERGINGCOMMITSRESPONSE = _descriptor.Descriptor(
  name='CountDivergingCommitsResponse',
  full_name='gitaly.CountDivergingCommitsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='left_count', full_name='gitaly.CountDivergingCommitsResponse.left_count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='right_count', full_name='gitaly.CountDivergingCommitsResponse.right_count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1344,
  serialized_end=1416,
)


_TREEENTRY = _descriptor.Descriptor(
  name='TreeEntry',
  full_name='gitaly.TreeEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='oid', full_name='gitaly.TreeEntry.oid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='root_oid', full_name='gitaly.TreeEntry.root_oid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.TreeEntry.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='gitaly.TreeEntry.type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mode', full_name='gitaly.TreeEntry.mode', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='commit_oid', full_name='gitaly.TreeEntry.commit_oid', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='flat_path', full_name='gitaly.TreeEntry.flat_path', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TREEENTRY_ENTRYTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1419,
  serialized_end=1616,
)


_GETTREEENTRIESREQUEST = _descriptor.Descriptor(
  name='GetTreeEntriesRequest',
  full_name='gitaly.GetTreeEntriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.GetTreeEntriesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.GetTreeEntriesRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.GetTreeEntriesRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='recursive', full_name='gitaly.GetTreeEntriesRequest.recursive', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1618,
  serialized_end=1738,
)


_GETTREEENTRIESRESPONSE = _descriptor.Descriptor(
  name='GetTreeEntriesResponse',
  full_name='gitaly.GetTreeEntriesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='gitaly.GetTreeEntriesResponse.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1740,
  serialized_end=1800,
)


_LISTFILESREQUEST = _descriptor.Descriptor(
  name='ListFilesRequest',
  full_name='gitaly.ListFilesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ListFilesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.ListFilesRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1802,
  serialized_end=1884,
)


_LISTFILESRESPONSE = _descriptor.Descriptor(
  name='ListFilesResponse',
  full_name='gitaly.ListFilesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='paths', full_name='gitaly.ListFilesResponse.paths', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1886,
  serialized_end=1920,
)


_FINDCOMMITREQUEST = _descriptor.Descriptor(
  name='FindCommitRequest',
  full_name='gitaly.FindCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.FindCommitRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.FindCommitRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='trailers', full_name='gitaly.FindCommitRequest.trailers', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1922,
  serialized_end=2023,
)


_FINDCOMMITRESPONSE = _descriptor.Descriptor(
  name='FindCommitResponse',
  full_name='gitaly.FindCommitResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='gitaly.FindCommitResponse.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2025,
  serialized_end=2080,
)


_LISTCOMMITSBYOIDREQUEST = _descriptor.Descriptor(
  name='ListCommitsByOidRequest',
  full_name='gitaly.ListCommitsByOidRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ListCommitsByOidRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='oid', full_name='gitaly.ListCommitsByOidRequest.oid', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2082,
  serialized_end=2166,
)


_LISTCOMMITSBYOIDRESPONSE = _descriptor.Descriptor(
  name='ListCommitsByOidResponse',
  full_name='gitaly.ListCommitsByOidResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='gitaly.ListCommitsByOidResponse.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2168,
  serialized_end=2230,
)


_LISTCOMMITSBYREFNAMEREQUEST = _descriptor.Descriptor(
  name='ListCommitsByRefNameRequest',
  full_name='gitaly.ListCommitsByRefNameRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ListCommitsByRefNameRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ref_names', full_name='gitaly.ListCommitsByRefNameRequest.ref_names', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2232,
  serialized_end=2326,
)


_LISTCOMMITSBYREFNAMERESPONSE_COMMITFORREF = _descriptor.Descriptor(
  name='CommitForRef',
  full_name='gitaly.ListCommitsByRefNameResponse.CommitForRef',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='gitaly.ListCommitsByRefNameResponse.CommitForRef.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ref_name', full_name='gitaly.ListCommitsByRefNameResponse.CommitForRef.ref_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2433,
  serialized_end=2500,
)

_LISTCOMMITSBYREFNAMERESPONSE = _descriptor.Descriptor(
  name='ListCommitsByRefNameResponse',
  full_name='gitaly.ListCommitsByRefNameResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_refs', full_name='gitaly.ListCommitsByRefNameResponse.commit_refs', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTCOMMITSBYREFNAMERESPONSE_COMMITFORREF, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2329,
  serialized_end=2506,
)


_FINDALLCOMMITSREQUEST = _descriptor.Descriptor(
  name='FindAllCommitsRequest',
  full_name='gitaly.FindAllCommitsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.FindAllCommitsRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.FindAllCommitsRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_count', full_name='gitaly.FindAllCommitsRequest.max_count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='skip', full_name='gitaly.FindAllCommitsRequest.skip', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='order', full_name='gitaly.FindAllCommitsRequest.order', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FINDALLCOMMITSREQUEST_ORDER,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2509,
  serialized_end=2720,
)


_FINDALLCOMMITSRESPONSE = _descriptor.Descriptor(
  name='FindAllCommitsResponse',
  full_name='gitaly.FindAllCommitsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='gitaly.FindAllCommitsResponse.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2722,
  serialized_end=2782,
)


_FINDCOMMITSREQUEST = _descriptor.Descriptor(
  name='FindCommitsRequest',
  full_name='gitaly.FindCommitsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.FindCommitsRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.FindCommitsRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='gitaly.FindCommitsRequest.limit', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='gitaly.FindCommitsRequest.offset', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='paths', full_name='gitaly.FindCommitsRequest.paths', index=4,
      number=5, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='follow', full_name='gitaly.FindCommitsRequest.follow', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='skip_merges', full_name='gitaly.FindCommitsRequest.skip_merges', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disable_walk', full_name='gitaly.FindCommitsRequest.disable_walk', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='after', full_name='gitaly.FindCommitsRequest.after', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='before', full_name='gitaly.FindCommitsRequest.before', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='all', full_name='gitaly.FindCommitsRequest.all', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='first_parent', full_name='gitaly.FindCommitsRequest.first_parent', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='author', full_name='gitaly.FindCommitsRequest.author', index=12,
      number=13, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='order', full_name='gitaly.FindCommitsRequest.order', index=13,
      number=14, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='global_options', full_name='gitaly.FindCommitsRequest.global_options', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='trailers', full_name='gitaly.FindCommitsRequest.trailers', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FINDCOMMITSREQUEST_ORDER,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2785,
  serialized_end=3255,
)


_FINDCOMMITSRESPONSE = _descriptor.Descriptor(
  name='FindCommitsResponse',
  full_name='gitaly.FindCommitsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='gitaly.FindCommitsResponse.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3257,
  serialized_end=3314,
)


_COMMITLANGUAGESREQUEST = _descriptor.Descriptor(
  name='CommitLanguagesRequest',
  full_name='gitaly.CommitLanguagesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CommitLanguagesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.CommitLanguagesRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3316,
  serialized_end=3404,
)


_COMMITLANGUAGESRESPONSE_LANGUAGE = _descriptor.Descriptor(
  name='Language',
  full_name='gitaly.CommitLanguagesResponse.Language',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='gitaly.CommitLanguagesResponse.Language.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='share', full_name='gitaly.CommitLanguagesResponse.Language.share', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='color', full_name='gitaly.CommitLanguagesResponse.Language.color', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='file_count', full_name='gitaly.CommitLanguagesResponse.Language.file_count', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bytes', full_name='gitaly.CommitLanguagesResponse.Language.bytes', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3495,
  serialized_end=3584,
)

_COMMITLANGUAGESRESPONSE = _descriptor.Descriptor(
  name='CommitLanguagesResponse',
  full_name='gitaly.CommitLanguagesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='languages', full_name='gitaly.CommitLanguagesResponse.languages', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_COMMITLANGUAGESRESPONSE_LANGUAGE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3407,
  serialized_end=3584,
)


_RAWBLAMEREQUEST = _descriptor.Descriptor(
  name='RawBlameRequest',
  full_name='gitaly.RawBlameRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.RawBlameRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.RawBlameRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.RawBlameRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3586,
  serialized_end=3681,
)


_RAWBLAMERESPONSE = _descriptor.Descriptor(
  name='RawBlameResponse',
  full_name='gitaly.RawBlameResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='gitaly.RawBlameResponse.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3683,
  serialized_end=3715,
)


_LASTCOMMITFORPATHREQUEST = _descriptor.Descriptor(
  name='LastCommitForPathRequest',
  full_name='gitaly.LastCommitForPathRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.LastCommitForPathRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.LastCommitForPathRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.LastCommitForPathRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='literal_pathspec', full_name='gitaly.LastCommitForPathRequest.literal_pathspec', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='global_options', full_name='gitaly.LastCommitForPathRequest.global_options', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3718,
  serialized_end=3895,
)


_LASTCOMMITFORPATHRESPONSE = _descriptor.Descriptor(
  name='LastCommitForPathResponse',
  full_name='gitaly.LastCommitForPathResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='gitaly.LastCommitForPathResponse.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3897,
  serialized_end=3959,
)


_LISTLASTCOMMITSFORTREEREQUEST = _descriptor.Descriptor(
  name='ListLastCommitsForTreeRequest',
  full_name='gitaly.ListLastCommitsForTreeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ListLastCommitsForTreeRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.ListLastCommitsForTreeRequest.revision', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.ListLastCommitsForTreeRequest.path', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='gitaly.ListLastCommitsForTreeRequest.limit', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='gitaly.ListLastCommitsForTreeRequest.offset', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='literal_pathspec', full_name='gitaly.ListLastCommitsForTreeRequest.literal_pathspec', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='global_options', full_name='gitaly.ListLastCommitsForTreeRequest.global_options', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3962,
  serialized_end=4179,
)


_LISTLASTCOMMITSFORTREERESPONSE_COMMITFORTREE = _descriptor.Descriptor(
  name='CommitForTree',
  full_name='gitaly.ListLastCommitsForTreeResponse.CommitForTree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='gitaly.ListLastCommitsForTreeResponse.CommitForTree.commit', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path_bytes', full_name='gitaly.ListLastCommitsForTreeResponse.CommitForTree.path_bytes', index=1,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4287,
  serialized_end=4369,
)

_LISTLASTCOMMITSFORTREERESPONSE = _descriptor.Descriptor(
  name='ListLastCommitsForTreeResponse',
  full_name='gitaly.ListLastCommitsForTreeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='gitaly.ListLastCommitsForTreeResponse.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LISTLASTCOMMITSFORTREERESPONSE_COMMITFORTREE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4182,
  serialized_end=4369,
)


_COMMITSBYMESSAGEREQUEST = _descriptor.Descriptor(
  name='CommitsByMessageRequest',
  full_name='gitaly.CommitsByMessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.CommitsByMessageRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='revision', full_name='gitaly.CommitsByMessageRequest.revision', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='gitaly.CommitsByMessageRequest.offset', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='gitaly.CommitsByMessageRequest.limit', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='path', full_name='gitaly.CommitsByMessageRequest.path', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='query', full_name='gitaly.CommitsByMessageRequest.query', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='global_options', full_name='gitaly.CommitsByMessageRequest.global_options', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4372,
  serialized_end=4568,
)


_COMMITSBYMESSAGERESPONSE = _descriptor.Descriptor(
  name='CommitsByMessageResponse',
  full_name='gitaly.CommitsByMessageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='gitaly.CommitsByMessageResponse.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4570,
  serialized_end=4632,
)


_FILTERSHASWITHSIGNATURESREQUEST = _descriptor.Descriptor(
  name='FilterShasWithSignaturesRequest',
  full_name='gitaly.FilterShasWithSignaturesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.FilterShasWithSignaturesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='shas', full_name='gitaly.FilterShasWithSignaturesRequest.shas', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4634,
  serialized_end=4727,
)


_FILTERSHASWITHSIGNATURESRESPONSE = _descriptor.Descriptor(
  name='FilterShasWithSignaturesResponse',
  full_name='gitaly.FilterShasWithSignaturesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='shas', full_name='gitaly.FilterShasWithSignaturesResponse.shas', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4729,
  serialized_end=4777,
)


_EXTRACTCOMMITSIGNATUREREQUEST = _descriptor.Descriptor(
  name='ExtractCommitSignatureRequest',
  full_name='gitaly.ExtractCommitSignatureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.ExtractCommitSignatureRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.ExtractCommitSignatureRequest.commit_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4779,
  serialized_end=4875,
)


_EXTRACTCOMMITSIGNATURERESPONSE = _descriptor.Descriptor(
  name='ExtractCommitSignatureResponse',
  full_name='gitaly.ExtractCommitSignatureResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='signature', full_name='gitaly.ExtractCommitSignatureResponse.signature', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signed_text', full_name='gitaly.ExtractCommitSignatureResponse.signed_text', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4877,
  serialized_end=4949,
)


_GETCOMMITSIGNATURESREQUEST = _descriptor.Descriptor(
  name='GetCommitSignaturesRequest',
  full_name='gitaly.GetCommitSignaturesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.GetCommitSignaturesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='commit_ids', full_name='gitaly.GetCommitSignaturesRequest.commit_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4951,
  serialized_end=5045,
)


_GETCOMMITSIGNATURESRESPONSE = _descriptor.Descriptor(
  name='GetCommitSignaturesResponse',
  full_name='gitaly.GetCommitSignaturesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.GetCommitSignaturesResponse.commit_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signature', full_name='gitaly.GetCommitSignaturesResponse.signature', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signed_text', full_name='gitaly.GetCommitSignaturesResponse.signed_text', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5047,
  serialized_end=5135,
)


_GETCOMMITMESSAGESREQUEST = _descriptor.Descriptor(
  name='GetCommitMessagesRequest',
  full_name='gitaly.GetCommitMessagesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='gitaly.GetCommitMessagesRequest.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\230\306,\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='commit_ids', full_name='gitaly.GetCommitMessagesRequest.commit_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5137,
  serialized_end=5229,
)


_GETCOMMITMESSAGESRESPONSE = _descriptor.Descriptor(
  name='GetCommitMessagesResponse',
  full_name='gitaly.GetCommitMessagesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='gitaly.GetCommitMessagesResponse.commit_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='gitaly.GetCommitMessagesResponse.message', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5231,
  serialized_end=5294,
)

_COMMITSTATSREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_COMMITISANCESTORREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_TREEENTRYREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_TREEENTRYRESPONSE.fields_by_name['type'].enum_type = _TREEENTRYRESPONSE_OBJECTTYPE
_TREEENTRYRESPONSE_OBJECTTYPE.containing_type = _TREEENTRYRESPONSE
_COMMITSBETWEENREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_COMMITSBETWEENRESPONSE.fields_by_name['commits'].message_type = shared__pb2._GITCOMMIT
_COUNTCOMMITSREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_COUNTCOMMITSREQUEST.fields_by_name['after'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COUNTCOMMITSREQUEST.fields_by_name['before'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_COUNTCOMMITSREQUEST.fields_by_name['global_options'].message_type = shared__pb2._GLOBALOPTIONS
_COUNTDIVERGINGCOMMITSREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_TREEENTRY.fields_by_name['type'].enum_type = _TREEENTRY_ENTRYTYPE
_TREEENTRY_ENTRYTYPE.containing_type = _TREEENTRY
_GETTREEENTRIESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_GETTREEENTRIESRESPONSE.fields_by_name['entries'].message_type = _TREEENTRY
_LISTFILESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_FINDCOMMITREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_FINDCOMMITRESPONSE.fields_by_name['commit'].message_type = shared__pb2._GITCOMMIT
_LISTCOMMITSBYOIDREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_LISTCOMMITSBYOIDRESPONSE.fields_by_name['commits'].message_type = shared__pb2._GITCOMMIT
_LISTCOMMITSBYREFNAMEREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_LISTCOMMITSBYREFNAMERESPONSE_COMMITFORREF.fields_by_name['commit'].message_type = shared__pb2._GITCOMMIT
_LISTCOMMITSBYREFNAMERESPONSE_COMMITFORREF.containing_type = _LISTCOMMITSBYREFNAMERESPONSE
_LISTCOMMITSBYREFNAMERESPONSE.fields_by_name['commit_refs'].message_type = _LISTCOMMITSBYREFNAMERESPONSE_COMMITFORREF
_FINDALLCOMMITSREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_FINDALLCOMMITSREQUEST.fields_by_name['order'].enum_type = _FINDALLCOMMITSREQUEST_ORDER
_FINDALLCOMMITSREQUEST_ORDER.containing_type = _FINDALLCOMMITSREQUEST
_FINDALLCOMMITSRESPONSE.fields_by_name['commits'].message_type = shared__pb2._GITCOMMIT
_FINDCOMMITSREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_FINDCOMMITSREQUEST.fields_by_name['after'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_FINDCOMMITSREQUEST.fields_by_name['before'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_FINDCOMMITSREQUEST.fields_by_name['order'].enum_type = _FINDCOMMITSREQUEST_ORDER
_FINDCOMMITSREQUEST.fields_by_name['global_options'].message_type = shared__pb2._GLOBALOPTIONS
_FINDCOMMITSREQUEST_ORDER.containing_type = _FINDCOMMITSREQUEST
_FINDCOMMITSRESPONSE.fields_by_name['commits'].message_type = shared__pb2._GITCOMMIT
_COMMITLANGUAGESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_COMMITLANGUAGESRESPONSE_LANGUAGE.containing_type = _COMMITLANGUAGESRESPONSE
_COMMITLANGUAGESRESPONSE.fields_by_name['languages'].message_type = _COMMITLANGUAGESRESPONSE_LANGUAGE
_RAWBLAMEREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_LASTCOMMITFORPATHREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_LASTCOMMITFORPATHREQUEST.fields_by_name['global_options'].message_type = shared__pb2._GLOBALOPTIONS
_LASTCOMMITFORPATHRESPONSE.fields_by_name['commit'].message_type = shared__pb2._GITCOMMIT
_LISTLASTCOMMITSFORTREEREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_LISTLASTCOMMITSFORTREEREQUEST.fields_by_name['global_options'].message_type = shared__pb2._GLOBALOPTIONS
_LISTLASTCOMMITSFORTREERESPONSE_COMMITFORTREE.fields_by_name['commit'].message_type = shared__pb2._GITCOMMIT
_LISTLASTCOMMITSFORTREERESPONSE_COMMITFORTREE.containing_type = _LISTLASTCOMMITSFORTREERESPONSE
_LISTLASTCOMMITSFORTREERESPONSE.fields_by_name['commits'].message_type = _LISTLASTCOMMITSFORTREERESPONSE_COMMITFORTREE
_COMMITSBYMESSAGEREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_COMMITSBYMESSAGEREQUEST.fields_by_name['global_options'].message_type = shared__pb2._GLOBALOPTIONS
_COMMITSBYMESSAGERESPONSE.fields_by_name['commits'].message_type = shared__pb2._GITCOMMIT
_FILTERSHASWITHSIGNATURESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_EXTRACTCOMMITSIGNATUREREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_GETCOMMITSIGNATURESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
_GETCOMMITMESSAGESREQUEST.fields_by_name['repository'].message_type = shared__pb2._REPOSITORY
DESCRIPTOR.message_types_by_name['CommitStatsRequest'] = _COMMITSTATSREQUEST
DESCRIPTOR.message_types_by_name['CommitStatsResponse'] = _COMMITSTATSRESPONSE
DESCRIPTOR.message_types_by_name['CommitIsAncestorRequest'] = _COMMITISANCESTORREQUEST
DESCRIPTOR.message_types_by_name['CommitIsAncestorResponse'] = _COMMITISANCESTORRESPONSE
DESCRIPTOR.message_types_by_name['TreeEntryRequest'] = _TREEENTRYREQUEST
DESCRIPTOR.message_types_by_name['TreeEntryResponse'] = _TREEENTRYRESPONSE
DESCRIPTOR.message_types_by_name['CommitsBetweenRequest'] = _COMMITSBETWEENREQUEST
DESCRIPTOR.message_types_by_name['CommitsBetweenResponse'] = _COMMITSBETWEENRESPONSE
DESCRIPTOR.message_types_by_name['CountCommitsRequest'] = _COUNTCOMMITSREQUEST
DESCRIPTOR.message_types_by_name['CountCommitsResponse'] = _COUNTCOMMITSRESPONSE
DESCRIPTOR.message_types_by_name['CountDivergingCommitsRequest'] = _COUNTDIVERGINGCOMMITSREQUEST
DESCRIPTOR.message_types_by_name['CountDivergingCommitsResponse'] = _COUNTDIVERGINGCOMMITSRESPONSE
DESCRIPTOR.message_types_by_name['TreeEntry'] = _TREEENTRY
DESCRIPTOR.message_types_by_name['GetTreeEntriesRequest'] = _GETTREEENTRIESREQUEST
DESCRIPTOR.message_types_by_name['GetTreeEntriesResponse'] = _GETTREEENTRIESRESPONSE
DESCRIPTOR.message_types_by_name['ListFilesRequest'] = _LISTFILESREQUEST
DESCRIPTOR.message_types_by_name['ListFilesResponse'] = _LISTFILESRESPONSE
DESCRIPTOR.message_types_by_name['FindCommitRequest'] = _FINDCOMMITREQUEST
DESCRIPTOR.message_types_by_name['FindCommitResponse'] = _FINDCOMMITRESPONSE
DESCRIPTOR.message_types_by_name['ListCommitsByOidRequest'] = _LISTCOMMITSBYOIDREQUEST
DESCRIPTOR.message_types_by_name['ListCommitsByOidResponse'] = _LISTCOMMITSBYOIDRESPONSE
DESCRIPTOR.message_types_by_name['ListCommitsByRefNameRequest'] = _LISTCOMMITSBYREFNAMEREQUEST
DESCRIPTOR.message_types_by_name['ListCommitsByRefNameResponse'] = _LISTCOMMITSBYREFNAMERESPONSE
DESCRIPTOR.message_types_by_name['FindAllCommitsRequest'] = _FINDALLCOMMITSREQUEST
DESCRIPTOR.message_types_by_name['FindAllCommitsResponse'] = _FINDALLCOMMITSRESPONSE
DESCRIPTOR.message_types_by_name['FindCommitsRequest'] = _FINDCOMMITSREQUEST
DESCRIPTOR.message_types_by_name['FindCommitsResponse'] = _FINDCOMMITSRESPONSE
DESCRIPTOR.message_types_by_name['CommitLanguagesRequest'] = _COMMITLANGUAGESREQUEST
DESCRIPTOR.message_types_by_name['CommitLanguagesResponse'] = _COMMITLANGUAGESRESPONSE
DESCRIPTOR.message_types_by_name['RawBlameRequest'] = _RAWBLAMEREQUEST
DESCRIPTOR.message_types_by_name['RawBlameResponse'] = _RAWBLAMERESPONSE
DESCRIPTOR.message_types_by_name['LastCommitForPathRequest'] = _LASTCOMMITFORPATHREQUEST
DESCRIPTOR.message_types_by_name['LastCommitForPathResponse'] = _LASTCOMMITFORPATHRESPONSE
DESCRIPTOR.message_types_by_name['ListLastCommitsForTreeRequest'] = _LISTLASTCOMMITSFORTREEREQUEST
DESCRIPTOR.message_types_by_name['ListLastCommitsForTreeResponse'] = _LISTLASTCOMMITSFORTREERESPONSE
DESCRIPTOR.message_types_by_name['CommitsByMessageRequest'] = _COMMITSBYMESSAGEREQUEST
DESCRIPTOR.message_types_by_name['CommitsByMessageResponse'] = _COMMITSBYMESSAGERESPONSE
DESCRIPTOR.message_types_by_name['FilterShasWithSignaturesRequest'] = _FILTERSHASWITHSIGNATURESREQUEST
DESCRIPTOR.message_types_by_name['FilterShasWithSignaturesResponse'] = _FILTERSHASWITHSIGNATURESRESPONSE
DESCRIPTOR.message_types_by_name['ExtractCommitSignatureRequest'] = _EXTRACTCOMMITSIGNATUREREQUEST
DESCRIPTOR.message_types_by_name['ExtractCommitSignatureResponse'] = _EXTRACTCOMMITSIGNATURERESPONSE
DESCRIPTOR.message_types_by_name['GetCommitSignaturesRequest'] = _GETCOMMITSIGNATURESREQUEST
DESCRIPTOR.message_types_by_name['GetCommitSignaturesResponse'] = _GETCOMMITSIGNATURESRESPONSE
DESCRIPTOR.message_types_by_name['GetCommitMessagesRequest'] = _GETCOMMITMESSAGESREQUEST
DESCRIPTOR.message_types_by_name['GetCommitMessagesResponse'] = _GETCOMMITMESSAGESRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommitStatsRequest = _reflection.GeneratedProtocolMessageType('CommitStatsRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSTATSREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitStatsRequest)
  })
_sym_db.RegisterMessage(CommitStatsRequest)

CommitStatsResponse = _reflection.GeneratedProtocolMessageType('CommitStatsResponse', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSTATSRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitStatsResponse)
  })
_sym_db.RegisterMessage(CommitStatsResponse)

CommitIsAncestorRequest = _reflection.GeneratedProtocolMessageType('CommitIsAncestorRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMITISANCESTORREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitIsAncestorRequest)
  })
_sym_db.RegisterMessage(CommitIsAncestorRequest)

CommitIsAncestorResponse = _reflection.GeneratedProtocolMessageType('CommitIsAncestorResponse', (_message.Message,), {
  'DESCRIPTOR' : _COMMITISANCESTORRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitIsAncestorResponse)
  })
_sym_db.RegisterMessage(CommitIsAncestorResponse)

TreeEntryRequest = _reflection.GeneratedProtocolMessageType('TreeEntryRequest', (_message.Message,), {
  'DESCRIPTOR' : _TREEENTRYREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.TreeEntryRequest)
  })
_sym_db.RegisterMessage(TreeEntryRequest)

TreeEntryResponse = _reflection.GeneratedProtocolMessageType('TreeEntryResponse', (_message.Message,), {
  'DESCRIPTOR' : _TREEENTRYRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.TreeEntryResponse)
  })
_sym_db.RegisterMessage(TreeEntryResponse)

CommitsBetweenRequest = _reflection.GeneratedProtocolMessageType('CommitsBetweenRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSBETWEENREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitsBetweenRequest)
  })
_sym_db.RegisterMessage(CommitsBetweenRequest)

CommitsBetweenResponse = _reflection.GeneratedProtocolMessageType('CommitsBetweenResponse', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSBETWEENRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitsBetweenResponse)
  })
_sym_db.RegisterMessage(CommitsBetweenResponse)

CountCommitsRequest = _reflection.GeneratedProtocolMessageType('CountCommitsRequest', (_message.Message,), {
  'DESCRIPTOR' : _COUNTCOMMITSREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CountCommitsRequest)
  })
_sym_db.RegisterMessage(CountCommitsRequest)

CountCommitsResponse = _reflection.GeneratedProtocolMessageType('CountCommitsResponse', (_message.Message,), {
  'DESCRIPTOR' : _COUNTCOMMITSRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CountCommitsResponse)
  })
_sym_db.RegisterMessage(CountCommitsResponse)

CountDivergingCommitsRequest = _reflection.GeneratedProtocolMessageType('CountDivergingCommitsRequest', (_message.Message,), {
  'DESCRIPTOR' : _COUNTDIVERGINGCOMMITSREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CountDivergingCommitsRequest)
  })
_sym_db.RegisterMessage(CountDivergingCommitsRequest)

CountDivergingCommitsResponse = _reflection.GeneratedProtocolMessageType('CountDivergingCommitsResponse', (_message.Message,), {
  'DESCRIPTOR' : _COUNTDIVERGINGCOMMITSRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CountDivergingCommitsResponse)
  })
_sym_db.RegisterMessage(CountDivergingCommitsResponse)

TreeEntry = _reflection.GeneratedProtocolMessageType('TreeEntry', (_message.Message,), {
  'DESCRIPTOR' : _TREEENTRY,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.TreeEntry)
  })
_sym_db.RegisterMessage(TreeEntry)

GetTreeEntriesRequest = _reflection.GeneratedProtocolMessageType('GetTreeEntriesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTREEENTRIESREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.GetTreeEntriesRequest)
  })
_sym_db.RegisterMessage(GetTreeEntriesRequest)

GetTreeEntriesResponse = _reflection.GeneratedProtocolMessageType('GetTreeEntriesResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTREEENTRIESRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.GetTreeEntriesResponse)
  })
_sym_db.RegisterMessage(GetTreeEntriesResponse)

ListFilesRequest = _reflection.GeneratedProtocolMessageType('ListFilesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTFILESREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListFilesRequest)
  })
_sym_db.RegisterMessage(ListFilesRequest)

ListFilesResponse = _reflection.GeneratedProtocolMessageType('ListFilesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTFILESRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListFilesResponse)
  })
_sym_db.RegisterMessage(ListFilesResponse)

FindCommitRequest = _reflection.GeneratedProtocolMessageType('FindCommitRequest', (_message.Message,), {
  'DESCRIPTOR' : _FINDCOMMITREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FindCommitRequest)
  })
_sym_db.RegisterMessage(FindCommitRequest)

FindCommitResponse = _reflection.GeneratedProtocolMessageType('FindCommitResponse', (_message.Message,), {
  'DESCRIPTOR' : _FINDCOMMITRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FindCommitResponse)
  })
_sym_db.RegisterMessage(FindCommitResponse)

ListCommitsByOidRequest = _reflection.GeneratedProtocolMessageType('ListCommitsByOidRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTCOMMITSBYOIDREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListCommitsByOidRequest)
  })
_sym_db.RegisterMessage(ListCommitsByOidRequest)

ListCommitsByOidResponse = _reflection.GeneratedProtocolMessageType('ListCommitsByOidResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTCOMMITSBYOIDRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListCommitsByOidResponse)
  })
_sym_db.RegisterMessage(ListCommitsByOidResponse)

ListCommitsByRefNameRequest = _reflection.GeneratedProtocolMessageType('ListCommitsByRefNameRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTCOMMITSBYREFNAMEREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListCommitsByRefNameRequest)
  })
_sym_db.RegisterMessage(ListCommitsByRefNameRequest)

ListCommitsByRefNameResponse = _reflection.GeneratedProtocolMessageType('ListCommitsByRefNameResponse', (_message.Message,), {

  'CommitForRef' : _reflection.GeneratedProtocolMessageType('CommitForRef', (_message.Message,), {
    'DESCRIPTOR' : _LISTCOMMITSBYREFNAMERESPONSE_COMMITFORREF,
    '__module__' : 'commit_pb2'
    # @@protoc_insertion_point(class_scope:gitaly.ListCommitsByRefNameResponse.CommitForRef)
    })
  ,
  'DESCRIPTOR' : _LISTCOMMITSBYREFNAMERESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListCommitsByRefNameResponse)
  })
_sym_db.RegisterMessage(ListCommitsByRefNameResponse)
_sym_db.RegisterMessage(ListCommitsByRefNameResponse.CommitForRef)

FindAllCommitsRequest = _reflection.GeneratedProtocolMessageType('FindAllCommitsRequest', (_message.Message,), {
  'DESCRIPTOR' : _FINDALLCOMMITSREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FindAllCommitsRequest)
  })
_sym_db.RegisterMessage(FindAllCommitsRequest)

FindAllCommitsResponse = _reflection.GeneratedProtocolMessageType('FindAllCommitsResponse', (_message.Message,), {
  'DESCRIPTOR' : _FINDALLCOMMITSRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FindAllCommitsResponse)
  })
_sym_db.RegisterMessage(FindAllCommitsResponse)

FindCommitsRequest = _reflection.GeneratedProtocolMessageType('FindCommitsRequest', (_message.Message,), {
  'DESCRIPTOR' : _FINDCOMMITSREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FindCommitsRequest)
  })
_sym_db.RegisterMessage(FindCommitsRequest)

FindCommitsResponse = _reflection.GeneratedProtocolMessageType('FindCommitsResponse', (_message.Message,), {
  'DESCRIPTOR' : _FINDCOMMITSRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FindCommitsResponse)
  })
_sym_db.RegisterMessage(FindCommitsResponse)

CommitLanguagesRequest = _reflection.GeneratedProtocolMessageType('CommitLanguagesRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMITLANGUAGESREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitLanguagesRequest)
  })
_sym_db.RegisterMessage(CommitLanguagesRequest)

CommitLanguagesResponse = _reflection.GeneratedProtocolMessageType('CommitLanguagesResponse', (_message.Message,), {

  'Language' : _reflection.GeneratedProtocolMessageType('Language', (_message.Message,), {
    'DESCRIPTOR' : _COMMITLANGUAGESRESPONSE_LANGUAGE,
    '__module__' : 'commit_pb2'
    # @@protoc_insertion_point(class_scope:gitaly.CommitLanguagesResponse.Language)
    })
  ,
  'DESCRIPTOR' : _COMMITLANGUAGESRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitLanguagesResponse)
  })
_sym_db.RegisterMessage(CommitLanguagesResponse)
_sym_db.RegisterMessage(CommitLanguagesResponse.Language)

RawBlameRequest = _reflection.GeneratedProtocolMessageType('RawBlameRequest', (_message.Message,), {
  'DESCRIPTOR' : _RAWBLAMEREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.RawBlameRequest)
  })
_sym_db.RegisterMessage(RawBlameRequest)

RawBlameResponse = _reflection.GeneratedProtocolMessageType('RawBlameResponse', (_message.Message,), {
  'DESCRIPTOR' : _RAWBLAMERESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.RawBlameResponse)
  })
_sym_db.RegisterMessage(RawBlameResponse)

LastCommitForPathRequest = _reflection.GeneratedProtocolMessageType('LastCommitForPathRequest', (_message.Message,), {
  'DESCRIPTOR' : _LASTCOMMITFORPATHREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.LastCommitForPathRequest)
  })
_sym_db.RegisterMessage(LastCommitForPathRequest)

LastCommitForPathResponse = _reflection.GeneratedProtocolMessageType('LastCommitForPathResponse', (_message.Message,), {
  'DESCRIPTOR' : _LASTCOMMITFORPATHRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.LastCommitForPathResponse)
  })
_sym_db.RegisterMessage(LastCommitForPathResponse)

ListLastCommitsForTreeRequest = _reflection.GeneratedProtocolMessageType('ListLastCommitsForTreeRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTLASTCOMMITSFORTREEREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListLastCommitsForTreeRequest)
  })
_sym_db.RegisterMessage(ListLastCommitsForTreeRequest)

ListLastCommitsForTreeResponse = _reflection.GeneratedProtocolMessageType('ListLastCommitsForTreeResponse', (_message.Message,), {

  'CommitForTree' : _reflection.GeneratedProtocolMessageType('CommitForTree', (_message.Message,), {
    'DESCRIPTOR' : _LISTLASTCOMMITSFORTREERESPONSE_COMMITFORTREE,
    '__module__' : 'commit_pb2'
    # @@protoc_insertion_point(class_scope:gitaly.ListLastCommitsForTreeResponse.CommitForTree)
    })
  ,
  'DESCRIPTOR' : _LISTLASTCOMMITSFORTREERESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ListLastCommitsForTreeResponse)
  })
_sym_db.RegisterMessage(ListLastCommitsForTreeResponse)
_sym_db.RegisterMessage(ListLastCommitsForTreeResponse.CommitForTree)

CommitsByMessageRequest = _reflection.GeneratedProtocolMessageType('CommitsByMessageRequest', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSBYMESSAGEREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitsByMessageRequest)
  })
_sym_db.RegisterMessage(CommitsByMessageRequest)

CommitsByMessageResponse = _reflection.GeneratedProtocolMessageType('CommitsByMessageResponse', (_message.Message,), {
  'DESCRIPTOR' : _COMMITSBYMESSAGERESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.CommitsByMessageResponse)
  })
_sym_db.RegisterMessage(CommitsByMessageResponse)

FilterShasWithSignaturesRequest = _reflection.GeneratedProtocolMessageType('FilterShasWithSignaturesRequest', (_message.Message,), {
  'DESCRIPTOR' : _FILTERSHASWITHSIGNATURESREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FilterShasWithSignaturesRequest)
  })
_sym_db.RegisterMessage(FilterShasWithSignaturesRequest)

FilterShasWithSignaturesResponse = _reflection.GeneratedProtocolMessageType('FilterShasWithSignaturesResponse', (_message.Message,), {
  'DESCRIPTOR' : _FILTERSHASWITHSIGNATURESRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.FilterShasWithSignaturesResponse)
  })
_sym_db.RegisterMessage(FilterShasWithSignaturesResponse)

ExtractCommitSignatureRequest = _reflection.GeneratedProtocolMessageType('ExtractCommitSignatureRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTCOMMITSIGNATUREREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ExtractCommitSignatureRequest)
  })
_sym_db.RegisterMessage(ExtractCommitSignatureRequest)

ExtractCommitSignatureResponse = _reflection.GeneratedProtocolMessageType('ExtractCommitSignatureResponse', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTCOMMITSIGNATURERESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.ExtractCommitSignatureResponse)
  })
_sym_db.RegisterMessage(ExtractCommitSignatureResponse)

GetCommitSignaturesRequest = _reflection.GeneratedProtocolMessageType('GetCommitSignaturesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCOMMITSIGNATURESREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.GetCommitSignaturesRequest)
  })
_sym_db.RegisterMessage(GetCommitSignaturesRequest)

GetCommitSignaturesResponse = _reflection.GeneratedProtocolMessageType('GetCommitSignaturesResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCOMMITSIGNATURESRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.GetCommitSignaturesResponse)
  })
_sym_db.RegisterMessage(GetCommitSignaturesResponse)

GetCommitMessagesRequest = _reflection.GeneratedProtocolMessageType('GetCommitMessagesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCOMMITMESSAGESREQUEST,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.GetCommitMessagesRequest)
  })
_sym_db.RegisterMessage(GetCommitMessagesRequest)

GetCommitMessagesResponse = _reflection.GeneratedProtocolMessageType('GetCommitMessagesResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCOMMITMESSAGESRESPONSE,
  '__module__' : 'commit_pb2'
  # @@protoc_insertion_point(class_scope:gitaly.GetCommitMessagesResponse)
  })
_sym_db.RegisterMessage(GetCommitMessagesResponse)


DESCRIPTOR._options = None
_COMMITSTATSREQUEST.fields_by_name['repository']._options = None
_COMMITISANCESTORREQUEST.fields_by_name['repository']._options = None
_TREEENTRYREQUEST.fields_by_name['repository']._options = None
_COMMITSBETWEENREQUEST.fields_by_name['repository']._options = None
_COUNTCOMMITSREQUEST.fields_by_name['repository']._options = None
_COUNTDIVERGINGCOMMITSREQUEST.fields_by_name['repository']._options = None
_GETTREEENTRIESREQUEST.fields_by_name['repository']._options = None
_LISTFILESREQUEST.fields_by_name['repository']._options = None
_FINDCOMMITREQUEST.fields_by_name['repository']._options = None
_LISTCOMMITSBYOIDREQUEST.fields_by_name['repository']._options = None
_LISTCOMMITSBYREFNAMEREQUEST.fields_by_name['repository']._options = None
_FINDALLCOMMITSREQUEST.fields_by_name['repository']._options = None
_FINDCOMMITSREQUEST.fields_by_name['repository']._options = None
_COMMITLANGUAGESREQUEST.fields_by_name['repository']._options = None
_RAWBLAMEREQUEST.fields_by_name['repository']._options = None
_LASTCOMMITFORPATHREQUEST.fields_by_name['repository']._options = None
_LISTLASTCOMMITSFORTREEREQUEST.fields_by_name['repository']._options = None
_LISTLASTCOMMITSFORTREEREQUEST.fields_by_name['literal_pathspec']._options = None
_COMMITSBYMESSAGEREQUEST.fields_by_name['repository']._options = None
_FILTERSHASWITHSIGNATURESREQUEST.fields_by_name['repository']._options = None
_EXTRACTCOMMITSIGNATUREREQUEST.fields_by_name['repository']._options = None
_GETCOMMITSIGNATURESREQUEST.fields_by_name['repository']._options = None
_GETCOMMITMESSAGESREQUEST.fields_by_name['repository']._options = None

_COMMITSERVICE = _descriptor.ServiceDescriptor(
  name='CommitService',
  full_name='gitaly.CommitService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=5297,
  serialized_end=7274,
  methods=[
  _descriptor.MethodDescriptor(
    name='CommitIsAncestor',
    full_name='gitaly.CommitService.CommitIsAncestor',
    index=0,
    containing_service=None,
    input_type=_COMMITISANCESTORREQUEST,
    output_type=_COMMITISANCESTORRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='TreeEntry',
    full_name='gitaly.CommitService.TreeEntry',
    index=1,
    containing_service=None,
    input_type=_TREEENTRYREQUEST,
    output_type=_TREEENTRYRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CommitsBetween',
    full_name='gitaly.CommitService.CommitsBetween',
    index=2,
    containing_service=None,
    input_type=_COMMITSBETWEENREQUEST,
    output_type=_COMMITSBETWEENRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CountCommits',
    full_name='gitaly.CommitService.CountCommits',
    index=3,
    containing_service=None,
    input_type=_COUNTCOMMITSREQUEST,
    output_type=_COUNTCOMMITSRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CountDivergingCommits',
    full_name='gitaly.CommitService.CountDivergingCommits',
    index=4,
    containing_service=None,
    input_type=_COUNTDIVERGINGCOMMITSREQUEST,
    output_type=_COUNTDIVERGINGCOMMITSRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTreeEntries',
    full_name='gitaly.CommitService.GetTreeEntries',
    index=5,
    containing_service=None,
    input_type=_GETTREEENTRIESREQUEST,
    output_type=_GETTREEENTRIESRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListFiles',
    full_name='gitaly.CommitService.ListFiles',
    index=6,
    containing_service=None,
    input_type=_LISTFILESREQUEST,
    output_type=_LISTFILESRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FindCommit',
    full_name='gitaly.CommitService.FindCommit',
    index=7,
    containing_service=None,
    input_type=_FINDCOMMITREQUEST,
    output_type=_FINDCOMMITRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CommitStats',
    full_name='gitaly.CommitService.CommitStats',
    index=8,
    containing_service=None,
    input_type=_COMMITSTATSREQUEST,
    output_type=_COMMITSTATSRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FindAllCommits',
    full_name='gitaly.CommitService.FindAllCommits',
    index=9,
    containing_service=None,
    input_type=_FINDALLCOMMITSREQUEST,
    output_type=_FINDALLCOMMITSRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FindCommits',
    full_name='gitaly.CommitService.FindCommits',
    index=10,
    containing_service=None,
    input_type=_FINDCOMMITSREQUEST,
    output_type=_FINDCOMMITSRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CommitLanguages',
    full_name='gitaly.CommitService.CommitLanguages',
    index=11,
    containing_service=None,
    input_type=_COMMITLANGUAGESREQUEST,
    output_type=_COMMITLANGUAGESRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='RawBlame',
    full_name='gitaly.CommitService.RawBlame',
    index=12,
    containing_service=None,
    input_type=_RAWBLAMEREQUEST,
    output_type=_RAWBLAMERESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='LastCommitForPath',
    full_name='gitaly.CommitService.LastCommitForPath',
    index=13,
    containing_service=None,
    input_type=_LASTCOMMITFORPATHREQUEST,
    output_type=_LASTCOMMITFORPATHRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListLastCommitsForTree',
    full_name='gitaly.CommitService.ListLastCommitsForTree',
    index=14,
    containing_service=None,
    input_type=_LISTLASTCOMMITSFORTREEREQUEST,
    output_type=_LISTLASTCOMMITSFORTREERESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CommitsByMessage',
    full_name='gitaly.CommitService.CommitsByMessage',
    index=15,
    containing_service=None,
    input_type=_COMMITSBYMESSAGEREQUEST,
    output_type=_COMMITSBYMESSAGERESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListCommitsByOid',
    full_name='gitaly.CommitService.ListCommitsByOid',
    index=16,
    containing_service=None,
    input_type=_LISTCOMMITSBYOIDREQUEST,
    output_type=_LISTCOMMITSBYOIDRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListCommitsByRefName',
    full_name='gitaly.CommitService.ListCommitsByRefName',
    index=17,
    containing_service=None,
    input_type=_LISTCOMMITSBYREFNAMEREQUEST,
    output_type=_LISTCOMMITSBYREFNAMERESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FilterShasWithSignatures',
    full_name='gitaly.CommitService.FilterShasWithSignatures',
    index=18,
    containing_service=None,
    input_type=_FILTERSHASWITHSIGNATURESREQUEST,
    output_type=_FILTERSHASWITHSIGNATURESRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCommitSignatures',
    full_name='gitaly.CommitService.GetCommitSignatures',
    index=19,
    containing_service=None,
    input_type=_GETCOMMITSIGNATURESREQUEST,
    output_type=_GETCOMMITSIGNATURESRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCommitMessages',
    full_name='gitaly.CommitService.GetCommitMessages',
    index=20,
    containing_service=None,
    input_type=_GETCOMMITMESSAGESREQUEST,
    output_type=_GETCOMMITMESSAGESRESPONSE,
    serialized_options=b'\372\227(\002\010\002',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMMITSERVICE)

DESCRIPTOR.services_by_name['CommitService'] = _COMMITSERVICE

# @@protoc_insertion_point(module_scope)
