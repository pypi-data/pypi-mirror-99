[tool.poetry]
name = "weasel-client"
version = "0.0.9"
description = "`weasel-client` is a python library to access the `weasel-api`."
authors = ["Lennart Haas <haasl@cs.uni-bonn.de>", "Christopher Schmidt <>"]

[tool.poetry.scripts]
weasel_result_fetcher = 'weasel_client.scripts.raw_result_fetcher:main'

[tool.poetry.dependencies]
python = "^3.7"
requests = "^2.25.1"
python-dateutil  = "^2.8.1"

[tool.poetry.dev-dependencies]
pytest = "^6.2.1"
pylint = "^2.6.0"
pytest-cov = "^2.10.1"
black = "^20.8b1"
isort = "^5.7.0"
safety = "^1.10.2"
bandit = "^1.7.0"
requests = "^2.25.1"
poethepoet = "^0.9.0"
python-dateutil  = "^2.8.1"
python-semantic-release = "^7.11.0"
sphinx = "^3.4.3"
sphinx-rtd-theme = "^0.5.1"
sphinx-autobuild = "^2020.9.1"
httmock = "^1.4.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poe.tasks]
test = "pytest --cov weasel_client --cov-report term-missing tests"

integration-test = "pytest --cov weasel_client --cov-report term-missing integration_tests"

lint_pylint = "pylint weasel_client"
lint_black = "black weasel_client --check"
lint_isort = "isort weasel_client --check"
lint = ["lint_pylint", "lint_black", "lint_isort"]

format_isort = "isort weasel_client"
format_black = "black weasel_client"
format = ["format_isort", "format_black"]

safety_check_safety = "safety check"
safety_check_bandit = "bandit -s B301,B303,B403 -r weasel_client"
safety_check = ["safety_check_safety", "safety_check_bandit"]

docs = "sphinx-build docs docs/_build"
docs_autobuild = "sphinx-autobuild docs docs/_build"

[tool.semantic_release]
version_variable = [
    'weasel_client/__version__.py:__version__',
    'pyproject.toml:version',
]

major_on_zero = "false"
patch_without_tag = "true"
commit_parser = "semantic_release.history.emoji_parser"
build_command = "poetry build"
hvcs = "gitlab"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88