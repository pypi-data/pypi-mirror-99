{"version":3,"sources":["webpack:///./src/plugins/lists/entry/types.ts","webpack:///./src/plugins/lists/entry/hooks.tsx","webpack:///./src/plugins/lists/entry/EntryList.tsx"],"names":["SortBy","EntryListContainer","createPluginContainer","sortByOptions","useMemo","value","Added","label","Title","URL","addEntryProps","name","api","list","useGet","useFlexgetAPI","useAdd","Method","Post","useRemove","listId","Delete","entry","query","entryId","useRemoveBulk","PendingList","Provider","title"],"mappings":"kGAAWA,E,kCACX,SAAWA,GACPA,EAAM,MAAY,QAClBA,EAAM,MAAY,QAClBA,EAAM,IAAU,eAHpB,CAIGA,IAAWA,EAAS,K,aCAVC,EAAqBC,aAAsB,WACpD,MAAO,CACHC,cAAeC,mBAAQ,iBAAM,CACzB,CACIC,MAAOL,EAAOM,MACdC,MAAO,cAEX,CACIF,MAAOL,EAAOQ,MACdD,MAAO,SAEX,CACIF,MAAOL,EAAOS,IACdF,MAAO,UAEZ,IACHG,cAAeN,mBAAQ,iBAAM,CACzB,CACIG,MAAO,cACPI,KAAM,SAEV,CACIJ,MAAO,YACPI,KAAM,kBAEX,IACHC,IAAK,CACDC,KAAM,CACFC,OAAQ,kBAAMC,YAAc,gBAC5BC,OAAQ,kBAAMD,YAAc,cAAeE,IAAOC,OAClDC,UAAW,SAACC,GAAD,OAAYL,YAAc,eAAD,OAAgBK,GAAUH,IAAOI,UAEzEC,MAAO,CACHR,OAAQ,SAACM,EAAQG,GAAT,OAAmBR,YAAc,eAAD,OAAgBK,EAAhB,oBAAkCG,KAC1EP,OAAQ,SAACI,GAAD,OAAYL,YAAc,eAAD,OAAgBK,EAAhB,YAAkCH,IAAOC,OAC1EC,UAAW,SAACC,EAAQI,GAAT,OAAqBT,YAAc,eAAD,OAAgBK,EAAhB,oBAAkCI,GAAWP,IAAOI,SACjGI,cAAe,SAACL,GAAD,OAAYL,YAAc,eAAD,OAAgBK,EAAhB,kBAAwCH,IAAOI,e,OChCpFK,UALC,WAChB,OAAQ,YAACzB,EAAmB0B,SAApB,KACN,YAAC,IAAD,CAAaC,MAAM","file":"EntryListPlugin.c4b35103ad1660e69c44.js","sourcesContent":["export var SortBy;\n(function (SortBy) {\n    SortBy[\"Added\"] = \"added\";\n    SortBy[\"Title\"] = \"title\";\n    SortBy[\"URL\"] = \"original_url\";\n})(SortBy || (SortBy = {}));\n","import { useMemo } from 'react';\nimport { useFlexgetAPI } from 'core/api';\nimport { Method } from 'utils/fetch';\nimport { SortBy } from './types';\nimport { createPluginContainer } from '../base/hooks/api';\nexport const EntryListContainer = createPluginContainer(() => {\n    return {\n        sortByOptions: useMemo(() => [\n            {\n                value: SortBy.Added,\n                label: 'Date Added',\n            },\n            {\n                value: SortBy.Title,\n                label: 'Title',\n            },\n            {\n                value: SortBy.URL,\n                label: 'URL',\n            },\n        ], []),\n        addEntryProps: useMemo(() => [\n            {\n                label: 'Entry Title',\n                name: 'title',\n            },\n            {\n                label: 'Entry URL',\n                name: 'originalUrl',\n            },\n        ], []),\n        api: {\n            list: {\n                useGet: () => useFlexgetAPI('/entry_list'),\n                useAdd: () => useFlexgetAPI('/entry_list', Method.Post),\n                useRemove: (listId) => useFlexgetAPI(`/entry_list/${listId}`, Method.Delete),\n            },\n            entry: {\n                useGet: (listId, query) => useFlexgetAPI(`/entry_list/${listId}/entries?${query}`),\n                useAdd: (listId) => useFlexgetAPI(`/entry_list/${listId}/entries`, Method.Post),\n                useRemove: (listId, entryId) => useFlexgetAPI(`/entry_list/${listId}/entries/${entryId}`, Method.Delete),\n                useRemoveBulk: (listId) => useFlexgetAPI(`/entry_list/${listId}/entries/batch`, Method.Delete),\n            },\n        },\n    };\n});\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport ManagedList from '../base';\nimport { EntryListContainer } from './hooks';\nconst PendingList = () => {\n    return (<EntryListContainer.Provider>\n      <ManagedList title=\"Entry List\"/>\n    </EntryListContainer.Provider>);\n};\nexport default hot(PendingList);\n"],"sourceRoot":""}