{"version":3,"sources":["webpack:///./src/core/auth/LoginCard.tsx","webpack:///./src/common/WaveSpinner.tsx","webpack:///./src/core/auth/Logo.tsx","webpack:///./src/core/auth/Splash.tsx","webpack:///./src/core/auth/Login.tsx","webpack:///./src/common/inputs/formik/TextField.tsx","webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js"],"names":["card","theme","css","breakpoints","up","field","errorMessage","palette","error","main","content","LoginCard","setLoggedIn","useContainer","AuthContainer","useFlexgetAPI","Method","Post","loading","login","Card","initialValues","username","password","onSubmit","values","actions","ok","resetForm","CardContent","message","TextField","name","id","label","autoFocus","type","CardActions","Button","fullWidth","disabled","stretchDelay","keyframes","spinner","rect1","primary","rect2","rect3","rect4","rect5","WaveSpinner","logo","headerImage","Logo","SplashScreen","LoginPage","location","from","state","pathname","loggedIn","loginState","checkLogin","useEffect","fn","Splash","to","props","useField","touched","helperText","forwardRef","ref","classes","className","_props$raised","raised","other","createElement","root","elevation","overflow","_props$component","component","Component","padding","paddingBottom"],"mappings":"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","file":"14.18cf3ab07df2cff9c980.js","sourcesContent":["import React from 'react';\nimport { Form, Formik } from 'formik';\nimport { useContainer } from 'unstated-next';\nimport { css } from '@emotion/core';\nimport { CardContent, Card, Button, CardActions } from '@material-ui/core';\nimport { useFlexgetAPI } from 'core/api';\nimport { Method } from 'utils/fetch';\nimport TextField from 'common/inputs/formik/TextField';\nimport { AuthContainer } from './hooks';\nconst card = (theme) => css `\n  max-width: 40rem;\n  margin: 0 1rem;\n  ${theme.breakpoints.up('sm')} {\n    margin: 0 auto;\n  }\n`;\nconst field = css `\n  padding-bottom: 1rem;\n`;\nconst errorMessage = (theme) => css `\n  color: ${theme.palette.error.main};\n  text-align: center;\n  padding: 1rem;\n`;\nconst content = css `\n  display: flex;\n  flex-direction: column;\n`;\nconst LoginCard = () => {\n    const initialValues = { username: 'flexget', password: '' };\n    const [, setLoggedIn] = useContainer(AuthContainer);\n    const [{ error, loading }, login] = useFlexgetAPI('/auth/login', Method.Post);\n    return (<Card css={card}>\n      <Formik initialValues={initialValues} onSubmit={async (values, actions) => {\n        const resp = await login(values);\n        if (resp.ok) {\n            actions.resetForm();\n            setLoggedIn(true);\n        }\n    }}>\n        <Form>\n          <CardContent css={content}>\n            <div css={errorMessage}>{error?.message}</div>\n            <TextField css={field} name=\"username\" id=\"username\" label=\"Username\" autoFocus/>\n            <TextField css={field} name=\"password\" id=\"password\" label=\"Password\" type=\"Password\"/>\n          </CardContent>\n          <CardActions>\n            <Button type=\"submit\" fullWidth disabled={loading}>\n              Login\n            </Button>\n          </CardActions>\n        </Form>\n      </Formik>\n    </Card>);\n};\nexport default LoginCard;\n","import React from 'react';\nimport { keyframes, css } from '@emotion/core';\nconst stretchDelay = keyframes `\n  0%, 40%, 100% {\n    transform: scaleY(0.4);\n  }\n\n  20% {\n    transform: scaleY(1.0);\n  }\n`;\nconst spinner = css `\n  margin: 10rem auto;\n  width: 5rem;\n  height: 4rem;\n  text-align: center;\n  font-size: 1rem;\n`;\nconst rect1 = (theme) => css `\n  background-color: ${theme.palette.primary.main};\n  height: 100%;\n  width: 0.6rem;\n  display: inline-block;\n  margin: 0.1rem;\n  animation: ${stretchDelay} 1.2s infinite ease-in-out;\n`;\nconst rect2 = (theme) => css `\n  ${rect1(theme)};\n  animation-delay: -1.1s;\n`;\nconst rect3 = (theme) => css `\n  ${rect1(theme)};\n  animation-delay: -1s;\n`;\nconst rect4 = (theme) => css `\n  ${rect1(theme)};\n  animation-delay: -0.9s;\n`;\nconst rect5 = (theme) => css `\n  ${rect1(theme)};\n  animation-delay: -0.8s;\n`;\nconst WaveSpinner = () => (<div css={spinner}>\n    <div css={rect1}/>\n    <div css={rect2}/>\n    <div css={rect3}/>\n    <div css={rect4}/>\n    <div css={rect5}/>\n  </div>);\nexport default WaveSpinner;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport headerImage from 'images/header.png';\nexport const logo = (theme) => css `\n  background: transparent url(${headerImage}) no-repeat center;\n  min-height: 9rem;\n  background-size: 100% auto;\n  margin: 0 1rem;\n  ${theme.breakpoints.up('sm')} {\n    background-size: auto;\n  }\n`;\nconst Logo = () => <div css={logo}/>;\nexport default Logo;\n","import React from 'react';\nimport WaveSpinner from 'common/WaveSpinner';\nimport Logo from './Logo';\nconst SplashScreen = () => (<div>\n    <Logo />\n    <WaveSpinner />\n  </div>);\nexport default SplashScreen;\n","import React, { useEffect } from 'react';\nimport { useContainer } from 'unstated-next';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContainer } from 'core/auth/hooks';\nimport { useFlexgetAPI } from 'core/api';\nimport LoginCard from './LoginCard';\nimport SplashScreen from './Splash';\nimport Logo from './Logo';\nconst LoginPage = ({ location }) => {\n    const { from } = location?.state ?? { from: { pathname: '/' } };\n    const [loggedIn, setLoggedIn] = useContainer(AuthContainer);\n    const [loginState, checkLogin] = useFlexgetAPI('/user/token');\n    useEffect(() => {\n        const fn = async () => {\n            const resp = await checkLogin();\n            if (resp.ok) {\n                setLoggedIn(true);\n            }\n        };\n        fn();\n    }, [checkLogin, setLoggedIn]);\n    if (loginState.loading) {\n        return <SplashScreen />;\n    }\n    if (loggedIn) {\n        return <Redirect to={from}/>;\n    }\n    return (<div>\n      <Logo />\n      <LoginCard />\n    </div>);\n};\nexport default LoginPage;\n","import React from 'react';\nimport BaseTextField from '@material-ui/core/TextField';\nimport { useField } from 'formik';\nconst TextField = ({ name, ...props }) => {\n    const [field, { touched, error }] = useField(name);\n    return <BaseTextField error={touched && !!error} helperText={error} {...field} {...props}/>;\n};\nexport default TextField;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"],"sourceRoot":""}