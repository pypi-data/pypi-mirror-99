[metadata]
name = TFPWA
author = Yi Jiang
author_email = jiangyi15@mails.ucas.ac.cn
description = Partial Wave Analysis program using Tensorflow
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
license_files = LICENSE
url = https://github.com/jiangyi15/tf-pwa
project_urls = 
	Documentation = https://tf-pwa.readthedocs.io/en/latest
	Source = https://github.com/jiangyi15/tf-pwa
	Tracker = https://github.com/jiangyi15/tf-pwa/issues
keywords = 
	HEP
	PWA
	particle physics
	physics
classifiers = 
	Development Status :: 3 - Alpha
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Natural Language :: English
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Topic :: Scientific/Engineering
	Topic :: Scientific/Engineering :: Physics

[options]
python_requires = >=3.6
setup_requires = 
	setuptools_scm
install_requires = 
	matplotlib
	numpy
	opt_einsum
	PyYAML
	scipy
	sympy
	tensorflow>=2.0,<=2.2
packages = find:
scripts = 
	state_cache.sh

[options.data_files]
share/doc/tf_pwa = 
	Resonances.sample.yml
	config.sample.yml

[options.entry_points]
console_scripts = 
	fit_pwa = fit:fit
	tf_pwa = tf_pwa.__main__:main

[options.packages.find]
exclude = 
	benchmarks
	conda
	docs
	tutorials

[options.package_data]
. = 
	*.json
	*.yml
tf_pwa = 
	*.json

[options.extras_require]
gpu = 
	tensorflow-gpu>=2.0,<=2.2
minuit = 
	iminuit
root = 
	uproot3
vis = 
	graphviz
doc = 
	%(root)s
	Sphinx
	sphinx_rtd_theme
	sphinx-gallery
test = 
	%(root)s
	pysnooper
	pytest
	pytest-benchmark
	pytest-cov
dev = 
	%(vis)s
	%(minuit)s
	%(doc)s
	%(test)s
	black==20.8b1
	doc8
	isort
	pre-commit
	pylint
	rstcheck
all = 
	%(dev)s
	%(minuit)s
	%(root)s

[doc8]
extension = .inc
file-encoding = UTF-8
ignore-path = *build
ignore = 
	D001  # line width
max-line-length = 79
quiet = 1

[rstcheck]
ignore_directives = 
	automodule
report = warning

[egg_info]
tag_build = 
tag_date = 0

