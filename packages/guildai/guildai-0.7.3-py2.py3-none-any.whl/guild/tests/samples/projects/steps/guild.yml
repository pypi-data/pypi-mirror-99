- model: m1
  operations:
    step-1:
      main: step --msg "hello step-1" --touch step-1
    step-2:
      main: step --msg "hello step-2" --touch step-2
    steps-basic:
      steps:
        - step-1
        - step-2
    steps-named:
      steps:
        - run: step-1
          name: s1
        - run: step-2
          name: s2
    steps-repeat:
      steps:
        - step-1
        - step-1
        - step-1
    hello:
      main: step
      flags:
        msg: hello world
    steps-hello:
      steps:
        - hello msg=${msg}
        - hello msg='${msg} (again)'
      flags:
        msg: hello steps

- model: m2
  operations:
    hello:
      main: step
      flags:
        msg: hello m2
    composite:
      steps:
        - hello msg='hello m2, from ${name}'
        - m1:hello msg='hello m1, from ${name}'
      flags:
        name: composite

- model: m3
  operations:
    steps-invalid-bad-opspec-1:
      steps:
        - [1, 2, 3]
    steps-invalid-bad-opspec-2:
      steps:
        - null
    steps-invalid-bad-opspec-3:
      steps:
        - '   '
    steps-invalid-bad-opspec-4:
      steps:
        - {}
    steps-invalid-bad-op:
      steps:
        - not-defined
    ignored-params:
      steps:
        - m1:hello --run-dir /tmp --stage

- model: m4
  operations:
    prepare:
      main: step --touch data --msg "prepared data"
      compare: []
    train:
      main: step --touch model --msg "loss=${loss}"
      flags:
        loss:
          default: 1.234
          arg-skip: yes
      requires:
        - operation: prepare
          select: data
      output-scalars:
        loss: loss=(.+)
      compare:
        - loss
    evaluate:
      main: step --msg "acc=${acc}"
      flags:
        acc:
          default: 0.789
          arg-skip: yes
      requires:
        - operation: prepare
          select: data
        - operation: train
          select: model
      output-scalars:
        acc: acc=(.+)
      compare:
        - acc
    end-to-end:
      flags:
        loss: 1.0
        acc: 0.5
      steps:
        - prepare --needed
        - train loss=${loss}
        - run: evaluate acc=${acc}
          name: eval
      compare:
        - train#loss as loss
        - eval#acc as acc

- model: m5
  operations:
    op:
      main: step
      flags:
        msg: hi from op
    steps:
      steps:
        - op

- model: m6
  operations:
    upstream:
      main: guild.pass
    downstream:
      main: guild.pass
      requires:
        - operation: upstream
    loss:
      flags:
        x: 1
    steps-all:
      steps:
        - upstream
        - downstream
    steps-downstream-broken:
      steps:
        - downstream
    steps-downstream-fixed:
      steps:
        - run: downstream
          isolate-runs: no
    steps-batch:
      steps:
        - run: loss x=[0:100] -O -m 5
          opt-flags:
            - random-starts=2
