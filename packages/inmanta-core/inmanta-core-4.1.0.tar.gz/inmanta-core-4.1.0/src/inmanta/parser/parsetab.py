
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : emptytop_stmt : mls\n    | entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty : import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | constructor\n    | function_call\n    | for\n    | ifstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF expression \':\' blockif : IF expression \':\' stmt_list ELSE \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list mlsimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relation_def mlsrelation : relation_defrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref\n    | constructor\n    | list_def\n    | map_def\n    | map_lookup\n    | index_lookup\n    | conditional_expression expression : \'(\' expression \')\' boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expression boolean_expression : NOT expression  boolean_expression : var_ref \'.\' ID IS DEFINED boolean_expression : ID IS DEFINED  operand : expression map_lookup : attr_ref \'[\' operand \']\'\n    | local_var \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' function_param_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n    | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : empty map_def : \'{\' pair_list \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSE constant : STRING  constant : mls  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list :var_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,36,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[-12,0,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-1,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'MLS_END':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,86,88,102,106,107,115,116,117,120,121,122,123,124,126,128,131,139,142,145,157,159,160,161,165,166,169,170,175,176,178,179,185,186,187,188,190,192,193,197,198,199,200,203,205,206,214,217,218,219,220,223,232,233,235,240,242,244,245,246,247,250,251,252,253,257,260,261,262,265,266,267,268,270,272,275,276,279,283,287,288,289,290,293,294,301,305,306,307,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,13,-147,-154,13,-15,-16,-17,-18,-19,13,13,-158,-67,-78,-13,13,13,13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,13,13,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,13,13,13,13,-148,-153,-100,-22,-23,13,13,13,13,13,13,-97,13,13,-27,-33,-28,13,-54,-55,13,-104,13,13,-14,-105,13,-25,-93,-94,-95,-96,-144,-92,-99,-106,13,-111,13,-80,-34,-32,13,13,-57,-58,13,-73,-61,13,-81,-64,13,-103,-101,-113,-112,-102,13,-31,13,-29,-30,13,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,13,-59,-60,13,-75,-62,-26,-66,13,-69,-71,]),'MLS':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,86,88,102,106,107,115,116,117,120,121,122,123,124,126,128,131,139,142,145,157,159,160,161,165,166,169,170,175,176,178,179,185,186,187,188,190,192,193,197,198,199,200,203,205,206,214,217,218,219,220,223,232,233,235,240,242,244,245,246,247,250,251,252,253,257,260,261,262,265,266,267,268,270,272,275,276,279,283,287,288,289,290,293,294,301,305,306,307,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,14,-147,-154,14,-15,-16,-17,-18,-19,14,14,-158,-67,-78,-13,14,14,14,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,14,14,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,14,14,14,14,-148,-153,-100,-22,-23,14,14,14,14,14,14,-97,14,14,-27,-33,-28,14,-54,-55,14,-104,14,14,-14,-105,14,-25,-93,-94,-95,-96,-144,-92,-99,-106,14,-111,14,-80,-34,-32,14,14,-57,-58,14,-73,-61,14,-81,-64,14,-103,-101,-113,-112,-102,14,-31,14,-29,-30,14,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,14,-59,-60,14,-75,-62,-26,-66,14,-69,-71,]),'ENTITY':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IMPLEMENT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IMPLEMENTATION':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'INDEX':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IMPORT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'CID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,22,23,24,25,26,27,28,29,33,34,37,47,48,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,87,89,101,102,106,107,115,116,117,119,120,121,122,123,124,126,128,130,131,134,139,141,142,145,157,159,160,161,165,166,169,170,175,176,178,179,181,185,186,187,188,190,192,193,197,198,199,200,203,205,206,215,216,218,219,220,222,223,226,227,232,233,234,235,240,242,244,245,246,247,248,250,251,252,257,260,261,262,265,266,267,268,269,270,272,274,275,276,279,287,288,289,290,293,294,301,306,307,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,38,-147,-154,16,-68,-15,-16,-17,-18,-19,-77,16,16,85,-158,-67,-78,-13,106,16,16,16,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,16,16,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,16,16,16,16,16,-148,-153,-100,-22,-23,16,16,16,16,16,16,16,-97,106,16,-141,16,16,-27,-33,-28,-12,-54,-55,16,-104,16,16,-14,-105,16,-25,16,-93,-94,-95,-96,-144,-92,-99,-106,16,-111,16,-80,-34,-32,16,16,-57,-58,16,16,-73,16,16,-61,16,16,-81,-64,16,-103,-101,-113,-112,-140,-102,16,-31,-29,-30,-12,-56,-74,-76,-70,-72,16,-63,-24,16,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,45,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,119,128,142,145,157,159,160,161,166,175,176,179,181,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,233,234,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,269,270,272,274,275,276,279,287,288,289,290,293,294,301,306,307,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,101,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,21,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,21,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,21,21,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,21,-63,-24,21,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,119,128,142,145,157,159,160,161,166,175,176,179,181,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,233,234,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,269,270,272,274,275,276,279,287,288,289,290,293,294,301,306,307,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,33,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,33,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,33,33,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,33,-63,-24,33,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'TYPEDEF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,106,107,115,116,117,128,142,145,157,159,160,161,166,175,176,179,185,186,187,188,190,192,193,197,199,203,205,206,218,219,223,232,235,240,244,245,246,247,250,252,257,260,261,262,265,266,267,268,270,272,275,276,279,287,288,289,290,293,294,301,306,307,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,-147,-154,-68,-15,-16,-17,-18,-19,-77,-158,-67,-78,-13,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-148,-153,-100,-22,-23,-97,-27,-33,-28,-12,-54,-55,-104,-14,-105,-25,-93,-94,-95,-96,-144,-92,-99,-106,-111,-80,-34,-32,-57,-58,-73,-61,-81,-64,-103,-101,-113,-112,-102,-31,-29,-30,-12,-56,-74,-76,-70,-72,-63,-24,-114,-98,-79,-59,-60,-65,-75,-62,-26,-66,-69,-71,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,43,44,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,86,87,88,89,90,101,102,103,104,105,106,107,115,116,117,119,120,121,122,123,124,125,126,128,130,131,132,134,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,159,160,161,165,166,168,169,170,175,176,178,179,181,185,186,187,188,190,192,193,197,198,199,200,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,226,227,232,233,234,235,236,240,242,244,245,246,247,248,250,251,252,255,256,257,260,261,262,263,265,266,267,268,269,270,272,274,275,276,279,280,281,282,284,285,287,288,289,290,291,292,293,294,299,300,301,304,306,307,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-157,39,-147,-154,17,42,45,46,-68,-15,-16,-17,-18,-19,-77,17,17,69,84,-158,93,98,-67,-78,-13,107,114,69,69,118,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,69,69,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,69,17,17,17,17,17,17,69,174,175,107,-148,-153,-100,-22,-23,17,69,69,69,69,69,190,69,-97,107,114,98,-141,69,17,17,-27,17,17,-33,-36,208,209,-41,-42,-43,-37,-28,-12,-54,-55,69,-104,98,69,69,-14,-105,114,-25,17,-93,-94,-95,-96,-144,-92,-99,-106,69,-111,69,-80,17,-34,-32,-35,-44,-48,255,-39,-40,17,17,17,17,-57,-58,69,17,17,-73,17,17,-61,17,17,-81,174,-64,69,-103,-101,-113,-112,-140,-102,69,-31,-51,-38,-29,-30,-12,-56,289,-74,-76,-70,-72,17,-63,-24,17,-114,-98,-79,-45,-46,-47,-49,-50,-59,-60,-65,-75,302,303,-62,-26,-52,-53,-66,-123,-69,-71,]),':':([13,16,17,35,37,38,39,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,92,106,107,115,118,128,136,153,154,155,156,158,163,166,171,172,176,185,186,187,188,189,190,192,193,197,199,239,244,245,246,247,250,258,259,275,276,],[-157,-147,-154,-143,-158,86,88,119,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,164,-148,-153,-100,-144,-97,200,214,-151,-152,-146,217,224,-104,233,234,-105,-93,-94,-95,-96,242,-144,-92,-99,-106,-111,274,-103,-101,-113,-112,-102,-149,-150,-114,-98,]),'CMP_OP':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,107,114,115,127,128,166,176,185,186,187,188,189,190,192,193,197,199,244,245,246,247,250,261,275,276,279,],[-157,-158,120,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-153,-154,120,120,-97,-104,-105,-93,-94,120,120,120,-144,-92,-99,-106,-111,-103,-101,-113,-112,-102,120,120,-98,120,]),'IN':([13,37,46,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,107,114,115,127,128,166,176,185,186,187,188,189,190,192,193,197,199,244,245,246,247,250,261,275,276,279,],[-157,-158,102,121,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-153,-154,121,121,121,-104,-105,121,-94,121,121,121,-144,-92,-99,-106,-111,-103,-101,-113,-112,-102,121,121,-98,121,]),'AND':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,107,114,115,127,128,166,176,185,186,187,188,189,190,192,193,197,199,244,245,246,247,250,261,275,276,279,],[-157,-158,122,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-153,-154,122,122,-97,-104,-105,-93,-94,-95,122,122,-144,-92,-99,-106,-111,-103,-101,-113,-112,-102,122,122,-98,122,]),'OR':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,107,114,115,127,128,166,176,185,186,187,188,189,190,192,193,197,199,244,245,246,247,250,261,275,276,279,],[-157,-158,123,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-153,-154,123,123,-97,-104,-105,-93,-94,-95,-96,123,-144,-92,-99,-106,-111,-103,-101,-113,-112,-102,123,123,-98,123,]),'?':([13,17,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,107,114,115,127,128,148,150,151,152,166,176,185,186,187,188,189,190,192,193,197,199,244,245,246,247,250,256,261,275,276,279,],[-157,-154,-158,124,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-153,-154,124,124,-97,210,211,212,-37,-104,-105,-93,-94,-95,-96,124,-144,-92,-99,-106,-111,-103,-101,-113,-112,-102,-38,124,124,-98,124,]),',':([13,16,17,35,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,96,99,106,107,110,112,113,114,115,118,128,134,154,155,156,159,160,161,166,174,176,185,186,187,188,190,192,193,197,199,230,231,244,245,246,247,249,250,262,275,276,298,],[-157,-147,-154,-143,-158,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,168,-129,-148,-153,178,-134,-135,-154,-100,-144,-97,198,215,216,-146,221,-54,-55,-104,236,-105,-93,-94,-95,-96,-144,-92,-99,-106,-111,-128,-127,-103,-101,-113,-112,277,-102,221,-114,-98,305,]),')':([13,37,44,52,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,94,95,96,97,99,107,108,109,110,111,112,113,114,115,127,128,166,167,168,173,174,176,177,178,185,186,187,188,190,192,193,197,199,228,229,230,231,237,238,244,245,246,247,250,273,275,276,],[-157,-158,-12,-12,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,166,-130,-12,-131,-129,-153,176,-136,-12,-137,-134,-135,-154,-100,192,-97,-104,-12,-12,235,-156,-105,-12,-12,-93,-94,-95,-96,-144,-92,-99,-106,-111,-132,-133,-128,-127,-138,-139,-103,-101,-113,-112,-102,-155,-114,-98,]),'ELSE':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,107,115,116,117,119,128,166,176,179,180,181,182,185,186,187,188,190,192,193,197,199,240,241,244,245,246,247,250,272,275,276,294,],[-157,-15,-16,-17,-18,-19,-158,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-153,-100,-22,-23,-12,-97,-104,-105,-25,239,-12,-21,-93,-94,-95,-96,-144,-92,-99,-106,-111,-64,-20,-103,-101,-113,-112,-102,-24,-114,-98,-26,]),'END':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,86,88,107,115,116,117,119,128,143,144,146,166,176,179,180,181,182,185,186,187,188,190,192,193,197,199,204,207,208,209,214,217,233,234,240,241,244,245,246,247,250,255,269,271,272,274,275,276,280,281,282,284,285,294,299,300,304,],[-157,-15,-16,-17,-18,-19,-158,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,145,145,-153,-100,-22,-23,-12,-97,205,206,-36,-104,-105,-25,240,-12,-21,-93,-94,-95,-96,-144,-92,-99,-106,-111,252,-35,-44,-48,145,145,-12,-12,-64,-20,-103,-101,-113,-112,-102,-51,-12,240,-24,-12,-114,-98,-45,-46,-47,-49,-50,-26,-52,-53,-123,]),']':([13,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,81,95,96,97,99,107,114,115,128,131,132,133,134,163,166,167,168,176,185,186,187,188,190,191,192,193,194,195,196,197,198,199,201,213,224,225,228,229,230,231,244,245,246,247,248,250,264,275,276,283,297,298,305,308,],[-157,-158,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-142,-130,-12,-131,-129,-153,-154,-100,-97,-12,-12,197,-141,223,-104,-12,-12,-105,-93,-94,-95,-96,-144,244,-92,-99,245,246,247,-106,-142,-111,250,256,265,266,-132,-133,-128,-127,-103,-101,-113,-112,-140,-102,290,-114,-98,-125,304,-124,-125,-126,]),'}':([13,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,82,107,115,128,135,137,138,166,176,185,186,187,188,190,192,193,197,199,244,245,246,247,249,250,275,276,277,278,295,296,],[-157,-158,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-154,-115,-116,-117,-118,-119,-120,-121,-122,-146,-143,-12,-153,-100,-97,199,-110,-109,-104,-105,-93,-94,-95,-96,-144,-92,-99,-106,-111,-103,-101,-113,-112,-12,-102,-114,-98,-12,-12,-107,-108,]),'DICT':([13,37,70,71,72,73,74,75,76,77,86,88,143,144,146,199,204,207,208,209,214,217,255,280,281,282,284,285,299,300,304,],[-157,-158,-115,-116,-117,-118,-119,-120,-121,-122,148,148,148,148,-36,-111,148,-35,-44,-48,148,148,-51,-45,-46,-47,-49,-50,-52,-53,-123,]),'.':([16,17,19,31,32,35,60,69,78,79,106,107,114,118,155,156,184,190,267,268,],[-147,-154,43,-146,55,-143,125,-154,-146,-143,-148,-153,-154,-144,55,-146,-146,-144,291,292,]),'(':([16,17,19,31,33,49,52,53,54,67,68,69,78,80,81,102,106,107,114,120,121,122,123,124,126,131,139,165,169,170,178,183,184,198,200,220,223,242,251,265,266,290,],[-147,-154,44,52,67,103,67,67,67,67,67,-154,52,44,67,67,-148,-153,-154,67,67,67,67,67,67,67,67,67,67,67,67,44,52,67,67,67,-73,67,67,-74,-76,-75,]),'USING':([16,40,106,],[-147,90,-148,]),'[':([16,17,33,42,52,53,54,64,67,68,69,78,79,80,81,83,93,102,106,107,114,120,121,122,123,124,126,131,139,151,152,162,165,169,170,178,190,198,200,220,223,242,244,245,250,251,253,265,266,290,302,303,],[-147,-154,81,92,81,81,81,126,81,81,-154,-145,131,132,81,139,92,81,-148,-153,-154,81,81,81,81,81,81,81,81,213,-37,92,81,81,81,81,-144,81,81,81,-73,81,-103,-101,-102,81,283,-74,-76,-75,92,92,]),'SEP':([17,31,41,50,69,78,107,114,152,156,160,184,202,],[-154,51,51,105,-154,130,-153,-154,105,51,105,51,105,]),'=':([17,31,32,35,98,107,114,118,184,208,209,255,],[-154,-146,53,-143,169,-153,169,-144,-146,253,254,286,]),'PEQ':([17,31,32,35,107,118,184,],[-154,-146,54,-143,-153,-144,-146,]),'AS':([17,50,84,85,107,],[-154,104,140,141,-153,]),'WHEN':([17,107,159,160,161,262,],[-154,-153,220,-54,-55,-56,]),'MATCHING':([17,107,202,],[-154,-153,251,]),'NOT':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,265,266,290,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-73,68,68,-74,-76,-75,]),'INT':([33,52,53,54,67,68,81,92,102,120,121,122,123,124,126,131,139,164,165,169,170,178,198,200,220,223,224,242,251,253,265,266,283,290,305,],[70,70,70,70,70,70,70,163,70,70,70,70,70,70,70,70,70,225,70,70,70,70,70,70,70,-73,264,70,70,70,-74,-76,70,-75,70,]),'FLOAT':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,253,265,266,283,290,305,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-73,71,71,71,-74,-76,71,-75,71,]),'NULL':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,253,254,265,266,283,286,290,305,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-73,72,72,72,285,-74,-76,72,300,-75,72,]),'REGEX':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,253,265,266,283,290,305,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-73,73,73,73,-74,-76,73,-75,73,]),'TRUE':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,253,265,266,283,290,305,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-73,74,74,74,-74,-76,74,-75,74,]),'FALSE':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,253,265,266,283,290,305,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-73,75,75,75,-74,-76,75,-75,75,]),'STRING':([33,52,53,54,67,68,81,82,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,253,265,266,277,283,290,305,],[76,76,76,76,76,76,76,136,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-73,76,76,76,-74,-76,136,76,-75,76,]),'{':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,223,242,251,254,265,266,286,290,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-73,82,82,82,-74,-76,82,-75,]),'EXTENDS':([38,39,],[87,89,]),'*':([44,52,100,131,132,168,178,],[100,100,170,100,100,100,100,]),'IS':([69,114,190,],[129,129,243,]),'PARENTS':([90,221,],[161,161,]),'REL':([91,165,223,265,266,290,],[162,226,-73,-74,-76,-75,]),'DEFINED':([129,243,],[193,276,]),'UNDEF':([253,],[282,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,36,]),'top_stmt':([0,2,],[2,2,]),'empty':([0,2,44,52,82,96,110,119,131,132,159,167,168,177,178,181,233,234,249,261,269,274,277,278,],[3,3,97,111,137,167,177,182,97,97,218,97,97,111,111,182,182,182,278,287,182,182,137,137,]),'mls':([0,2,14,22,28,33,52,53,54,67,68,81,86,88,102,120,121,122,123,124,126,131,139,159,165,169,170,178,198,200,214,217,220,233,242,251,253,261,283,289,305,],[4,4,37,47,48,77,77,77,77,77,77,77,143,143,77,77,77,77,77,77,77,77,77,219,77,77,77,77,77,77,143,143,77,269,77,77,77,288,77,301,77,]),'entity_def':([0,2,],[5,5,]),'implement_def':([0,2,],[6,6,]),'implementation_def':([0,2,],[7,7,]),'relation':([0,2,],[8,8,]),'statement':([0,2,119,181,233,234,269,274,],[9,9,181,181,181,181,181,181,]),'typedef':([0,2,],[10,10,]),'index':([0,2,],[11,11,]),'import':([0,2,],[12,12,]),'class_ref':([0,2,18,29,33,52,53,54,67,68,81,87,89,101,102,119,120,121,122,123,124,126,131,139,141,165,169,170,178,181,198,200,215,216,220,222,226,227,233,234,242,251,269,274,],[19,19,40,49,80,80,80,80,80,80,80,154,154,171,80,183,80,80,80,80,80,80,80,80,183,80,80,80,80,183,80,80,154,154,80,263,267,268,183,183,80,80,183,183,]),'relation_def':([0,2,],[22,22,]),'assign':([0,2,119,181,233,234,269,274,],[23,23,23,23,23,23,23,23,]),'constructor':([0,2,33,52,53,54,67,68,81,102,119,120,121,122,123,124,126,131,139,141,165,169,170,178,181,198,200,220,233,234,242,251,269,274,],[24,24,61,61,61,61,61,61,61,61,24,61,61,61,61,61,61,61,61,203,61,61,61,61,24,61,61,61,24,24,61,61,24,24,]),'function_call':([0,2,33,52,53,54,67,68,81,102,119,120,121,122,123,124,126,131,139,165,169,170,178,181,198,200,220,233,234,242,251,269,274,],[25,25,59,59,59,59,59,59,59,59,25,59,59,59,59,59,59,59,59,59,59,59,59,25,59,59,59,25,25,59,59,25,25,]),'for':([0,2,119,181,233,234,269,274,],[26,26,26,26,26,26,26,26,]),'if':([0,2,119,181,233,234,269,274,],[27,27,27,27,27,27,27,27,]),'typedef_inner':([0,2,],[28,28,]),'ns_ref':([0,2,18,29,30,33,52,53,54,67,68,81,86,87,88,89,90,101,102,119,120,121,122,123,124,126,131,139,140,141,143,144,165,169,170,178,181,198,200,204,214,215,216,217,220,221,222,226,227,233,234,242,251,269,274,],[31,31,41,41,50,78,78,78,78,78,78,78,152,156,152,156,160,41,78,184,78,78,78,78,78,78,78,78,202,41,152,152,78,78,78,78,184,78,78,152,152,156,156,152,78,160,41,41,41,184,184,78,78,184,184,]),'var_ref':([0,2,33,52,53,54,67,68,81,87,89,102,119,120,121,122,123,124,126,131,139,165,169,170,178,181,198,200,215,216,220,233,234,242,251,269,274,],[32,32,60,60,60,60,60,60,60,155,155,60,32,60,60,60,60,60,60,60,60,60,60,60,60,32,60,60,155,155,60,32,32,60,60,32,32,]),'attr_ref':([0,2,33,52,53,54,67,68,81,87,89,102,119,120,121,122,123,124,126,131,139,165,169,170,178,181,198,200,215,216,220,233,234,242,251,269,274,],[35,35,79,79,79,79,79,79,79,35,35,79,35,79,79,79,79,79,79,79,79,79,79,79,79,35,79,79,35,35,79,35,35,79,79,35,35,]),'expression':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[56,115,115,115,127,128,115,115,185,186,187,188,189,115,115,115,115,115,115,115,115,115,261,275,279,]),'boolean_expression':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'constant':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,253,283,305,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,280,298,298,]),'list_def':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'map_def':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,254,286,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,284,299,]),'map_lookup':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'index_lookup':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'conditional_expression':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'local_var':([33,52,53,54,67,68,81,102,120,121,122,123,124,126,131,139,165,169,170,178,198,200,220,242,251,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'multi':([42,93,162,302,303,],[91,165,222,306,307,]),'param_list':([44,131,132,168,],[94,195,196,229,]),'param_list_empty':([44,131,132,167,168,],[95,95,95,228,95,]),'param_list_element':([44,52,131,132,168,178,],[96,112,96,96,96,112,]),'wrapped_kwargs':([44,52,131,132,168,178,],[99,99,99,99,99,99,]),'function_param_list':([52,178,],[108,238,]),'function_param_list_empty':([52,177,178,],[109,237,109,]),'function_param_list_element':([52,178,],[110,110,]),'operand':([52,53,54,81,102,126,131,139,165,169,170,178,198,200,],[113,116,117,134,172,191,194,201,134,230,231,113,134,249,]),'operand_list':([81,165,198,],[133,227,248,]),'pair_list':([82,277,],[135,295,]),'pair_list_empty':([82,277,278,],[138,138,296,]),'entity_body_outer':([86,88,214,217,],[142,157,257,260,]),'entity_body':([86,88,143,214,217,],[144,144,204,144,144,]),'attr':([86,88,143,144,204,214,217,],[146,146,146,207,207,146,146,]),'attr_type':([86,88,143,144,204,214,217,],[147,147,147,147,147,147,147,]),'attr_type_opt':([86,88,143,144,204,214,217,],[149,149,149,149,149,149,149,]),'attr_type_multi':([86,88,143,144,204,214,217,],[150,150,150,150,150,150,150,]),'attr_base_type':([86,88,143,144,204,214,217,],[151,151,151,151,151,151,151,]),'class_ref_list':([87,89,215,216,],[153,158,258,259,]),'implement_ns_list':([90,221,],[159,262,]),'id_list':([103,236,],[173,273,]),'block':([119,233,234,269,274,],[179,270,272,293,294,]),'stmt_list':([119,181,233,234,269,274,],[180,241,271,271,271,271,]),'implementation':([171,],[232,]),'constant_list':([253,],[281,]),'constants':([283,305,],[297,308,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',115),
  ('main -> empty','main',1,'p_main_term','plyInmantaParser.py',122),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',127),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',128),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',129),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',130),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',131),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',132),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',133),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',134),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',135),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',140),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',150),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',156),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',167),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',168),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',169),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',170),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',171),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',185),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',192),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',197),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',203),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',209),
  ('if -> IF expression : block','if',4,'p_if','plyInmantaParser.py',215),
  ('if -> IF expression : stmt_list ELSE : block','if',7,'p_if_else','plyInmantaParser.py',221),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',232),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',238),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',243),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',249),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',254),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',259),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',264),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',269),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',274),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',280),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',285),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',291),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',297),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',298),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',304),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',305),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',306),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',311),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',317),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',318),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',324),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',330),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',336),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',342),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',347),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',353),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',359),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',366),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',371),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',376),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',381),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list mls','implement_def',5,'p_implement','plyInmantaParser.py',382),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',389),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression mls','implement_def',7,'p_implement_when','plyInmantaParser.py',390),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',400),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',412),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',417),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',422),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',428),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',439),
  ('relation -> relation_def mls','relation',2,'p_relation_outer_comment','plyInmantaParser.py',474),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',481),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',486),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',492),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',498),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',504),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',510),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',515),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',520),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',525),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',533),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',538),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',545),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',551),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',560),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',570),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',571),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',572),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',573),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',574),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',575),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',576),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',577),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',578),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',579),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',584),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',589),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',590),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',591),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',592),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',599),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',605),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',611),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',617),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',622),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',623),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',624),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',629),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',634),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',640),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',646),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',647),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',653),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',654),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',659),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',665),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',671),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',678),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',688),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',689),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',696),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',702),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',708),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',714),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',720),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',726),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',766),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',772),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',777),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',782),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',788),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',793),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',799),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',805),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',806),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',812),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',813),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',828),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',835),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',841),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',842),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',848),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',849),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',867),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',873),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',878),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',883),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',888),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',894),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',900),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',906),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',917),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',929),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',935),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',940),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',945),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',951),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',957),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',962),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',968),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',973),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',978),
]
