name: Lint and Test PR

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install alsa-lib
        run: sudo apt-get install libasound2-dev

      - name: Install tox
        run: pip install tox

      - name: Run linting checks
        run: tox -e linting

      - name: Run typing checks
        run: tox -e typing

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Install alsa-lib
        run: sudo apt-get install libasound2-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: pip install tox

      - name: Run tests for ${{ matrix.os }} py ${{ matrix.python-version }}
        run: tox -e py -- --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: "Combine Coverage"
        run: |
            set -xe
            python -m pip install coverage[toml]
            python -m coverage combine
            python -m coverage xml
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.9

      - name: "Upload Coverage"
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.9
        uses: "codecov/codecov-action@v1"
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true

  publish:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install alsa-lib
        run: sudo apt-get install libasound2-dev

      - name: Install tox
        run: pip install tox

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: tox -e publish -- -p $TWINE_PASSWORD -u $TWINE_USERNAME
