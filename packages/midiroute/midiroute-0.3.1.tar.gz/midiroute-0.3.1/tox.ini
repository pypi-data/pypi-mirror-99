[pytest]
addopts = -ra
testpaths = tests

[flake8]
max-line-length = 120
extend-ignore = E203
docstring-convention = google
per_file_ignores = test_*.py:D1

[tox]
envlist = linting,manifest,typing,bumpversion,publish,py37,py38,py39
minversion = 3.3.0
isolated_build = true

[testenv]
deps =
    pytest
    pytest-asyncio
    asynctest
    coverage[toml]
commands =
    coverage run -m pytest tests {posargs}

[testenv:coverage-report]
skip_install = True
deps = coverage[toml]>=5.0.2
commands =
    coverage combine
    coverage report

[testenv:linting]
skip_install = True
deps = pre-commit>=1.11.0
commands = pre-commit run --all-files

[testenv:typing]
deps = mypy
commands = mypy src

[testenv:manifest]
skip_install = true
deps = check-manifest
commands = check-manifest

[testenv:bumpversion]
skip_install = True
allowlist_externals = git
passenv =
    HOME
    GIT_TOKEN
deps =
    towncrier
    gitpython
    semver
commands =
    {toxinidir}/ci/bumpversion {toxinidir}

[testenv:publish]
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
skip_install = True
deps =
    twine
    setuptools>=42
    wheel
    setuptools_scm[toml]>=3.4
commands =
    python setup.py clean --all sdist --formats gztar bdist_wheel
    python -m twine check dist/*
    python -m twine upload {posargs} dist/*

[testenv:dev]
usedevelop = True
envdir = .venv
commands =
deps =
    black
    flake8
    flake8-docstrings
    mypy
    pytest
    pytest-asyncio
    asynctest
    coverage[toml]
    towncrier
