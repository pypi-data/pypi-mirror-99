# coding: utf-8

"""
    Ory Kratos

    Welcome to the ORY Kratos HTTP API documentation!  # noqa: E501

    The version of the OpenAPI document: latest
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ory_kratos_client
from ory_kratos_client.models.settings_request_method import SettingsRequestMethod  # noqa: E501
from ory_kratos_client.rest import ApiException

class TestSettingsRequestMethod(unittest.TestCase):
    """SettingsRequestMethod unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SettingsRequestMethod
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ory_kratos_client.models.settings_request_method.SettingsRequestMethod()  # noqa: E501
        if include_optional :
            return SettingsRequestMethod(
                config = ory_kratos_client.models.request_method_config.RequestMethodConfig(
                    action = '0', 
                    errors = [
                        ory_kratos_client.models.error.Error(
                            message = '0', )
                        ], 
                    fields = [
                        ory_kratos_client.models.form_field.formField(
                            disabled = True, 
                            name = '0', 
                            pattern = '0', 
                            required = True, 
                            type = '0', 
                            value = ory_kratos_client.models.value.value(), )
                        ], 
                    method = '0', ), 
                method = '0'
            )
        else :
            return SettingsRequestMethod(
        )

    def testSettingsRequestMethod(self):
        """Test SettingsRequestMethod"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
