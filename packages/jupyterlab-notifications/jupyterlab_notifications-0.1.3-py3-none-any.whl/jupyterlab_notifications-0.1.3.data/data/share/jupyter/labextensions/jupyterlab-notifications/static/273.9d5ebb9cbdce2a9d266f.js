(self.webpackChunkjupyterlab_notifications=self.webpackChunkjupyterlab_notifications||[]).push([[273],{273:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>s});var i=o(433);function n(e){"granted"===e?alert("Browser Notifications are allowed. (^_^)b"):alert("Browser Notifications are not allowed. Please update your browser settings to allow notifications.")}const a={id:"jupyterlab-notifications:plugin",autoStart:!0,optional:[o(389).ISettingRegistry],activate:async(e,t)=>{"Notification"in window?"granted"!==Notification.permission&&(function(){try{Notification.requestPermission().then()}catch(e){return!1}return!0}()?Notification.requestPermission().then((e=>{n(e)})):Notification.requestPermission((e=>{n(e)}))):alert("This browser does not support notifications.");let o=!1,s=60,c=!0,r=!0;if(t){const e=await t.load(a.id),i=()=>{o=e.get("enabled").composite,s=e.get("minimum_cell_execution_time").composite,c=e.get("report_cell_execution_time").composite,r=e.get("report_cell_number").composite};i(),e.changed.connect(i)}i.NotebookActions.executed.connect(((e,t)=>{if(o){const{cell:e,notebook:o}=t,i=e.model.metadata;if(i.has("execution")){const e=Object.assign({},i.get("execution")),t=new Date(e["shell.execute_reply.started"]),n=new Date(e["shell.execute_reply"]),a=new Date(n-t);if(a.getSeconds()>=s){const e={icon:"/static/favicon.ico",body:""};let t="";const i=a.toISOString().substr(11,8),n=o.activeCellIndex;r&&c?t=`Cell[${n}] Duration: ${i}`:r?t=`Cell Number: ${n}`:c&&(t=`Cell Duration: ${i}`),e.body=t,new Notification("Notebook Cell Completed!",e)}}else alert('Notebook Cell Timing needs to be enabled for Jupyterlab Notifications to work. Please go to Settings -> Advanced Settings Editor -> Notebook and update setting to {"recordTiming": true}')}}))}},s=a}}]);