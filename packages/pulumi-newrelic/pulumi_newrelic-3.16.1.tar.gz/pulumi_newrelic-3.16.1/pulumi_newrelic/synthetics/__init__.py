# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .alert_condition import *
from .get_monitor import *
from .get_monitor_location import *
from .get_secure_credential import *
from .monitor import *
from .monitor_script import *
from .multi_location_alert_condition import *
from .secure_credential import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "newrelic:synthetics/alertCondition:AlertCondition":
                return AlertCondition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "newrelic:synthetics/monitor:Monitor":
                return Monitor(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "newrelic:synthetics/monitorScript:MonitorScript":
                return MonitorScript(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "newrelic:synthetics/multiLocationAlertCondition:MultiLocationAlertCondition":
                return MultiLocationAlertCondition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "newrelic:synthetics/secureCredential:SecureCredential":
                return SecureCredential(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("newrelic", "synthetics/alertCondition", _module_instance)
    pulumi.runtime.register_resource_module("newrelic", "synthetics/monitor", _module_instance)
    pulumi.runtime.register_resource_module("newrelic", "synthetics/monitorScript", _module_instance)
    pulumi.runtime.register_resource_module("newrelic", "synthetics/multiLocationAlertCondition", _module_instance)
    pulumi.runtime.register_resource_module("newrelic", "synthetics/secureCredential", _module_instance)

_register_module()
