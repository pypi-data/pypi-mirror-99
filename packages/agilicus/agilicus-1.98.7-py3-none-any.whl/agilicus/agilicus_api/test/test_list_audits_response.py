# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.18
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.list_audits_response import ListAuditsResponse  # noqa: E501
from agilicus_api.rest import ApiException

class TestListAuditsResponse(unittest.TestCase):
    """ListAuditsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListAuditsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.list_audits_response.ListAuditsResponse()  # noqa: E501
        if include_optional :
            return ListAuditsResponse(
                audits = [
                    agilicus_api.models.audit.Audit(
                        user_id = 'jjkkGmwB9oTJWDjIglTU', 
                        target_resource_type = '/v1/groups', 
                        api_name = 'urn:api:agilicus', 
                        org_id = '2jkMGmwB9o7JW3jIglNZ', 
                        time = '2002-10-02T10:00-05:00', 
                        action = '0', 
                        source_ip = '192.0.2.1', 
                        target_id = '2jkdCmwB9u7Jh3KIglNZ', 
                        token_id = 'XMYdZy7yAiudMDxQqgDwkY', 
                        trace_id = '00b893c9ec7c0089c3da65e7c9e2263a', 
                        session = '00b893c9ec7c0089c3da65e7c9e2263a', 
                        secondary_id = '2jkdCmwB9u7Jh3KIglNZ', 
                        tertiary_id = '2jkdCmwB9u7Jh3KIglNZ', 
                        parent_id = '2jkdCmwB9u7Jh3KIglNZ', 
                        grandparent_id = '2jkdCmwB9u7Jh3KIglNZ', )
                    ], 
                limit = 56
            )
        else :
            return ListAuditsResponse(
                limit = 56,
        )

    def testListAuditsResponse(self):
        """Test ListAuditsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
