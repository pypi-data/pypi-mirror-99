# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.18
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import agilicus_api
from agilicus_api.api.users_api import UsersApi  # noqa: E501
from agilicus_api.rest import ApiException


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self):
        self.api = agilicus_api.api.users_api.UsersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_bulk_update_metadata(self):
        """Test case for bulk_update_metadata

        Update a group of user's metadata for the specified org  # noqa: E501
        """
        pass

    def test_create_challenge_method(self):
        """Test case for create_challenge_method

        Create a multi-factor authentication method  # noqa: E501
        """
        pass

    def test_create_service_account(self):
        """Test case for create_service_account

        Create a service account  # noqa: E501
        """
        pass

    def test_create_upstream_user_identity(self):
        """Test case for create_upstream_user_identity

        Create an upstream user identity  # noqa: E501
        """
        pass

    def test_create_user(self):
        """Test case for create_user

        Create a user  # noqa: E501
        """
        pass

    def test_create_user_identity_update(self):
        """Test case for create_user_identity_update

        Update a user's core identity information.  # noqa: E501
        """
        pass

    def test_create_user_metadata(self):
        """Test case for create_user_metadata

        Create a metadata entry for the user  # noqa: E501
        """
        pass

    def test_create_user_request(self):
        """Test case for create_user_request

        Create a request on behalf of the user  # noqa: E501
        """
        pass

    def test_delete_challenge_method(self):
        """Test case for delete_challenge_method

        Delete a user's multi-factor authentication challenge method  # noqa: E501
        """
        pass

    def test_delete_service_account(self):
        """Test case for delete_service_account

        Delete a service account  # noqa: E501
        """
        pass

    def test_delete_upstream_user_identity(self):
        """Test case for delete_upstream_user_identity

        Delete an upstream user identity  # noqa: E501
        """
        pass

    def test_delete_user(self):
        """Test case for delete_user

        Remove a user from an organisation  # noqa: E501
        """
        pass

    def test_delete_user_metadata(self):
        """Test case for delete_user_metadata

        Delete an user metadata entry  # noqa: E501
        """
        pass

    def test_delete_user_request(self):
        """Test case for delete_user_request

        Delete an user request  # noqa: E501
        """
        pass

    def test_get_challenge_method(self):
        """Test case for get_challenge_method

        Get a single challenge method for the given user  # noqa: E501
        """
        pass

    def test_get_service_account(self):
        """Test case for get_service_account

        Get a service account  # noqa: E501
        """
        pass

    def test_get_upstream_user_identity(self):
        """Test case for get_upstream_user_identity

        Get a single upstream user identity  # noqa: E501
        """
        pass

    def test_get_user(self):
        """Test case for get_user

        Get a single user  # noqa: E501
        """
        pass

    def test_get_user_metadata(self):
        """Test case for get_user_metadata

        Get a single user metadata entry  # noqa: E501
        """
        pass

    def test_get_user_request(self):
        """Test case for get_user_request

        Get a single user request  # noqa: E501
        """
        pass

    def test_list_access_requests(self):
        """Test case for list_access_requests

        Get a list of access requests  # noqa: E501
        """
        pass

    def test_list_all_resource_permissions(self):
        """Test case for list_all_resource_permissions

        Return all per-resource permissions for a user  # noqa: E501
        """
        pass

    def test_list_all_user_orgs(self):
        """Test case for list_all_user_orgs

        Return all organisations a user has been assigned to  # noqa: E501
        """
        pass

    def test_list_all_user_roles(self):
        """Test case for list_all_user_roles

        Return all roles for a user  # noqa: E501
        """
        pass

    def test_list_challenge_methods(self):
        """Test case for list_challenge_methods

        Get all of a user's multi-factor authentication challenge method configuration  # noqa: E501
        """
        pass

    def test_list_combined_user_details(self):
        """Test case for list_combined_user_details

        Get all combined details about users  # noqa: E501
        """
        pass

    def test_list_org_user_roles(self):
        """Test case for list_org_user_roles

        Get all org user roles  # noqa: E501
        """
        pass

    def test_list_service_accounts(self):
        """Test case for list_service_accounts

        List service accounts  # noqa: E501
        """
        pass

    def test_list_upstream_user_identities(self):
        """Test case for list_upstream_user_identities

        Get all of a user's upstream user identities  # noqa: E501
        """
        pass

    def test_list_user_application_access_info(self):
        """Test case for list_user_application_access_info

        Query various users' application access information  # noqa: E501
        """
        pass

    def test_list_user_file_share_access_info(self):
        """Test case for list_user_file_share_access_info

        Query various users' file share access information  # noqa: E501
        """
        pass

    def test_list_user_guids(self):
        """Test case for list_user_guids

        Get a list of all user GUIDs  # noqa: E501
        """
        pass

    def test_list_user_metadata(self):
        """Test case for list_user_metadata

        Get a list of user metadata entries  # noqa: E501
        """
        pass

    def test_list_user_permissions(self):
        """Test case for list_user_permissions

        Return the user's host permissions  # noqa: E501
        """
        pass

    def test_list_user_requests(self):
        """Test case for list_user_requests

        Get a list of user requests  # noqa: E501
        """
        pass

    def test_list_users(self):
        """Test case for list_users

        Get all users  # noqa: E501
        """
        pass

    def test_replace_challenge_method(self):
        """Test case for replace_challenge_method

        Update a user's multi-factor authentication challenge method  # noqa: E501
        """
        pass

    def test_replace_service_account(self):
        """Test case for replace_service_account

        Update a service account  # noqa: E501
        """
        pass

    def test_replace_upstream_user_identity(self):
        """Test case for replace_upstream_user_identity

        Update an upstream user identity  # noqa: E501
        """
        pass

    def test_replace_user(self):
        """Test case for replace_user

        Create or update a user  # noqa: E501
        """
        pass

    def test_replace_user_metadata(self):
        """Test case for replace_user_metadata

        Update an user metadata entry.  # noqa: E501
        """
        pass

    def test_replace_user_request(self):
        """Test case for replace_user_request

        Update an user request. Note this method ignores the state parameter.  # noqa: E501
        """
        pass

    def test_replace_user_role(self):
        """Test case for replace_user_role

        Create or update a user role  # noqa: E501
        """
        pass

    def test_reset_user_mfa_challenge_methods(self):
        """Test case for reset_user_mfa_challenge_methods

        Resets a user's multi-factor authentication method  # noqa: E501
        """
        pass

    def test_update_user_request(self):
        """Test case for update_user_request

        Uses the state parameter in the body to apply the action to the request  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
