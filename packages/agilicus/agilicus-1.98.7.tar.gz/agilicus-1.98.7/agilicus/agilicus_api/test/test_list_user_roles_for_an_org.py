# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.18
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.list_user_roles_for_an_org import ListUserRolesForAnOrg  # noqa: E501
from agilicus_api.rest import ApiException

class TestListUserRolesForAnOrg(unittest.TestCase):
    """ListUserRolesForAnOrg unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListUserRolesForAnOrg
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.list_user_roles_for_an_org.ListUserRolesForAnOrg()  # noqa: E501
        if include_optional :
            return ListUserRolesForAnOrg(
                org_user_roles = [
                    agilicus_api.models.user_roles_for_an_org.UserRolesForAnOrg(
                        user_id = '123', 
                        org_id = '123', 
                        application = 'app-1', 
                        role = 'viewer', )
                    ], 
                limit = 500, 
                offset = 500
            )
        else :
            return ListUserRolesForAnOrg(
                org_user_roles = [
                    agilicus_api.models.user_roles_for_an_org.UserRolesForAnOrg(
                        user_id = '123', 
                        org_id = '123', 
                        application = 'app-1', 
                        role = 'viewer', )
                    ],
                limit = 500,
                offset = 500,
        )

    def testListUserRolesForAnOrg(self):
        """Test ListUserRolesForAnOrg"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
