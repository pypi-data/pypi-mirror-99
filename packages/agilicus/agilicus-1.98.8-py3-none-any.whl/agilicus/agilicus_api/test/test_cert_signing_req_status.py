# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.19
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.cert_signing_req_status import CertSigningReqStatus  # noqa: E501
from agilicus_api.rest import ApiException

class TestCertSigningReqStatus(unittest.TestCase):
    """CertSigningReqStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CertSigningReqStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.cert_signing_req_status.CertSigningReqStatus()  # noqa: E501
        if include_optional :
            return CertSigningReqStatus(
                certificates = [
                    agilicus_api.models.x509_certificate.X509Certificate(
                        metadata = {"id":"ac233asaksjfF","created":"2017-07-07T15:49:51.230+00:00","updated":"2020-01-27T12:19:46.430+00:00"}, 
                        spec = agilicus_api.models.x509_certificate_spec.X509CertificateSpec(
                            certificate = '0', 
                            csr_id = '0', 
                            org_id = '123', 
                            message = '0', 
                            reason = 'pending', ), 
                        status = agilicus_api.models.x509_certificate_status.X509CertificateStatus(
                            not_before = '2025-07-07T15:49:51.230+02:00', 
                            not_after = '2025-07-07T15:49:51.230+02:00', 
                            renewal_time = '2025-07-07T15:49:51.230+02:00', ), )
                    ], 
                common_name = '0', 
                dns_names = [
                    'a'
                    ]
            )
        else :
            return CertSigningReqStatus(
        )

    def testCertSigningReqStatus(self):
        """Test CertSigningReqStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
