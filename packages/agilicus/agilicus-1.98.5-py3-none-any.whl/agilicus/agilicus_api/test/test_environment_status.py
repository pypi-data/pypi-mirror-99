# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.17
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.environment_status import EnvironmentStatus  # noqa: E501
from agilicus_api.rest import ApiException

class TestEnvironmentStatus(unittest.TestCase):
    """EnvironmentStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EnvironmentStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.environment_status.EnvironmentStatus()  # noqa: E501
        if include_optional :
            return EnvironmentStatus(
                runtime_status = agilicus_api.models.runtime_status.RuntimeStatus(
                    overall_status = 'good', 
                    running_replicas = 2, 
                    error_message = 'CrashLoopBackoff', 
                    restarts = 5, 
                    cpu = 0.6, 
                    memory = 45.2, 
                    last_apply_time = '2002-10-02T10:00-05:00', 
                    updated = '2015-07-07T15:49:51.230+02:00', 
                    running_image = 'cr.agilicus.com/applications/iomad:v1.13.0', 
                    running_hash = 'sha256:2fb759c1adfe40863b89a4076111af8f210e7342d2240f09b08fc445b357112e', 
                    org_id = '123', )
            )
        else :
            return EnvironmentStatus(
        )

    def testEnvironmentStatus(self):
        """Test EnvironmentStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
