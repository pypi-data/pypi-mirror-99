# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.17
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.agent_connector_stats import AgentConnectorStats  # noqa: E501
from agilicus_api.rest import ApiException

class TestAgentConnectorStats(unittest.TestCase):
    """AgentConnectorStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AgentConnectorStats
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.agent_connector_stats.AgentConnectorStats()  # noqa: E501
        if include_optional :
            return AgentConnectorStats(
                metadata = agilicus_api.models.connector_stats_metadata.ConnectorStatsMetadata(
                    creation_time = '2020-07-07T15:40:46.010Z', 
                    collection_time = '2020-07-07T15:49:51.230Z', 
                    receipt_time = '2020-07-07T15:49:51.530Z', ), 
                overall_status = 'good', 
                system = agilicus_api.models.agent_connector_system_stats.AgentConnectorSystemStats(
                    os_version = 'Linux 5.4.0-45-generic #49-Ubuntu SMP Wed Aug 26 13:38:52 UTC 2020 x86_64 GNU/Linux', 
                    os_uptime = 45232, 
                    agent_uptime = 45000, 
                    agent_version = 'v0.29.5 8e4fe7281219aa02dcc088154b7e7e3fc279f259', 
                    agent_release_train = 'stable', 
                    agent_connector_id = 'SdaAs93adflq3a', 
                    agent_connector_org_id = 'd0d4laSDr4ws9', ), 
                transport = agilicus_api.models.agent_connector_transport_stats.AgentConnectorTransportStats(
                    active_connections = 32, 
                    target_number_connections = 32, 
                    connection_start_count = 64, 
                    connection_stop_count = 32, ), 
                shares = agilicus_api.models.agent_connector_share_stats.AgentConnectorShareStats(
                    exposed_shares_count = 2, 
                    server_running = True, 
                    server_start_time = '2020-07-07T15:55:51.230Z', 
                    server_stop_time = '2020-07-07T15:55:51.230Z', 
                    server_start_count = 2, 
                    server_stop_count = 1, 
                    per_share_info = [
                        agilicus_api.models.agent_connector_per_share_stats.AgentConnectorPerShareStats(
                            share_prefix = '/public', 
                            share_id = '5s930sdfsdlA', 
                            local_path = '/home/user/shared', 
                            total_requests = 5132, 
                            successful_requests = 5102, 
                            failed_requests = 30, 
                            bytes_sent = 30458101, 
                            bytes_received = 9574339, 
                            share_start_time = '2020-07-07T15:55:52.230Z', )
                        ], ), 
                authz = agilicus_api.models.agent_connector_authz_stats.AgentConnectorAuthzStats(
                    allowed = 32, 
                    allowed_app_handled = 32, 
                    denied = 32, 
                    token_cached_failed = 64, 
                    token_cached_success = 64, 
                    token_parse_failed = 64, 
                    token_static_token = 64, 
                    token_bad_jti = 64, 
                    token_lookup_success = 64, 
                    token_lookup_notfound = 64, 
                    token_lookup_badrequest = 64, 
                    token_lookup_4xx_other = 64, 
                    token_lookup_error = 64, 
                    token_lookup_revoked = 64, 
                    token_basic_auth_decode_fail = 64, 
                    token_basic_auth_too_long = 64, 
                    token_basic_auth_no_password = 64, 
                    token_basic_auth_cached_success = 64, 
                    token_basic_auth_cached_failed = 64, )
            )
        else :
            return AgentConnectorStats(
                metadata = agilicus_api.models.connector_stats_metadata.ConnectorStatsMetadata(
                    creation_time = '2020-07-07T15:40:46.010Z', 
                    collection_time = '2020-07-07T15:49:51.230Z', 
                    receipt_time = '2020-07-07T15:49:51.530Z', ),
                overall_status = 'good',
                system = agilicus_api.models.agent_connector_system_stats.AgentConnectorSystemStats(
                    os_version = 'Linux 5.4.0-45-generic #49-Ubuntu SMP Wed Aug 26 13:38:52 UTC 2020 x86_64 GNU/Linux', 
                    os_uptime = 45232, 
                    agent_uptime = 45000, 
                    agent_version = 'v0.29.5 8e4fe7281219aa02dcc088154b7e7e3fc279f259', 
                    agent_release_train = 'stable', 
                    agent_connector_id = 'SdaAs93adflq3a', 
                    agent_connector_org_id = 'd0d4laSDr4ws9', ),
                transport = agilicus_api.models.agent_connector_transport_stats.AgentConnectorTransportStats(
                    active_connections = 32, 
                    target_number_connections = 32, 
                    connection_start_count = 64, 
                    connection_stop_count = 32, ),
        )

    def testAgentConnectorStats(self):
        """Test AgentConnectorStats"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
