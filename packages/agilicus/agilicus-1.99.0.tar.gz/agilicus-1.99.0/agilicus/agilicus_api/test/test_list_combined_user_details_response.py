# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.03.24
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.list_combined_user_details_response import ListCombinedUserDetailsResponse  # noqa: E501
from agilicus_api.rest import ApiException

class TestListCombinedUserDetailsResponse(unittest.TestCase):
    """ListCombinedUserDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListCombinedUserDetailsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.list_combined_user_details_response.ListCombinedUserDetailsResponse()  # noqa: E501
        if include_optional :
            return ListCombinedUserDetailsResponse(
                combined_user_details = [
                    agilicus_api.models.combined_user_detail.CombinedUserDetail(
                        metadata = agilicus_api.models.metadata_with_only_id.MetadataWithOnlyId(
                            id = '123', ), 
                        status = agilicus_api.models.combined_user_detail_status.CombinedUserDetailStatus(
                            user = {"id":"as3sdfl","first_name":"Example","last_name":"User","email":"user@example.com","type":"user"}, 
                            mfa_challenge_methods = [
                                agilicus_api.models.mfa_challenge_method.MFAChallengeMethod(
                                    spec = agilicus_api.models.mfa_challenge_method_spec.MFAChallengeMethodSpec(
                                        priority = 1, 
                                        challenge_type = '0', 
                                        endpoint = '0', 
                                        origin = 'agilicus.cloud', 
                                        nickname = '0', 
                                        enabled = True, ), )
                                ], ), )
                    ], 
                limit = 56, 
                previous_page_email = 'foo@example.com', 
                next_page_email = 'foo@example.com'
            )
        else :
            return ListCombinedUserDetailsResponse(
                limit = 56,
        )

    def testListCombinedUserDetailsResponse(self):
        """Test ListCombinedUserDetailsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
