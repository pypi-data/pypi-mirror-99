# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'caloriestracker/ui/frmMainProductsMaintainer.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_frmMainProductsMaintainer(object):
    def setupUi(self, frmMainProductsMaintainer):
        frmMainProductsMaintainer.setObjectName("frmMainProductsMaintainer")
        frmMainProductsMaintainer.resize(811, 625)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(frmMainProductsMaintainer.sizePolicy().hasHeightForWidth())
        frmMainProductsMaintainer.setSizePolicy(sizePolicy)
        frmMainProductsMaintainer.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/caloriestracker/caloriestracker.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        frmMainProductsMaintainer.setWindowIcon(icon)
        self.central = QtWidgets.QWidget(frmMainProductsMaintainer)
        self.central.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.central.sizePolicy().hasHeightForWidth())
        self.central.setSizePolicy(sizePolicy)
        self.central.setObjectName("central")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.central)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.layout = QtWidgets.QVBoxLayout()
        self.layout.setObjectName("layout")
        self.horizontalLayout.addLayout(self.layout)
        frmMainProductsMaintainer.setCentralWidget(self.central)
        self.tbMain = QtWidgets.QToolBar(frmMainProductsMaintainer)
        self.tbMain.setIconSize(QtCore.QSize(26, 26))
        self.tbMain.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.tbMain.setObjectName("tbMain")
        frmMainProductsMaintainer.addToolBar(QtCore.Qt.TopToolBarArea, self.tbMain)
        self.statusBar = QtWidgets.QStatusBar(frmMainProductsMaintainer)
        self.statusBar.setObjectName("statusBar")
        frmMainProductsMaintainer.setStatusBar(self.statusBar)
        self.menuBar = QtWidgets.QMenuBar(frmMainProductsMaintainer)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 811, 30))
        self.menuBar.setObjectName("menuBar")
        self.menuAyuda = QtWidgets.QMenu(self.menuBar)
        self.menuAyuda.setObjectName("menuAyuda")
        self.menuXulpymoney = QtWidgets.QMenu(self.menuBar)
        self.menuXulpymoney.setObjectName("menuXulpymoney")
        self.menuProducts = QtWidgets.QMenu(self.menuBar)
        self.menuProducts.setObjectName("menuProducts")
        self.menuCompanies = QtWidgets.QMenu(self.menuBar)
        self.menuCompanies.setObjectName("menuCompanies")
        frmMainProductsMaintainer.setMenuBar(self.menuBar)
        self.actionExit = QtWidgets.QAction(frmMainProductsMaintainer)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/caloriestracker/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon1)
        self.actionExit.setObjectName("actionExit")
        self.actionAbout = QtWidgets.QAction(frmMainProductsMaintainer)
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.actionMemory = QtWidgets.QAction(frmMainProductsMaintainer)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/caloriestracker/transfer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMemory.setIcon(icon2)
        self.actionMemory.setObjectName("actionMemory")
        self.actionSettings = QtWidgets.QAction(frmMainProductsMaintainer)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/caloriestracker/configure.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSettings.setIcon(icon3)
        self.actionSettings.setObjectName("actionSettings")
        self.actionHelp = QtWidgets.QAction(frmMainProductsMaintainer)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/caloriestracker/benchmark.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHelp.setIcon(icon4)
        self.actionHelp.setObjectName("actionHelp")
        self.actionProducts = QtWidgets.QAction(frmMainProductsMaintainer)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/caloriestracker/books.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionProducts.setIcon(icon5)
        self.actionProducts.setObjectName("actionProducts")
        self.actionCuriosities = QtWidgets.QAction(frmMainProductsMaintainer)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/caloriestracker/curiosity.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCuriosities.setIcon(icon6)
        self.actionCuriosities.setObjectName("actionCuriosities")
        self.actionCompaniesAdd = QtWidgets.QAction(frmMainProductsMaintainer)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/caloriestracker/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCompaniesAdd.setIcon(icon7)
        self.actionCompaniesAdd.setObjectName("actionCompaniesAdd")
        self.actionCompanies = QtWidgets.QAction(frmMainProductsMaintainer)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/caloriestracker/company.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCompanies.setIcon(icon8)
        self.actionCompanies.setObjectName("actionCompanies")
        self.actionReportIssue = QtWidgets.QAction(frmMainProductsMaintainer)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/caloriestracker/alarm_clock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionReportIssue.setIcon(icon9)
        self.actionReportIssue.setObjectName("actionReportIssue")
        self.tbMain.addAction(self.actionCompanies)
        self.tbMain.addAction(self.actionProducts)
        self.tbMain.addSeparator()
        self.tbMain.addAction(self.actionSettings)
        self.tbMain.addAction(self.actionCuriosities)
        self.tbMain.addAction(self.actionExit)
        self.menuAyuda.addAction(self.actionAbout)
        self.menuAyuda.addSeparator()
        self.menuAyuda.addAction(self.actionCuriosities)
        self.menuAyuda.addSeparator()
        self.menuAyuda.addAction(self.actionReportIssue)
        self.menuAyuda.addSeparator()
        self.menuAyuda.addAction(self.actionHelp)
        self.menuXulpymoney.addSeparator()
        self.menuXulpymoney.addAction(self.actionMemory)
        self.menuXulpymoney.addSeparator()
        self.menuXulpymoney.addAction(self.actionSettings)
        self.menuXulpymoney.addSeparator()
        self.menuXulpymoney.addAction(self.actionExit)
        self.menuProducts.addSeparator()
        self.menuProducts.addAction(self.actionProducts)
        self.menuProducts.addSeparator()
        self.menuCompanies.addAction(self.actionCompanies)
        self.menuCompanies.addSeparator()
        self.menuCompanies.addAction(self.actionCompaniesAdd)
        self.menuBar.addAction(self.menuXulpymoney.menuAction())
        self.menuBar.addAction(self.menuCompanies.menuAction())
        self.menuBar.addAction(self.menuProducts.menuAction())
        self.menuBar.addAction(self.menuAyuda.menuAction())

        self.retranslateUi(frmMainProductsMaintainer)
        QtCore.QMetaObject.connectSlotsByName(frmMainProductsMaintainer)

    def retranslateUi(self, frmMainProductsMaintainer):
        _translate = QtCore.QCoreApplication.translate
        self.tbMain.setWindowTitle(_translate("frmMainProductsMaintainer", "Main toolbar"))
        self.menuAyuda.setTitle(_translate("frmMainProductsMaintainer", "&Help"))
        self.menuXulpymoney.setTitle(_translate("frmMainProductsMaintainer", "C&alories tracker"))
        self.menuProducts.setTitle(_translate("frmMainProductsMaintainer", "&Products"))
        self.menuCompanies.setTitle(_translate("frmMainProductsMaintainer", "&Companies"))
        self.actionExit.setText(_translate("frmMainProductsMaintainer", "E&xit"))
        self.actionExit.setToolTip(_translate("frmMainProductsMaintainer", "Exit"))
        self.actionExit.setShortcut(_translate("frmMainProductsMaintainer", "Alt+Esc"))
        self.actionAbout.setText(_translate("frmMainProductsMaintainer", "&About"))
        self.actionAbout.setToolTip(_translate("frmMainProductsMaintainer", "About"))
        self.actionAbout.setShortcut(_translate("frmMainProductsMaintainer", "F2"))
        self.actionMemory.setText(_translate("frmMainProductsMaintainer", "&Update memory"))
        self.actionMemory.setToolTip(_translate("frmMainProductsMaintainer", "Update memory"))
        self.actionSettings.setText(_translate("frmMainProductsMaintainer", "&Settings"))
        self.actionSettings.setToolTip(_translate("frmMainProductsMaintainer", "Settings"))
        self.actionHelp.setText(_translate("frmMainProductsMaintainer", "&Help"))
        self.actionHelp.setToolTip(_translate("frmMainProductsMaintainer", "Help"))
        self.actionHelp.setShortcut(_translate("frmMainProductsMaintainer", "F1"))
        self.actionProducts.setText(_translate("frmMainProductsMaintainer", "Products list"))
        self.actionProducts.setToolTip(_translate("frmMainProductsMaintainer", "Products list"))
        self.actionProducts.setShortcut(_translate("frmMainProductsMaintainer", "Ctrl+B"))
        self.actionCuriosities.setText(_translate("frmMainProductsMaintainer", "&Curiosities"))
        self.actionCuriosities.setToolTip(_translate("frmMainProductsMaintainer", "Curiosities"))
        self.actionCompaniesAdd.setText(_translate("frmMainProductsMaintainer", "Add a company"))
        self.actionCompaniesAdd.setToolTip(_translate("frmMainProductsMaintainer", "Add a company"))
        self.actionCompanies.setText(_translate("frmMainProductsMaintainer", "Companies list"))
        self.actionCompanies.setToolTip(_translate("frmMainProductsMaintainer", "Companies list"))
        self.actionReportIssue.setText(_translate("frmMainProductsMaintainer", "Report an issue"))
        self.actionReportIssue.setToolTip(_translate("frmMainProductsMaintainer", "Report an issue"))
import caloriestracker.images.caloriestracker_rc
