# coding: utf-8

"""
    symbl.ai APIs

    <h1>Symbl's APIs for external consumers.</h1> <h2>Language Insights API</h2> Symbl's Language Insights API provides an interface for applications to perform the analysis on the raw text and get insights from it. The API automatically detects sentence boundaries and punctuates the sentences, and also returns the updated messages in the response. Conversations are the most unstructured piece of information that we represent information in, and which most of the leads to lot of loss of information by not being able to capture them correctly.<br/> Language Insights API focuses on understanding such texts and generate the useful and important information from them. <br/> Currently the API supports detection of the Action Items in any type of unstructured text. In future the same API will also have support to detect \"Information\" and \"Event\", where Information is any informational piece and Event is a reference to something that has happened in the past.<br/> <h2>Telephony Integration</h2> Symbl can currently integrate with two types of telephony endpoints: 1. SIP trunks<br/> 2. PSTN endpoints<br/> Results are sent via HTTP WebHooks as and when they are available.<br/> <h2>Flow</h2> 1. External Application invokes REST API to join a meeting/session, with the mode (SIP/PSTN) and joining details<br/> 2. Symbl joins the meeting via SIP or PSTN integration<br/> 3. Symbl continuously processes the audio stream received<br/> 4. Symbl calls WebHook whenever transcription results are available<br/>  # noqa: E501

    OpenAPI spec version: 0.0.1
    Contact: info@symbl.ai
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import symbl_rest
from symbl_rest.api.async_api import AsyncApi  # noqa: E501
from symbl_rest.rest import ApiException


class TestAsyncApi(unittest.TestCase):
    """AsyncApi unit test stubs"""

    def setUp(self):
        self.api = AsyncApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_audio(self):
        """Test case for add_audio

        Audio - Submit New Audio File (wav/mp3)  # noqa: E501
        """
        pass

    def test_add_audio_url(self):
        """Test case for add_audio_url

        Audio(URL)  - Submit New Conversation  # noqa: E501
        """
        pass

    def test_add_text(self):
        """Test case for add_text

        Add new Text Messages  # noqa: E501
        """
        pass

    def test_add_video(self):
        """Test case for add_video

        Video - Submit New Video File (mp4)  # noqa: E501
        """
        pass

    def test_add_video_url(self):
        """Test case for add_video_url

        Video (URL)  - Submit New Conversation  # noqa: E501
        """
        pass

    def test_append_audio(self):
        """Test case for append_audio

        Audio - Submit New Audio File (wav/mp3)  # noqa: E501
        """
        pass

    def test_append_audio_url(self):
        """Test case for append_audio_url

        Audio(URL)  - Submit New Conversation  # noqa: E501
        """
        pass

    def test_append_text(self):
        """Test case for append_text

        Text - Append to Existing Conversation  # noqa: E501
        """
        pass

    def test_append_video(self):
        """Test case for append_video

        Video - Submit New Video File (mp4)  # noqa: E501
        """
        pass

    def test_append_video_url(self):
        """Test case for append_video_url

        Video (URL)  - Submit New Conversation  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
