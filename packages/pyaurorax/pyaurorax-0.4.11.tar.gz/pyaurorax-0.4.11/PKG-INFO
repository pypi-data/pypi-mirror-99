Metadata-Version: 2.1
Name: pyaurorax
Version: 0.4.11
Summary: Python library for interacting with the AuroraX API
Home-page: https://github.com/ucalgary-aurora/pyaurorax
License: MIT
Author: Darren Chaddock
Author-email: dchaddoc@ucalgary.ca
Maintainer: Darren Chaddock
Maintainer-email: dchaddoc@ucalgary.ca
Requires-Python: >=3.6,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Dist: aacgmv2 (>=2.6.2,<3.0.0)
Requires-Dist: flake8 (>=3.8.4,<4.0.0)
Requires-Dist: humanize (>=3.2.0,<4.0.0)
Requires-Dist: pydantic (>=1.7.3,<2.0.0)
Requires-Dist: requests (>=2.25.1,<3.0.0)
Project-URL: Repository, https://github.com/ucalgary-aurora/pyaurorax
Description-Content-Type: text/markdown

# PyAuroraX

[![Github Actions - Tests](https://github.com/ucalgary-aurora/pyaurorax/workflows/tests/badge.svg)](https://github.com/ucalgary-aurora/pyaurorax/actions?query=workflow%3Atests)
[![PyPI version](https://img.shields.io/pypi/v/pyaurorax.svg)](https://pypi.python.org/pypi/pyaurorax/)
[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/)
[![PyPI Python versions](https://img.shields.io/pypi/pyversions/pyaurorax.svg)](https://pypi.python.org/pypi/pyaurorax/)

Python library for interacting with the AuroraX API.

## Installing PyAuroraX

PyAuroraX is available on PyPI:

```console
$ python -m pip install pyaurorax
```

## Supported Python Versions

PyAuroraX officially supports Python 3.6+.

## Usage

```python
>>> import aurorax
```

## Development

Clone the repository and install dependencies using Poetry.

```console
$ git clone https://github.com/ucalgary-aurora/pyaurorax.git
$ cd pyaurorax
$ make install
```

## Testing

```console
$ make test
[ or do each test separately ]
$ make test-flake8
$ make test-pylint
$ make test-bandit
$ make test-pytest
```

## Additional Testing for Development Environments

To run additional tests that are not integrated into the CI pipeline, run the following:

```console
$ make test-additional
```

