# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import plmini_pb2 as plmini__pb2


class OperatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/plmini.Operator/Register',
                request_serializer=plmini__pb2.RegisterRequest.SerializeToString,
                response_deserializer=plmini__pb2.RegisterResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/plmini.Operator/Subscribe',
                request_serializer=plmini__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=plmini__pb2.OperationRequest.FromString,
                )
        self.Dispatch = channel.unary_unary(
                '/plmini.Operator/Dispatch',
                request_serializer=plmini__pb2.DispatchRequest.SerializeToString,
                response_deserializer=plmini__pb2.Empty.FromString,
                )
        self.Heartbeat = channel.unary_unary(
                '/plmini.Operator/Heartbeat',
                request_serializer=plmini__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=plmini__pb2.Empty.FromString,
                )
        self.Update = channel.unary_unary(
                '/plmini.Operator/Update',
                request_serializer=plmini__pb2.UpdateRequest.SerializeToString,
                response_deserializer=plmini__pb2.Empty.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/plmini.Operator/Disconnect',
                request_serializer=plmini__pb2.DisconnectRequest.SerializeToString,
                response_deserializer=plmini__pb2.Empty.FromString,
                )
        self.List = channel.unary_unary(
                '/plmini.Operator/List',
                request_serializer=plmini__pb2.Empty.SerializeToString,
                response_deserializer=plmini__pb2.DriverList.FromString,
                )
        self.Info = channel.unary_unary(
                '/plmini.Operator/Info',
                request_serializer=plmini__pb2.InfoRequest.SerializeToString,
                response_deserializer=plmini__pb2.InfoResponse.FromString,
                )


class OperatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Dispatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OperatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=plmini__pb2.RegisterRequest.FromString,
                    response_serializer=plmini__pb2.RegisterResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=plmini__pb2.SubscribeRequest.FromString,
                    response_serializer=plmini__pb2.OperationRequest.SerializeToString,
            ),
            'Dispatch': grpc.unary_unary_rpc_method_handler(
                    servicer.Dispatch,
                    request_deserializer=plmini__pb2.DispatchRequest.FromString,
                    response_serializer=plmini__pb2.Empty.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=plmini__pb2.HeartbeatRequest.FromString,
                    response_serializer=plmini__pb2.Empty.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=plmini__pb2.UpdateRequest.FromString,
                    response_serializer=plmini__pb2.Empty.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=plmini__pb2.DisconnectRequest.FromString,
                    response_serializer=plmini__pb2.Empty.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=plmini__pb2.Empty.FromString,
                    response_serializer=plmini__pb2.DriverList.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=plmini__pb2.InfoRequest.FromString,
                    response_serializer=plmini__pb2.InfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'plmini.Operator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Operator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/Register',
            plmini__pb2.RegisterRequest.SerializeToString,
            plmini__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/plmini.Operator/Subscribe',
            plmini__pb2.SubscribeRequest.SerializeToString,
            plmini__pb2.OperationRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Dispatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/Dispatch',
            plmini__pb2.DispatchRequest.SerializeToString,
            plmini__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/Heartbeat',
            plmini__pb2.HeartbeatRequest.SerializeToString,
            plmini__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/Update',
            plmini__pb2.UpdateRequest.SerializeToString,
            plmini__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/Disconnect',
            plmini__pb2.DisconnectRequest.SerializeToString,
            plmini__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/List',
            plmini__pb2.Empty.SerializeToString,
            plmini__pb2.DriverList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/plmini.Operator/Info',
            plmini__pb2.InfoRequest.SerializeToString,
            plmini__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
