# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import metasploit_pb2 as metasploit__pb2
from . import models_pb2 as models__pb2


class MetasploitStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListJobs = channel.unary_unary(
                '/Metasploit/ListJobs',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ListExploits = channel.unary_unary(
                '/Metasploit/ListExploits',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ListConsoles = channel.unary_unary(
                '/Metasploit/ListConsoles',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=metasploit__pb2.ConsoleList.FromString,
                )
        self.ListSessions = channel.unary_unary(
                '/Metasploit/ListSessions',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=metasploit__pb2.MetasploitSessionList.FromString,
                )
        self.GetConsole = channel.unary_unary(
                '/Metasploit/GetConsole',
                request_serializer=metasploit__pb2.Console.SerializeToString,
                response_deserializer=metasploit__pb2.Console.FromString,
                )
        self.GetSession = channel.unary_unary(
                '/Metasploit/GetSession',
                request_serializer=metasploit__pb2.MetasploitSession.SerializeToString,
                response_deserializer=metasploit__pb2.MetasploitSession.FromString,
                )
        self.CreateConsole = channel.unary_unary(
                '/Metasploit/CreateConsole',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=metasploit__pb2.Console.FromString,
                )
        self.StopConsole = channel.unary_unary(
                '/Metasploit/StopConsole',
                request_serializer=metasploit__pb2.Console.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ListConsoleOutput = channel.unary_unary(
                '/Metasploit/ListConsoleOutput',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=metasploit__pb2.ConsoleOutputList.FromString,
                )
        self.WriteToConsole = channel.unary_unary(
                '/Metasploit/WriteToConsole',
                request_serializer=metasploit__pb2.ConsoleMessage.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.WriteToSession = channel.unary_unary(
                '/Metasploit/WriteToSession',
                request_serializer=metasploit__pb2.ConsoleMessage.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )


class MetasploitServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExploits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConsoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopConsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConsoleOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteToConsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteToSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetasploitServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ListExploits': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExploits,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ListConsoles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConsoles,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=metasploit__pb2.ConsoleList.SerializeToString,
            ),
            'ListSessions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSessions,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=metasploit__pb2.MetasploitSessionList.SerializeToString,
            ),
            'GetConsole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsole,
                    request_deserializer=metasploit__pb2.Console.FromString,
                    response_serializer=metasploit__pb2.Console.SerializeToString,
            ),
            'GetSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSession,
                    request_deserializer=metasploit__pb2.MetasploitSession.FromString,
                    response_serializer=metasploit__pb2.MetasploitSession.SerializeToString,
            ),
            'CreateConsole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConsole,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=metasploit__pb2.Console.SerializeToString,
            ),
            'StopConsole': grpc.unary_unary_rpc_method_handler(
                    servicer.StopConsole,
                    request_deserializer=metasploit__pb2.Console.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ListConsoleOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConsoleOutput,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=metasploit__pb2.ConsoleOutputList.SerializeToString,
            ),
            'WriteToConsole': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteToConsole,
                    request_deserializer=metasploit__pb2.ConsoleMessage.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'WriteToSession': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteToSession,
                    request_deserializer=metasploit__pb2.ConsoleMessage.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Metasploit', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Metasploit(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/ListJobs',
            models__pb2.EmptyRequest.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExploits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/ListExploits',
            models__pb2.Pagination.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConsoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/ListConsoles',
            models__pb2.EmptyRequest.SerializeToString,
            metasploit__pb2.ConsoleList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/ListSessions',
            models__pb2.EmptyRequest.SerializeToString,
            metasploit__pb2.MetasploitSessionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/GetConsole',
            metasploit__pb2.Console.SerializeToString,
            metasploit__pb2.Console.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/GetSession',
            metasploit__pb2.MetasploitSession.SerializeToString,
            metasploit__pb2.MetasploitSession.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateConsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/CreateConsole',
            models__pb2.EmptyRequest.SerializeToString,
            metasploit__pb2.Console.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopConsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/StopConsole',
            metasploit__pb2.Console.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConsoleOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/ListConsoleOutput',
            models__pb2.Pagination.SerializeToString,
            metasploit__pb2.ConsoleOutputList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteToConsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/WriteToConsole',
            metasploit__pb2.ConsoleMessage.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteToSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Metasploit/WriteToSession',
            metasploit__pb2.ConsoleMessage.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
