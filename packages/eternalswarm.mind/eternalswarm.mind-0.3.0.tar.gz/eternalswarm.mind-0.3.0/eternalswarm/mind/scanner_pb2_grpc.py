# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import models_pb2 as models__pb2
from . import scanner_pb2 as scanner__pb2


class ScannerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListScans = channel.unary_unary(
                '/Scanner/ListScans',
                request_serializer=scanner__pb2.ScanListRequest.SerializeToString,
                response_deserializer=models__pb2.ScanList.FromString,
                )
        self.CreateScan = channel.unary_unary(
                '/Scanner/CreateScan',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.Scan.FromString,
                )
        self.UpdateScan = channel.unary_unary(
                '/Scanner/UpdateScan',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.Scan.FromString,
                )
        self.DeleteScan = channel.unary_unary(
                '/Scanner/DeleteScan',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.GetResults = channel.unary_unary(
                '/Scanner/GetResults',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=scanner__pb2.ScanResults.FromString,
                )
        self.ScanVulns = channel.unary_stream(
                '/Scanner/ScanVulns',
                request_serializer=models__pb2.Target.SerializeToString,
                response_deserializer=scanner__pb2.ScanResult.FromString,
                )
        self.GetStats = channel.unary_unary(
                '/Scanner/GetStats',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=scanner__pb2.ScanStats.FromString,
                )
        self.CalcRanges = channel.unary_unary(
                '/Scanner/CalcRanges',
                request_serializer=scanner__pb2.Prefix.SerializeToString,
                response_deserializer=scanner__pb2.Ranges.FromString,
                )
        self.ImportFile = channel.stream_unary(
                '/Scanner/ImportFile',
                request_serializer=models__pb2.FileChunk.SerializeToString,
                response_deserializer=models__pb2.File.FromString,
                )
        self.PerformCustomScan = channel.unary_unary(
                '/Scanner/PerformCustomScan',
                request_serializer=models__pb2.CustomScan.SerializeToString,
                response_deserializer=models__pb2.CustomScan.FromString,
                )
        self.ImportCustomScan = channel.unary_unary(
                '/Scanner/ImportCustomScan',
                request_serializer=models__pb2.CustomScan.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.CancelCustomScan = channel.unary_unary(
                '/Scanner/CancelCustomScan',
                request_serializer=models__pb2.CustomScan.SerializeToString,
                response_deserializer=models__pb2.CustomScan.FromString,
                )
        self.ListCustomScans = channel.unary_unary(
                '/Scanner/ListCustomScans',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.CustomScanList.FromString,
                )
        self.GetCustomScan = channel.unary_unary(
                '/Scanner/GetCustomScan',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.CustomScan.FromString,
                )
        self.ListCustomScanFilters = channel.unary_unary(
                '/Scanner/ListCustomScanFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListHosts = channel.unary_unary(
                '/Scanner/ListHosts',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.HostList.FromString,
                )
        self.GetHost = channel.unary_unary(
                '/Scanner/GetHost',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Host.FromString,
                )
        self.ListHostFilters = channel.unary_unary(
                '/Scanner/ListHostFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListServices = channel.unary_unary(
                '/Scanner/ListServices',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.ServiceList.FromString,
                )
        self.GetService = channel.unary_unary(
                '/Scanner/GetService',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Service.FromString,
                )
        self.ListServiceFilters = channel.unary_unary(
                '/Scanner/ListServiceFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListVulns = channel.unary_unary(
                '/Scanner/ListVulns',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.VulnerabilityList.FromString,
                )
        self.GetVuln = channel.unary_unary(
                '/Scanner/GetVuln',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Vulnerability.FromString,
                )
        self.ListVulnFilters = channel.unary_unary(
                '/Scanner/ListVulnFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListExploits = channel.unary_unary(
                '/Scanner/ListExploits',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.ExploitList.FromString,
                )
        self.GetExploit = channel.unary_unary(
                '/Scanner/GetExploit',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Exploit.FromString,
                )
        self.ListExploitFilters = channel.unary_unary(
                '/Scanner/ListExploitFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListCredentials = channel.unary_unary(
                '/Scanner/ListCredentials',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.CredentialList.FromString,
                )
        self.GetCredential = channel.unary_unary(
                '/Scanner/GetCredential',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Credential.FromString,
                )
        self.AddCredential = channel.unary_unary(
                '/Scanner/AddCredential',
                request_serializer=models__pb2.Credential.SerializeToString,
                response_deserializer=models__pb2.Credential.FromString,
                )
        self.ListCredentialFilters = channel.unary_unary(
                '/Scanner/ListCredentialFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ChangeCredential = channel.unary_unary(
                '/Scanner/ChangeCredential',
                request_serializer=models__pb2.Credential.SerializeToString,
                response_deserializer=models__pb2.Credential.FromString,
                )
        self.ListTargets = channel.unary_unary(
                '/Scanner/ListTargets',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.TargetList.FromString,
                )
        self.AddTargets = channel.unary_unary(
                '/Scanner/AddTargets',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.Scan.FromString,
                )
        self.ListFiles = channel.unary_unary(
                '/Scanner/ListFiles',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.FileList.FromString,
                )
        self.GetFile = channel.unary_unary(
                '/Scanner/GetFile',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.File.FromString,
                )
        self.GetFileStream = channel.unary_stream(
                '/Scanner/GetFileStream',
                request_serializer=models__pb2.File.SerializeToString,
                response_deserializer=models__pb2.FileChunk.FromString,
                )
        self.ListFileFilters = channel.unary_unary(
                '/Scanner/ListFileFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListDiscovery = channel.unary_unary(
                '/Scanner/ListDiscovery',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.DiscoveryList.FromString,
                )
        self.ListDiscoveryModules = channel.unary_unary(
                '/Scanner/ListDiscoveryModules',
                request_serializer=models__pb2.EmptyRequest.SerializeToString,
                response_deserializer=models__pb2.DiscoveryModuleList.FromString,
                )
        self.StartDiscovery = channel.unary_unary(
                '/Scanner/StartDiscovery',
                request_serializer=models__pb2.Discovery.SerializeToString,
                response_deserializer=models__pb2.Discovery.FromString,
                )
        self.CancelDiscovery = channel.unary_unary(
                '/Scanner/CancelDiscovery',
                request_serializer=models__pb2.Discovery.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ListSession = channel.unary_unary(
                '/Scanner/ListSession',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.SessionList.FromString,
                )
        self.GetSession = channel.unary_unary(
                '/Scanner/GetSession',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Session.FromString,
                )
        self.ListSessionFilters = channel.unary_unary(
                '/Scanner/ListSessionFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListLocalAdmins = channel.unary_unary(
                '/Scanner/ListLocalAdmins',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.LocalAdminList.FromString,
                )
        self.GetLocalAdmin = channel.unary_unary(
                '/Scanner/GetLocalAdmin',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.LocalAdmin.FromString,
                )
        self.ListLocalAdminFilters = channel.unary_unary(
                '/Scanner/ListLocalAdminFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListUsers = channel.unary_unary(
                '/Scanner/ListUsers',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.UserList.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/Scanner/GetUser',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.User.FromString,
                )
        self.ListUserFilters = channel.unary_unary(
                '/Scanner/ListUserFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListDomains = channel.unary_unary(
                '/Scanner/ListDomains',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.DomainList.FromString,
                )
        self.GetDomain = channel.unary_unary(
                '/Scanner/GetDomain',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Domain.FromString,
                )
        self.ListDomainFilters = channel.unary_unary(
                '/Scanner/ListDomainFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListLoot = channel.unary_unary(
                '/Scanner/ListLoot',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.LootList.FromString,
                )
        self.GetLoot = channel.unary_unary(
                '/Scanner/GetLoot',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Loot.FromString,
                )
        self.ListLootFilters = channel.unary_unary(
                '/Scanner/ListLootFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListRelayingTargets = channel.unary_unary(
                '/Scanner/ListRelayingTargets',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.RelayingTargetList.FromString,
                )
        self.GetRelayingTarget = channel.unary_unary(
                '/Scanner/GetRelayingTarget',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.RelayingTarget.FromString,
                )
        self.ListRelayingLog = channel.unary_unary(
                '/Scanner/ListRelayingLog',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.RelayingLogList.FromString,
                )
        self.GetRelayingLog = channel.unary_unary(
                '/Scanner/GetRelayingLog',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.RelayingLog.FromString,
                )
        self.ListOutOfScope = channel.unary_unary(
                '/Scanner/ListOutOfScope',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.OutOfScopeList.FromString,
                )
        self.AddOutOfScope = channel.unary_unary(
                '/Scanner/AddOutOfScope',
                request_serializer=models__pb2.OutOfScope.SerializeToString,
                response_deserializer=models__pb2.OutOfScope.FromString,
                )
        self.GetLog = channel.unary_unary(
                '/Scanner/GetLog',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.LogFile.FromString,
                )
        self.ListGroups = channel.unary_unary(
                '/Scanner/ListGroups',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.GroupList.FromString,
                )
        self.GetGroup = channel.unary_unary(
                '/Scanner/GetGroup',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Group.FromString,
                )
        self.ListGroupFilters = channel.unary_unary(
                '/Scanner/ListGroupFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListGroupMemberships = channel.unary_unary(
                '/Scanner/ListGroupMemberships',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.GroupMembershipList.FromString,
                )
        self.GetGroupMembership = channel.unary_unary(
                '/Scanner/GetGroupMembership',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.GroupMembership.FromString,
                )
        self.ListGroupMembershipFilters = channel.unary_unary(
                '/Scanner/ListGroupMembershipFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListTrusts = channel.unary_unary(
                '/Scanner/ListTrusts',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.TrustList.FromString,
                )
        self.GetTrust = channel.unary_unary(
                '/Scanner/GetTrust',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Trust.FromString,
                )
        self.ListTrustFilters = channel.unary_unary(
                '/Scanner/ListTrustFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListPolicies = channel.unary_unary(
                '/Scanner/ListPolicies',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.PolicyList.FromString,
                )
        self.GetPolicy = channel.unary_unary(
                '/Scanner/GetPolicy',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Policy.FromString,
                )
        self.ListPolicyFilters = channel.unary_unary(
                '/Scanner/ListPolicyFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListHashes = channel.unary_unary(
                '/Scanner/ListHashes',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.HashList.FromString,
                )
        self.GetHash = channel.unary_unary(
                '/Scanner/GetHash',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Hash.FromString,
                )
        self.ListHashFilters = channel.unary_unary(
                '/Scanner/ListHashFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListSpiderResults = channel.unary_unary(
                '/Scanner/ListSpiderResults',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.SpiderResultList.FromString,
                )
        self.GetSpiderResult = channel.unary_unary(
                '/Scanner/GetSpiderResult',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.SpiderResult.FromString,
                )
        self.ListSpiderResultFilters = channel.unary_unary(
                '/Scanner/ListSpiderResultFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListShares = channel.unary_unary(
                '/Scanner/ListShares',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.ShareList.FromString,
                )
        self.GetShare = channel.unary_unary(
                '/Scanner/GetShare',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Share.FromString,
                )
        self.ListShareFilters = channel.unary_unary(
                '/Scanner/ListShareFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListShareFiles = channel.unary_unary(
                '/Scanner/ListShareFiles',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.ShareFileList.FromString,
                )
        self.GetShareFile = channel.unary_unary(
                '/Scanner/GetShareFile',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.ShareFile.FromString,
                )
        self.ListShareFileFilters = channel.unary_unary(
                '/Scanner/ListShareFileFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListExtensions = channel.unary_unary(
                '/Scanner/ListExtensions',
                request_serializer=models__pb2.Share.SerializeToString,
                response_deserializer=models__pb2.Filter.FromString,
                )
        self.ListFindings = channel.unary_unary(
                '/Scanner/ListFindings',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.FindingList.FromString,
                )
        self.GetFinding = channel.unary_unary(
                '/Scanner/GetFinding',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Finding.FromString,
                )
        self.ListFindingFilters = channel.unary_unary(
                '/Scanner/ListFindingFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ExportFindings = channel.unary_unary(
                '/Scanner/ExportFindings',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FindingsExport.FromString,
                )
        self.ListCredentialSources = channel.unary_unary(
                '/Scanner/ListCredentialSources',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.CredentialSourceList.FromString,
                )
        self.GetCredentialSource = channel.unary_unary(
                '/Scanner/GetCredentialSource',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.CredentialSource.FromString,
                )
        self.ListCredentialSourceFilters = channel.unary_unary(
                '/Scanner/ListCredentialSourceFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.PinObject = channel.unary_unary(
                '/Scanner/PinObject',
                request_serializer=scanner__pb2.PinMessage.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ListAccess = channel.unary_unary(
                '/Scanner/ListAccess',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.AccessList.FromString,
                )
        self.GetAccess = channel.unary_unary(
                '/Scanner/GetAccess',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.Access.FromString,
                )
        self.ListAccessFilters = channel.unary_unary(
                '/Scanner/ListAccessFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListPasswordSprays = channel.unary_unary(
                '/Scanner/ListPasswordSprays',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.PasswordSprayList.FromString,
                )
        self.GetPasswordSpray = channel.unary_unary(
                '/Scanner/GetPasswordSpray',
                request_serializer=scanner__pb2.GetRequest.SerializeToString,
                response_deserializer=models__pb2.PasswordSpray.FromString,
                )
        self.ListPasswordSprayFilters = channel.unary_unary(
                '/Scanner/ListPasswordSprayFilters',
                request_serializer=models__pb2.Scan.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListPasswordSprayRuns = channel.unary_unary(
                '/Scanner/ListPasswordSprayRuns',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.PasswordSprayRunList.FromString,
                )
        self.ListPasswordSprayRunFilters = channel.unary_unary(
                '/Scanner/ListPasswordSprayRunFilters',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )
        self.ListPasswordSprayUsers = channel.unary_unary(
                '/Scanner/ListPasswordSprayUsers',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.PasswordSprayUserList.FromString,
                )
        self.ListPasswordSprayUserFilters = channel.unary_unary(
                '/Scanner/ListPasswordSprayUserFilters',
                request_serializer=models__pb2.Pagination.SerializeToString,
                response_deserializer=models__pb2.FilterList.FromString,
                )


class ScannerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListScans(self, request, context):
        """Scans
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanVulns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalcRanges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportFile(self, request_iterator, context):
        """Import a file with scan results
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformCustomScan(self, request, context):
        """Custom scans
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportCustomScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCustomScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCustomScans(self, request, context):
        """Custom scans
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomScan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCustomScanFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHosts(self, request, context):
        """Hosts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHostFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServices(self, request, context):
        """Services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServiceFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVulns(self, request, context):
        """Vulns
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVuln(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVulnFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExploits(self, request, context):
        """Exploits
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExploit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExploitFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCredentials(self, request, context):
        """Credentials
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCredentialFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTargets(self, request, context):
        """Targets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTargets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Files
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFileFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDiscovery(self, request, context):
        """Discovery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDiscoveryModules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDiscovery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelDiscovery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSession(self, request, context):
        """Sessions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSessionFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLocalAdmins(self, request, context):
        """Local admins
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocalAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLocalAdminFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Users
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDomains(self, request, context):
        """Domains
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDomainFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLoot(self, request, context):
        """Loot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLoot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLootFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRelayingTargets(self, request, context):
        """RelayingTargets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRelayingTarget(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRelayingLog(self, request, context):
        """RelayingLog
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRelayingLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOutOfScope(self, request, context):
        """OutOfScope
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOutOfScope(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLog(self, request, context):
        """Logs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGroups(self, request, context):
        """Groups
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGroupFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGroupMemberships(self, request, context):
        """Group memberships
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroupMembership(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGroupMembershipFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTrusts(self, request, context):
        """Trusts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrust(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTrustFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPolicies(self, request, context):
        """Policy
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPolicyFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHashes(self, request, context):
        """Hash
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHashFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSpiderResults(self, request, context):
        """Spider results
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpiderResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSpiderResultFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListShares(self, request, context):
        """Shares
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListShareFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListShareFiles(self, request, context):
        """ShareFiles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShareFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListShareFileFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExtensions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFindings(self, request, context):
        """Findings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFinding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFindingFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportFindings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCredentialSources(self, request, context):
        """Credential Sources
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCredentialSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCredentialSourceFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PinObject(self, request, context):
        """Pin an object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccess(self, request, context):
        """Access
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccessFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswordSprays(self, request, context):
        """Password spraying
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPasswordSpray(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswordSprayFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswordSprayRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswordSprayRunFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswordSprayUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPasswordSprayUserFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScannerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListScans': grpc.unary_unary_rpc_method_handler(
                    servicer.ListScans,
                    request_deserializer=scanner__pb2.ScanListRequest.FromString,
                    response_serializer=models__pb2.ScanList.SerializeToString,
            ),
            'CreateScan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateScan,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.Scan.SerializeToString,
            ),
            'UpdateScan': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateScan,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.Scan.SerializeToString,
            ),
            'DeleteScan': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteScan,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'GetResults': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResults,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=scanner__pb2.ScanResults.SerializeToString,
            ),
            'ScanVulns': grpc.unary_stream_rpc_method_handler(
                    servicer.ScanVulns,
                    request_deserializer=models__pb2.Target.FromString,
                    response_serializer=scanner__pb2.ScanResult.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=scanner__pb2.ScanStats.SerializeToString,
            ),
            'CalcRanges': grpc.unary_unary_rpc_method_handler(
                    servicer.CalcRanges,
                    request_deserializer=scanner__pb2.Prefix.FromString,
                    response_serializer=scanner__pb2.Ranges.SerializeToString,
            ),
            'ImportFile': grpc.stream_unary_rpc_method_handler(
                    servicer.ImportFile,
                    request_deserializer=models__pb2.FileChunk.FromString,
                    response_serializer=models__pb2.File.SerializeToString,
            ),
            'PerformCustomScan': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformCustomScan,
                    request_deserializer=models__pb2.CustomScan.FromString,
                    response_serializer=models__pb2.CustomScan.SerializeToString,
            ),
            'ImportCustomScan': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportCustomScan,
                    request_deserializer=models__pb2.CustomScan.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'CancelCustomScan': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCustomScan,
                    request_deserializer=models__pb2.CustomScan.FromString,
                    response_serializer=models__pb2.CustomScan.SerializeToString,
            ),
            'ListCustomScans': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCustomScans,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.CustomScanList.SerializeToString,
            ),
            'GetCustomScan': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomScan,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.CustomScan.SerializeToString,
            ),
            'ListCustomScanFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCustomScanFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHosts,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.HostList.SerializeToString,
            ),
            'GetHost': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHost,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Host.SerializeToString,
            ),
            'ListHostFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHostFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServices,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.ServiceList.SerializeToString,
            ),
            'GetService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetService,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Service.SerializeToString,
            ),
            'ListServiceFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServiceFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListVulns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVulns,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.VulnerabilityList.SerializeToString,
            ),
            'GetVuln': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVuln,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Vulnerability.SerializeToString,
            ),
            'ListVulnFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVulnFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListExploits': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExploits,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.ExploitList.SerializeToString,
            ),
            'GetExploit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExploit,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Exploit.SerializeToString,
            ),
            'ListExploitFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExploitFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCredentials,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.CredentialList.SerializeToString,
            ),
            'GetCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCredential,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Credential.SerializeToString,
            ),
            'AddCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCredential,
                    request_deserializer=models__pb2.Credential.FromString,
                    response_serializer=models__pb2.Credential.SerializeToString,
            ),
            'ListCredentialFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCredentialFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ChangeCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeCredential,
                    request_deserializer=models__pb2.Credential.FromString,
                    response_serializer=models__pb2.Credential.SerializeToString,
            ),
            'ListTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTargets,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.TargetList.SerializeToString,
            ),
            'AddTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTargets,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.Scan.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.FileList.SerializeToString,
            ),
            'GetFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFile,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.File.SerializeToString,
            ),
            'GetFileStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFileStream,
                    request_deserializer=models__pb2.File.FromString,
                    response_serializer=models__pb2.FileChunk.SerializeToString,
            ),
            'ListFileFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFileFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListDiscovery': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDiscovery,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.DiscoveryList.SerializeToString,
            ),
            'ListDiscoveryModules': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDiscoveryModules,
                    request_deserializer=models__pb2.EmptyRequest.FromString,
                    response_serializer=models__pb2.DiscoveryModuleList.SerializeToString,
            ),
            'StartDiscovery': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDiscovery,
                    request_deserializer=models__pb2.Discovery.FromString,
                    response_serializer=models__pb2.Discovery.SerializeToString,
            ),
            'CancelDiscovery': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelDiscovery,
                    request_deserializer=models__pb2.Discovery.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ListSession': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSession,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.SessionList.SerializeToString,
            ),
            'GetSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSession,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Session.SerializeToString,
            ),
            'ListSessionFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSessionFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListLocalAdmins': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLocalAdmins,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.LocalAdminList.SerializeToString,
            ),
            'GetLocalAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocalAdmin,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.LocalAdmin.SerializeToString,
            ),
            'ListLocalAdminFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLocalAdminFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.UserList.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.User.SerializeToString,
            ),
            'ListUserFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDomains,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.DomainList.SerializeToString,
            ),
            'GetDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDomain,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Domain.SerializeToString,
            ),
            'ListDomainFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDomainFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListLoot': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLoot,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.LootList.SerializeToString,
            ),
            'GetLoot': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLoot,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Loot.SerializeToString,
            ),
            'ListLootFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLootFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListRelayingTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRelayingTargets,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.RelayingTargetList.SerializeToString,
            ),
            'GetRelayingTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRelayingTarget,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.RelayingTarget.SerializeToString,
            ),
            'ListRelayingLog': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRelayingLog,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.RelayingLogList.SerializeToString,
            ),
            'GetRelayingLog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRelayingLog,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.RelayingLog.SerializeToString,
            ),
            'ListOutOfScope': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOutOfScope,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.OutOfScopeList.SerializeToString,
            ),
            'AddOutOfScope': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOutOfScope,
                    request_deserializer=models__pb2.OutOfScope.FromString,
                    response_serializer=models__pb2.OutOfScope.SerializeToString,
            ),
            'GetLog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLog,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.LogFile.SerializeToString,
            ),
            'ListGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGroups,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.GroupList.SerializeToString,
            ),
            'GetGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroup,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Group.SerializeToString,
            ),
            'ListGroupFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGroupFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListGroupMemberships': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGroupMemberships,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.GroupMembershipList.SerializeToString,
            ),
            'GetGroupMembership': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroupMembership,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.GroupMembership.SerializeToString,
            ),
            'ListGroupMembershipFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGroupMembershipFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListTrusts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTrusts,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.TrustList.SerializeToString,
            ),
            'GetTrust': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrust,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Trust.SerializeToString,
            ),
            'ListTrustFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTrustFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPolicies,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.PolicyList.SerializeToString,
            ),
            'GetPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPolicy,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Policy.SerializeToString,
            ),
            'ListPolicyFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPolicyFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListHashes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHashes,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.HashList.SerializeToString,
            ),
            'GetHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHash,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Hash.SerializeToString,
            ),
            'ListHashFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHashFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListSpiderResults': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSpiderResults,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.SpiderResultList.SerializeToString,
            ),
            'GetSpiderResult': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpiderResult,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.SpiderResult.SerializeToString,
            ),
            'ListSpiderResultFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSpiderResultFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListShares': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShares,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.ShareList.SerializeToString,
            ),
            'GetShare': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShare,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Share.SerializeToString,
            ),
            'ListShareFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShareFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListShareFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShareFiles,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.ShareFileList.SerializeToString,
            ),
            'GetShareFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShareFile,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.ShareFile.SerializeToString,
            ),
            'ListShareFileFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShareFileFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListExtensions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExtensions,
                    request_deserializer=models__pb2.Share.FromString,
                    response_serializer=models__pb2.Filter.SerializeToString,
            ),
            'ListFindings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFindings,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.FindingList.SerializeToString,
            ),
            'GetFinding': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFinding,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Finding.SerializeToString,
            ),
            'ListFindingFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFindingFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ExportFindings': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportFindings,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FindingsExport.SerializeToString,
            ),
            'ListCredentialSources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCredentialSources,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.CredentialSourceList.SerializeToString,
            ),
            'GetCredentialSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCredentialSource,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.CredentialSource.SerializeToString,
            ),
            'ListCredentialSourceFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCredentialSourceFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'PinObject': grpc.unary_unary_rpc_method_handler(
                    servicer.PinObject,
                    request_deserializer=scanner__pb2.PinMessage.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ListAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccess,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.AccessList.SerializeToString,
            ),
            'GetAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccess,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.Access.SerializeToString,
            ),
            'ListAccessFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccessFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListPasswordSprays': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswordSprays,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.PasswordSprayList.SerializeToString,
            ),
            'GetPasswordSpray': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPasswordSpray,
                    request_deserializer=scanner__pb2.GetRequest.FromString,
                    response_serializer=models__pb2.PasswordSpray.SerializeToString,
            ),
            'ListPasswordSprayFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswordSprayFilters,
                    request_deserializer=models__pb2.Scan.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListPasswordSprayRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswordSprayRuns,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.PasswordSprayRunList.SerializeToString,
            ),
            'ListPasswordSprayRunFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswordSprayRunFilters,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
            'ListPasswordSprayUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswordSprayUsers,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.PasswordSprayUserList.SerializeToString,
            ),
            'ListPasswordSprayUserFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPasswordSprayUserFilters,
                    request_deserializer=models__pb2.Pagination.FromString,
                    response_serializer=models__pb2.FilterList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Scanner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Scanner(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListScans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListScans',
            scanner__pb2.ScanListRequest.SerializeToString,
            models__pb2.ScanList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/CreateScan',
            models__pb2.Scan.SerializeToString,
            models__pb2.Scan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/UpdateScan',
            models__pb2.Scan.SerializeToString,
            models__pb2.Scan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/DeleteScan',
            models__pb2.Scan.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetResults',
            models__pb2.Scan.SerializeToString,
            scanner__pb2.ScanResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanVulns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Scanner/ScanVulns',
            models__pb2.Target.SerializeToString,
            scanner__pb2.ScanResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetStats',
            models__pb2.Scan.SerializeToString,
            scanner__pb2.ScanStats.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalcRanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/CalcRanges',
            scanner__pb2.Prefix.SerializeToString,
            scanner__pb2.Ranges.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/Scanner/ImportFile',
            models__pb2.FileChunk.SerializeToString,
            models__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PerformCustomScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/PerformCustomScan',
            models__pb2.CustomScan.SerializeToString,
            models__pb2.CustomScan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportCustomScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ImportCustomScan',
            models__pb2.CustomScan.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelCustomScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/CancelCustomScan',
            models__pb2.CustomScan.SerializeToString,
            models__pb2.CustomScan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCustomScans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListCustomScans',
            models__pb2.Pagination.SerializeToString,
            models__pb2.CustomScanList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCustomScan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetCustomScan',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.CustomScan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCustomScanFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListCustomScanFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListHosts',
            models__pb2.Pagination.SerializeToString,
            models__pb2.HostList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetHost',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Host.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHostFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListHostFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListServices',
            models__pb2.Pagination.SerializeToString,
            models__pb2.ServiceList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetService',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Service.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListServiceFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListServiceFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVulns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListVulns',
            models__pb2.Pagination.SerializeToString,
            models__pb2.VulnerabilityList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVuln(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetVuln',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Vulnerability.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVulnFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListVulnFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExploits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListExploits',
            models__pb2.Pagination.SerializeToString,
            models__pb2.ExploitList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExploit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetExploit',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Exploit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExploitFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListExploitFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListCredentials',
            models__pb2.Pagination.SerializeToString,
            models__pb2.CredentialList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetCredential',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Credential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/AddCredential',
            models__pb2.Credential.SerializeToString,
            models__pb2.Credential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCredentialFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListCredentialFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ChangeCredential',
            models__pb2.Credential.SerializeToString,
            models__pb2.Credential.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListTargets',
            models__pb2.Pagination.SerializeToString,
            models__pb2.TargetList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/AddTargets',
            models__pb2.Scan.SerializeToString,
            models__pb2.Scan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListFiles',
            models__pb2.Pagination.SerializeToString,
            models__pb2.FileList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetFile',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.File.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Scanner/GetFileStream',
            models__pb2.File.SerializeToString,
            models__pb2.FileChunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFileFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListFileFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDiscovery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListDiscovery',
            models__pb2.Pagination.SerializeToString,
            models__pb2.DiscoveryList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDiscoveryModules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListDiscoveryModules',
            models__pb2.EmptyRequest.SerializeToString,
            models__pb2.DiscoveryModuleList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartDiscovery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/StartDiscovery',
            models__pb2.Discovery.SerializeToString,
            models__pb2.Discovery.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelDiscovery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/CancelDiscovery',
            models__pb2.Discovery.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListSession',
            models__pb2.Pagination.SerializeToString,
            models__pb2.SessionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetSession',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Session.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSessionFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListSessionFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLocalAdmins(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListLocalAdmins',
            models__pb2.Pagination.SerializeToString,
            models__pb2.LocalAdminList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLocalAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetLocalAdmin',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.LocalAdmin.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLocalAdminFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListLocalAdminFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListUsers',
            models__pb2.Pagination.SerializeToString,
            models__pb2.UserList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetUser',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListUserFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListDomains',
            models__pb2.Pagination.SerializeToString,
            models__pb2.DomainList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetDomain',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Domain.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDomainFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListDomainFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListLoot',
            models__pb2.Pagination.SerializeToString,
            models__pb2.LootList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetLoot',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Loot.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLootFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListLootFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRelayingTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListRelayingTargets',
            models__pb2.Pagination.SerializeToString,
            models__pb2.RelayingTargetList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRelayingTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetRelayingTarget',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.RelayingTarget.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRelayingLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListRelayingLog',
            models__pb2.Pagination.SerializeToString,
            models__pb2.RelayingLogList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRelayingLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetRelayingLog',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.RelayingLog.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOutOfScope(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListOutOfScope',
            models__pb2.Pagination.SerializeToString,
            models__pb2.OutOfScopeList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddOutOfScope(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/AddOutOfScope',
            models__pb2.OutOfScope.SerializeToString,
            models__pb2.OutOfScope.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetLog',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.LogFile.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListGroups',
            models__pb2.Pagination.SerializeToString,
            models__pb2.GroupList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetGroup',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Group.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGroupFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListGroupFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGroupMemberships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListGroupMemberships',
            models__pb2.Pagination.SerializeToString,
            models__pb2.GroupMembershipList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGroupMembership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetGroupMembership',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.GroupMembership.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGroupMembershipFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListGroupMembershipFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTrusts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListTrusts',
            models__pb2.Pagination.SerializeToString,
            models__pb2.TrustList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrust(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetTrust',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Trust.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTrustFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListTrustFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPolicies',
            models__pb2.Pagination.SerializeToString,
            models__pb2.PolicyList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetPolicy',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Policy.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPolicyFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPolicyFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHashes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListHashes',
            models__pb2.Pagination.SerializeToString,
            models__pb2.HashList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetHash',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Hash.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHashFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListHashFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSpiderResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListSpiderResults',
            models__pb2.Pagination.SerializeToString,
            models__pb2.SpiderResultList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpiderResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetSpiderResult',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.SpiderResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSpiderResultFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListSpiderResultFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListShares(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListShares',
            models__pb2.Pagination.SerializeToString,
            models__pb2.ShareList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetShare',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Share.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListShareFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListShareFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListShareFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListShareFiles',
            models__pb2.Pagination.SerializeToString,
            models__pb2.ShareFileList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShareFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetShareFile',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.ShareFile.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListShareFileFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListShareFileFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExtensions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListExtensions',
            models__pb2.Share.SerializeToString,
            models__pb2.Filter.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFindings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListFindings',
            models__pb2.Pagination.SerializeToString,
            models__pb2.FindingList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFinding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetFinding',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Finding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFindingFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListFindingFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportFindings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ExportFindings',
            models__pb2.Scan.SerializeToString,
            models__pb2.FindingsExport.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCredentialSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListCredentialSources',
            models__pb2.Pagination.SerializeToString,
            models__pb2.CredentialSourceList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCredentialSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetCredentialSource',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.CredentialSource.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCredentialSourceFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListCredentialSourceFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PinObject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/PinObject',
            scanner__pb2.PinMessage.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListAccess',
            models__pb2.Pagination.SerializeToString,
            models__pb2.AccessList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetAccess',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.Access.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAccessFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListAccessFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPasswordSprays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPasswordSprays',
            models__pb2.Pagination.SerializeToString,
            models__pb2.PasswordSprayList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPasswordSpray(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/GetPasswordSpray',
            scanner__pb2.GetRequest.SerializeToString,
            models__pb2.PasswordSpray.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPasswordSprayFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPasswordSprayFilters',
            models__pb2.Scan.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPasswordSprayRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPasswordSprayRuns',
            models__pb2.Pagination.SerializeToString,
            models__pb2.PasswordSprayRunList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPasswordSprayRunFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPasswordSprayRunFilters',
            models__pb2.Pagination.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPasswordSprayUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPasswordSprayUsers',
            models__pb2.Pagination.SerializeToString,
            models__pb2.PasswordSprayUserList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPasswordSprayUserFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Scanner/ListPasswordSprayUserFilters',
            models__pb2.Pagination.SerializeToString,
            models__pb2.FilterList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
