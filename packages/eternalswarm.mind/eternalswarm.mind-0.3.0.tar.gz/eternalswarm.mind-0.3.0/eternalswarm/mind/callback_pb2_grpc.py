# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import callback_pb2 as callback__pb2
from . import metasploit_pb2 as metasploit__pb2
from . import models_pb2 as models__pb2
from . import terminal_pb2 as terminal__pb2


class CallbackServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NewHost = channel.unary_unary(
                '/CallbackService/NewHost',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.NewVuln = channel.unary_unary(
                '/CallbackService/NewVuln',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.NewCredential = channel.unary_unary(
                '/CallbackService/NewCredential',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ExploitStatus = channel.unary_unary(
                '/CallbackService/ExploitStatus',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.LootStatus = channel.unary_unary(
                '/CallbackService/LootStatus',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.LoginStatus = channel.unary_unary(
                '/CallbackService/LoginStatus',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.BloodhoundStatus = channel.unary_unary(
                '/CallbackService/BloodhoundStatus',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.DiscoveryStatus = channel.unary_unary(
                '/CallbackService/DiscoveryStatus',
                request_serializer=callback__pb2.Callback.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.NewConsoleOutput = channel.unary_unary(
                '/CallbackService/NewConsoleOutput',
                request_serializer=metasploit__pb2.ConsoleOutput.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.NewSessionOutput = channel.unary_unary(
                '/CallbackService/NewSessionOutput',
                request_serializer=metasploit__pb2.SessionOutput.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.NewTerminalOutput = channel.unary_unary(
                '/CallbackService/NewTerminalOutput',
                request_serializer=terminal__pb2.TerminalOutput.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )
        self.ReportStatistics = channel.unary_unary(
                '/CallbackService/ReportStatistics',
                request_serializer=callback__pb2.StatisticsMessage.SerializeToString,
                response_deserializer=models__pb2.EmptyMessage.FromString,
                )


class CallbackServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NewHost(self, request, context):
        """Report new objects:
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewVuln(self, request, context):
        """rpc NewService (Callback) returns (EmptyMessage) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewCredential(self, request, context):
        """rpc NewUser (Callback) returns (EmptyMessage) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExploitStatus(self, request, context):
        """rpc NewDomain (Callback) returns (EmptyMessage) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LootStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BloodhoundStatus(self, request, context):
        """rpc NewSession (Session) returns (EmptyMessage) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DiscoveryStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewConsoleOutput(self, request, context):
        """Report errors
        rpc ErrorExploit(Exploit) returns (EmptyMessage) {}

        Request permission...

        Metasploit
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewSessionOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewTerminalOutput(self, request, context):
        """Terminal
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportStatistics(self, request, context):
        """Statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CallbackServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NewHost': grpc.unary_unary_rpc_method_handler(
                    servicer.NewHost,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'NewVuln': grpc.unary_unary_rpc_method_handler(
                    servicer.NewVuln,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'NewCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.NewCredential,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ExploitStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ExploitStatus,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'LootStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.LootStatus,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'LoginStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginStatus,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'BloodhoundStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.BloodhoundStatus,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'DiscoveryStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.DiscoveryStatus,
                    request_deserializer=callback__pb2.Callback.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'NewConsoleOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.NewConsoleOutput,
                    request_deserializer=metasploit__pb2.ConsoleOutput.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'NewSessionOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.NewSessionOutput,
                    request_deserializer=metasploit__pb2.SessionOutput.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'NewTerminalOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.NewTerminalOutput,
                    request_deserializer=terminal__pb2.TerminalOutput.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
            'ReportStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportStatistics,
                    request_deserializer=callback__pb2.StatisticsMessage.FromString,
                    response_serializer=models__pb2.EmptyMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CallbackService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CallbackService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NewHost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/NewHost',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewVuln(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/NewVuln',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/NewCredential',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExploitStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/ExploitStatus',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LootStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/LootStatus',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoginStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/LoginStatus',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BloodhoundStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/BloodhoundStatus',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DiscoveryStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/DiscoveryStatus',
            callback__pb2.Callback.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewConsoleOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/NewConsoleOutput',
            metasploit__pb2.ConsoleOutput.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewSessionOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/NewSessionOutput',
            metasploit__pb2.SessionOutput.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewTerminalOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/NewTerminalOutput',
            terminal__pb2.TerminalOutput.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CallbackService/ReportStatistics',
            callback__pb2.StatisticsMessage.SerializeToString,
            models__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
