# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import models_pb2 as models__pb2
from . import relaying_pb2 as relaying__pb2


class RelayingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartResponder = channel.unary_unary(
                '/Relaying/StartResponder',
                request_serializer=relaying__pb2.StartMessage.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.StopResponder = channel.unary_unary(
                '/Relaying/StopResponder',
                request_serializer=relaying__pb2.StopMessage.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.GetResponderOutput = channel.unary_unary(
                '/Relaying/GetResponderOutput',
                request_serializer=relaying__pb2.OutputRequest.SerializeToString,
                response_deserializer=relaying__pb2.OutputResponse.FromString,
                )
        self.StartMitm6 = channel.unary_unary(
                '/Relaying/StartMitm6',
                request_serializer=relaying__pb2.StartMessage.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.StopMitm6 = channel.unary_unary(
                '/Relaying/StopMitm6',
                request_serializer=relaying__pb2.StopMessage.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.GetMitm6Output = channel.unary_unary(
                '/Relaying/GetMitm6Output',
                request_serializer=relaying__pb2.OutputRequest.SerializeToString,
                response_deserializer=relaying__pb2.OutputResponse.FromString,
                )
        self.StartRelaying = channel.unary_unary(
                '/Relaying/StartRelaying',
                request_serializer=relaying__pb2.StartMessage.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.StopRelaying = channel.unary_unary(
                '/Relaying/StopRelaying',
                request_serializer=relaying__pb2.StopMessage.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.GetRelayingOutput = channel.unary_unary(
                '/Relaying/GetRelayingOutput',
                request_serializer=relaying__pb2.OutputRequest.SerializeToString,
                response_deserializer=relaying__pb2.OutputResponse.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/Relaying/GetStatus',
                request_serializer=relaying__pb2.RelayingRequest.SerializeToString,
                response_deserializer=relaying__pb2.RelayingStatus.FromString,
                )
        self.AddRelayingTarget = channel.unary_unary(
                '/Relaying/AddRelayingTarget',
                request_serializer=models__pb2.RelayingTarget.SerializeToString,
                response_deserializer=models__pb2.RelayingTarget.FromString,
                )
        self.RemoveRelayingTarget = channel.unary_unary(
                '/Relaying/RemoveRelayingTarget',
                request_serializer=models__pb2.RelayingTarget.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.SyncRelayingTargets = channel.unary_unary(
                '/Relaying/SyncRelayingTargets',
                request_serializer=relaying__pb2.Response.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )
        self.ClearRelayingTargets = channel.unary_unary(
                '/Relaying/ClearRelayingTargets',
                request_serializer=relaying__pb2.Response.SerializeToString,
                response_deserializer=relaying__pb2.Response.FromString,
                )


class RelayingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartResponder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopResponder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResponderOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartMitm6(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopMitm6(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMitm6Output(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartRelaying(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRelaying(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRelayingOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRelayingTarget(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRelayingTarget(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncRelayingTargets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearRelayingTargets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RelayingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartResponder': grpc.unary_unary_rpc_method_handler(
                    servicer.StartResponder,
                    request_deserializer=relaying__pb2.StartMessage.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'StopResponder': grpc.unary_unary_rpc_method_handler(
                    servicer.StopResponder,
                    request_deserializer=relaying__pb2.StopMessage.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'GetResponderOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResponderOutput,
                    request_deserializer=relaying__pb2.OutputRequest.FromString,
                    response_serializer=relaying__pb2.OutputResponse.SerializeToString,
            ),
            'StartMitm6': grpc.unary_unary_rpc_method_handler(
                    servicer.StartMitm6,
                    request_deserializer=relaying__pb2.StartMessage.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'StopMitm6': grpc.unary_unary_rpc_method_handler(
                    servicer.StopMitm6,
                    request_deserializer=relaying__pb2.StopMessage.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'GetMitm6Output': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMitm6Output,
                    request_deserializer=relaying__pb2.OutputRequest.FromString,
                    response_serializer=relaying__pb2.OutputResponse.SerializeToString,
            ),
            'StartRelaying': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRelaying,
                    request_deserializer=relaying__pb2.StartMessage.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'StopRelaying': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRelaying,
                    request_deserializer=relaying__pb2.StopMessage.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'GetRelayingOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRelayingOutput,
                    request_deserializer=relaying__pb2.OutputRequest.FromString,
                    response_serializer=relaying__pb2.OutputResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=relaying__pb2.RelayingRequest.FromString,
                    response_serializer=relaying__pb2.RelayingStatus.SerializeToString,
            ),
            'AddRelayingTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRelayingTarget,
                    request_deserializer=models__pb2.RelayingTarget.FromString,
                    response_serializer=models__pb2.RelayingTarget.SerializeToString,
            ),
            'RemoveRelayingTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRelayingTarget,
                    request_deserializer=models__pb2.RelayingTarget.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'SyncRelayingTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncRelayingTargets,
                    request_deserializer=relaying__pb2.Response.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
            'ClearRelayingTargets': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearRelayingTargets,
                    request_deserializer=relaying__pb2.Response.FromString,
                    response_serializer=relaying__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Relaying', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Relaying(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartResponder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/StartResponder',
            relaying__pb2.StartMessage.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopResponder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/StopResponder',
            relaying__pb2.StopMessage.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResponderOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/GetResponderOutput',
            relaying__pb2.OutputRequest.SerializeToString,
            relaying__pb2.OutputResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartMitm6(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/StartMitm6',
            relaying__pb2.StartMessage.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopMitm6(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/StopMitm6',
            relaying__pb2.StopMessage.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMitm6Output(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/GetMitm6Output',
            relaying__pb2.OutputRequest.SerializeToString,
            relaying__pb2.OutputResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartRelaying(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/StartRelaying',
            relaying__pb2.StartMessage.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopRelaying(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/StopRelaying',
            relaying__pb2.StopMessage.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRelayingOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/GetRelayingOutput',
            relaying__pb2.OutputRequest.SerializeToString,
            relaying__pb2.OutputResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/GetStatus',
            relaying__pb2.RelayingRequest.SerializeToString,
            relaying__pb2.RelayingStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRelayingTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/AddRelayingTarget',
            models__pb2.RelayingTarget.SerializeToString,
            models__pb2.RelayingTarget.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveRelayingTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/RemoveRelayingTarget',
            models__pb2.RelayingTarget.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncRelayingTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/SyncRelayingTargets',
            relaying__pb2.Response.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearRelayingTargets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Relaying/ClearRelayingTargets',
            relaying__pb2.Response.SerializeToString,
            relaying__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
