; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist
;
[flake8]
max-line-length = 100

[tox]
skip_missing_interpreters=True
envlist =
    clean,
    check,
    {py36, py37, py38, py39},
    report,
    apidoc,
    doctest,
    docs

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: check, py39

[testenv]
basepython =
    spell: {env:TOXPYTHON:python2.7}
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    {clean,check,apidoc,docs,doctest,report,run,integration,licenses}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PYTHONASYNCIODEBUG=1
    PHARMPYNOCONFIGFILE=1
passenv =
    *
usedevelop = false
deps =
    -rrequirements.txt
    pytest>5.3.5
    pytest-asyncio
    pytest-cov
    pytest-xdist>1.34.0
    pytest-profiling
    gprof2dot==2019.11.30
    pyfakefs
    pdbpp
commands =
    {posargs:pytest -n 8 --cov --cov-report=term-missing -vv tests}

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -j auto -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:apidoc]
whitelist_externals =
    bash
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    python docs/apidoc.py

[testenv:doctest]
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -j auto -b doctest docs dist/docs

[testenv:docs]
deps =
    -rrequirements.txt
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -j auto -b html docs dist/docs
    sphinx-build -j auto -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest >= 0.45
    flake8
    readme-renderer
    pygments
    isort >= 5.0.0
    twine
    black
    flake8-black
skip_install = true
commands =
;    python setup.py check --strict --metadata --restructuredtext
;twine check dist/*
    check-manifest -v {toxinidir}
    black src tests setup.py
    flake8 src tests setup.py
    isort -m3 --tc src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report --fail-under=88
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:run]
deps =
    -rrequirements.txt

[testenv:integration]
deps =
    pytest>5.3.5
    pyfakefs
    -rrequirements.txt
setenv =
    PHARMPYNOCONFIGFILE=0
commands =
    {posargs:pytest -vv tests/integration}

[testenv:licenses]
deps =
    -rrequirements.txt
    pip-licenses
commands =
    pip-licenses
