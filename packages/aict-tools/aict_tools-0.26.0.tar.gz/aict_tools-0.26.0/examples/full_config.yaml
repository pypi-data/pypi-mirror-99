# seed for the random number generators, to make things reproducible
seed: 0

# define th number of cross validations to perform
n_cross_validations: 5

energy_unit: GeV

# Define the name of the column that contains the name of the telescope in case you're working
# with mulitple telescopes and telescope types
#telescope_type_key: telescope:name

# Quality cuts from Fabian Temme's phd thesis
selection:
    num_pixel_in_shower:
      - '>='  # needs to be in quotes because > and ! are special character in yaml
      - 10
    num_islands:
      - <=
      - 8
    width:
      - <=
      - 30
    leakage1:
      - <
      - 0.6
    leakage2:
      - lt # string representation also possible
      - 0.85
    length:
      - lt
      - 70

 
# config for the energy regression
energy:
  regressor: |
    ensemble.RandomForestRegressor(
      n_estimators=30,
      max_features='sqrt',
      n_jobs=-1,
      max_depth=12,
    )

  # randomly sample the data if you dont want to use the whole set
  n_signal: 500

  # define the name of the regression target
  target_column: corsika_event_header_total_energy


  # Define the name of the variable you want estimate by regression.
  output_name: gamma_energy_prediction

  features:
    - size
    - length
    - width
    - num_islands
    - leakage1
    - skewness_long
    - skewness_trans
    - timespread
    - concentration_cog

  # Generate some features using pd.DataFrame.eval
  # List all columns that have to be read from the input files
  # in needed_columns. 
  # features must be a mapping of feature name -> expression
  feature_generation:
    needed_columns:
      - width
      - length
    features:
      area: width * length * @pi

 
# config for the g/h separation
separator:
  #the classifier to use
  classifier: |
    ensemble.RandomForestClassifier(
        n_estimators=30,
        max_features='sqrt',
        n_jobs=-1,
        max_depth=15,
        criterion='entropy',
    )

  # randomly sample the data if you dont want to use the whole set
  n_background: 500
  n_signal: 500

  # Define the name for the output column for prediction score of the signal class
  output_name: gamma_prediction

  features:
    - size
    - length
    - width
    - num_islands
    - leakage1
    - skewness_long
    - skewness_trans
    - timespread
    - concentration_core
    - concentration_cog


# config for the source regression
disp:
  disp_regressor: |
    ensemble.RandomForestRegressor(
        n_estimators=30,
        max_features='sqrt',
        n_jobs=-1,
        max_depth=20,
    )

  sign_classifier: |
    ensemble.RandomForestClassifier(
        n_estimators=30,
        max_features='sqrt',
        n_jobs=-1,
        max_depth=20,
    )

  coordinate_transformation: FACT
  # columns containing coordinates of the source and of the pointing
  source_az_column: source_position_az
  source_zd_column: source_position_zd
  source_az_unit: deg
  source_zd_unit: deg

  pointing_az_column: pointing_position_az
  pointing_zd_column: pointing_position_zd
  pointing_az_unit: deg
  pointing_zd_unit: deg

  # randomly sample the data if you dont want to use the whole set
  n_signal : 500

  features:
    - concentration_cog
    - concentration_core
    - delta
    - leakage1
    - leakage2
    - length
    - skewness_long
    - kurtosis_long
    - num_islands
    - size
    - width
