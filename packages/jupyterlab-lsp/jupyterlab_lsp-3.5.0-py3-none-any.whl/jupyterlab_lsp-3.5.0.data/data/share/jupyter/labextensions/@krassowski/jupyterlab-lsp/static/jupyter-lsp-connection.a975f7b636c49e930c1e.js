(self.webpackChunk_krassowski_jupyterlab_lsp=self.webpackChunk_krassowski_jupyterlab_lsp||[]).push([[16],{1672:(e,n,s)=>{"use strict";s.r(n),s.d(n,{LSPConnection:()=>o});var t=s(6660),i=s(6988);class o extends t.LspWsConnection{constructor(e){super(e),this.closing_manually=!1,this.documentsToOpen=[]}sendOpenWhenReady(e){this.isReady?this.sendOpen(e):this.documentsToOpen.push(e)}onServerInitialized(e){for(super.onServerInitialized(e);this.documentsToOpen.length;)this.sendOpen(this.documentsToOpen.pop())}sendSelectiveChange(e,n){this._sendChange([e],n)}sendFullTextChange(e,n){this._sendChange([{text:e}],n)}isRenameSupported(){return!(!this.serverCapabilities||!this.serverCapabilities.renameProvider)}async rename(e,n,s,t=!0){if(!this.isReady||!this.isRenameSupported())return;const i={textDocument:{uri:n.uri},position:{line:e.line,character:e.ch},newName:s},o=await this.connection.sendRequest("textDocument/rename",i);return t&&this.emit("renamed",o),o}connect(e){return super.connect(e),(0,i.EU)((()=>this.isConnected),-1).then((()=>{this.connection.onClose((()=>{this.isConnected=!1,this.emit("close",this.closing_manually)}))})).catch((()=>{console.error("Could not connect onClose signal")})),this}close(){try{this.closing_manually=!0,super.close()}catch(e){this.closing_manually=!1}}_sendChange(e,n){if(!this.isReady)return;this.openedUris.get(n.uri)||this.sendOpen(n);const s={textDocument:{uri:n.uri,version:n.version},contentChanges:e};this.connection.sendNotification("textDocument/didChange",s),n.version++}async getCompletionResolve(e){if(this.isReady&&this.isCompletionResolveProvider())return this.connection.sendRequest("completionItem/resolve",e)}isCompletionResolveProvider(){var e,n;return null===(n=null===(e=this.serverCapabilities)||void 0===e?void 0:e.completionProvider)||void 0===n?void 0:n.resolveProvider}}}}]);