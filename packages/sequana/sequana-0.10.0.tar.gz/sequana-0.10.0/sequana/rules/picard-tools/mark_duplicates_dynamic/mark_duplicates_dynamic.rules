# -*- coding: utf-8 -*-
#
#  This file is part of Sequana software
#
#  Copyright (c) 2016-2021 - Sequana Dev Team (https://sequana.readthedocs.io)
#
#  File author(s):
#      Thomas Cokelaer <thomas.cokelaer@pasteur.fr>
#      Rachel Legendre <rachel.legendre@pasteur.fr>
#
#  Distributed under the terms of the 3-clause BSD license.
#  The full license is in the LICENSE file, distributed with this software.
#
#  Website:       https://github.com/sequana/sequana
#  Documentation: http://sequana.readthedocs.io
#  Contributors:  https://github.com/sequana/sequana/graphs/contributors
##############################################################################

def mark_duplicates_dynamic(name, manager):

    metadata = {'name':name}

    mark_duplicates_code = '''

rule mark_duplicates_%(name)s:
    """
    Mark reads duplicated. Thus, variant caller is aware of duplicated reads.

    Required input:
        __mark_duplicates_%(name)s__input: bam file

    Required output:
        __mark_duplicates_%(name)s__output: bam file

    Required configuration:
        .. code-block:: yaml

            mark_duplicates:
                remove:  # yes/no
                tmpdir:  # temporary directory
    """
    input:
        __mark_duplicates_%(name)s__input
    output:
        bam = __mark_duplicates_%(name)s__output,
        metrics = __mark_duplicates_%(name)s__metrics
    log:
        out = __mark_duplicates_%(name)s__log_std,
        err = __mark_duplicates_%(name)s__log_err
    params:
        remove_dup = config["mark_duplicates"]["remove"],
        tmpdir = config["mark_duplicates"]["tmpdir"]
    threads:
        int(config["mark_duplicates"]["threads"])
    shell:
        """
        (picard MarkDuplicates I={input} O={output.bam} \
            M={output.metrics} REMOVE_DUPLICATES={params.remove_dup} \
            TMP_DIR={params.tmpdir} && samtools index {output.bam}) \
            > {log.out} 2> {log.err}
        """
    '''


    from sequana.snaketools import build_dynamic_rule
    return build_dynamic_rule(mark_duplicates_code % metadata, manager.pipeline_dir)
