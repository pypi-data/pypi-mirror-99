rule SARTools:
    """
    SARTools is a R package dedicated to the differential analysis of RNA-seq data.
    It provides tools to generate descriptive and diagnostic graphs, to run the differential analysis
    with one of the well known DESeq2 or edgeR packages and to export the results into easily readable
    tab-delimited files. It also facilitates the generation of a HTML report which displays all the
    figures produced, explains the statistical methods and gives the results of the differential analysis.

    Required input:
        __SARTools__input: path to the folder with count files
        __SARTools__targetFile: the target file with conditions, groups and associated count-files

    Required output:
        __SARTools__output: SARTools html result file

    Config:

        .. code-block:: yaml

            SARTools:
                #Required parameters:
                design: path/to/file            #path to design file
                projectName: "RNAseq"           # name of the project
                author: "NAME"                  # author of the statistical analysis/report
                featuresToRemove: "NULL"        # NULL if no feature to remove

                #Optional parameters:
                varInt: "group"                        # factor of interest
                condRef: "WT"                          # reference biological condition
                batch: NULL                            # blocking factor: NULL (default) or "batch" for example
                fitType: "parametric"                  # mean-variance relationship: "parametric" (default) or "local"
                cooksCutoff: TRUE                      # TRUE/FALSE to perform the outliers detection (default is TRUE)
                independentFiltering: TRUE             # TRUE/FALSE to perform independent filtering (default is TRUE)
                alpha: 0.05                            # threshold of statistical significance
                pAdjustMethod: "BH"                    # p-value adjustment method: "BH" (default) or "BY"
                typeTrans: "VST"                       # transformation for PCA/clustering: "VST" or "rlog"
                locfunc: "median"                      # "median" (default) or "shorth" to estimate the size factors


    """


    input:
        rawDir = __SARTools__input,
        targetFile = __SARTools__targetFile
    log:
        __SARTools__logs
    output:
        touch( __SARTools__output_file)
    threads: 1
    params:
        wkdir = __SARTools__output,
        projectName = config['SARTools']['projectName'],
        author = config['SARTools']['author'],
        featuresToRemove = config['SARTools']['featuresToRemove'],
        varInt = config['SARTools']['varInt'],
        condRef = config['SARTools']['condRef'],
        batch = config['SARTools']['batch'],
        fitType = config['SARTools']['fitType'],
        cooksCutoff = config['SARTools']['cooksCutoff'],
        independentFiltering = config['SARTools']['independentFiltering'],
        alpha = config['SARTools']['alpha'],
        pAdjustMethod = config['SARTools']['pAdjustMethod'],
        typeTrans = config['SARTools']['typeTrans'],
        locfunc = config['SARTools']['locfunc'],

    run:
        from sequana import sequana_data
        from os import chdir
        from os.path import basename

        #get R script path
        sartools_script = sequana_data("template_script_DESeq2_CL.r", where="scripts")
        #change directory
        chdir(params.wkdir)
        target = basename(input.targetFile)
        #run R script
        if params.batch == "NULL" :
            shell("Rscript --no-save --no-restore %s --rawDir {input.rawDir} --targetFile %s \
               --projectName {params.projectName}  --author {params.author} --featuresToRemove {params.featuresToRemove} \
               --varInt {params.varInt}  --condRef {params.condRef} --fitType {params.fitType} \
               --cooksCutoff {params.cooksCutoff} --independentFiltering {params.independentFiltering} \
               --alpha {params.alpha} --pAdjustMethod {params.pAdjustMethod} --typeTrans {params.typeTrans} \
               --locfunc {params.locfunc} 2> {log}" % (sartools_script, target))
        else :
            shell("Rscript --no-save --no-restore %s --rawDir {input.rawDir} --targetFile %s \
               --projectName {params.projectName}  --author {params.author} --featuresToRemove {params.featuresToRemove} \
               --varInt {params.varInt}  --condRef {params.condRef} --batch {params.batch} --fitType {params.fitType} \
               --cooksCutoff {params.cooksCutoff} --independentFiltering {params.independentFiltering} \
               --alpha {params.alpha} --pAdjustMethod {params.pAdjustMethod} --typeTrans {params.typeTrans} \
               --locfunc {params.locfunc} 2> {log}" % (sartools_script, target))
