Metadata-Version: 2.1
Name: django-avishan
Version: 0.5.30
Summary: Avishan is just an set of tools
Home-page: https://gitlab.com/afshari9978/avishan
Author: Morteza Afshari
Author-email: afshari9978@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 3.0
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Dist: bcrypt (>=3.1.7)
Requires-Dist: colour (>=0.1.5)
Requires-Dist: Django (>=3.0.7)
Requires-Dist: django-anymail[sendgrid] (>=7.2.1)
Requires-Dist: django-cors-headers (>=3.2.1)
Requires-Dist: django-crum (>=0.7.8)
Requires-Dist: django-filter (>=2.3.0)
Requires-Dist: django-money (>=1.3)
Requires-Dist: docstring-parser (>=0.7.1)
Requires-Dist: Faker (>=4.0.3)
Requires-Dist: Khayyam (>=3.0.17)
Requires-Dist: haversine (>=2.2.0)
Requires-Dist: gunicorn (>=20.0.4)
Requires-Dist: Pillow (>=7.1.0)
Requires-Dist: PyJWT (==1.7.1)
Requires-Dist: PyYAML (>=5.3.1)
Requires-Dist: pytest (>=6.1.2)
Requires-Dist: requests (>=2.22.0)
Requires-Dist: schemathesis (>=2.8.4)
Requires-Dist: stringcase (>=1.2.0)

=======
Avishan
=======

Avishan is a set of tools for building fast, comfortable and reliable django apps.

Quick start
-----------

1. On linux remember to install this packages::

    sudo apt-get install build-essential libffi-dev python3-pip python3-dev

2. Create virtual environment for your project::

    sudo -H pip3 install virtualenv

3. Just run this command::

    python manage.py avishan_config

Features
--------
* Request data storage (current_request dict)
* Auto-find and checks token from session, or request header
* Handle sort, search, filter and pagination on response
* Configure django settings.py file
* Handle CORS
* Creates config.py file for each app and project

Create a new version
--------------------

1. just run::

    pip install -r requirements.txt
    python setup.py sdist bdist_wheel
    twine upload dist/* --repository-url https://upload.pypi.org/legacy/



