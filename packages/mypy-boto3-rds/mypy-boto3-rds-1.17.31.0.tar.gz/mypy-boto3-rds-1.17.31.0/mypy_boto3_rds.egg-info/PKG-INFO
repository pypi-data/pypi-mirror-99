Metadata-Version: 2.1
Name: mypy-boto3-rds
Version: 1.17.31.0
Summary: Type annotations for boto3.RDS 1.17.31 service, generated by mypy-boto3-buider 4.4.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Description: # mypy-boto3-rds
        
        [![PyPI - mypy-boto3-rds](https://img.shields.io/pypi/v/mypy-boto3-rds.svg?color=blue)](https://pypi.org/project/mypy-boto3-rds)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-rds.svg?color=blue)](https://pypi.org/project/mypy-boto3-rds)
        [![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
        
        ![boto3.typed](https://github.com/vemel/mypy_boto3_builder/raw/master/logo.png)
        
        Type annotations for
        [boto3.RDS 1.17.31](https://boto3.amazonaws.com/v1/documentation/api/1.17.31/reference/services/rds.html#RDS) service
        compatible with
        [VSCode](https://code.visualstudio.com/),
        [PyCharm](https://www.jetbrains.com/pycharm/),
        [Emacs](https://www.gnu.org/software/emacs/),
        [Sublime Text](https://www.sublimetext.com/),
        [mypy](https://github.com/python/mypy),
        [pyright](https://github.com/microsoft/pyright)
        and other tools.
        
        Generated by [mypy-boto3-buider 4.4.0](https://github.com/vemel/mypy_boto3_builder).
        
        More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.
        
        See how it helps to find and fix potential bugs:
        
        ![boto3-stubs demo](https://github.com/vemel/mypy_boto3_builder/raw/master/demo.gif)
        
        - [mypy-boto3-rds](#mypy-boto3-rds)
          - [How to install](#how-to-install)
          - [Usage](#usage)
            - [VSCode](#vscode)
            - [PyCharm](#pycharm)
            - [Other IDEs](#other-ides)
            - [mypy](#mypy)
            - [pyright](#pyright)
          - [Explicit type annotations](#explicit-type-annotations)
            - [Client annotations](#client-annotations)
            - [Paginators annotations](#paginators-annotations)
            - [Waiters annotations](#waiters-annotations)
            - [Service Resource annotations](#service-resource-annotations)
            - [Other resources annotations](#other-resources-annotations)
            - [Collections annotations](#collections-annotations)
            - [Typed dictionations](#typed-dictionations)
        
        ## How to install
        
        Install `boto3-stubs` for `RDS` service.
        
        ```bash
        python -m pip install boto3-stubs[rds]
        ```
        
        ## Usage
        
        ### VSCode
        
        - Install [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)
        - Install [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)
        - Set `Pylance` as your Python Language Server
        - Install `boto-stubs[rds]` in your environment: `python -m pip install 'boto3-stubs[rds]'`
        
        Both type checking and auto-complete should work for `RDS` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### PyCharm
        
        - Install `boto-stubs[rds]` in your environment: `python -m pip install 'boto3-stubs[rds]'`
        
        Both type checking and auto-complete should work for `RDS` service.
        No explicit type annotations required, write your `boto3` code as usual.
        Auto-complete can be slow on big projects or if you have a lot of installed `boto3-stubs` submodules.
        
        ### Other IDEs
        
        Not tested, but as long as your IDE support `mypy` or `pyright`, everything should work.
        
        ### mypy
        
        - Install `mypy`: `python -m pip install mypy`
        - Install `boto-stubs[rds]` in your environment: `python -m pip install 'boto3-stubs[rds]'`
        - Run `mypy` as usual
        
        Type checking should work for `RDS` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ### pyright
        
        - Install `pyright`: `yarn global add pyright`
        - Install `boto-stubs[rds]` in your environment: `python -m pip install 'boto3-stubs[rds]'`
        - Optionally, you can install `boto3-stubs` to `typings` folder.
        
        Type checking should work for `RDS` service.
        No explicit type annotations required, write your `boto3` code as usual.
        
        ## Explicit type annotations
        
        ### Client annotations
        
        `RDSClient` provides annotations for `boto3.client("rds")`.
        
        ```python
        import boto3
        
        from mypy_boto3_rds import RDSClient
        
        client: RDSClient = boto3.client("rds")
        
        # now client usage is checked by mypy and IDE should provide code auto-complete
        
        # works for session as well
        session = boto3.session.Session(region="us-west-1")
        session_client: RDSClient = session.client("rds")
        ```
        
        ### Paginators annotations
        
        `mypy_boto3_rds.paginator` module contains type annotations for all paginators.
        
        ```python
        from mypy_boto3_rds import RDSClient
        from mypy_boto3_rds.paginator import (
            DescribeCertificatesPaginator,
            DescribeCustomAvailabilityZonesPaginator,
            DescribeDBClusterBacktracksPaginator,
            DescribeDBClusterEndpointsPaginator,
            DescribeDBClusterParameterGroupsPaginator,
            DescribeDBClusterParametersPaginator,
            DescribeDBClusterSnapshotsPaginator,
            DescribeDBClustersPaginator,
            DescribeDBEngineVersionsPaginator,
            DescribeDBInstanceAutomatedBackupsPaginator,
            DescribeDBInstancesPaginator,
            DescribeDBLogFilesPaginator,
            DescribeDBParameterGroupsPaginator,
            DescribeDBParametersPaginator,
            DescribeDBProxiesPaginator,
            DescribeDBProxyEndpointsPaginator,
            DescribeDBProxyTargetGroupsPaginator,
            DescribeDBProxyTargetsPaginator,
            DescribeDBSecurityGroupsPaginator,
            DescribeDBSnapshotsPaginator,
            DescribeDBSubnetGroupsPaginator,
            DescribeEngineDefaultClusterParametersPaginator,
            DescribeEngineDefaultParametersPaginator,
            DescribeEventSubscriptionsPaginator,
            DescribeEventsPaginator,
            DescribeExportTasksPaginator,
            DescribeGlobalClustersPaginator,
            DescribeInstallationMediaPaginator,
            DescribeOptionGroupOptionsPaginator,
            DescribeOptionGroupsPaginator,
            DescribeOrderableDBInstanceOptionsPaginator,
            DescribePendingMaintenanceActionsPaginator,
            DescribeReservedDBInstancesPaginator,
            DescribeReservedDBInstancesOfferingsPaginator,
            DescribeSourceRegionsPaginator,
            DownloadDBLogFilePortionPaginator,
        )
        
        client: RDSClient = boto3.client("rds")
        
        # Explicit type annotations are optional here
        # Type should be correctly discovered by mypy and IDEs
        # VSCode requires explicit type annotations
        describe_certificates_paginator: DescribeCertificatesPaginator = client.get_paginator("describe_certificates")
        describe_custom_availability_zones_paginator: DescribeCustomAvailabilityZonesPaginator = client.get_paginator("describe_custom_availability_zones")
        describe_db_cluster_backtracks_paginator: DescribeDBClusterBacktracksPaginator = client.get_paginator("describe_db_cluster_backtracks")
        describe_db_cluster_endpoints_paginator: DescribeDBClusterEndpointsPaginator = client.get_paginator("describe_db_cluster_endpoints")
        describe_db_cluster_parameter_groups_paginator: DescribeDBClusterParameterGroupsPaginator = client.get_paginator("describe_db_cluster_parameter_groups")
        describe_db_cluster_parameters_paginator: DescribeDBClusterParametersPaginator = client.get_paginator("describe_db_cluster_parameters")
        describe_db_cluster_snapshots_paginator: DescribeDBClusterSnapshotsPaginator = client.get_paginator("describe_db_cluster_snapshots")
        describe_db_clusters_paginator: DescribeDBClustersPaginator = client.get_paginator("describe_db_clusters")
        describe_db_engine_versions_paginator: DescribeDBEngineVersionsPaginator = client.get_paginator("describe_db_engine_versions")
        describe_db_instance_automated_backups_paginator: DescribeDBInstanceAutomatedBackupsPaginator = client.get_paginator("describe_db_instance_automated_backups")
        describe_db_instances_paginator: DescribeDBInstancesPaginator = client.get_paginator("describe_db_instances")
        describe_db_log_files_paginator: DescribeDBLogFilesPaginator = client.get_paginator("describe_db_log_files")
        describe_db_parameter_groups_paginator: DescribeDBParameterGroupsPaginator = client.get_paginator("describe_db_parameter_groups")
        describe_db_parameters_paginator: DescribeDBParametersPaginator = client.get_paginator("describe_db_parameters")
        describe_db_proxies_paginator: DescribeDBProxiesPaginator = client.get_paginator("describe_db_proxies")
        describe_db_proxy_endpoints_paginator: DescribeDBProxyEndpointsPaginator = client.get_paginator("describe_db_proxy_endpoints")
        describe_db_proxy_target_groups_paginator: DescribeDBProxyTargetGroupsPaginator = client.get_paginator("describe_db_proxy_target_groups")
        describe_db_proxy_targets_paginator: DescribeDBProxyTargetsPaginator = client.get_paginator("describe_db_proxy_targets")
        describe_db_security_groups_paginator: DescribeDBSecurityGroupsPaginator = client.get_paginator("describe_db_security_groups")
        describe_db_snapshots_paginator: DescribeDBSnapshotsPaginator = client.get_paginator("describe_db_snapshots")
        describe_db_subnet_groups_paginator: DescribeDBSubnetGroupsPaginator = client.get_paginator("describe_db_subnet_groups")
        describe_engine_default_cluster_parameters_paginator: DescribeEngineDefaultClusterParametersPaginator = client.get_paginator("describe_engine_default_cluster_parameters")
        describe_engine_default_parameters_paginator: DescribeEngineDefaultParametersPaginator = client.get_paginator("describe_engine_default_parameters")
        describe_event_subscriptions_paginator: DescribeEventSubscriptionsPaginator = client.get_paginator("describe_event_subscriptions")
        describe_events_paginator: DescribeEventsPaginator = client.get_paginator("describe_events")
        describe_export_tasks_paginator: DescribeExportTasksPaginator = client.get_paginator("describe_export_tasks")
        describe_global_clusters_paginator: DescribeGlobalClustersPaginator = client.get_paginator("describe_global_clusters")
        describe_installation_media_paginator: DescribeInstallationMediaPaginator = client.get_paginator("describe_installation_media")
        describe_option_group_options_paginator: DescribeOptionGroupOptionsPaginator = client.get_paginator("describe_option_group_options")
        describe_option_groups_paginator: DescribeOptionGroupsPaginator = client.get_paginator("describe_option_groups")
        describe_orderable_db_instance_options_paginator: DescribeOrderableDBInstanceOptionsPaginator = client.get_paginator("describe_orderable_db_instance_options")
        describe_pending_maintenance_actions_paginator: DescribePendingMaintenanceActionsPaginator = client.get_paginator("describe_pending_maintenance_actions")
        describe_reserved_db_instances_paginator: DescribeReservedDBInstancesPaginator = client.get_paginator("describe_reserved_db_instances")
        describe_reserved_db_instances_offerings_paginator: DescribeReservedDBInstancesOfferingsPaginator = client.get_paginator("describe_reserved_db_instances_offerings")
        describe_source_regions_paginator: DescribeSourceRegionsPaginator = client.get_paginator("describe_source_regions")
        download_db_log_file_portion_paginator: DownloadDBLogFilePortionPaginator = client.get_paginator("download_db_log_file_portion")
        ```
        
        
        ### Waiters annotations
        
        `mypy_boto3_rds.waiter` module contains type annotations for all waiters.
        
        ```python
        from mypy_boto3_rds import RDSClient
        from mypy_boto3_rds.waiter import (
            DBClusterSnapshotAvailableWaiter,
            DBClusterSnapshotDeletedWaiter,
            DBInstanceAvailableWaiter,
            DBInstanceDeletedWaiter,
            DBSnapshotAvailableWaiter,
            DBSnapshotCompletedWaiter,
            DBSnapshotDeletedWaiter,
        )
        
        client: RDSClient = boto3.client("rds")
        
        # Explicit type annotations are optional here
        # Type should be correctly discovered by mypy and IDEs
        # VSCode requires explicit type annotations
        db_cluster_snapshot_available_waiter: DBClusterSnapshotAvailableWaiter = client.get_waiter("db_cluster_snapshot_available")
        db_cluster_snapshot_deleted_waiter: DBClusterSnapshotDeletedWaiter = client.get_waiter("db_cluster_snapshot_deleted")
        db_instance_available_waiter: DBInstanceAvailableWaiter = client.get_waiter("db_instance_available")
        db_instance_deleted_waiter: DBInstanceDeletedWaiter = client.get_waiter("db_instance_deleted")
        db_snapshot_available_waiter: DBSnapshotAvailableWaiter = client.get_waiter("db_snapshot_available")
        db_snapshot_completed_waiter: DBSnapshotCompletedWaiter = client.get_waiter("db_snapshot_completed")
        db_snapshot_deleted_waiter: DBSnapshotDeletedWaiter = client.get_waiter("db_snapshot_deleted")
        ```
        
        
        
        
        
        ### Typed dictionations
        
        `mypy_boto3_rds.type_defs` module contains structures and shapes assembled
        to typed dictionaries for additional type checking.
        
        ```python
        from mypy_boto3_rds.type_defs import (
            AccountQuotaTypeDef,
            AvailabilityZoneTypeDef,
            AvailableProcessorFeatureTypeDef,
            CertificateTypeDef,
            CharacterSetTypeDef,
            ClusterPendingModifiedValuesTypeDef,
            ConnectionPoolConfigurationInfoTypeDef,
            CustomAvailabilityZoneTypeDef,
            DBClusterBacktrackTypeDef,
            DBClusterEndpointTypeDef,
            DBClusterMemberTypeDef,
            DBClusterOptionGroupStatusTypeDef,
            DBClusterParameterGroupTypeDef,
            DBClusterRoleTypeDef,
            DBClusterSnapshotAttributeTypeDef,
            DBClusterSnapshotAttributesResultTypeDef,
            DBClusterSnapshotTypeDef,
            DBClusterTypeDef,
            DBEngineVersionTypeDef,
            DBInstanceAutomatedBackupTypeDef,
            DBInstanceAutomatedBackupsReplicationTypeDef,
            DBInstanceRoleTypeDef,
            DBInstanceStatusInfoTypeDef,
            DBInstanceTypeDef,
            DBParameterGroupStatusTypeDef,
            DBParameterGroupTypeDef,
            DBProxyEndpointTypeDef,
            DBProxyTargetGroupTypeDef,
            DBProxyTargetTypeDef,
            DBProxyTypeDef,
            DBSecurityGroupMembershipTypeDef,
            DBSecurityGroupTypeDef,
            DBSnapshotAttributeTypeDef,
            DBSnapshotAttributesResultTypeDef,
            DBSnapshotTypeDef,
            DBSubnetGroupTypeDef,
            DescribeDBLogFilesDetailsTypeDef,
            DomainMembershipTypeDef,
            DoubleRangeTypeDef,
            EC2SecurityGroupTypeDef,
            EndpointTypeDef,
            EngineDefaultsTypeDef,
            EventCategoriesMapTypeDef,
            EventSubscriptionTypeDef,
            EventTypeDef,
            ExportTaskTypeDef,
            FailoverStateTypeDef,
            GlobalClusterMemberTypeDef,
            GlobalClusterTypeDef,
            IPRangeTypeDef,
            InstallationMediaFailureCauseTypeDef,
            InstallationMediaTypeDef,
            MinimumEngineVersionPerAllowedValueTypeDef,
            OptionGroupMembershipTypeDef,
            OptionGroupOptionSettingTypeDef,
            OptionGroupOptionTypeDef,
            OptionGroupTypeDef,
            OptionSettingTypeDef,
            OptionTypeDef,
            OptionVersionTypeDef,
            OrderableDBInstanceOptionTypeDef,
            OutpostTypeDef,
            ParameterTypeDef,
            PendingCloudwatchLogsExportsTypeDef,
            PendingMaintenanceActionTypeDef,
            PendingModifiedValuesTypeDef,
            ProcessorFeatureTypeDef,
            RangeTypeDef,
            RecurringChargeTypeDef,
            ReservedDBInstanceTypeDef,
            ReservedDBInstancesOfferingTypeDef,
            ResourcePendingMaintenanceActionsTypeDef,
            RestoreWindowTypeDef,
            ScalingConfigurationInfoTypeDef,
            SourceRegionTypeDef,
            SubnetTypeDef,
            TagTypeDef,
            TargetHealthTypeDef,
            TimezoneTypeDef,
            UpgradeTargetTypeDef,
            UserAuthConfigInfoTypeDef,
            ValidDBInstanceModificationsMessageTypeDef,
            ValidStorageOptionsTypeDef,
            VpcSecurityGroupMembershipTypeDef,
            VpnDetailsTypeDef,
            AccountAttributesMessageTypeDef,
            AddSourceIdentifierToSubscriptionResultTypeDef,
            ApplyPendingMaintenanceActionResultTypeDef,
            AuthorizeDBSecurityGroupIngressResultTypeDef,
            CertificateMessageTypeDef,
            CloudwatchLogsExportConfigurationTypeDef,
            ConnectionPoolConfigurationTypeDef,
            CopyDBClusterParameterGroupResultTypeDef,
            CopyDBClusterSnapshotResultTypeDef,
            CopyDBParameterGroupResultTypeDef,
            CopyDBSnapshotResultTypeDef,
            CopyOptionGroupResultTypeDef,
            CreateCustomAvailabilityZoneResultTypeDef,
            CreateDBClusterParameterGroupResultTypeDef,
            CreateDBClusterResultTypeDef,
            CreateDBClusterSnapshotResultTypeDef,
            CreateDBInstanceReadReplicaResultTypeDef,
            CreateDBInstanceResultTypeDef,
            CreateDBParameterGroupResultTypeDef,
            CreateDBProxyEndpointResponseTypeDef,
            CreateDBProxyResponseTypeDef,
            CreateDBSecurityGroupResultTypeDef,
            CreateDBSnapshotResultTypeDef,
            CreateDBSubnetGroupResultTypeDef,
            CreateEventSubscriptionResultTypeDef,
            CreateGlobalClusterResultTypeDef,
            CreateOptionGroupResultTypeDef,
            CustomAvailabilityZoneMessageTypeDef,
            DBClusterBacktrackMessageTypeDef,
            DBClusterCapacityInfoTypeDef,
            DBClusterEndpointMessageTypeDef,
            DBClusterMessageTypeDef,
            DBClusterParameterGroupDetailsTypeDef,
            DBClusterParameterGroupNameMessageTypeDef,
            DBClusterParameterGroupsMessageTypeDef,
            DBClusterSnapshotMessageTypeDef,
            DBEngineVersionMessageTypeDef,
            DBInstanceAutomatedBackupMessageTypeDef,
            DBInstanceMessageTypeDef,
            DBParameterGroupDetailsTypeDef,
            DBParameterGroupNameMessageTypeDef,
            DBParameterGroupsMessageTypeDef,
            DBSecurityGroupMessageTypeDef,
            DBSnapshotMessageTypeDef,
            DBSubnetGroupMessageTypeDef,
            DeleteCustomAvailabilityZoneResultTypeDef,
            DeleteDBClusterResultTypeDef,
            DeleteDBClusterSnapshotResultTypeDef,
            DeleteDBInstanceAutomatedBackupResultTypeDef,
            DeleteDBInstanceResultTypeDef,
            DeleteDBProxyEndpointResponseTypeDef,
            DeleteDBProxyResponseTypeDef,
            DeleteDBSnapshotResultTypeDef,
            DeleteEventSubscriptionResultTypeDef,
            DeleteGlobalClusterResultTypeDef,
            DescribeDBClusterSnapshotAttributesResultTypeDef,
            DescribeDBLogFilesResponseTypeDef,
            DescribeDBProxiesResponseTypeDef,
            DescribeDBProxyEndpointsResponseTypeDef,
            DescribeDBProxyTargetGroupsResponseTypeDef,
            DescribeDBProxyTargetsResponseTypeDef,
            DescribeDBSnapshotAttributesResultTypeDef,
            DescribeEngineDefaultClusterParametersResultTypeDef,
            DescribeEngineDefaultParametersResultTypeDef,
            DescribeValidDBInstanceModificationsResultTypeDef,
            DownloadDBLogFilePortionDetailsTypeDef,
            EventCategoriesMessageTypeDef,
            EventSubscriptionsMessageTypeDef,
            EventsMessageTypeDef,
            ExportTasksMessageTypeDef,
            FailoverDBClusterResultTypeDef,
            FailoverGlobalClusterResultTypeDef,
            FilterTypeDef,
            GlobalClustersMessageTypeDef,
            InstallationMediaMessageTypeDef,
            ModifyCertificatesResultTypeDef,
            ModifyDBClusterResultTypeDef,
            ModifyDBClusterSnapshotAttributeResultTypeDef,
            ModifyDBInstanceResultTypeDef,
            ModifyDBProxyEndpointResponseTypeDef,
            ModifyDBProxyResponseTypeDef,
            ModifyDBProxyTargetGroupResponseTypeDef,
            ModifyDBSnapshotAttributeResultTypeDef,
            ModifyDBSnapshotResultTypeDef,
            ModifyDBSubnetGroupResultTypeDef,
            ModifyEventSubscriptionResultTypeDef,
            ModifyGlobalClusterResultTypeDef,
            ModifyOptionGroupResultTypeDef,
            OptionConfigurationTypeDef,
            OptionGroupOptionsMessageTypeDef,
            OptionGroupsTypeDef,
            OrderableDBInstanceOptionsMessageTypeDef,
            PaginatorConfigTypeDef,
            PendingMaintenanceActionsMessageTypeDef,
            PromoteReadReplicaDBClusterResultTypeDef,
            PromoteReadReplicaResultTypeDef,
            PurchaseReservedDBInstancesOfferingResultTypeDef,
            RebootDBInstanceResultTypeDef,
            RegisterDBProxyTargetsResponseTypeDef,
            RemoveFromGlobalClusterResultTypeDef,
            RemoveSourceIdentifierFromSubscriptionResultTypeDef,
            ReservedDBInstanceMessageTypeDef,
            ReservedDBInstancesOfferingMessageTypeDef,
            RestoreDBClusterFromS3ResultTypeDef,
            RestoreDBClusterFromSnapshotResultTypeDef,
            RestoreDBClusterToPointInTimeResultTypeDef,
            RestoreDBInstanceFromDBSnapshotResultTypeDef,
            RestoreDBInstanceFromS3ResultTypeDef,
            RestoreDBInstanceToPointInTimeResultTypeDef,
            RevokeDBSecurityGroupIngressResultTypeDef,
            ScalingConfigurationTypeDef,
            SourceRegionMessageTypeDef,
            StartActivityStreamResponseTypeDef,
            StartDBClusterResultTypeDef,
            StartDBInstanceAutomatedBackupsReplicationResultTypeDef,
            StartDBInstanceResultTypeDef,
            StopActivityStreamResponseTypeDef,
            StopDBClusterResultTypeDef,
            StopDBInstanceAutomatedBackupsReplicationResultTypeDef,
            StopDBInstanceResultTypeDef,
            TagListMessageTypeDef,
            UserAuthConfigTypeDef,
            WaiterConfigTypeDef,
        )
        
        def get_structure() -> AccountQuotaTypeDef:
            return {
              ...
            }
        ```
        
Keywords: boto3 rds type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
