# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .application import *
from .application_deployment import *
from .application_scale import *
from .cluster import *
from .deploy_group import *
from .get_applications import *
from .get_clusters import *
from .get_deploy_groups import *
from .get_service import *
from .instance_cluster_attachment import *
from .k8s_application import *
from .k8s_cluster import *
from .slb_attachment import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "alicloud:edas/application:Application":
                return Application(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/applicationDeployment:ApplicationDeployment":
                return ApplicationDeployment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/applicationScale:ApplicationScale":
                return ApplicationScale(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/cluster:Cluster":
                return Cluster(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/deployGroup:DeployGroup":
                return DeployGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/instanceClusterAttachment:InstanceClusterAttachment":
                return InstanceClusterAttachment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/k8sApplication:K8sApplication":
                return K8sApplication(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/k8sCluster:K8sCluster":
                return K8sCluster(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "alicloud:edas/slbAttachment:SlbAttachment":
                return SlbAttachment(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("alicloud", "edas/application", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/applicationDeployment", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/applicationScale", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/cluster", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/deployGroup", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/instanceClusterAttachment", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/k8sApplication", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/k8sCluster", _module_instance)
    pulumi.runtime.register_resource_module("alicloud", "edas/slbAttachment", _module_instance)

_register_module()
