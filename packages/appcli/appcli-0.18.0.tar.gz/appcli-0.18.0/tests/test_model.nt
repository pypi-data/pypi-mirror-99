
test_init_load_reload:
  -
    id: 0-configs
    obj:
      > class DummyObj:
      >     __config__ = []
    init_layers:
    load_layers:

  -
    id: 1-layer
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    init_layers:
      0:
        - appcli.Layer(values={}, location='a')
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
  -
    id: 2-layers
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >         yield appcli.Layer(values={}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    init_layers:
      0:
        - appcli.Layer(values={}, location='a')
        - appcli.Layer(values={}, location='b')
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
        - appcli.Layer(values={}, location='b')
  -
    id: 2-layers
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='b')
      >
      > class DummyObj:
      >   __config__ = [DummyConfigA(), DummyConfigB()]
    init_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')

  -
    id: autoload
    obj:
      > class DummyConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    init_layers:
      0:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
  -
    id: autoload
    obj:
      > class DummyConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >         yield appcli.Layer(values={}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    init_layers:
      0:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
        - appcli.Layer(values={}, location='b')
  -
    id: autoload
    obj:
        > class DummyConfigA(appcli.Config):
        >     autoload = False
        >
        >     def load(self, obj):
        >         yield appcli.Layer(values={}, location='a')
        >
        > class DummyConfigB(appcli.Config):
        >     autoload = False
        >
        >     def load(self, obj):
        >         yield appcli.Layer(values={}, location='b')
        >
        > class DummyObj:
        >     __config__ = [DummyConfigA(), DummyConfigB()]
    init_layers:
      0:
      1:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')
  -
    id: autoload-order
    obj:
      > class DummyConfigA(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
    init_layers:
      0:
      1:
        - appcli.Layer(values={}, location='b')
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')
  -
    id: autoload-order
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='b')
      >
      > class DummyObj:
      >   __config__ = [DummyConfigA(), DummyConfigB()]
    init_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')
  -
    id: autoload-order
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyConfigBC(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='b')
      >         yield appcli.Layer(values={}, location='c')
      >
      > class DummyConfigD(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='d')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigBC(), DummyConfigD()]
    init_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
      2:
        - appcli.Layer(values={}, location='d')
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')
        - appcli.Layer(values={}, location='c')
      2:
        - appcli.Layer(values={}, location='d')
  -
    id: autoload-config-cls
    obj:
      > class DummyConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
      >
      >     def load(self):
      >         appcli.load(self, DummyConfig)
    init_layers:
      0:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
  -
    id: autoload-config-cls
    obj:
      > class BaseConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location=self.location)
      >
      > class DummyConfigA(BaseConfig):
      >     location = 'a'
      >
      > class DummyConfigB(BaseConfig):
      >     location = 'b'
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
      >
      >     def load(self):
      >         appcli.load(self, BaseConfig)
    init_layers:
      0:
      1:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
        - appcli.Layer(values={}, location='b')
  -
    id: autoload-config-cls
    obj:
      > class BaseConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location=self.location)
      >
      > class DummyConfigA(BaseConfig):
      >     location = 'a'
      >
      > class DummyConfigB(BaseConfig):
      >     location = 'b'
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
      >
      >     def load(self):
      >         appcli.load(self, DummyConfigA)
    init_layers:
      0:
      1:
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')
      1:
  -
    id: autoload-config-cls
    obj:
      > class BaseConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location=self.location)
      >
      > class DummyConfigA(BaseConfig):
      >     location = 'a'
      >
      > class DummyConfigB(BaseConfig):
      >     location = 'b'
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
      >
      >     def load(self):
      >         appcli.load(self, DummyConfigB)
    init_layers:
      0:
      1:
    load_layers:
      0:
      1:
        - appcli.Layer(values={}, location='b')
  -
    id: autoload-config-cls
    obj:
      > class BaseConfig(appcli.Config):
      >     autoload = False
      >
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location=self.location)
      >
      > class DummyConfigA(BaseConfig):
      >     location = 'a'
      >
      > class DummyConfigB(BaseConfig):
      >     location = 'b'
      >
      > class DummyConfigC(BaseConfig):
      >     location = 'c'
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
      >
      >     def load(self):
      >         appcli.load(self, DummyConfigC)
    init_layers:
      0:
      1:
    load_layers:
      0:
      1:

  -
    id: reload
    obj:
      > class DummyConfig(appcli.Config):
      >     x = 0
      >
      >     def load(self, obj):
      >         self.x += 1
      >         yield appcli.Layer(values={'x': self.x}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    init_layers:
      0:
        - appcli.Layer(values={'x': 1}, location='a')
    load_layers:
      0:
        - appcli.Layer(values={'x': 1}, location='a')
    reload_layers:
      0:
        - appcli.Layer(values={'x': 2}, location='a')
  -
    id: reload
    obj:
      > class DummyConfig(appcli.Config):
      >     x = 0
      >     autoload=False
      >
      >     def load(self, obj):
      >         self.x += 1
      >         yield appcli.Layer(values={'x': self.x}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    init_layers:
      0:
    load_layers:
      0:
        - appcli.Layer(values={'x': 1}, location='a')
    reload_layers:
      0:
        - appcli.Layer(values={'x': 2}, location='a')
  -
    id: reload-config-cls
    obj:
      > class BaseConfig(appcli.Config):
      >     x = 0
      >
      >     def load(self, obj):
      >         self.x += 1
      >         yield appcli.Layer(
      >                 values={'x': self.x},
      >                 location=self.location,
      >         )
      >
      > class DummyConfigA(BaseConfig):
      >     location = 'a'
      >
      > class DummyConfigB(BaseConfig):
      >     location = 'b'
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
      >
      >     def reload(self):
      >         appcli.reload(self, DummyConfigB)
    init_layers:
      0:
        - appcli.Layer(values={'x': 1}, location='a')
      1:
        - appcli.Layer(values={'x': 1}, location='b')
    load_layers:
      0:
        - appcli.Layer(values={'x': 1}, location='a')
      1:
        - appcli.Layer(values={'x': 1}, location='b')
    reload_layers:
      0:
        - appcli.Layer(values={'x': 1}, location='a')
      1:
        - appcli.Layer(values={'x': 2}, location='b')

  -
    id: inheritance
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={}, location='a')
      >
      > class BaseObj:
      >     __config__ = [DummyConfig()]
      >
      > class DummyObj(BaseObj):
      >     pass
    init_layers:
      0:
        - appcli.Layer(values={}, location='a')
    load_layers:
      0:
        - appcli.Layer(values={}, location='a')

  -
    id: param-access
    obj:
      > # Access a value from an earlier layer.  This requires that the layers 
      > # are parsed in the correct order, and that the object is always kept 
      > # in a valid state.
      >
      > class DummyConfig(appcli.Config):
      >     def __init__(self, id):
      >         self.id = id
      >
      >     def load(self, obj):
      >         yield appcli.Layer(
      >                 values={'x': obj.x + self.id},
      >                 location='a',
      >         )
      >
      > class DummyObj:
      >     __config__ = [
      >             DummyConfig('3'),
      >             DummyConfig('2'),
      >             DummyConfig('1'),
      >     ]
      >     x = appcli.param(default='')
      >
    init_layers:
      0:
        - appcli.Layer(values={'x': '123'}, location='a')
      1:
        - appcli.Layer(values={'x': '12'},  location='a')
      2:
        - appcli.Layer(values={'x': '1'},   location='a')
    load_layers:
      0:
        - appcli.Layer(values={'x': '123'}, location='a')
      1:
        - appcli.Layer(values={'x': '12'},  location='a')
      2:
        - appcli.Layer(values={'x': '1'},   location='a')
  -
    id: param-access
    obj:
      > # Access a value from an earlier layer.  This requires that the layers 
      > # are parsed in the correct order, and that the object is always kept 
      > # in a valid state.
      >
      > class DummyConfig(appcli.Config):
      >     autoload = False
      >
      >     def __init__(self, id):
      >         self.id = id
      >
      >     def load(self, obj):
      >         yield appcli.Layer(
      >                 values={'x': obj.x + self.id},
      >                 location='a',
      >         )
      >
      > class DummyObj:
      >     __config__ = [
      >             DummyConfig('3'),
      >             DummyConfig('2'),
      >             DummyConfig('1'),
      >     ]
      >     x = appcli.param(default='')
      >
    init_layers:
      0:
      1:
      2:
    load_layers:
      0:
        - appcli.Layer(values={'x': '123'}, location='a')
      1:
        - appcli.Layer(values={'x': '12'},  location='a')
      2:
        - appcli.Layer(values={'x': '1'},   location='a')

test_iter_values:
  # `test_getters.py` thoroughly tests cases where there is only a single 
  # getter.  The tests here therefore focus on cases where there are multiple 
  # getters.

  -
    id: layers-1x
    getters:
      - appcli.Value(1)
    expected:
      - 1
  -
    id: layers-2x
    getters:
      - appcli.Value(1)
      - appcli.Value(2)
    expected:
      - 1
      - 2
  -
    id: layers-repeat
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'x')
      - appcli.Key(DummyConfig, 'x')
    expected:
      - 1
      - 1
  -
    id: layers-repeat
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >         yield appcli.Layer(values={'x': 2}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'x')
      - appcli.Key(DummyConfig, 'x')
    expected:
      - 1
      - 2
      - 1
      - 2
  -
    id: layers-order
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 2}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
    getters:
      - appcli.Key(DummyConfigA, 'x')
      - appcli.Key(DummyConfigB, 'x')
    expected:
      - 1
      - 2
  -
    id: layers-order
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 2}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
    getters:
      - appcli.Key(DummyConfigB, 'x')
      - appcli.Key(DummyConfigA, 'x')
    expected:
      - 2
      - 1
  -
    id: layers-missing
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 2}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
    getters:
      - appcli.Key(DummyConfigA, 'x')
      - appcli.Key(DummyConfigB, 'y')
    expected:
      - 1
  -
    id: layers-missing
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 2}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
    getters:
      - appcli.Key(DummyConfigA, 'y')
      - appcli.Key(DummyConfigB, 'x')
    expected:
      - 2
  -
    id: layers-err
    getters:
    error:
      type: appcli.ConfigError
      message:
        - can't find value for parameter
        - `DummyObj.__config__` is empty
        - nowhere to look for values
  -
    id: layers-err
    obj:
      > class DummyConfig(appcli.Config):
      >     autoload = False
      >     def load(self, obj):
      >         yield from []
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'x')
    error:
      type: appcli.ConfigError
      message:
        - can't find value for parameter
        - found the following configs, but none yielded any layers:
        - DummyConfig()
        - did you forget to call `appcli.load\(\)`\?
  -
    id: layers-err
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'y')
    error:
      type: appcli.ConfigError
      message:
        - can't find value for parameter
        - searched the following locations:
        - a: y
        - did you mean to provide a default\?

  -
    id: cast
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >         yield appcli.Layer(values={'x': 2}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'x', cast=lambda x: x + 1)
    expected:
      - 2
      - 3
  -
    id: cast
    obj:
      > class DummyConfigA(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyConfigB(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='b')
      >
      > class DummyObj:
      >     __config__ = [DummyConfigA(), DummyConfigB()]
    getters:
      - appcli.Key(DummyConfigA, 'x', cast=lambda x: x + 1)
      - appcli.Key(DummyConfigB, 'x', cast=lambda x: x + 2)
    expected:
      - 2
      - 3

  -
    id: default
    getters:
    default: 0
    expected:
      - 0
  -
    id: default
    getters:
      - appcli.Value(1)
    default: 0
    expected:
      - 1
      - 0
  -
    id: default
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'x')
    default: 0
    expected:
      - 1
      - 0
  -
    id: default
    obj:
      > class DummyConfig(appcli.Config):
      >     def load(self, obj):
      >         yield appcli.Layer(values={'x': 1}, location='a')
      >
      > class DummyObj:
      >     __config__ = [DummyConfig()]
    getters:
      - appcli.Key(DummyConfig, 'y')
    default: 0
    expected:
      - 0
