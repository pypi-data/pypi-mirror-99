(self.webpackChunklabbox_ephys_widgets_jp=self.webpackChunklabbox_ephys_widgets_jp||[]).push([[421],{27421:(e,t,n)=>{"use strict";n.r(t),n.d(t,{activate:()=>y});var i=n(18053),r=n(69297),a=n.n(r);const o={type:"SortingUnitMetric",name:"EventCount",label:"Num. events",columnLabel:"Num. events",tooltip:"Number of firing events",hitherFnName:"createjob_get_firing_data",metricFnParams:{},hitherOpts:{useClientCache:!0},component:e=>a().createElement("span",null,void 0!==e?e.count:""),isNumeric:!0,getValue:e=>e.count},c={type:"SortingUnitMetric",name:"FiringRate",label:"Firing rate (Hz)",columnLabel:"Firing rate (Hz)",tooltip:"Average num. events per second",hitherFnName:"createjob_get_firing_data",hitherOpts:{useClientCache:!0},metricFnParams:{},component:e=>a().createElement("span",null,void 0!==e?e.rate:""),isNumeric:!0,getValue:e=>e.count},s={type:"SortingUnitMetric",name:"IsiViolations",label:"ISI viol.",columnLabel:"ISI viol.",tooltip:"ISI violation rate",hitherFnName:"createjob_get_isi_violation_rates",metricFnParams:{isi_threshold_msec:2.5},hitherOpts:{useClientCache:!0},component:e=>a().createElement("span",null,void 0!==e?e.toFixed(4):""),isNumeric:!0,getValue:e=>e},l={type:"SortingUnitMetric",name:"PeakChannels",label:"Peak chan.",columnLabel:"Peak chan.",tooltip:"ID of channel where the peak-to-peak amplitude is maximal",hitherFnName:"createjob_get_peak_channels",metricFnParams:{},hitherOpts:{useClientCache:!0},component:e=>a().createElement("span",null,void 0!==e?e:""),isNumeric:!0,getValue:e=>e},u={type:"SortingUnitMetric",name:"UnitSnrs",label:"SNR",columnLabel:"SNR",tooltip:"Unit SNR (peak-to-peak amp of mean waveform / est. std. dev on peak chan)",hitherFnName:"createjob_get_unit_snrs",metricFnParams:{},hitherOpts:{useClientCache:!0},component:e=>a().createElement("span",null,void 0!==e?e.toFixed(4):""),isNumeric:!0,getValue:e=>e};var m=n(1845),h=n(95898),g=n(5443),p=n(10051),d=n(95849),b=n(54514),f=n(3940),v=function(e,t,n,i){return new(n||(n=Promise))((function(r,a){function o(e){try{s(i.next(e))}catch(e){a(e)}}function c(e){try{s(i.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,c)}s((i=i.apply(e,t||[])).next())}))};const _={},N=(e,t)=>{if("clear"===t)return{};const{metricName:n,status:i,data:r,error:a}=t;return e[n]&&"completed"===e[n].status?(console.warn(`Updating status of completed metric ${n}??`),e):Object.assign(Object.assign({},e),{[n]:{status:i,data:"completed"===i&&r||null,error:"error"===i&&a||null}})},j=e=>{const t=(0,r.useContext)(g.Zo),{sorting:n,recording:i,selection:o,selectionDispatch:c,width:s,height:l}=e,[u,j]=(0,r.useState)(!1),[y,C]=(0,r.useReducer)(N,_),[F,w]=(0,r.useState)(null);(0,r.useEffect)((()=>{F!==i&&(C("clear"),w(i))}),[i,F,w,C]);const P=(0,r.useCallback)((e=>v(void 0,void 0,void 0,(function*(){const r=e.name;if(r in y)return y[r];C({metricName:e.name,status:"executing"});try{const r=yield t.createHitherJob(e.hitherFnName,{sorting_object:n.sortingObject,recording_object:i.recordingObject,configuration:e.metricFnParams},e.hitherOpts).wait();C({metricName:e.name,status:"completed",data:r})}catch(t){console.error(t),C({metricName:e.name,status:"error",error:t.message})}}))),[y,n.sortingObject,i.recordingObject,t]),S=(0,g._m)();(0,r.useEffect)((()=>{(0,b.Z)((0,d.fG)(S)).filter((e=>!e.disabled)).forEach((e=>v(void 0,void 0,void 0,(function*(){return yield P(e)}))))}),[S,y,P]);const k=(0,r.useMemo)((()=>(0,d.fG)(S)),[S]),E=(0,p.D)(n.sortingObject,n.recordingObject);if(!E)return a().createElement("div",null,"No sorting info");let O=o.visibleUnitIds||E.unit_ids,x=!1;return!u&&O.length>30&&(O=O.slice(0,30),x=!0),a().createElement("div",{style:{width:s||300}},a().createElement(m.Z,{style:{maxHeight:e.maxHeight,overflow:"auto"}},a().createElement(f.Z,{sortingUnitMetrics:k,units:O,metrics:y,selection:o,selectionDispatch:c,sorting:n,height:l}),x&&a().createElement(h.Z,{onClick:()=>{j(!0)}},"Show all units")))};function y(e){(e=>{e.registerPlugin(o),e.registerPlugin(c),e.registerPlugin(s),e.registerPlugin(l),e.registerPlugin(u)})(e),e.registerPlugin({type:"SortingView",name:"UnitsTable",label:"Units Table",icon:a().createElement(i.Z,null),priority:200,component:j,props:{maxHeight:300},singleton:!0})}}}]);