# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .auth_backend_login import *
from .auth_backend_role import *
from .auth_backend_role_secret_id import *
from .get_auth_backend_role_id import *

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "vault:appRole/authBackendLogin:AuthBackendLogin":
                return AuthBackendLogin(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "vault:appRole/authBackendRole:AuthBackendRole":
                return AuthBackendRole(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "vault:appRole/authBackendRoleSecretID:AuthBackendRoleSecretID":
                return AuthBackendRoleSecretID(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("vault", "appRole/authBackendLogin", _module_instance)
    pulumi.runtime.register_resource_module("vault", "appRole/authBackendRole", _module_instance)
    pulumi.runtime.register_resource_module("vault", "appRole/authBackendRoleSecretID", _module_instance)

_register_module()
