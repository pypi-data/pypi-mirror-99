# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from ncbi.datasets.v1alpha1 import datasets_pb2 as ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2


class DatasetRetrieverStub(object):
    """Temporary service that is backwards compatable for the Django applies
    should be gone by 7/26/2020 -JBH
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssemblyDatasetDescriptors = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.DatasetRetriever/GetAssemblyDatasetDescriptors',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptorsRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptors.FromString,
                )
        self.GetTaxTree = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.DatasetRetriever/GetTaxTree',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
                )


class DatasetRetrieverServicer(object):
    """Temporary service that is backwards compatable for the Django applies
    should be gone by 7/26/2020 -JBH
    """

    def GetAssemblyDatasetDescriptors(self, request, context):
        """Assembly descriptions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaxTree(self, request, context):
        """Retrieve tax tree
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetRetrieverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssemblyDatasetDescriptors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssemblyDatasetDescriptors,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptorsRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptors.SerializeToString,
            ),
            'GetTaxTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxTree,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.DatasetRetriever', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DatasetRetriever(object):
    """Temporary service that is backwards compatable for the Django applies
    should be gone by 7/26/2020 -JBH
    """

    @staticmethod
    def GetAssemblyDatasetDescriptors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.DatasetRetriever/GetAssemblyDatasetDescriptors',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptorsRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptors.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaxTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.DatasetRetriever/GetTaxTree',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class AssemblyDatasetStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssemblyDatasetDescriptors = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDataset/GetAssemblyDatasetDescriptors',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptorsRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptors.FromString,
                )
        self.GetAssemblyMetadata = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDataset/GetAssemblyMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadataRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadata.FromString,
                )
        self.GetOrganismTaxid = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDataset/GetOrganismTaxid',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidReply.FromString,
                )
        self.GetTaxTree = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDataset/GetTaxTree',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
                )
        self.GetOrganismsThatMatch = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDataset/GetOrganismsThatMatch',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.FromString,
                )
        self.GetDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDataset/GetDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
                )


class AssemblyDatasetServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetAssemblyDatasetDescriptors(self, request, context):
        """Assembly descriptions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssemblyMetadata(self, request, context):
        """Assembly metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismTaxid(self, request, context):
        """Retrieve taxid for an organism name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaxTree(self, request, context):
        """Retrieve tax tree
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismsThatMatch(self, request, context):
        """Retrieve list of taxonomy names and is for OrganismQuery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDownloadSummary(self, request, context):
        """Summary of assembly dataset, including options to download package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssemblyDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssemblyDatasetDescriptors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssemblyDatasetDescriptors,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptorsRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptors.SerializeToString,
            ),
            'GetAssemblyMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssemblyMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadataRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadata.SerializeToString,
            ),
            'GetOrganismTaxid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismTaxid,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidReply.SerializeToString,
            ),
            'GetTaxTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxTree,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.SerializeToString,
            ),
            'GetOrganismsThatMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismsThatMatch,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.SerializeToString,
            ),
            'GetDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.AssemblyDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssemblyDataset(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetAssemblyDatasetDescriptors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDataset/GetAssemblyDatasetDescriptors',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptorsRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetDescriptors.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssemblyMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDataset/GetAssemblyMetadata',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadataRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadata.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismTaxid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDataset/GetOrganismTaxid',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaxTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDataset/GetTaxTree',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismsThatMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDataset/GetOrganismsThatMatch',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDataset/GetDownloadSummary',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class AssemblyDatasetIsolateStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssemblyMetadata = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetAssemblyMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadataRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadata.FromString,
                )
        self.GetOrganismTaxid = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetOrganismTaxid',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidReply.FromString,
                )
        self.GetTaxTree = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetTaxTree',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
                )
        self.GetOrganismsThatMatch = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetOrganismsThatMatch',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.FromString,
                )


class AssemblyDatasetIsolateServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetAssemblyMetadata(self, request, context):
        """Assembly metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismTaxid(self, request, context):
        """Retrieve taxid for an organism name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaxTree(self, request, context):
        """Retrieve tax tree
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismsThatMatch(self, request, context):
        """Retrieve list of taxonomy names and is for OrganismQuery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AssemblyDatasetIsolateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssemblyMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssemblyMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadataRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadata.SerializeToString,
            ),
            'GetOrganismTaxid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismTaxid,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidReply.SerializeToString,
            ),
            'GetTaxTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxTree,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.SerializeToString,
            ),
            'GetOrganismsThatMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismsThatMatch,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.AssemblyDatasetIsolate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AssemblyDatasetIsolate(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetAssemblyMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetAssemblyMetadata',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadataRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyMetadata.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismTaxid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetOrganismTaxid',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxidReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaxTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetTaxTree',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismsThatMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.AssemblyDatasetIsolate/GetOrganismsThatMatch',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class DatasetDownloadStub(object):
    """The public facing service for download
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssemblyDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.DatasetDownload/GetAssemblyDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetGeneDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.DatasetDownload/GetGeneDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetVirusDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.DatasetDownload/GetVirusDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetSars2ProteinDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.DatasetDownload/GetSars2ProteinDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetMicroBiggeDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.DatasetDownload/GetMicroBiggeDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.MicroBiggeDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.GetProkaryoteGeneDatasetStream = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.DatasetDownload/GetProkaryoteGeneDatasetStream',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.ProkaryoteGeneRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )
        self.CheckAssemblyAvailability = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.DatasetDownload/CheckAssemblyAvailability',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetAvailability.FromString,
                )
        self.Version = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.DatasetDownload/Version',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VersionReply.FromString,
                )


class DatasetDownloadServicer(object):
    """The public facing service for download
    """

    def GetAssemblyDatasetStream(self, request, context):
        """Retrieve a requested assembly dataset and stream back reply
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGeneDatasetStream(self, request, context):
        """Retrieve a requested gene dataset and stream back reply
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirusDatasetStream(self, request, context):
        """Retrieve Coronavirus genome datasets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSars2ProteinDatasetStream(self, request, context):
        """Retrieve SARS-CoV-2 protein and CDS datasets by protein name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMicroBiggeDatasetStream(self, request, context):
        """Retrieve MicroBigge data package.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProkaryoteGeneDatasetStream(self, request, context):
        """Retrieve Prokaryote Gene data package.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckAssemblyAvailability(self, request, context):
        """Check assembly data files availability
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Version(self, request, context):
        """Retrieve service version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetDownloadServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssemblyDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAssemblyDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetGeneDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetGeneDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetVirusDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVirusDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetSars2ProteinDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSars2ProteinDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetMicroBiggeDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetMicroBiggeDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.MicroBiggeDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'GetProkaryoteGeneDatasetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProkaryoteGeneDatasetStream,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.ProkaryoteGeneRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
            'CheckAssemblyAvailability': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckAssemblyAvailability,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetAvailability.SerializeToString,
            ),
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VersionReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.DatasetDownload', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DatasetDownload(object):
    """The public facing service for download
    """

    @staticmethod
    def GetAssemblyDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/GetAssemblyDatasetStream',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGeneDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/GetGeneDatasetStream',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirusDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/GetVirusDatasetStream',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSars2ProteinDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/GetSars2ProteinDatasetStream',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMicroBiggeDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/GetMicroBiggeDatasetStream',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.MicroBiggeDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProkaryoteGeneDatasetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/GetProkaryoteGeneDatasetStream',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.ProkaryoteGeneRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckAssemblyAvailability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/CheckAssemblyAvailability',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.AssemblyDatasetAvailability.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.DatasetDownload/Version',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VersionReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class GeneDatasetStub(object):
    """Service receiving gene ids in comma-delimited format
    Provide information on available genes and associated annotation.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGeneDescriptors = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.GeneDataset/GetGeneDescriptors',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDescriptors.FromString,
                )
        self.GetGeneMetadata = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.GeneDataset/GetGeneMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneMetadata.FromString,
                )
        self.StreamGeneMetadata = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.GeneDataset/StreamGeneMetadata',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneMatch.FromString,
                )
        self.GetDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.GeneDataset/GetDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.GetOrthologSet = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.GeneDataset/GetOrthologSet',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrthologRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrthologSet.FromString,
                )
        self.GetTaxTree = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.GeneDataset/GetTaxTree',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
                )
        self.GetOrganismsThatMatch = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.GeneDataset/GetOrganismsThatMatch',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.FromString,
                )


class GeneDatasetServicer(object):
    """Service receiving gene ids in comma-delimited format
    Provide information on available genes and associated annotation.
    """

    def GetGeneDescriptors(self, request, context):
        """Retrieve list of descriptions of genes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGeneMetadata(self, request, context):
        """Retrieve gene metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamGeneMetadata(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDownloadSummary(self, request, context):
        """Summary of gene dataset, including options to download package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrthologSet(self, request, context):
        """Retrieve Ortholog set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaxTree(self, request, context):
        """Retrieve tax tree
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganismsThatMatch(self, request, context):
        """Retrieve list of taxonomy names and is for OrganismQuery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeneDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGeneDescriptors': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGeneDescriptors,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDescriptors.SerializeToString,
            ),
            'GetGeneMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGeneMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneMetadata.SerializeToString,
            ),
            'StreamGeneMetadata': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamGeneMetadata,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneMatch.SerializeToString,
            ),
            'GetDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'GetOrthologSet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrthologSet,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrthologRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrthologSet.SerializeToString,
            ),
            'GetTaxTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaxTree,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.SerializeToString,
            ),
            'GetOrganismsThatMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganismsThatMatch,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.GeneDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GeneDataset(object):
    """Service receiving gene ids in comma-delimited format
    Provide information on available genes and associated annotation.
    """

    @staticmethod
    def GetGeneDescriptors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/GetGeneDescriptors',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDescriptors.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGeneMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/GetGeneMetadata',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneMetadata.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamGeneMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/StreamGeneMetadata',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneMatch.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/GetDownloadSummary',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.GeneDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrthologSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/GetOrthologSet',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrthologRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrthologSet.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaxTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/GetTaxTree',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TaxTreeRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Organism.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganismsThatMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.GeneDataset/GetOrganismsThatMatch',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.OrganismQueryRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.SciNameAndIds.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class VirusDatasetStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.VirusDataset/GetDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.GetSars2ProteinDownloadSummary = channel.unary_unary(
                '/ncbi.datasets.v1alpha1.VirusDataset/GetSars2ProteinDownloadSummary',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
                )
        self.GetVirusGenomeMetadataAsTable = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.VirusDataset/GetVirusGenomeMetadataAsTable',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TabularOutput.FromString,
                )
        self.GetSars2ProteinMetadataAsTable = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.VirusDataset/GetSars2ProteinMetadataAsTable',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
                response_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TabularOutput.FromString,
                )


class VirusDatasetServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetDownloadSummary(self, request, context):
        """Summary of Coronavirus genome datasets, including options to download package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSars2ProteinDownloadSummary(self, request, context):
        """Summary of SARS-CoV-2 protein and CDS datasets by protein name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVirusGenomeMetadataAsTable(self, request, context):
        """Virus genomic metadata in tabular format
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSars2ProteinMetadataAsTable(self, request, context):
        """Virus protein metadata in tabular format
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VirusDatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'GetSars2ProteinDownloadSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSars2ProteinDownloadSummary,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.SerializeToString,
            ),
            'GetVirusGenomeMetadataAsTable': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVirusGenomeMetadataAsTable,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TabularOutput.SerializeToString,
            ),
            'GetSars2ProteinMetadataAsTable': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSars2ProteinMetadataAsTable,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.FromString,
                    response_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TabularOutput.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.VirusDataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VirusDataset(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.VirusDataset/GetDownloadSummary',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSars2ProteinDownloadSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ncbi.datasets.v1alpha1.VirusDataset/GetSars2ProteinDownloadSummary',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.DownloadSummary.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVirusGenomeMetadataAsTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.VirusDataset/GetVirusGenomeMetadataAsTable',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.VirusDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TabularOutput.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSars2ProteinMetadataAsTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.VirusDataset/GetSars2ProteinMetadataAsTable',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.Sars2ProteinDatasetRequest.SerializeToString,
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.TabularOutput.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class HttpDatafileStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Fetch = channel.unary_stream(
                '/ncbi.datasets.v1alpha1.HttpDatafile/Fetch',
                request_serializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.MethodPayloadRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
                )


class HttpDatafileServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Fetch(self, request, context):
        """Fetch API : Returns gzip file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HttpDatafileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Fetch': grpc.unary_stream_rpc_method_handler(
                    servicer.Fetch,
                    request_deserializer=ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.MethodPayloadRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.BytesValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ncbi.datasets.v1alpha1.HttpDatafile', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HttpDatafile(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ncbi.datasets.v1alpha1.HttpDatafile/Fetch',
            ncbi_dot_datasets_dot_v1alpha1_dot_datasets__pb2.MethodPayloadRequest.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.BytesValue.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
