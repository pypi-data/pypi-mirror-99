Metadata-Version: 2.1
Name: oidcmsg
Version: 1.2.0
Summary: Python implementation of OAuth2 and OpenID Connect messages
Home-page: https://github.com/IdentityPython/JWTConnect-Python-OidcMsg
License: Apache 2.0
Author: roland
Author-email: roland@catalogix.se
Requires-Python: >=3.6,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: cryptojwt (>=1.5.0,<2.0.0)
Requires-Dist: filelock (>=3.0.12,<4.0.0)
Project-URL: Repository, https://github.com/IdentityPython/JWTConnect-Python-OidcMsg
Description-Content-Type: text/markdown

# oidcmsg
Implementation of OIDC protocol messages.

oidcmsg is the 2nd layer in the
JwtConnect stack (cryptojwt, oidcmsg, oidcservice, oidcrp)

Handles serialising into a couple of formats (jwt, json, urlencoded and dict) and deserialising from said formats.

It also does verification of messages , that is :

+ verifies that all the required parameters are present and has a value
+ verifies that the parameter values are of the right type
+ verifies that if there is a list of permitted values, a parameter value is on 
that list.

and finally if the value is a signed and/or encrypted JWT this package
will perform the necessary decryption and signature verification. 


Also implements a **KeyJar** which keeps keys belonging to 
different owners. One owner may have many keys.
If some of these keys have a common origin, like described in a JWKS.
Such a set will be kept in a **keyBundle**.
Also implemented in this package. 
   
Please read the [Official Documentation](https://oidcmsg.readthedocs.io/) for getting usage examples and further informations.

