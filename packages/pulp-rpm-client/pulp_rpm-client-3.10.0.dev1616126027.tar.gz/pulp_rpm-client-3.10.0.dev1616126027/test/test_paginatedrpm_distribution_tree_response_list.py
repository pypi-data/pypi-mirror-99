# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages  # noqa: E501

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pulpcore.client.pulp_rpm
from pulpcore.client.pulp_rpm.models.paginatedrpm_distribution_tree_response_list import PaginatedrpmDistributionTreeResponseList  # noqa: E501
from pulpcore.client.pulp_rpm.rest import ApiException

class TestPaginatedrpmDistributionTreeResponseList(unittest.TestCase):
    """PaginatedrpmDistributionTreeResponseList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PaginatedrpmDistributionTreeResponseList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pulpcore.client.pulp_rpm.models.paginatedrpm_distribution_tree_response_list.PaginatedrpmDistributionTreeResponseList()  # noqa: E501
        if include_optional :
            return PaginatedrpmDistributionTreeResponseList(
                count = 123, 
                next = 'http://api.example.org/accounts/?offset=400&limit=100', 
                previous = 'http://api.example.org/accounts/?offset=200&limit=100', 
                results = [
                    pulpcore.client.pulp_rpm.models.rpm/distribution_tree_response.rpm.DistributionTreeResponse(
                        pulp_href = '0', 
                        header_version = '0', 
                        release_name = '0', 
                        release_short = '0', 
                        release_version = '0', 
                        release_is_layered = True, 
                        base_product_name = '0', 
                        base_product_short = '0', 
                        base_product_version = '0', 
                        arch = '0', 
                        build_timestamp = 1.337, 
                        instimage = '0', 
                        mainimage = '0', 
                        discnum = 56, 
                        totaldiscs = 56, 
                        addons = [
                            pulpcore.client.pulp_rpm.models.addon_response.AddonResponse(
                                addon_id = '0', 
                                uid = '0', 
                                name = '0', 
                                type = '0', 
                                packages = '0', )
                            ], 
                        checksums = [
                            pulpcore.client.pulp_rpm.models.checksum_response.ChecksumResponse(
                                path = '0', 
                                checksum = '0', )
                            ], 
                        images = [
                            pulpcore.client.pulp_rpm.models.image_response.ImageResponse(
                                name = '0', 
                                path = '0', 
                                platforms = '0', 
                                artifact = null, )
                            ], 
                        variants = [
                            pulpcore.client.pulp_rpm.models.variant_response.VariantResponse(
                                variant_id = '0', 
                                uid = '0', 
                                name = '0', 
                                type = '0', 
                                packages = '0', 
                                source_packages = '0', 
                                source_repository = '0', 
                                debug_packages = '0', 
                                debug_repository = '0', 
                                identity = '0', )
                            ], )
                    ]
            )
        else :
            return PaginatedrpmDistributionTreeResponseList(
        )

    def testPaginatedrpmDistributionTreeResponseList(self):
        """Test PaginatedrpmDistributionTreeResponseList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
