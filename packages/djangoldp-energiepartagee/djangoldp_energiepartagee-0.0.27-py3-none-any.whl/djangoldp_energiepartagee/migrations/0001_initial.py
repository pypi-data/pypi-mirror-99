# Generated by Django 2.2.17 on 2021-01-12 10:13

from django.db import migrations, models
import django.db.models.deletion
import djangoldp.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('shortname', models.CharField(max_length=50, verbose_name="Nom court de l'acteur")),
                ('longname', models.CharField(max_length=50, verbose_name="Nom long de l'acteur")),
                ('address', models.CharField(max_length=250, verbose_name='Adresse')),
                ('complementaddress', models.CharField(blank=True, max_length=250, null=True, verbose_name="Complément d'adresse")),
                ('postcode', models.CharField(blank=True, max_length=5, null=True, verbose_name='Code Postal')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ville')),
                ('dpt', models.CharField(blank=True, max_length=3, null=True, verbose_name='Département')),
                ('website', models.CharField(blank=True, max_length=250, null=True, verbose_name='Site internet')),
                ('mail', models.CharField(max_length=50, verbose_name='Adresse mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de téléphone')),
                ('lat', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Lattitude')),
                ('lng', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Longitude')),
                ('status', models.BooleanField(blank=True, default=False, verbose_name='Adhérent')),
                ('numberpeople', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'habitants")),
                ('numberemployees', models.IntegerField(blank=True, null=True, verbose_name="Nombre d'employés")),
                ('turnover', models.IntegerField(blank=True, null=True, verbose_name="Chiffre d'affaires")),
                ('presentation', models.CharField(blank=True, max_length=300, null=True, verbose_name='Présentation/objet de la structure')),
                ('interventionzone', models.CharField(blank=True, max_length=250, null=True, verbose_name="Zone d'intervention")),
                ('logo', models.URLField(blank=True, null=True, verbose_name='Logo')),
                ('legalstructure', models.CharField(blank=True, max_length=20, null=True, verbose_name='Structure Juridique')),
                ('adhmail', models.CharField(max_length=50, verbose_name='Mail pour compte espace ADH')),
                ('siren', models.CharField(blank=True, max_length=15, null=True, verbose_name='SIREN ou RNA')),
                ('epcharte', models.BooleanField(blank=True, default=False, verbose_name='Signataire de la charte EP')),
                ('actorcomment', models.TextField(blank=True, null=True, verbose_name="Commentaires de l'acteur")),
                ('admincomment', models.TextField(blank=True, null=True, verbose_name="Commentaires de l'administrateur")),
                ('adhesiondate', models.DateField(verbose_name='Adhérent depuis')),
                ('packagestep', models.BooleanField(default=False, verbose_name='Colis accueil envoyé')),
                ('adhspacestep', models.BooleanField(default=False, verbose_name='Inscrit sur espace Adh')),
                ('adhliststep', models.BooleanField(default=False, verbose_name='Inscrit sur liste Adh')),
                ('regionalliststep', models.BooleanField(default=False, verbose_name='Inscrit sur liste régional')),
            ],
        ),
        migrations.CreateModel(
            name='Actortype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=250, verbose_name="Type d'acteurs")),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=250, verbose_name='Catégorie de cotisant')),
                ('idcat', models.IntegerField(default=1, verbose_name='Id catégorie cotisant')),
            ],
        ),
        migrations.CreateModel(
            name='Contributionstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Etat de la cotisation')),
            ],
        ),
        migrations.CreateModel(
            name='Eclrcollege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Type de collège')),
            ],
        ),
        migrations.CreateModel(
            name='Ecpdlcollege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Type de collège')),
            ],
        ),
        migrations.CreateModel(
            name='Epacollege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Type de collège')),
            ],
        ),
        migrations.CreateModel(
            name='Othercollege',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Type de collège')),
            ],
        ),
        migrations.CreateModel(
            name='Paymentmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Mode de paiement')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=30, verbose_name='Région')),
                ('isocode', models.CharField(max_length=6, verbose_name='code ISO')),
            ],
        ),
        migrations.CreateModel(
            name='Regionalnetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=250, verbose_name='Réseau régional')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name="Rôle de l'utilisateur")),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('firstname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Prénom')),
                ('mail', models.CharField(blank=True, max_length=50, null=True, verbose_name='Adresse mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Numéro de téléphone')),
                ('presentation', models.TextField(blank=True, null=True, verbose_name="Présentation de l'utilisateur")),
                ('picture', models.URLField(blank=True, null=True, verbose_name="Photo de l'utilisateur")),
            ],
        ),
        migrations.CreateModel(
            name='Relatedactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('actor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Actor', verbose_name='Acteur')),
                ('name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.User', verbose_name='Utilisateur')),
                ('role', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Role', verbose_name="Rôle de l'utilisateur")),
            ],
        ),
        migrations.CreateModel(
            name='Invoicing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Montant à payer')),
                ('iban', models.CharField(blank=True, max_length=35, null=True, verbose_name='IBAN du destinataire')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Adresse postale du destinataire')),
                ('calldate', models.DateField(verbose_name='Date du dernier appel')),
                ('paymentdate', models.DateField(blank=True, null=True, verbose_name='Date de paiement')),
                ('receptdate', models.DateField(blank=True, null=True, verbose_name="Date de l'envoi du reçu")),
                ('receptnumber', models.CharField(blank=True, max_length=250, null=True, verbose_name='Numéro de reçu')),
                ('receptfile', models.URLField(blank=True, null=True, verbose_name='Reçu')),
                ('callfile', models.URLField(blank=True, null=True, verbose_name='Appel à cotisations')),
                ('nonrenewed', models.BooleanField(default=False, verbose_name='Cotisation non renouvelée')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Actor', verbose_name='Acteur')),
                ('contributionstatus', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Contributionstatus', verbose_name='Etat de la cotisation')),
                ('paymentmethod', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Paymentmethod', verbose_name='Moyen de paiement')),
                ('paymentto', models.ForeignKey(max_length=250, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Regionalnetwork', verbose_name='Paiement à effectuer à')),
                ('receivedby', models.ForeignKey(blank=True, max_length=250, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoicing_requests_created', to='djangoldp_energiepartagee.Regionalnetwork', verbose_name='Paiement reçu par')),
            ],
        ),
        migrations.AddField(
            model_name='actor',
            name='actortype',
            field=models.ForeignKey(max_length=250, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Actortype', verbose_name="Type d'acteur"),
        ),
        migrations.AddField(
            model_name='actor',
            name='category',
            field=models.ForeignKey(max_length=250, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Category', verbose_name='Catégorie de cotisant'),
        ),
        migrations.AddField(
            model_name='actor',
            name='eclrcollege',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Eclrcollege', verbose_name='Collège ECLR'),
        ),
        migrations.AddField(
            model_name='actor',
            name='ecpdlcollege',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Ecpdlcollege', verbose_name='Collège ECPDL'),
        ),
        migrations.AddField(
            model_name='actor',
            name='epacollege',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Epacollege', verbose_name='Collège EPA'),
        ),
        migrations.AddField(
            model_name='actor',
            name='legalrepresentant',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='actor_requests_created', to='djangoldp_energiepartagee.User', verbose_name='Représentant légal'),
        ),
        migrations.AddField(
            model_name='actor',
            name='managementcontact',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.User', verbose_name='Contact Gestion'),
        ),
        migrations.AddField(
            model_name='actor',
            name='othercollege',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Othercollege', verbose_name='Collèges autres régions'),
        ),
        migrations.AddField(
            model_name='actor',
            name='region',
            field=models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.CASCADE, to='djangoldp_energiepartagee.Region', verbose_name='Région'),
        ),
    ]
