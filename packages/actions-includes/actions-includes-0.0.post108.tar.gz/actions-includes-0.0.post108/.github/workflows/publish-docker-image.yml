# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Publish Docker image

on:
  push:
  pull_request:

jobs:

  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest

    # Run a local registry
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:

    - uses: actions/checkout@v2
      with:
        # Always clone the full depth so git-describe works.
        fetch-depth: 0
        submodules: true

    - name: Set up Python üêç
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - uses: ./.github/includes/actions/prepare-for-docker-build

    - name: Push To
      id: push_to
      shell: python
      env:
        HAS_GHA_CR_TOKEN: ${{ secrets.GHA_CR_TOKEN != '' }}
      run: |
        import os

        def g(k):
            v = os.environ.get(k, 'MISSING-{}-VALUE'.format(k))
            print("Got {}='{}'".format(k, v))
            return v

        gh_repo = g('GITHUB_REPOSITORY')
        gh_event = g('GITHUB_EVENT_NAME')
        has_cr_token = g('HAS_GHA_CR_TOKEN')

        i = []

        print("Adding local service.")
        i.append("localhost:5000/"+gh_repo)

        if gh_event == 'push' and has_cr_token == 'true':
            print("Adding GitHub Container Repository (ghcr.io)")
            i.append("ghcr.io/{}/image".format(gh_repo))
        else:
            print("Skipping GitHub Container Repository (ghcr.io)")

        l = ",".join(i)
        print("Final locations:", repr(l))
        print("::set-output name=images::{}".format(l))

    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: ${{ steps.push_to.outputs.images }}
        tag-sha: true

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver-opts: network=host

    - name: Login to GHCR
      if: ${{ contains(steps.push_to.outputs.images, 'ghcr.io') }}
      uses: docker/login-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GHA_CR_TOKEN }}
        registry: ghcr.io

#    - name: Login to local registry
#      uses: docker/login-action@v1
#      with:
#        registry: localhost:5000

    - name: Build and push
      uses: docker/build-push-action@v2
      id: docker_build
      with:
        context: docker
#        platforms: linux/amd64,linux/arm64,linux/386
        push: true
        tags: |
          ${{ steps.docker_meta.outputs.tags }}
          localhost:5000/mithro/actions-includes:latest
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: Inspect
      run: docker buildx imagetools inspect localhost:5000/$GITHUB_REPOSITORY:latest
