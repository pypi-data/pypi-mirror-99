# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AISuperComputerScalePolicy(Model):
    """AISuperComputerScalePolicy.

    :param auto_scale:
    :type auto_scale: bool
    :param auto_scale_instance_type_count_set:
    :type auto_scale_instance_type_count_set: list[int]
    :param auto_scale_interval_in_sec:
    :type auto_scale_interval_in_sec: int
    :param max_instance_type_count:
    :type max_instance_type_count: int
    :param min_instance_type_count:
    :type min_instance_type_count: int
    """

    _attribute_map = {
        'auto_scale': {'key': 'autoScale', 'type': 'bool'},
        'auto_scale_instance_type_count_set': {'key': 'autoScaleInstanceTypeCountSet', 'type': '[int]'},
        'auto_scale_interval_in_sec': {'key': 'autoScaleIntervalInSec', 'type': 'int'},
        'max_instance_type_count': {'key': 'maxInstanceTypeCount', 'type': 'int'},
        'min_instance_type_count': {'key': 'minInstanceTypeCount', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(AISuperComputerScalePolicy, self).__init__(**kwargs)
        self.auto_scale = kwargs.get('auto_scale', None)
        self.auto_scale_instance_type_count_set = kwargs.get('auto_scale_instance_type_count_set', None)
        self.auto_scale_interval_in_sec = kwargs.get('auto_scale_interval_in_sec', None)
        self.max_instance_type_count = kwargs.get('max_instance_type_count', None)
        self.min_instance_type_count = kwargs.get('min_instance_type_count', None)
