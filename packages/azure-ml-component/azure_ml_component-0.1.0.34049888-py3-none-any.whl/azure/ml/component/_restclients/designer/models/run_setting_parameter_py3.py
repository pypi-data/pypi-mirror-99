# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RunSettingParameter(Model):
    """RunSettingParameter.

    :param name:
    :type name: str
    :param label:
    :type label: str
    :param parameter_type: Possible values include: 'Undefined', 'Int',
     'Double', 'Bool', 'String', 'JsonString'
    :type parameter_type: str or ~designer.models.RunSettingParameterType
    :param is_optional:
    :type is_optional: bool
    :param default_value:
    :type default_value: str
    :param lower_bound:
    :type lower_bound: str
    :param upper_bound:
    :type upper_bound: str
    :param description:
    :type description: str
    :param run_setting_ui_hint:
    :type run_setting_ui_hint: ~designer.models.RunSettingUIParameterHint
    :param argument_name:
    :type argument_name: str
    :param section_name:
    :type section_name: str
    :param section_description:
    :type section_description: str
    :param section_argument_name:
    :type section_argument_name: str
    :param enum_values:
    :type enum_values: list[str]
    :param enum_values_to_argument_strings: This is a dictionary
    :type enum_values_to_argument_strings: dict[str, str]
    :param enabled_by_parameter_name:
    :type enabled_by_parameter_name: str
    :param enabled_by_parameter_values:
    :type enabled_by_parameter_values: list[str]
    :param disabled_by_parameters:
    :type disabled_by_parameters: list[str]
    :param linked_parameter_default_value_mapping:
    :type linked_parameter_default_value_mapping: dict[str, str]
    """

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'label': {'key': 'label', 'type': 'str'},
        'parameter_type': {'key': 'parameterType', 'type': 'str'},
        'is_optional': {'key': 'isOptional', 'type': 'bool'},
        'default_value': {'key': 'defaultValue', 'type': 'str'},
        'lower_bound': {'key': 'lowerBound', 'type': 'str'},
        'upper_bound': {'key': 'upperBound', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'run_setting_ui_hint': {'key': 'runSettingUIHint', 'type': 'RunSettingUIParameterHint'},
        'argument_name': {'key': 'argumentName', 'type': 'str'},
        'section_name': {'key': 'sectionName', 'type': 'str'},
        'section_description': {'key': 'sectionDescription', 'type': 'str'},
        'section_argument_name': {'key': 'sectionArgumentName', 'type': 'str'},
        'enum_values': {'key': 'enumValues', 'type': '[str]'},
        'enum_values_to_argument_strings': {'key': 'enumValuesToArgumentStrings', 'type': '{str}'},
        'enabled_by_parameter_name': {'key': 'enabledByParameterName', 'type': 'str'},
        'enabled_by_parameter_values': {'key': 'enabledByParameterValues', 'type': '[str]'},
        'disabled_by_parameters': {'key': 'disabledByParameters', 'type': '[str]'},
        'linked_parameter_default_value_mapping': {'key': 'linkedParameterDefaultValueMapping', 'type': '{str}'},
    }

    def __init__(self, *, name: str=None, label: str=None, parameter_type=None, is_optional: bool=None, default_value: str=None, lower_bound: str=None, upper_bound: str=None, description: str=None, run_setting_ui_hint=None, argument_name: str=None, section_name: str=None, section_description: str=None, section_argument_name: str=None, enum_values=None, enum_values_to_argument_strings=None, enabled_by_parameter_name: str=None, enabled_by_parameter_values=None, disabled_by_parameters=None, linked_parameter_default_value_mapping=None, **kwargs) -> None:
        super(RunSettingParameter, self).__init__(**kwargs)
        self.name = name
        self.label = label
        self.parameter_type = parameter_type
        self.is_optional = is_optional
        self.default_value = default_value
        self.lower_bound = lower_bound
        self.upper_bound = upper_bound
        self.description = description
        self.run_setting_ui_hint = run_setting_ui_hint
        self.argument_name = argument_name
        self.section_name = section_name
        self.section_description = section_description
        self.section_argument_name = section_argument_name
        self.enum_values = enum_values
        self.enum_values_to_argument_strings = enum_values_to_argument_strings
        self.enabled_by_parameter_name = enabled_by_parameter_name
        self.enabled_by_parameter_values = enabled_by_parameter_values
        self.disabled_by_parameters = disabled_by_parameters
        self.linked_parameter_default_value_mapping = linked_parameter_default_value_mapping
