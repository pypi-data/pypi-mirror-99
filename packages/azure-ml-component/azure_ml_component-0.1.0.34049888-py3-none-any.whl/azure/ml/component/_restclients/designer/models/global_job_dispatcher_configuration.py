# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GlobalJobDispatcherConfiguration(Model):
    """GlobalJobDispatcherConfiguration.

    :param vm_size:
    :type vm_size: list[str]
    :param compute_type: Possible values include: 'AmlCompute', 'AmlK8s'
    :type compute_type: str or
     ~designer.models.GlobalJobDispatcherSupportedComputeType
    :param region:
    :type region: list[str]
    :param my_resource_only:
    :type my_resource_only: bool
    :param low_priority_vm_tolerant:
    :type low_priority_vm_tolerant: bool
    :param vc_list:
    :type vc_list: list[str]
    """

    _attribute_map = {
        'vm_size': {'key': 'vmSize', 'type': '[str]'},
        'compute_type': {'key': 'computeType', 'type': 'str'},
        'region': {'key': 'region', 'type': '[str]'},
        'my_resource_only': {'key': 'myResourceOnly', 'type': 'bool'},
        'low_priority_vm_tolerant': {'key': 'lowPriorityVMTolerant', 'type': 'bool'},
        'vc_list': {'key': 'vcList', 'type': '[str]'},
    }

    def __init__(self, **kwargs):
        super(GlobalJobDispatcherConfiguration, self).__init__(**kwargs)
        self.vm_size = kwargs.get('vm_size', None)
        self.compute_type = kwargs.get('compute_type', None)
        self.region = kwargs.get('region', None)
        self.my_resource_only = kwargs.get('my_resource_only', None)
        self.low_priority_vm_tolerant = kwargs.get('low_priority_vm_tolerant', None)
        self.vc_list = kwargs.get('vc_list', None)
