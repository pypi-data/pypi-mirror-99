#include<Python.h>
#define NPY_NO_DEPRECATED_API NPY_1_8_API_VERSION
#include<numpy/arrayobject.h>
#include<math.h>
//#include<omp.h>

/* 1D double ndarray:                                                       */
#define INDd(a,i) *((double *)(PyArray_DATA(a) + i * PyArray_STRIDE(a, 0)))

PyDoc_STRVAR(sinmodel__doc__,
"Sine-cosine phase-curve model.                                            \n\
                                                                           \n\
Parameters:                                                                \n\
-----------                                                                \n\
params:  1D float ndarray                                                  \n\
  Array of fitting parameters.                                             \n\
phase:  1D float ndarray                                                   \n\
  Orbital phase curve.                                                     \n\
zphase:  Float                                                             \n\
  If specified, phase where to normalize the phase curve to 1.0.           \n\
                                                                           \n\
Returns:                                                                   \n\
--------                                                                   \n\
model:  1D float ndarray                                                   \n\
   The sine-cosine model.                                                  \n\
                                                                           \n\
Developers:                                                                \n\
-----------                                                                \n\
Kevin Stevenson    kevin218@knights.ucf.edu     UCF                        \n\
Nate Lust          natelust at linux dot com    UCF                        \n\
Patricio Cubillos  pcubillos@fulbrightmail.org  UCF");


static PyObject *sinmodel(PyObject *self, PyObject *args){
  PyArrayObject *phase, *model, *params;
  double c0, c1, c2, zphase=-1.0;
  int i;
  npy_intp dims[1];

  /* Parse the arguments:                                                   */
  if(!PyArg_ParseTuple(args, "OO|d", &params, &phase, &zphase)){
      return NULL;
  }
  c0   = INDd(params, 0);
  c1   = INDd(params, 1);
  c2   = INDd(params, 2);

  /* Allocate model:                                                        */
  dims[0] = (int)PyArray_DIM(phase, 0);
  model = (PyArrayObject *) PyArray_SimpleNew(1, dims, NPY_DOUBLE);

  #pragma omp parallel for
  for(i=0; i<dims[0]; i++){
    if (zphase != -1)
      c0 = - c1*cos(2*M_PI*zphase) - c2*sin(2*M_PI*zphase);
    INDd(model, i) = 1.0 + c0 + c1*cos(2*M_PI*INDd(phase,i)) +
                                c2*sin(2*M_PI*INDd(phase,i));
  }

  //Py_XDECREF(dims);
  return Py_BuildValue("N", model);
}

PyDoc_STRVAR(sinmod__doc__, "Sine-cosine orbital-phase model.\n");

static PyMethodDef sinmodel_methods[] = {
  {"sinmodel", sinmodel, METH_VARARGS, sinmodel__doc__},
  {NULL,       NULL,     0,             NULL}};

void initsinmodel(void){
  Py_InitModule3("sinmodel", sinmodel_methods, sinmod__doc__);
  import_array();
}
