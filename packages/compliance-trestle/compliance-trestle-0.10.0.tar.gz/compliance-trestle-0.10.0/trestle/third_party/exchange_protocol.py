# modified by fix_any.py
# -*- mode:python; coding:utf-8 -*-
# Copyright (c) 2020 IBM Corp. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# generated by datamodel-codegen:
#   filename:  OSCAL-1.0.0-rc1-IBM_observations_interchange_schema.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Dict, List, Optional

from pydantic import AnyUrl, EmailStr, Field, constr
from trestle.core.base_model import OscalBaseModel


class Url(OscalBaseModel):
    __root__: AnyUrl


class Type(Enum):
    person = 'person'
    organization = 'organization'


class TelephoneNumber(OscalBaseModel):
    type: Optional[str] = Field(
        None, description='Indicates the type of phone number.', title='type flag'
    )
    number: str = Field(..., title='Number')


class SetParameter(OscalBaseModel):
    values: List[str] = Field(..., min_items=1, title='Values')


class Remarks(OscalBaseModel):
    __root__: str = Field(
        ..., description='Additional commentary on the containing object.'
    )


class Property(OscalBaseModel):
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A unique identifier that can be used to reference this property elsewhere in an OSCAL document. A UUID should be consistantly used for a given location across revisions of the document.',
        title='Property Universally Unique Identifier',
    )
    name: str = Field(
        ...,
        description="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object.",
        title='Property Name',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Property Namespace',
    )
    class_: Optional[str] = Field(
        None,
        alias='class',
        description="A textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns.",
        title='Property Class',
    )
    value: str = Field(..., title='Value')


class PartyUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(..., description='References a party defined in metadata.')


class ParameterSettings(OscalBaseModel):
    __root__: SetParameter


class MemberOfOrganization(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Identifies that the party object is a member of the organization associated with the provided UUID.',
    )


class LocationUuid(OscalBaseModel):
    __root__: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(..., description='References a location defined in metadata.')


class Link(OscalBaseModel):
    href: str = Field(
        ...,
        description='A resolvable URL reference to a resource.',
        title='Hypertext Reference',
    )
    rel: Optional[str] = Field(
        None,
        description="Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.",
        title='Relation',
    )
    media_type: Optional[str] = Field(
        None,
        alias='media-type',
        description='Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.',
        title='Media Type',
    )
    text: Optional[str] = Field(
        None,
        description='A textual label to associate with the link, which may be used for presentation in a tool.',
        title='Link Text',
    )


class ExternalId(OscalBaseModel):
    scheme: AnyUrl = Field(
        ...,
        description='Indicates the type of external identifier.',
        title='External Identifier Schema',
    )
    id: str = Field(..., title='Id')


class EmailAddress(OscalBaseModel):
    __root__: EmailStr = Field(
        ..., description='An email address as defined by RFC 5322 Section 3.4.1.'
    )


class DocumentId(OscalBaseModel):
    scheme: AnyUrl = Field(
        ...,
        description='Qualifies the kind of document identifier.',
        title='Document Identification Scheme',
    )
    identifier: str = Field(..., title='Identifier')


class Annotation(OscalBaseModel):
    name: str = Field(
        ...,
        description="A textual label that uniquely identifies a specific attribute, characteristic, or quality of the annotated property's containing object.",
        title='Annotated Property Name',
    )
    uuid: Optional[
        constr(
            regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
        )
    ] = Field(
        None,
        description='A unique identifier that can be used to reference this annotated property elsewhere in an OSCAL document. A UUID should be consistantly used for a given location across revisions of the document.',
        title='Annotated Property Universally Unique Identifier',
    )
    ns: Optional[AnyUrl] = Field(
        None,
        description="A namespace qualifying the annotated property's name. This allows different organizations to associate distinct semantics with the same name.",
        title='Annotated Property Namespace',
    )
    value: str = Field(
        ...,
        description='Indicates the value of the attribute, characteristic, or quality.',
        title='Annotated Property Value',
    )
    remarks: Optional[Remarks] = None


class Address(OscalBaseModel):
    type: Optional[str] = Field(
        None, description='Indicates the type of address.', title='Address Type'
    )
    addr_lines: Optional[List[str]] = Field(
        None, alias='addr-lines', min_items=1, title='Addr-Lines'
    )
    city: Optional[str] = Field(
        None,
        description='City, town or geographical region for the mailing address.',
        title='City',
    )
    state: Optional[str] = Field(
        None,
        description='State, province or analogous geographical region for mailing address',
        title='State',
    )
    postal_code: Optional[str] = Field(
        None,
        alias='postal-code',
        description='Postal or ZIP code for mailing address',
        title='Postal Code',
    )
    country: Optional[str] = Field(
        None,
        description='The ISO 3166-1 alpha-2 country code for the mailing address.',
        title='Country Code',
    )


class Actor(OscalBaseModel):
    type: Type = Field(..., description='The kind of actor.', title='Actor Type')
    uuid_ref: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='uuid-ref',
        description='A pointer to the tool or person based on the associated type.',
        title='Actor UUID Reference',
    )
    role_id: Optional[str] = Field(
        None,
        alias='role-id',
        description='For a party, this can optionally be used to specify the role the actor was performing.',
        title='Actor Role',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')


class Subject(OscalBaseModel):
    uuid_ref: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='uuid-ref',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='UUID Reference',
    )
    type: str = Field(
        ...,
        description='Used to indicate the type of object pointed to by the uuid-ref.',
        title='Universally Unique Identifier Reference Type',
    )
    title: Optional[str] = Field(
        None,
        description='The title or name for the referenced subject.',
        title='Subject Reference Title',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class SelectSubjectById(OscalBaseModel):
    uuid_ref: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='uuid-ref',
        description="A pointer to a component, inventory-item, location, party, user, or resource using it's UUID.",
        title='UUID Reference',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class AssessmentSubject(OscalBaseModel):
    type: str = Field(
        ...,
        description='Indicates the type of assessment subject, such as a component, inventory, item, location, or party represented by this selection statement.',
        title='Subject Type',
    )
    description: Optional[str] = Field(
        None,
        description='A human-readable description of the collection of subjects being included in this assessment.',
        title=' Subjects Description',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    include_all: Optional[str] = Field(
        None,
        alias='include-all',
        description='A key word to indicate all.',
        title='All',
    )
    include_subjects: Optional[List[SelectSubjectById]] = Field(
        None, alias='include-subjects', min_items=1, title='Include-Subjects'
    )
    exclude_subjects: Optional[List[SelectSubjectById]] = Field(
        None, alias='exclude-subjects', min_items=1, title='Exclude-Subjects'
    )
    remarks: Optional[Remarks] = None


class RelatedTask(OscalBaseModel):
    task_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='task-uuid',
        description='References a unique task by UUID.',
        title='Task Universally Unique Identifier Reference',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    responsible_parties: Optional[Dict[str, ResponsibleParties]] = Field(
        None, alias='responsible-parties', title='Responsible-Parties'
    )
    assessment_subjects: Optional[List[AssessmentSubject]] = Field(
        None, alias='assessment-subjects', min_items=1, title='Assessment-Subjects'
    )
    remarks: Optional[Remarks] = None


class Role(OscalBaseModel):
    id: str = Field(
        ...,
        description="A unique identifier for a specific role instance. This identifier's uniqueness is document scoped and is intended to be consistent for the same role across minor revisions of the document.",
        title='Role Identifier',
    )
    title: str = Field(
        ...,
        description='A name given to the role, which may be used by a tool for display and navigation.',
        title='Role Title',
    )
    short_name: Optional[str] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the role.',
        title='Role Short Name',
    )
    description: Optional[str] = Field(
        None,
        description="A summary of the role's purpose and associated responsibilities.",
        title='Role Description',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class Revision(OscalBaseModel):
    title: Optional[str] = Field(
        None,
        description='A name given to the document revision, which may be used by a tool for display and navigation.',
        title='Document Title',
    )
    published: Optional[datetime] = Field(
        None,
        description='The date and time the document was published. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Publication Timestamp',
    )
    last_modified: Optional[datetime] = Field(
        None,
        alias='last-modified',
        description='The date and time the document was last modified. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Last Modified Timestamp',
    )
    version: Optional[str] = Field(
        None,
        description='A string used to distinguish the current version of the document from other previous (and future) versions.',
        title='Document Version',
    )
    oscal_version: Optional[conconstr(regex=r'1\.0\.0[ -]*rc[ -]*1')(regex=r'1\.0\.0[ -]*rc[ -]*1')] = Field(
        None,
        alias='oscal-version',
        description='The OSCAL model version the document was authored against.',
        title='OSCAL version',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class ResponsibleRole(OscalBaseModel):
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    party_uuids: Optional[List[PartyUuid]] = Field(
        None, alias='party-uuids', min_items=1, title='Party-Uuids'
    )
    remarks: Optional[Remarks] = None


class ResponsibleRoles(OscalBaseModel):
    __root__: ResponsibleRole


class ResponsibleParty(OscalBaseModel):
    party_uuids: List[PartyUuid] = Field(
        ..., alias='party-uuids', min_items=1, title='Party-Uuids'
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class ResponsibleParties(OscalBaseModel):
    __root__: ResponsibleParty


class RelatedAction(OscalBaseModel):
    action_uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        alias='action-uuid',
        description='References a unique action by UUID.',
        title='Action Universally Unique Identifier Reference',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    responsible_parties: Optional[Dict[str, ResponsibleParties]] = Field(
        None, alias='responsible-parties', title='Responsible-Parties'
    )
    remarks: Optional[Remarks] = None


class Task(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this assessment task.',
        title='Task Universally Unique Identifier',
    )
    title: str = Field(..., description='The title for this task.', title='Task Title')
    description: Optional[str] = Field(
        None,
        description='A human-readable description of this task.',
        title='Task Description',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    start: datetime = Field(
        ...,
        description='The task must occur on or after the specified date.',
        title='Task Start Date',
    )
    end: datetime = Field(
        ...,
        description='The task must occur on or before the specified date.',
        title='Task End Date',
    )
    related_actions: Optional[List[RelatedAction]] = Field(
        None, alias='related-actions', min_items=1, title='Related-Actions'
    )
    responsible_roles: Optional[Dict[str, ResponsibleRoles]] = Field(
        None, alias='responsible-roles', title='Responsible-Roles'
    )
    remarks: Optional[Remarks] = None


class RequiredAsset(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this required asset. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given required asset across revisions.',
        title='Required Universally Unique Identifier',
    )
    subjects: Optional[List[Subject]] = Field(None, min_items=1, title='Subjects')
    title: Optional[str] = Field(
        None,
        description='The title for this required asset.',
        title='Title for Required Asset',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this required asset.',
        title='Description of Required Asset',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class RelevantEvidence(OscalBaseModel):
    href: Optional[str] = Field(
        None,
        description='>A resolvable URL reference to relevant evidence.',
        title='Relevant Evidence Reference',
    )
    description: str = Field(
        ...,
        description='A human-readable description of this evidence.',
        title='Relevant Evidence Description',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class Party(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier that can be used to reference this defined location elsewhere in an OSCAL document. A UUID should be consistantly used for a given party across revisions of the document.',
        title='Party Universally Unique Identifier',
    )
    type: Type = Field(
        ...,
        description='A category describing the kind of party the object describes.',
        title='Party Type',
    )
    name: Optional[str] = Field(
        None,
        description='The full name of the party. This is typically the legal name associated with the party.',
        title='Party Name',
    )
    short_name: Optional[str] = Field(
        None,
        alias='short-name',
        description='A short common name, abbreviation, or acronym for the party.',
        title='Party Short Name',
    )
    external_ids: Optional[List[ExternalId]] = Field(
        None, alias='external-ids', min_items=1, title='External-Ids'
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    email_addresses: Optional[List[EmailAddress]] = Field(
        None, alias='email-addresses', min_items=1, title='Email-Addresses'
    )
    telephone_numbers: Optional[List[TelephoneNumber]] = Field(
        None, alias='telephone-numbers', min_items=1, title='Telephone-Numbers'
    )
    addresses: Optional[List[Address]] = Field(None, min_items=1, title='Addresses')
    location_uuids: Optional[List[LocationUuid]] = Field(
        None, alias='location-uuids', min_items=1, title='Location-Uuids'
    )
    member_of_organizations: Optional[List[MemberOfOrganization]] = Field(
        None,
        alias='member-of-organizations',
        min_items=1,
        title='Member-Of-Organizations',
    )
    remarks: Optional[Remarks] = None


class Location(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='A unique identifier that can be used to reference this defined location elsewhere in an OSCAL document. A UUID should be consistantly used for a given location across revisions of the document.',
        title='Location Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None,
        description='A name given to the location, which may be used by a tool for display and navigation.',
        title='Location Title',
    )
    address: Address = Field(
        ..., description='A postal address for the location.', title='Address'
    )
    email_addresses: Optional[List[EmailAddress]] = Field(
        None, alias='email-addresses', min_items=1, title='Email-Addresses'
    )
    telephone_numbers: Optional[List[TelephoneNumber]] = Field(
        None, alias='telephone-numbers', min_items=1, title='Telephone-Numbers'
    )
    urls: Optional[List[Url]] = Field(None, min_items=1, title='Urls')
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    remarks: Optional[Remarks] = None


class Metadata(OscalBaseModel):
    title: str = Field(
        ...,
        description='A name given to the document, which may be used by a tool for display and navigation.',
        title='Document Title',
    )
    published: Optional[datetime] = Field(
        None,
        description='The date and time the document was published. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Publication Timestamp',
    )
    last_modified: datetime = Field(
        ...,
        alias='last-modified',
        description='The date and time the document was last modified. The date-time value must be formatted according to RFC 3339 with full time and time zone included.',
        title='Last Modified Timestamp',
    )
    version: str = Field(
        ...,
        description='A string used to distinguish the current version of the document from other previous (and future) versions.',
        title='Document Version',
    )
    oscal_version: constr(regex=r'1\.0\.0[ -]*rc[ -]*1') = Field(
        ...,
        alias='oscal-version',
        description='The OSCAL model version the document was authored against.',
        title='OSCAL version',
    )
    revisions: Optional[List[Revision]] = Field(None, min_items=1, title='Revisions')
    document_ids: Optional[List[DocumentId]] = Field(
        None, alias='document-ids', min_items=1, title='Document-Ids'
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    roles: Optional[List[Role]] = Field(None, min_items=1, title='Roles')
    locations: Optional[List[Location]] = Field(None, min_items=1, title='Locations')
    parties: Optional[List[Party]] = Field(None, min_items=1, title='Parties')
    responsible_parties: Optional[Dict[str, ResponsibleParties]] = Field(
        None, alias='responsible-parties', title='Responsible-Parties'
    )
    remarks: Optional[Remarks] = None


class Origin(OscalBaseModel):
    actors: List[Actor] = Field(..., min_items=1, title='Actors')
    related_actions: Optional[List[RelatedAction]] = Field(
        None, alias='related-actions', min_items=1, title='Related-Actions'
    )
    related_tasks: Optional[List[RelatedTask]] = Field(
        None, alias='related-tasks', min_items=1, title='Related-Tasks'
    )


class Remediation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this remediation. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given remediation across revisions.',
        title='Remediation Universally Unique Identifier',
    )
    lifecycle: str = Field(
        ...,
        description='Identifies whether this is a recommendation, such as from an assessor or tool, or an actual plan accepted by the system owner.',
        title='Remediation Intent',
    )
    title: str = Field(
        ..., description='The title for this response activity.', title='Response Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this response plan.',
        title='Response Description',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    origins: Optional[List[Origin]] = Field(None, min_items=1, title='Origins')
    required_assets: Optional[List[RequiredAsset]] = Field(
        None, alias='required-assets', min_items=1, title='Required-Assets'
    )
    tasks: Optional[List[Task]] = Field(None, min_items=1, title='Tasks')
    remarks: Optional[Remarks] = None


class Observation(OscalBaseModel):
    uuid: constr(
        regex=r'^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$'
    ) = Field(
        ...,
        description='Uniquely identifies this observation. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given observation across revisions.',
        title='Observation Universally Unique Identifier',
    )
    title: Optional[str] = Field(
        None, description='The title for this observation.', title='Observation Title'
    )
    description: str = Field(
        ...,
        description='A human-readable description of this assessment observation.',
        title='Observaton Description',
    )
    props: Optional[List[Property]] = Field(None, min_items=1, title='Props')
    annotations: Optional[List[Annotation]] = Field(
        None, min_items=1, title='Annotations'
    )
    links: Optional[List[Link]] = Field(None, min_items=1, title='Links')
    methods: List[str] = Field(..., min_items=1, title='Methods')
    types: Optional[List[str]] = Field(None, min_items=1, title='Types')
    origins: Optional[List[Origin]] = Field(None, min_items=1, title='Origins')
    subjects: Optional[List[Subject]] = Field(None, min_items=1, title='Subjects')
    relevant_evidence: Optional[List[RelevantEvidence]] = Field(
        None, alias='relevant-evidence', min_items=1, title='Relevant-Evidence'
    )
    remarks: Optional[Remarks] = None
    remediation_group: List[Remediation] = Field(
        ..., alias='remediation-group', title='Remediation-Group'
    )
    parameter_settings: Optional[Dict[str, ParameterSettings]] = Field(
        None, alias='parameter-settings', title='Parameter-Settings'
    )


class IbmObservationsInterchange(OscalBaseModel):
    observations: List[Observation] = Field(..., title='Observations')
    metadata: Optional[Metadata] = None

