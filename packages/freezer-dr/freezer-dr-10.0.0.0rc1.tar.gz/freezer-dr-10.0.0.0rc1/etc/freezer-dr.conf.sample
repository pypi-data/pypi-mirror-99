[DEFAULT]

#
# From freezer-dr
#

# Time to wait between different operations (integer value)
#wait = 30

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of the default
# INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false

# The name of a logging configuration file. This file is appended to any
# existing logging configuration files. For details about logging configuration
# files, see the Python logging module documentation. Note that when logging
# configuration files are used then all logging configuration is set in the
# configuration file and other logging configuration options are ignored (for
# example, logging_context_format_string). (string value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default:
# %(default)s . This option is ignored if log_config_append is set. (string
# value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default is set,
# logging will go to stderr as defined by use_stderr. This option is ignored if
# log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths. This option
# is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Uses logging handler designed to watch file system. When log file is moved or
# removed this handler will open a new log file with specified path
# instantaneously. It makes sense only if log_file option is specified and
# Linux platform is used. This option is ignored if log_config_append is set.
# (boolean value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and will be
# changed later to honor RFC5424. This option is ignored if log_config_append
# is set. (boolean value)
#use_syslog = false

# Enable journald for logging. If running in a systemd environment you may wish
# to enable journal support. Doing so will use the journal native protocol
# which includes structured metadata in addition to log messages.This option is
# ignored if log_config_append is set. (boolean value)
#use_journal = false

# Syslog facility to receive log lines. This option is ignored if
# log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Log output to standard error. This option is ignored if log_config_append is
# set. (boolean value)
#use_stderr = false

# Format string to use for log messages with context. (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined. (string
# value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the message
# is DEBUG. (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. (string value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in
# logging_context_format_string. (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is ignored
# if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,oslo_messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message. (string
# value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message. (string
# value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Interval, number of seconds, of log rate limiting. (integer value)
#rate_limit_interval = 0

# Maximum number of logged messages per rate_limit_interval. (integer value)
#rate_limit_burst = 0

# Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG
# or empty string. Logs with level greater or equal to rate_limit_except_level
# are not filtered. An empty string means that all levels are filtered. (string
# value)
#rate_limit_except_level = CRITICAL

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false


[evacuation]

#
# From freezer-dr
#

# Time in seconds to wait between retries to disable compute node or put it in
# maintenance mode. Default 10 seconds (string value)
#driver = freezer_dr.evacuators.drivers.default.standard.StandardEvacuator

# Time in seconds to wait between retries to disable compute node or put it in
# maintenance mode. Default 10 seconds (integer value)
#wait = 10

# Number of retries to put node in maintenance mode before reporting failure to
# evacuate the node (integer value)
#retries = 1

# Set this option to True in case your compute nodes are running on a shared
# storage or False if not (boolean value)
#shared_storage = false

# Dict contains kwargs to be passed to the evacuator driver. In case you have
# additional args needs to be passed to your evacuator please, list them as
# key0:value0, key1:value1, .... (dict value)
#options =


[fencer]

#
# From freezer-dr
#

# YAML File contains the required credentials for compute nodes (string value)
#credentials_file = <None>

# Number of retries to fence the each compute node. Must be at least 1 to try
# first the soft shutdown (integer value)
#retries = 1

# Time in seconds to wait between retries. Should be reasonable amount of time
# as different servers take different times to shut off (integer value)
#hold_period = 10

# Choose the best fencer driver i.e.(ipmi, libvirt, .. (string value)
#driver = freezer_dr.fencers.drivers.ipmi.driver.IpmiDriver

# List of kwargs to customize the fencer operation. You fencer driver should
# support these options. Options should be in key:value format (dict value)
#options =


[keystone_authtoken]

#
# From freezer-dr
#

# OpenStack auth URI i.e. http://controller:5000 (string value)
#auth_uri = <None>

# OpenStack auth URL i.e. http://controller:35357/v3 (string value)
#auth_url = <None>

# OpenStack auth plugin i.e. ( password, token, ...) password is the only
# available plugin for the time being (string value)
#auth_plugin = <None>

# OpenStack username (string value)
#username = <None>

# OpenStack Password (string value)
#password = <None>

# OpenStack Project Name. (string value)
#project_name = <None>

# OpenStack domain Name. (string value)
#domain_name = <None>

# OpenStack Project Domain id, default is Default (string value)
#project_domain_id = <None>

# OpenStack user Domain id, default is Default (string value)
#user_domain_id = <None>

# OpenStack Project Domain name, default is Default (string value)
#project_domain_name = <None>

# OpenStack user Domain name, default is Default (string value)
#user_domain_name = <None>

# OpenStack Authentication arguments you can pass it here as Key:Value,
# Key1:Value1, ...  (dict value)
#kwargs =


[monitoring]

#
# From freezer-dr
#

# Driver used to get a status updates of compute nodes (string value)
#driver = freezer_dr.monitors.drivers.default.driver.StandardDriver

# configuration section name. This should contain your monitoring specific
# configuration options. (string value)
#backend_name = <None>


[notifiers]

#
# From freezer-dr
#

# Notification driver to load it to notify users if something went wrong
# (string value)
#driver = freezer_dr.notifiers.drivers.default.default_email.StandardEmail

# Endpoint URL for the notification system. If you the driver you are using
# doesnot require any URL just comment it or use none (string value)
#endpoint = localhost

# Username to authenticate against the notification system. If the driver you
# are using doesnot require any authentications comment or use None (string
# value)
#username = <None>

# Password to authenticate against the notification system. If the driver you
# are using doesnot require any authentications comment or use None (string
# value)
#password = <None>

# Path to Jinja2 templates directory that contains message templates (string
# value)
#templates-dir = /etc/freezer/templates

# Key:Value Kwargs to pass it to the notification driver, if you want to pass
# any special arguments for your driver.   (dict value)
#options =

# List of emails to sent them notification if something went wrong and Freezer
# DR wasnot able to send an email to the tenant admin (list value)
#notify-list =

# The sender address, it can be email address if we used default email driver,
# or phone number if we use sms gateway for example. (string value)
#notify-from = <None>
