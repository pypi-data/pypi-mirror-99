# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 6, 0):
    raise RuntimeError("Python 3.6 or later required")


from . import _UltrasoundPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpectra1DSupportWindowImageFilterPython
else:
    import _itkSpectra1DSupportWindowImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpectra1DSupportWindowImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpectra1DSupportWindowImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourceCommonPython
class listIndex2(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 2 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___bool__)
    __len__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___len__)
    __getslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2___setitem__)
    pop = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_pop)
    append = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_append)
    empty = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_empty)
    size = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_size)
    swap = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_swap)
    begin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_begin)
    end = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_end)
    rbegin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_rbegin)
    rend = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_rend)
    clear = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_clear)
    get_allocator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_pop_back)
    erase = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex2
        __init__(self, other) -> listIndex2

        Parameters
        ----------
        other: std::list< itk::Index< 2 > > const &

        __init__(self, size) -> listIndex2

        Parameters
        ----------
        size: std::list< itk::Index< 2 > >::size_type

        __init__(self, size, value) -> listIndex2

        Parameters
        ----------
        size: std::list< itk::Index< 2 > >::size_type
        value: std::list< itk::Index< 2 > >::value_type const &

        """
        _itkSpectra1DSupportWindowImageFilterPython.listIndex2_swiginit(self, _itkSpectra1DSupportWindowImageFilterPython.new_listIndex2(*args))
    push_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_push_back)
    front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_front)
    back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_back)
    assign = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_assign)
    resize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_resize)
    insert = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_insert)
    pop_front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_pop_front)
    push_front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_push_front)
    reverse = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex2_reverse)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_listIndex2

# Register listIndex2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.listIndex2_swigregister(listIndex2)

class listIndex3(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 3 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___bool__)
    __len__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___len__)
    __getslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3___setitem__)
    pop = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_pop)
    append = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_append)
    empty = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_empty)
    size = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_size)
    swap = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_swap)
    begin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_begin)
    end = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_end)
    rbegin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_rbegin)
    rend = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_rend)
    clear = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_clear)
    get_allocator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_pop_back)
    erase = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex3
        __init__(self, other) -> listIndex3

        Parameters
        ----------
        other: std::list< itk::Index< 3 > > const &

        __init__(self, size) -> listIndex3

        Parameters
        ----------
        size: std::list< itk::Index< 3 > >::size_type

        __init__(self, size, value) -> listIndex3

        Parameters
        ----------
        size: std::list< itk::Index< 3 > >::size_type
        value: std::list< itk::Index< 3 > >::value_type const &

        """
        _itkSpectra1DSupportWindowImageFilterPython.listIndex3_swiginit(self, _itkSpectra1DSupportWindowImageFilterPython.new_listIndex3(*args))
    push_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_push_back)
    front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_front)
    back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_back)
    assign = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_assign)
    resize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_resize)
    insert = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_insert)
    pop_front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_pop_front)
    push_front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_push_front)
    reverse = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex3_reverse)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_listIndex3

# Register listIndex3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.listIndex3_swigregister(listIndex3)

class listIndex4(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itk::Index< 4 > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___bool__)
    __len__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___len__)
    __getslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4___setitem__)
    pop = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_pop)
    append = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_append)
    empty = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_empty)
    size = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_size)
    swap = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_swap)
    begin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_begin)
    end = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_end)
    rbegin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_rbegin)
    rend = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_rend)
    clear = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_clear)
    get_allocator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_pop_back)
    erase = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listIndex4
        __init__(self, other) -> listIndex4

        Parameters
        ----------
        other: std::list< itk::Index< 4 > > const &

        __init__(self, size) -> listIndex4

        Parameters
        ----------
        size: std::list< itk::Index< 4 > >::size_type

        __init__(self, size, value) -> listIndex4

        Parameters
        ----------
        size: std::list< itk::Index< 4 > >::size_type
        value: std::list< itk::Index< 4 > >::value_type const &

        """
        _itkSpectra1DSupportWindowImageFilterPython.listIndex4_swiginit(self, _itkSpectra1DSupportWindowImageFilterPython.new_listIndex4(*args))
    push_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_push_back)
    front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_front)
    back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_back)
    assign = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_assign)
    resize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_resize)
    insert = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_insert)
    pop_front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_pop_front)
    push_front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_push_front)
    reverse = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.listIndex4_reverse)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_listIndex4

# Register listIndex4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.listIndex4_swigregister(listIndex4)

class vectoritkImagelistitkIndex22(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImagelistitkIndex22_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___bool__)
    __len__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___len__)
    __getslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22___setitem__)
    pop = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_pop)
    append = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_append)
    empty = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_empty)
    size = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_size)
    swap = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_swap)
    begin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_begin)
    end = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_end)
    rbegin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_rbegin)
    rend = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_rend)
    clear = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_clear)
    get_allocator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_pop_back)
    erase = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImagelistitkIndex22
        __init__(self, other) -> vectoritkImagelistitkIndex22

        Parameters
        ----------
        other: std::vector< itkImagelistitkIndex22_Pointer > const &

        __init__(self, size) -> vectoritkImagelistitkIndex22

        Parameters
        ----------
        size: std::vector< itkImagelistitkIndex22_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImagelistitkIndex22

        Parameters
        ----------
        size: std::vector< itkImagelistitkIndex22_Pointer >::size_type
        value: std::vector< itkImagelistitkIndex22_Pointer >::value_type const &

        """
        _itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_swiginit(self, _itkSpectra1DSupportWindowImageFilterPython.new_vectoritkImagelistitkIndex22(*args))
    push_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_push_back)
    front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_front)
    back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_back)
    assign = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_assign)
    resize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_resize)
    insert = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_insert)
    reserve = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_reserve)
    capacity = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_capacity)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_vectoritkImagelistitkIndex22

# Register vectoritkImagelistitkIndex22 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex22_swigregister(vectoritkImagelistitkIndex22)

class vectoritkImagelistitkIndex33(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImagelistitkIndex33_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___bool__)
    __len__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___len__)
    __getslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33___setitem__)
    pop = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_pop)
    append = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_append)
    empty = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_empty)
    size = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_size)
    swap = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_swap)
    begin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_begin)
    end = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_end)
    rbegin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_rbegin)
    rend = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_rend)
    clear = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_clear)
    get_allocator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_pop_back)
    erase = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImagelistitkIndex33
        __init__(self, other) -> vectoritkImagelistitkIndex33

        Parameters
        ----------
        other: std::vector< itkImagelistitkIndex33_Pointer > const &

        __init__(self, size) -> vectoritkImagelistitkIndex33

        Parameters
        ----------
        size: std::vector< itkImagelistitkIndex33_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImagelistitkIndex33

        Parameters
        ----------
        size: std::vector< itkImagelistitkIndex33_Pointer >::size_type
        value: std::vector< itkImagelistitkIndex33_Pointer >::value_type const &

        """
        _itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_swiginit(self, _itkSpectra1DSupportWindowImageFilterPython.new_vectoritkImagelistitkIndex33(*args))
    push_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_push_back)
    front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_front)
    back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_back)
    assign = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_assign)
    resize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_resize)
    insert = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_insert)
    reserve = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_reserve)
    capacity = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_capacity)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_vectoritkImagelistitkIndex33

# Register vectoritkImagelistitkIndex33 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex33_swigregister(vectoritkImagelistitkIndex33)

class vectoritkImagelistitkIndex44(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkImagelistitkIndex44_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___bool__)
    __len__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___len__)
    __getslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44___setitem__)
    pop = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_pop)
    append = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_append)
    empty = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_empty)
    size = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_size)
    swap = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_swap)
    begin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_begin)
    end = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_end)
    rbegin = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_rbegin)
    rend = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_rend)
    clear = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_clear)
    get_allocator = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_get_allocator)
    pop_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_pop_back)
    erase = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImagelistitkIndex44
        __init__(self, other) -> vectoritkImagelistitkIndex44

        Parameters
        ----------
        other: std::vector< itkImagelistitkIndex44_Pointer > const &

        __init__(self, size) -> vectoritkImagelistitkIndex44

        Parameters
        ----------
        size: std::vector< itkImagelistitkIndex44_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImagelistitkIndex44

        Parameters
        ----------
        size: std::vector< itkImagelistitkIndex44_Pointer >::size_type
        value: std::vector< itkImagelistitkIndex44_Pointer >::value_type const &

        """
        _itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_swiginit(self, _itkSpectra1DSupportWindowImageFilterPython.new_vectoritkImagelistitkIndex44(*args))
    push_back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_push_back)
    front = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_front)
    back = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_back)
    assign = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_assign)
    resize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_resize)
    insert = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_insert)
    reserve = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_reserve)
    capacity = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_capacity)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_vectoritkImagelistitkIndex44

# Register vectoritkImagelistitkIndex44 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.vectoritkImagelistitkIndex44_swigregister(vectoritkImagelistitkIndex44)


def itkImagelistitkIndex22_New():
    return itkImagelistitkIndex22.New()

class itkImagelistitkIndex22(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkImagelistitkIndex22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_Clone)
    Allocate = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkImagelistitkIndex22
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImagelistitkIndex22

        Create a new object of the class itkImagelistitkIndex22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImagelistitkIndex22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImagelistitkIndex22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImagelistitkIndex22.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImagelistitkIndex22 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_swigregister(itkImagelistitkIndex22)
itkImagelistitkIndex22___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22___New_orig__
itkImagelistitkIndex22_cast = _itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex22_cast


def itkImagelistitkIndex33_New():
    return itkImagelistitkIndex33.New()

class itkImagelistitkIndex33(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImagelistitkIndex33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_Clone)
    Allocate = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkImagelistitkIndex33
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImagelistitkIndex33

        Create a new object of the class itkImagelistitkIndex33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImagelistitkIndex33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImagelistitkIndex33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImagelistitkIndex33.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImagelistitkIndex33 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_swigregister(itkImagelistitkIndex33)
itkImagelistitkIndex33___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33___New_orig__
itkImagelistitkIndex33_cast = _itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex33_cast


def itkImagelistitkIndex44_New():
    return itkImagelistitkIndex44.New()

class itkImagelistitkIndex44(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkImagelistitkIndex44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_Clone)
    Allocate = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkImagelistitkIndex44
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_cast)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImagelistitkIndex44

        Create a new object of the class itkImagelistitkIndex44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImagelistitkIndex44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImagelistitkIndex44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImagelistitkIndex44.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImagelistitkIndex44 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_swigregister(itkImagelistitkIndex44)
itkImagelistitkIndex44___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44___New_orig__
itkImagelistitkIndex44_cast = _itkSpectra1DSupportWindowImageFilterPython.itkImagelistitkIndex44_cast

class itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC2_Superclass(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC2_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC2_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC2_Superclass)
itkSpectra1DSupportWindowImageFilterIUC2_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC3_Superclass(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC3_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC3_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC3_Superclass)
itkSpectra1DSupportWindowImageFilterIUC3_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC4_Superclass(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC4_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC4_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC4_Superclass)
itkSpectra1DSupportWindowImageFilterIUC4_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS2_Superclass(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS2_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS2_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS2_Superclass)
itkSpectra1DSupportWindowImageFilterIUS2_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS3_Superclass(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS3_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS3_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS3_Superclass)
itkSpectra1DSupportWindowImageFilterIUS3_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS4_Superclass(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS4_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS4_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS4_Superclass)
itkSpectra1DSupportWindowImageFilterIUS4_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_cast

class itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_MakeOutput)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass)
itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Superclass_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS2_Superclass(itkSpectra1DSupportWindowImageFilterISS2_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS2_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS2_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS2_Superclass)
itkSpectra1DSupportWindowImageFilterISS2_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS3_Superclass(itkSpectra1DSupportWindowImageFilterISS3_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS3_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS3_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS3_Superclass)
itkSpectra1DSupportWindowImageFilterISS3_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Superclass_cast

class itkSpectra1DSupportWindowImageFilterISS4_Superclass(itkSpectra1DSupportWindowImageFilterISS4_Superclass_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_SetInput)
    GetInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_GetInput)
    PushBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_GetDirectionTolerance)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS4_Superclass
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_cast)

# Register itkSpectra1DSupportWindowImageFilterISS4_Superclass in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_swigregister(itkSpectra1DSupportWindowImageFilterISS4_Superclass)
itkSpectra1DSupportWindowImageFilterISS4_Superclass_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Superclass_cast


def itkSpectra1DSupportWindowImageFilterIUC2_New():
    return itkSpectra1DSupportWindowImageFilterIUC2.New()

class itkSpectra1DSupportWindowImageFilterIUC2(itkSpectra1DSupportWindowImageFilterIUC2_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC2
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUC2

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUC2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUC2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_swigregister(itkSpectra1DSupportWindowImageFilterIUC2)
itkSpectra1DSupportWindowImageFilterIUC2___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2___New_orig__
itkSpectra1DSupportWindowImageFilterIUC2_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC2_cast


def itkSpectra1DSupportWindowImageFilterIUC3_New():
    return itkSpectra1DSupportWindowImageFilterIUC3.New()

class itkSpectra1DSupportWindowImageFilterIUC3(itkSpectra1DSupportWindowImageFilterIUC3_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC3
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUC3

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUC3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUC3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_swigregister(itkSpectra1DSupportWindowImageFilterIUC3)
itkSpectra1DSupportWindowImageFilterIUC3___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3___New_orig__
itkSpectra1DSupportWindowImageFilterIUC3_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC3_cast


def itkSpectra1DSupportWindowImageFilterIUC4_New():
    return itkSpectra1DSupportWindowImageFilterIUC4.New()

class itkSpectra1DSupportWindowImageFilterIUC4(itkSpectra1DSupportWindowImageFilterIUC4_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUC4
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUC4

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUC4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUC4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_swigregister(itkSpectra1DSupportWindowImageFilterIUC4)
itkSpectra1DSupportWindowImageFilterIUC4___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4___New_orig__
itkSpectra1DSupportWindowImageFilterIUC4_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUC4_cast


def itkSpectra1DSupportWindowImageFilterIUS2_New():
    return itkSpectra1DSupportWindowImageFilterIUS2.New()

class itkSpectra1DSupportWindowImageFilterIUS2(itkSpectra1DSupportWindowImageFilterIUS2_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS2
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUS2

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUS2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_swigregister(itkSpectra1DSupportWindowImageFilterIUS2)
itkSpectra1DSupportWindowImageFilterIUS2___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2___New_orig__
itkSpectra1DSupportWindowImageFilterIUS2_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS2_cast


def itkSpectra1DSupportWindowImageFilterIUS3_New():
    return itkSpectra1DSupportWindowImageFilterIUS3.New()

class itkSpectra1DSupportWindowImageFilterIUS3(itkSpectra1DSupportWindowImageFilterIUS3_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS3
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUS3

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUS3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_swigregister(itkSpectra1DSupportWindowImageFilterIUS3)
itkSpectra1DSupportWindowImageFilterIUS3___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3___New_orig__
itkSpectra1DSupportWindowImageFilterIUS3_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS3_cast


def itkSpectra1DSupportWindowImageFilterIUS4_New():
    return itkSpectra1DSupportWindowImageFilterIUS4.New()

class itkSpectra1DSupportWindowImageFilterIUS4(itkSpectra1DSupportWindowImageFilterIUS4_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterIUS4
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterIUS4

        Create a new object of the class itkSpectra1DSupportWindowImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterIUS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterIUS4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_swigregister(itkSpectra1DSupportWindowImageFilterIUS4)
itkSpectra1DSupportWindowImageFilterIUS4___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4___New_orig__
itkSpectra1DSupportWindowImageFilterIUS4_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterIUS4_cast


def itkSpectra1DSupportWindowImageFilterISS2_New():
    return itkSpectra1DSupportWindowImageFilterISS2.New()

class itkSpectra1DSupportWindowImageFilterISS2(itkSpectra1DSupportWindowImageFilterISS2_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS2
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterISS2

        Create a new object of the class itkSpectra1DSupportWindowImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterISS2.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterISS2 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_swigregister(itkSpectra1DSupportWindowImageFilterISS2)
itkSpectra1DSupportWindowImageFilterISS2___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2___New_orig__
itkSpectra1DSupportWindowImageFilterISS2_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS2_cast


def itkSpectra1DSupportWindowImageFilterISS3_New():
    return itkSpectra1DSupportWindowImageFilterISS3.New()

class itkSpectra1DSupportWindowImageFilterISS3(itkSpectra1DSupportWindowImageFilterISS3_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS3
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterISS3

        Create a new object of the class itkSpectra1DSupportWindowImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterISS3.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterISS3 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_swigregister(itkSpectra1DSupportWindowImageFilterISS3)
itkSpectra1DSupportWindowImageFilterISS3___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3___New_orig__
itkSpectra1DSupportWindowImageFilterISS3_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS3_cast


def itkSpectra1DSupportWindowImageFilterISS4_New():
    return itkSpectra1DSupportWindowImageFilterISS4.New()

class itkSpectra1DSupportWindowImageFilterISS4(itkSpectra1DSupportWindowImageFilterISS4_Superclass):
    r"""Proxy of C++ itkSpectra1DSupportWindowImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_Clone)
    GetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_GetFFT1DSize)
    SetFFT1DSize = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_SetFFT1DSize)
    GetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_GetStep)
    SetStep = _swig_new_instance_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_SetStep)
    __swig_destroy__ = _itkSpectra1DSupportWindowImageFilterPython.delete_itkSpectra1DSupportWindowImageFilterISS4
    cast = _swig_new_static_method(_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkSpectra1DSupportWindowImageFilterISS4

        Create a new object of the class itkSpectra1DSupportWindowImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpectra1DSupportWindowImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpectra1DSupportWindowImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpectra1DSupportWindowImageFilterISS4.__New_orig__()
        from itk.support import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpectra1DSupportWindowImageFilterISS4 in _itkSpectra1DSupportWindowImageFilterPython:
_itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_swigregister(itkSpectra1DSupportWindowImageFilterISS4)
itkSpectra1DSupportWindowImageFilterISS4___New_orig__ = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4___New_orig__
itkSpectra1DSupportWindowImageFilterISS4_cast = _itkSpectra1DSupportWindowImageFilterPython.itkSpectra1DSupportWindowImageFilterISS4_cast


from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def spectra1_d_support_window_image_filter(*args, **kwargs):
    """Procedural interface for Spectra1DSupportWindowImageFilter"""
    import itk

    instance = itk.Spectra1DSupportWindowImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def spectra1_d_support_window_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.Ultrasound.Spectra1DSupportWindowImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    spectra1_d_support_window_image_filter.__doc__ = filter_object.__doc__
    spectra1_d_support_window_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    spectra1_d_support_window_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        spectra1_d_support_window_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        spectra1_d_support_window_image_filter.__doc__ += "\n"
        spectra1_d_support_window_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        spectra1_d_support_window_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )

from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_to_image_filter(*args, **kwargs):
    """Procedural interface for ImageToImageFilter"""
    import itk

    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()


def image_to_image_filter_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.Ultrasound.ImageToImageFilter
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__
    image_to_image_filter.__doc__ += "\n args are input(s) to the filter.\n\n"
    image_to_image_filter.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_to_image_filter.__doc__ += "\n"
        image_to_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_to_image_filter.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )

from itk.support import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_source(*args, **kwargs):
    """Procedural interface for ImageSource"""
    import itk

    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()


def image_source_init_docstring():
    import itk
    from itk.support import itkTemplate
    from itk.support import itkHelpers

    filter_class = itk.Ultrasound.ImageSource
    is_template = isinstance(filter_class, itkTemplate.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_source.__doc__ = filter_object.__doc__
    image_source.__doc__ += "\n args are input(s) to the filter.\n\n"
    image_source.__doc__ += "\n Available keyword arguments:\n"
    if is_template:
        image_source.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_source.__doc__ += "\n"
        image_source.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_source.__doc__ += "".join(
            [
                "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
                for item in dir(filter_object)
                if item.startswith("Set")
            ]
        )




