(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[130],{7:(e,r,t)=>{var o=t(43677),n=t(3465).point;e.exports=function(e){var r=o(e),t=(r[0]+r[2])/2,i=(r[1]+r[3])/2;return n([t,i])}},43677:(e,r,t)=>{var o=t(71594).pZ;e.exports=function(e){var r=[1/0,1/0,-1/0,-1/0];return o(e,(function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}},60720:(e,r,t)=>{var o=t(4768).getCoord,n=t(3465).radiansToDistance;e.exports=function(e,r,t){var i=Math.PI/180,a=o(e),s=o(r),u=i*(s[1]-a[1]),f=i*(s[0]-a[0]),c=i*a[1],p=i*s[1],l=Math.pow(Math.sin(u/2),2)+Math.pow(Math.sin(f/2),2)*Math.cos(c)*Math.cos(p);return n(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),t)}},22543:(e,r,t)=>{var o=t(3465).featureCollection,n=t(71594).pZ,i=t(3465).point;e.exports=function(e){var r=[];return n(e,(function(e){r.push(i(e))})),o(r)}},3465:e=>{function r(e,r){return{type:"Feature",properties:r||{},geometry:e}}e.exports.feature=r,e.exports.point=function(e,t){if(!Array.isArray(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return r({type:"Point",coordinates:e.slice()},t)},e.exports.polygon=function(e,t){if(!e)throw new Error("No coordinates passed");for(var o=0;o<e.length;o++){var n=e[o];if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<n[n.length-1].length;i++)if(n[n.length-1][i]!==n[0][i])throw new Error("First and last Position are not equivalent.")}return r({type:"Polygon",coordinates:e},t)},e.exports.lineString=function(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"LineString",coordinates:e},t)},e.exports.featureCollection=function(e){return{type:"FeatureCollection",features:e}},e.exports.multiLineString=function(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"MultiLineString",coordinates:e},t)},e.exports.multiPoint=function(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"MultiPoint",coordinates:e},t)},e.exports.multiPolygon=function(e,t){if(!e)throw new Error("No coordinates passed");return r({type:"MultiPolygon",coordinates:e},t)},e.exports.geometryCollection=function(e,t){return r({type:"GeometryCollection",geometries:e},t)};var t={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373};e.exports.radiansToDistance=function(e,r){var o=t[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e*o},e.exports.distanceToRadians=function(e,r){var o=t[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e/o},e.exports.distanceToDegrees=function(e,r){var o=t[r||"kilometers"];if(void 0===o)throw new Error("Invalid unit");return e/o*57.2958}},78576:(e,r,t)=>{var o=t(4768);function n(e,r){for(var t=!1,o=0,n=r.length-1;o<r.length;n=o++){var i=r[o][0],a=r[o][1],s=r[n][0],u=r[n][1];a>e[1]!=u>e[1]&&e[0]<(s-i)*(e[1]-a)/(u-a)+i&&(t=!t)}return t}e.exports=function(e,r){var t=o.getCoord(e),i=r.geometry.coordinates;"Polygon"===r.geometry.type&&(i=[i]);for(var a=0,s=!1;a<i.length&&!s;a++)if(n(t,i[a][0])){for(var u=!1,f=1;f<i[a].length&&!u;)n(t,i[a][f])&&(u=!0),f++;u||(s=!0)}return s}},4768:e=>{e.exports.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},e.exports.collectionOf=function(e,r,t){if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}},e.exports.featureOf=function(e,r,t){if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},e.exports.getCoord=function(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}},60130:(e,r,t)=>{var o=t(3465).featureCollection,n=t(7),i=t(60720),a=t(78576),s=t(22543);function u(e,r,t,o,n,i){if(Math.sqrt((n-t)*(n-t)+(i-o)*(i-o))===Math.sqrt((e-t)*(e-t)+(r-o)*(r-o))+Math.sqrt((n-e)*(n-e)+(i-r)*(i-r)))return!0}e.exports=function(e){"FeatureCollection"!==e.type&&("Feature"!==e.type&&(e={type:"Feature",geometry:e,properties:{}}),e=o([e]));for(var r=n(e),t=!1,f=0;!t&&f<e.features.length;){var c,p=e.features[f].geometry,l=!1;if("Point"===p.type)r.geometry.coordinates[0]===p.coordinates[0]&&r.geometry.coordinates[1]===p.coordinates[1]&&(t=!0);else if("MultiPoint"===p.type){var y=!1;for(c=0;!y&&c<p.coordinates.length;)r.geometry.coordinates[0]===p.coordinates[c][0]&&r.geometry.coordinates[1]===p.coordinates[c][1]&&(t=!0,y=!0),c++}else if("LineString"===p.type)for(c=0;!l&&c<p.coordinates.length-1;)u(r.geometry.coordinates[0],r.geometry.coordinates[1],p.coordinates[c][0],p.coordinates[c][1],p.coordinates[c+1][0],p.coordinates[c+1][1])&&(l=!0,t=!0),c++;else if("MultiLineString"===p.type)for(var d=0;d<p.coordinates.length;){l=!1,c=0;for(var g=p.coordinates[d];!l&&c<g.length-1;)u(r.geometry.coordinates[0],r.geometry.coordinates[1],g[c][0],g[c][1],g[c+1][0],g[c+1][1])&&(l=!0,t=!0),c++;d++}else"Polygon"!==p.type&&"MultiPolygon"!==p.type||a(r,{type:"Feature",geometry:p,properties:{}})&&(t=!0);f++}if(t)return r;var h,m=o([]);for(f=0;f<e.features.length;f++)m.features=m.features.concat(s(e.features[f]).features);var w=1/0;for(f=0;f<m.features.length;f++){var v=i(r,m.features[f],"miles");v<w&&(w=v,h=m.features[f])}return h}}}]);