CHANGES
=======

0.4.1
-----

* Fix ovn metadata service name in Devstack deployment
* Force failure when test execution times out
* Ensure that VM needed by the OvnController faults tests really works
* Crash controllers that don't hold an overcloud main VIP
* Try to use either docker or podman to obtain nova version
* Update pre-commit hooks versions
* Set undercloud\_ssh\_hostname on tobiko.conf
* Separate listener and pool stacks
* Update PyLint version to last valid tag for Python version >= 3.8
* Test external port using Ubuntu minimal image
* Allow to specify empty value for tripleo.undercloud\_ssh\_hostname option
* Create Tobiko Contributor Guide
* Add Ubuntu Minimal cloud image
* Unmark test\_router\_is\_scheduled\_on\_l3\_agents as flaky
* Revert "Ignore L3HA router having multiple master agents"
* Add support for modified\_since parameter to find command
* Test CentOS Nova server with external network
* Add debug logs to determine when a heat stack is deleted/created
* Fix neutron nova port notification tests to check logs on controllers
* Fix conflict with astroid python library
* Remove installation of tobiko in the doc/source/conf.py file
* Check LB "provisioning\_status" and improving Netcat Cirros HTTP stub
* [docs] Made additional updates to Tobiko documentation
* Stabilize ExternalPortTest.test\_port\_ips
* [docs] Updated quickstart guide and example conf file
* Accept external networks withouth DHCP
* Gate changes using the default faults job
* Ignore L3HA router having multiple master agents
* Fixed typo in README
* Test crash controller main VIP
* Scatter Octavia's test logic to tobiko framework
* Use tobiko 0.4.0 as default version for Downstream jobs
* Remove duplicated get\_osp\_version method

0.4.0
-----

* Add support for 'crash' reboot method
* Update pytest reports generation
* Fix test\_router\_is\_scheduled\_on\_l3\_agents test
* Mark flaky tests
* Generate legacy junit XML file
* Gate Tobiko projects running faults test cases
* Update Nova server APIs an
* Fix reboot when target host si not reachable
* Fix OVN test\_agents running on devstack environments
* Pick the first tester, undercloud or tempest node from inventory
* Fix greping of the journalctl log for neutron notification line
* Workaround Tox problem due to rarely defined PS1 variable on OSP installations
* Remove itimer utilities
* Remove last dependency from stestr
* Use pytest-cov plugin for getting coverage
* Use pytest timeout and log capturing
* Rerun test cases of the last verification step
* Test floating IP attach/detach logs
* Wait for L3 agents to be configured as master/backup
* Fix port logging test case
* Update log digging APIs
* Include all project requirements in doc/requirements.txt file
* Fix builds of the sphinx docs
* Temporarily replace compute hard reboot by soft reboot test due to BZ1890895
* Make ping asserts more patient when waiting for expected condition
* Add known ping.UnknowHostError case
* Wait until ping message is returned after migration
* Execute only one infrared job on check and gate pipelines, all of them on periodic
* Pidone: galera test - request sst upon shutdown
* Test that no router namespace is created for DVR on compute node
* Add OSP version skip decorator
* Use devstack-tobiko-gate jobs from its project template
* Add CirrOS based HTTP server stack
* Let lower-constraints job not using upper-constraints file
* Properly skip Metadata tests in deployment without containers
* Add curl command integration
* Add check requirements job
* Update requirements
* PIDONE: grastate galera tests
* tobiko IR version : set default execution version to 0.3.1 tag
* Minor code improvements
* Grep commands output using grep on remote host
* Use config drive in the vm plugged directly to the external network
* Switch to pytest test runner
* Use the new DevStack gate jobs
* Add workflow for gating tobiko changes

0.3.1
-----

* add all vm running virsh check
* Checking mac-table-size only on nodes where it is possible
* Restore DevStack functional and scenario jobs (Ubuntu)
* Pass broken jobs with Python 3.8 (Ubuntu Focal and Fedora 32)
* Skip often failing SameHostNetworkTest and DifferentHostNetworkTest scenario test cases
* Update framework before switching to pytest
* Add RedHat 8.2 server instance
* Pass OVN functional job on upstream CI
* Fix --tobiko-refspec option in IR tobiko plugin
* Copy default nameservers from external network
* Fix/refactor PortTest
* Add JournalLogDigger class to parse OpenStack services logs
* Fix test\_get\_stack
* Fix pylint problem with Python 3.9
* Change 'get\_main\_vip()' function so that it could treat both ipv4 and ipv6 addresses
* Correct some typos in test\_port.py
* Gate changes using devstack-tobiko-functional-ovn-centos job
* Gate changes using devstack-tobiko-scenario-ovn-centos job
* Update documentation
* Get IR from master branch version
* Fix OVN DB verifications from ovn\_dbs\_are\_synchronized

0.3.0
-----

* Skip test cases unless external network is available
* Drop python3.7 platform in favor of phython3.9
* Fix skip of faults OVN agents tests when there is no OVN in env
* Test opening ports on an external network
* kill all galera processes
* Increase the number of ping packages sent to nameservers
* Openstack CLI tests failed on devstack
* Add swap file to Ubuntu servers
* Reduce memory assigned to CentOS servers to 256MB
* Switch tripleo job to content provider
* Verify network agents are alive when tests end
* Skip python3 package installation on CentOS servers
* Reduce Ubuntu Server memory to 256 MB
* adding messaging node possibility
* gitignore add .idea
* Add verification of mac-table-size values
* Check OVN DBs listening on VIP (BZ1600151)
* Use tobiko host nameservers for tenant subnets
* Add functions to create and delete a network
* Add function to list remote host nameservers
* Gate changes using the scenario single-node OVN job
* Use Ubuntu Focal cloud image
* Add platform python test case for CentOS VMs
* Fix how OVN process validations filter node names
* Check and gate project using CentOS
* Add get\_keystone\_token and get\_keystone\_endpoint functions
* Add type hints to keystone package
* Fix shell execute
* Increase default connection timeout for CentOS VMs from 400 to 800 seconds
* Avoid retrying an invalid SSH key\_filename twice
* Add openstack client tests
* Add some OVN containers recovery tests
* Fix connectivity issue during external bridge recreation test
* Skip OVN tests when OVN containers do not exist
* Add OVN DBs synchronization validations
* Improve ping integration error handling
* Fix test\_ping
* Update requirements: sshtunnel>=0.2.2
* Add container configuration validations to faults tests
* Add OVN processes validations to faults tests
* Fix shell command to string method
* Refactor log files digging
* Add multinode faults OVN jobs
* Allow to specify a per-image SSH connection timeout
* Add scenario OVN jobs
* Refactor neutron agent fault tests
* Add OVN metadata and OVN controller tests to test\_neutron\_agents
* Regenerate ssh port forwardings for docker after controller reboot
* Disable centos jobs from check pipeline
* Gate projects using Ubuntu Focal
* Fix service start/stop in neutron agent tests to support OSP13
* Test nova to neutron port notification
* Confirm node is rebooted when reboot command is sent
* Fix testenv use of posargs in tox.ini
* Fix ovn-controller binary value
* Reduce test\_ping\_subnet\_gateways duration when it fails
* Check only running containers on assert\_containers\_running
* Test VM reachability when metadata agent is down
* Connect to TripleO cloud via its hypervisor host
* Add typing annotation to selection tools
* Fix neutron agents faults tests
* Get node service name by Neutron agent name
* Skip tests when neutron agents are missing
* Define neutron agent service names
* Add TOX\_PYDEV\_DEBUG env variable to run\_tests.py
* When creating a network disruption we should use DROP
* Set a proper ordering when calling iptables
* Replace podman by docker to run commands
* Wait for metadata agent status change in matadata agent test case
* Test keepalived failover and operation after l3 agent restart
* Fix find\_msg\_in\_file method to search in active log file only
* Add devstack-tobiko-\* jobs
* Remove DevStack support from tobiko repository
* Add faults test which destroys and creates physical bridges
* Update InfraRed requirements file
* Use the overcloud host-config before than the one from the global host-config
* Identify node by its hostame when SSH client is provided
* Add a timeout for workflow stages
* Fix topology discovery via proxy clients
* Clean up multiple exception handling from stack traces
* Handle SetupError exception to avoid spamming into log files
* Fix container format assignment to the right variable
* Use only IP address to SSH overcloud nodes
* Update IR patchset version
* Switch to IR Fedora job to Fedora 32
* Remove Ubuntu Bionic jobs
* Fix CirrOS image default configuration and switch to 5.1 version
* Implement Nova Server migration tools
* Refactor topology nodes discovery
* Skip functional test cases requiring Keystone credentials
* Test neutron log files rotation
* Check Neutron list agents returns empty value with OVN and OSP13
* Fix SSH client configuration
* Install python3 from correct repo with rhosp-RedHat-7.9 setups
* Add skip method for missing Keystone credentials
* Check if log files exist in containers and can be accessible from node
* Move Neutron agents health check to OpenStack tests
* Add metadata agent restart test
* Ensure Nova server status is ACTIVE/SHUTOFF before testing reboot
* Add container configuration files test
* Increase ping timeout to 5 minutes
* Pass retry limits when creating SSH connection
* Restore voting to tobiko-devstack-functional-centos-8 job
* Let tobiko generate its own SSH key
* Make pacemaker test cases skip verification lazy
* Add centos-7 support
* Ensure python-docutils package is installed
* Remove voting from failing jobs
* InstanceHa seperate from HA tests
* neutron agents healthcheck timeout 60->300
* Refactor reboot host operation
* Improve error reporting when fixture initialization from class fails
* Unbind floating IP test case from reboot host operation
* Use retry tool for shell process synchronization
* Configure CI test cases timeouts
* Allow to configure a timeout for test cases execution
* Create timer tool based on SIGALARM signal
* Fix pylint errors (raise-missing-from)
* add workflows create and check for octavia specific test scenarios
* Update time tools
* Use default timeout for SSH reconnection when executing command
* Re-connect to SSH server when connection is broken
* Check every server ID is unique and new after server creation
* Retry flaky test cases pinging inner router
* Remove duplicate exception tracebacks from test reporting
* Write traceback on failed retry attempts
* Add timestamp, level and modulename to the format for capture log
* Refactor testcase module
* Use default logging format in Tobiko logs
* Directly use \_overcloud and \_undercloud private names from topology.py
* Improve retry APIs
* Try multiple tripleo RC files for OS credentials
* make 0vercloud\_health\_check the first to run
* Use retry tool for waiting for healthy Nova services
* Create retry tools
* Create time tools
* server stack creation : leep for 20 sec , ensure no race condition with ssh
* pacemaker - increase timeout - some envs take longer to recover
* fix workflow check resources faults into a dict
* test\_servers create : wait 5s between vm creation and ssh to avoid race condition
* InstanceHA skipp ping for shutdown vms test
* assert\_all\_tripleo\_containers\_running remove clustercheck This is a w/a to unblock composable roles jobs future fix will do conditional conrainer checks based on topology nodes
* Remove -j0 option from pylint pre-commit hook
* put evac image into maintanance untill we add a logic to delete evacuable image if any failure
* cirros 0.5.1 is doesnt boot switch to 0.4
* Fix test\_network\_disruptor\_main\_vip: wait for pcs failure after disruption
* add check-resources-faults check for post upgrades/updates checks
* delete evacuable tagged image because it prevents non tagged evacuations if exists This is so that the other IHA tests won't fail
* Retry creating remote SSH process on SSHException
* Enable logging debug lines by default in infrared plugin
* Fix pre-commit hook Git urls
* increase pacemaker timeout and limit pcs output to reduce false negatives in checks
* Fix SSH forwarder cleanup
* Enable logging debug lines in devstack jobs
* Reconnect SSH client when found in broken state
* Offers some revisions to quickstart guide
* Return dummuy test case in case not in one
* update for timeouts longer in faults, reduce false negatives
* tripleo validations output and log passed validations
* pacemaker table get now with time limit
* Delete server stacks after testing server creation
* Capture Validation lib exceptions
* Add nova tox env to run nova scenario test cases
* Add test cases for nova server creation
* Allow to get current test case
* Add tools for getting ansible inventory
* Properly namespace nodes
* Fix tripleo-validations : roles not found
* unblock CI - comment out non-main vip network desruption test
* Replace tabs with spaces in linters-requirements.txt
* Use --allow-missing-config for installing pre-commit hook
* tests/faults remove duplicate hard reset all controllers
* Use pep8 venv for pylint pre-commit hook
* Use last IR version when running with Python 3.8
* Fix irrevelant files for IR jobs
* Workaround infrared setup failures
* Use InfraRed master version for RHEL 7
* Add ansible-lint pre-commit hook
* Add pylint pre-commit hook
* Add mypy pre-commit hook
* Add flake8 pre-commit hook
* Introduce pre-commit hooks for linters verifications
* Fix ansible-lint failures
* Add support for fixture\_id to stack fixtures
* Add fixture\_id parameter to allow multiple fixtures of the same class
* Cleanup ssh\_client connection before deleting stack
* Ensure heat client is available before getting stack status
* Fix test\_ifconfig
* Disable horizon service in local.conf for Vagrant
* Avoid sudo's 'secure\_path' value from affecting stack.sh/unstack.sh scripts
* Fix build of tobiko docs
* Disable tempest service in local.conf for Vagrant
* make network disruptors skipp if no fencing deployed on overcloud
* make sure all iha tests are run only if iha configured
* comment out/put network\_disruptions in maintanance , unblock testing
* Fix tobiko-devstack role
* Fix copy of local.conf (permissions escalation)
* Rename Tobiko's three nodes nodesets
* Switch to CentOS image version 8.2
* Set CentOS-8 as reference DevStack job
* Skip faults OVN tests when OVN is not used
* Declass Pandas as an extra optional requirement
* Add extra-requirements to lower-constraints tox environment
* Test IR plugin only against latest Fedora version
* Disable sibilling projects installation on CentOS 7
* Fixes minor typo in installation guide
* method addition:remove\_containers\_if\_pacemaker\_resources to not fail on pacemaker resources in assert\_equal\_container\_state
* All VM instances need to be started after computes reboot
* Set default log to non debug, currently debugging tests is very difficult I really can't figure out where the test failed and what actions tobiko did each test should be verbose enough so that new users will not spend more than 5 min in tobiko logs , to figure out what broke
* unblock testing, dont fail on assert\_containers\_state until we fix the check
* faults instance-ha tests create only 2 vms to not stress the overcloud
* Ensure stack is deleted before creating it again
* Rewrite Vagrant file using ansible and Centos 8
* Retry mechanism for check\_neutron\_agents\_health
* Update role tasks to reduce false 'changed' state
* Update .gitignore file
* Handle non-RHOSP hosts without rescueing from an error
* Add tripleo validations (post-deployment group checks) to overcloud healthchecks
* add IHA tests Change-Id: I8d2740e877c607c3b225dd3475b4abc6f3420378
* Clear cache before retrying to get containers info
* Update Dockerfile to use bindep and tox
* Update the quickstart guide
* Add validations-libs as an extra requirement
* Add lower-contraints job
* Obtain overcloud nodes know subgroups from node name
* Added skip decorator to test\_metadata\_haproxy\_during\_stop\_L3\_agent test
* restart ovn faults tests
* Add tool to install bindeps
* Fix number of columns obtained from PCS output
* remove duplicate /failing container tests
* Update Quick Start guide
* Update project README.rst file
* Update zuul irrelevant files
* Use special RHOSP vars files in tobiko-ensure-python3 role
* Delete IR workspace before importing new one
* Automaticall use Python 3.8 IR patch when required
* Add support for tags at image creation
* Add py3 prefix to Python 3 platform vars files
* Fix rhel optional repo not found and not reported as error
* add test\_sequentially\_hard\_reboot\_controllers\_recovery test
* Enable rhel-7-server-optional-rpms repo
* faults add network disruptor disruptions to main vip tests
* Enforce using compiled python release on RHEL-7 by pinning 3.7 release
* add reset\_controllers\_non\_main\_vip tests , add both testst in cloud\_disrutpions
* add a reset\_controller\_main\_vip disruptive test
* Compile Python3 on RHEL-7
* Remove python3-devel package from RHEL-7 bindeps
* Use rebased Python 3.8 IR patchset
* Create Docker files for Tobiko project
* Add Fedora 32 IR jobs (with Python 3.8)
* Disable tempfs mounting on /tmp of Fedoras
* Update Ubuntu Focal job IR patchset version
* Run IR CentOS 7 job with IR master branch
* Stop considering OpenStack upstream requirements good for InfraRed Tox environment
* Fix condition check if previous task was skipped
* Add support for Fedora 31 and Python 3.7
* Restore IR CentOS 7 support based on Python 3.6
* Move tobiko-devstack-faults-ubuntu-bionic job to periodic pipeline
* Add support for ubuntu 20.04 LTS and Python 3.8
* Allow jobs to pick arbitrary version of InfraRed
* Move TripleO jobs to periodic pipeline
* Set default git version
* Fix deploy role when no deploy-src-dir is given
* Move IR requirements file to IR plugin folder
* Remove support for Python2.7 on all upstream jobs
* Implement cached property tool
* Add pylint Tox environment
* Switch to pylint>=2.5.2
* Move CI tasks from roles to infrared\_plugin/roles
* Remove DevStack CentOS 7 jobs
* Test Tobiko against Python 3.8.3
* Test DevStack with CentOS 8
* Test Tobiko against Python 3.8.2
* Remove rendundant job tobiko-tox-py36-centos-8
* Add infrared\_plugin to ansible lints
* Switch to flake8>3.8.1
* Avoid using tobiko-deploy for TripleO CI jobs
* Avoid using tobiko-deploy for DevStack CI jobs
* Remove old IR plugin and old related CI tools
* Fix Jenkins vars inclusion
* Added --ignore-test-failures CLI flag
* Add RH subscription manager support to role testing Vagrantfile
* Refactor test execution scripts
* Add tox-infrared-centos-8 to gate jobs
* Fix pylint version requirements
* Continue running workflow steps after step failures
* Use upper-constraints file from requirements project
* Revert "Add tox-infrared-centos-8 to gate jobs"
* Add tox-infrared-centos-8 to gate jobs
* Remove python3-devel package from rhel7 bindeps
* Fix broken infrared toxenv on CentOS/RHEL-8
* Increase maximum number of SSH connection attemts to 100 to fix timeout issues
* Remove obsolete roles
* Allows to run tobiko-tox-infrared jobs from other repos than Tobiko
* Update IR plugin
* Switch to new IR plugin for TripleO jobs
* Clean-up zuul integration role
* Remove broken TripleO CI jobs
* Fix looking for ovs agent based on compute node name
* Fix faults test workflows
* Prevent installing 2.5.0 PyLint version
* Use the new ansible roles for DevStack CI jobs
* Switch to CirrOS image version 5.1
* Add way to know topology is based on containers
* Fix infrared plugin default test\_host execution
* Fix name of the Neutron L3 agent service in case of TripleO
* Remove voting from tobiko-devstack-functional-centos-7 job
* Checkout files only when not copied from src\_dir
* Use OS stable/train branch for testing with DevStack centos-7
* Increase wait\_for\_cloud\_init\_status timeout to 20 minutes
* Use test\_become flag in Tobiko ansible roles
* Set remote test directories owner user
* Move infrared plugin to infrared\_plugin/ folder
* Automatically select a test host from inventory file
* Create workflows for before and after updates/upgrades
* Test against stable/train with DevStack and CentOS 7
* Set nova keyfile only if value is given
* Change order conf files are imported
* Update tobiko-deploy role
* Add faults-neutron workflow
* Make the reset\_all\_controller\_nodes() method work with a composable control plane
* Switch to 2-node configuration for IR plugin testing
* Reduce test\_reboot\_computes\_recovery duration
* Update pre-run roles
* Add Ubuntu Bionic Infrared plugin job
* Introduce a get\_groups function openstack topology and let list\_openstack\_nodes accept group lists
* Implement test workflow steps
* Add wait\_for\_all\_instances\_status for test\_reboot\_computes\_recovery
* Add Vagrant tests for infrared plugin (CentOS 8)
* Separate roles in pre-run, run and post-run phases
* Update tobiko-deploy and tobiko-ensure-\* roles
* Update roles requiring python
* Remove tobiko-tox-infrared-ubuntu-bionic job
* Remove centos-7 unit tests jobs
* Use zuul tox job for running tox
* Verify infrared plugin actually collect output files
* Make reports with python-subunit>=1.4
* Add role to ensure bindep is installed on target host
* Add role to ensure tox is installed on target host
* Add role to ensure python3 is installed on target host
* Install git only on knwon Linux platforms
* Allow to specify python interpter used for testing IR plugin
* Test that DHCP lease is correctly served when DHCP agent is down
* add test\_hard\_reboot\_controllers\_recovery test
* Add role to ensure git is installed
* Let automate coloring in infrared environment
* Copy test result files to zull logs dir
* Separate run\_tox and make\_report tasks
* Import local infrared workspace if it exists
* Use default python for testing infrared plugin
* Help debugging tobiko-configure role with better output
* update to centos-8
* Rebase tobiko-tox-py\* jobs on top of openstack-tox-py\* ones
* Execute test cases with InfraRed plugin on CenOS and Ubuntu
* Add Neutron OVS agent faults tests
* Add Neutron L3 agent faults test cases
* Keep separed test results messages from errors
* Fix tox environemnt setup when missing binary packages
* Allow to get prefix of base python interpreter
* Reduce verbosity of make\_report script
* Remove trailing space
* Use regular tox as default command
* Spliting infrared plugin into roles
* Try connecting to undercloud-0 host to verify it exists
* Skip tests from RebootNodesTest on non TripleO based cloud
* Add support for networker nodes to assert\_ovn\_containers\_running
* Stop using system SSH config files by default
* Add missing requirement to report environment
* Get configured nova key file path relative to tobiko.conf file
* Fix has\_ipv6 property in network fixture
* speed up containers sequencial calls with cache
* add object container action support
* Add support for OSP13 to assert\_ovn\_containers\_running
* Download IR workspace from a URL before importing it
* Remove devstack-ovn jobs
* Import infrared workspace if available
* Resolve overcloud key file path relative to tobiko.conf file
* Remove fedora nodeset
* Switch to Fedora 30
* add container\_runtime\_name str var to containers.py it will contain podman/docker as deployed
* test\_cloud\_recovery.health\_checks cleanup vm\_create method implementation
* fix for : remove os-faults bug and commented ha checks
* Added OVN container verifications to test\_cloud\_recovery.py
* make use of csv files with container state checks
* Check containers after VM creation
* Fix ovn\_resource\_healthy function
* make reboot computes tests more robust and logging clearer
* start all nova instances if any, to not break containers before after test also make container state before after retryable
* Revert "Split command lines using shlex module"
* Switch from CentOS 7 image to version 8
* Add APIs to manage cloud-init on Nova servers
* Split command lines using shlex module
* Add default nameservers to IPv4 subnet
* Add Neutron dhcp agent faults test cases
* fix false : AssertionError: nova agents are unhealthy and : OvercloudProcessesException: not all overcloud processes are in running state, process nova-scheduler is not running
* Fix stack creation bug
* fix =<osp13 container /name->name
* add ability to fail tests, to pacemaker resources health check
* Revert "Fix shell command execution"
* faults add baseline overcloud health check
* unblock Downstream CI : STDERR: virtualenv.py: error: no such option: --seeder
* Add specific common tripleo container checks , and nova services, and fix podman client bug
* Normalize SSH keyfile paths before connecting
* Use default configured SSH key for cloud nodes
* Use socket.gethostname() to get local hostname
* Fix shell command execution
* Add nodes group anyway when node is unreachable
* Mark irrelevant files for tipleo jobs
* Update docker and podman functional tests
* Find an external network when no one is provided
* Remove unused integrations: os\_faults and ansible
* Write to log the error relater keystone credential failure
* Collect tobiko.conf file on CI jobs
* Allow to ignore ip command errors
* Remove faults integration documentation
* Remove Fedora based image and server stacks
* Fix Tox Infrared job
* Skip RebootHostTest because often failing
* fix stack not found bug
* Remove non voting tribleo functional test job from gating group
* tobiko ir plugin report latest patch name for debugging
* Collect tobiko.log file
* Revert "Allow to configure undercloud via ssh\_config file"
* Revert "Allow to configure undercloud via ssh\_config file"
* Allow to configure undercloud via ssh\_config file
* HA health checks add neutron agents health check
* add test all neutron agents are healthy
* unblock downstream by not erroring out during tests stages, rather report via the junit result so that if a test fails it will mark the job as yellow(test failed) and not red(automation failed)
* add tripleo containers health checks and use it in compute reboot test done refactoring, unit tests are pasing , system tests are passing
* Restore TripleO CI jobs using new Tobiko role
* Test rebooting VM with floating IP test cases
* Create reboot host operation
* Debug log file configuration step
* Remove voting from CentOS unit test jobs
* add compute reboot faults tests with added boot vm checks related bz : https://bugzilla.redhat.com/show\_bug.cgi?id=1797892
* Revert "Allow to configure undercloud via ssh\_config file"
* Create shell function to reboot an host
* Improve shell command execution verbosity
* podman client add podman access via varlink commands also fix the podman tests
* Allow to configure undercloud via ssh\_config file
* Use tobiko.conf directory as starting directory for relative paths
* Make sure Python 3 is installed before running DevStack
* Disable report files compression by default
* Allow to disable report files compression
* Fix bug executing a command after loosing SSH connectivity to host
* Override fixture context methods with setup/cleanup functions
* Add nova client functions to shutdown and activate Nova server
* Fix tools/ci/tox script when 'python' command is not available
* Disable memory\_tacker service
* Fixed devstack plugin
* Switch from peakmem\_tracker to memory\_tracker service
* Add wait\_for\_server\_status function for nova
* basic HA test : disruptive action and health checks
* Missing binary packages don't interrupt tools/ci/tox script
* Move realpath implementation tools/ci/activate
* Add Fixtures to set server group for nova instance
* Fix fetching of maximum length of VM's console output
* Fixes for podman client (client tunnel discovery, client creation and tests)
* Use "platform:rhel-8" in bindep to specify it is RHEL8
* Run unit tests with CentOS 8
* Debug Infrared role Python installation script
* Add API for defining cloud operations
* Fix tools script python warnings
* Use default unit test jobs as OpenStack Train and Ussuri
* Create Tox InfraRed upstream job
* Drop support for Python3.5
* Run unit tests with python3.6 distributed with CentOS 7
* Add tox environment to check missing binary dependencies
* Install missing dependencies on Ubuntu
* Add yum repos for installing missing packages if needed
* Install python3 packages using bindep in tox ci script
* Pass tobiko.conf changes using a dictionary
* Rename tobiko role pre/post folders
* Rename upstream CI playbooks
* Drop support for Python 2.7
* fix services polling and make it more robust
* Implement docker module unit tests
* Use tools/ci/tox script for running tests and making reports
* Edit keystone cloud\_name option
* Podman integration
* Gate project using jobs targeted for testing Tobiko (unit & functional)
* Disable non-master centos jobs
* Use bindep role to install Python3 packages
* Compile Python with missing deps and shared libs
* Use Python 3.7 for setting up DevStack on CentOS
* Relax Python2 verification in mypy linter
* Use master branch of python-subunit to generate reports
* Use /usr/local as default python prefix
* Ensure sudo can find python3 command
* Verify python and pip command works before installing them
* Run unit tests with Python 3.8
* Create Ansible role to install arbitrary Python version
* Force using python2.7 for building reports
* Skip test cases when nova scheduler hints are not respected
* Add ansible playbooks linters job
* Use bionic image as default nodeset for sigle-node devstack jobs
* Use only Python 2 for subnodes in CentOS7 DevStack jobs
* Ensure tobiko.log is writable
* Let python wrapper script choose wich default python version to use
* Use octaviaclient tagged release instead of git master branch
* By default save tobiko.log file to the same folder of tobiko.conf file
* Produce separate named report files
* Disable OVN job
* Prepare tobiko execution in tobiko role
* Fetch tobiko.log file after execution
* Update DevStack plugin
* Add simple Octavia traffic scenario
* Restore octavia to DevStack jobs
* Add train CentOS job
* Add optional user\_data option for nova servers
* Use master branch for DevStack CI deployment
* Create generic ansible Tobiko role for CI
* Temporarly disable octavia DevStack plugin
* Remove rendundant required projects from OVN Devstack job
* Create OVN based DevStack CI jobs
* Update Vagrantfile to use networking-ovn with DevStack
* add ability to get nodes processes as pandas tables(dataframes) for querying 2nd commit
* add ability to get list of nodes running pacemaker resources
* Allow to pick python version in CI tools
* Fix DevStack CI jobs
* Temporarly remove tripleo CI jobs
* Create upstream CI faults jobs
* Let have 4 Tripleo standalone jobs
* Revert "Revert "Use DevStack stable/train branch for upstream CI""
* Revert "Use DevStack stable/train branch for upstream CI"
* Allow to create SSH client using netaddr.IPAddress instance
* Update Glance client
* Update Nova client
* Update Neutron client
* Add method to format shell command results
* Create temporary files on the same directory of target file
* add ability to get list of nodes running systemctl services
* Create first tripleo-ci job
* Workaround os-fault limitation to only default (22) SSH port
* Redirect localhost port 22 to Vagrant VM
* unset vms quota for tobiko tests
* Fix os-faults config file generation
* Use DevStack stable branch in Vagrantfile
* Use DevStack stable/train branch for upstream CI
* Cleanup base octavia job
* Set up Octavia on all DevStack functional and scenario jobs
* Add DevStack CI job for CentOS with Octavia
* Remove four nodes job
* Pass mypy type verifications
* Add mypy CI job
* Remove DevStack CI disable jobs
* Fix syntax Error in functional test
* Remove tobiko-devstack-scenario-fedora-latest from check list
* Use tobiko gather\_details function in fixtures library
* Update ping wrapper
* Remove unreliable test cases
* Add support for IPv6 for inet utils ping command
* Allow to execute commands from inside a network namespace
* Add Octavia do DevStack standalone vagrant image
* Increase glance image polling intervall from 1 to 5 seconds
* Add test cases to list docker containers on cloud nodes
* Add docker client module
* When image is None, image ID has to be reported as None
* Update octavia client
* Fix handling of getaddrinfo format errors
* Fix handling of MultipleException
* Ignore tobiko\_result.\* files
* Test ports with L3HA and CentOS/Ubuntu nova servers
* Add support for remote unix socket forwarding
* Skip test case when there are not enogth L3 agents
* Create new tobiko.http package
* Fix test\_list\_ip\_addresses\_with\_host\_scope test case
* Implement SSH port forwarding on top of sshtunnel library
* Implement HTTP over SSH tunneling
* Use CentOS 7 in Vagrant file
* Fix support for multiple SSH key files
* Pass unit tests when cloud name is configured
* Add tobiko-devstack-scenario-centos-7-train upstream CI job
* Improve the use of tobiko framework in test\_routers
* Update Neutron port scenario test case
* Fix nova hipervisor API test case
* Add node selection by hostname
* List namespace IPs using the new ip command wrapper
* Remove test cases executing SSH client binary
* Handle timeout problems in execute\_process function
* Add port test case for pinging gateway IPs
* Workaround paramiko timeout problem
* Fix network stack gateway properties

0.2.0
-----

* Add stack properties to get network gateway IPs
* Use tobiko selection API for filtering L3 router agents
* Update topology API
* Remove \*.test\_ssh\_command test cases
* Relax low coverage trealdshold
* Remove \*.test\_ssh\_from\_cli test cases
* Allow to select IP address by scope
* List namespaces and namespace IPs on cloud nodes
* Add wrapper for IP command
* Add test to verify VM can ping all gateway route ports
* Add tests for routers
* Create test case for Neutron ports
* Install ip command on RH's distros
* Add bindep file
* Generate os-faults.yaml using new topology API
* Fix Openstack topology discovery for Python 2
* Create scenario test case for cloud nodes
* Allow to get host\_config and connect parameters before connecting to SSH server
* Add controller topology nodes group
* Add wrapper for ipconfig shell command
* Fix wrapper for 'hostname' shell command
* Add support for proxy\_client parameter to ssh.ssh\_client function
* Fix ping fixed delay at the end of command execution
* Update tripleo topology driver
* Implement TripleO topology driver
* Create OpenStack topology API to interact with cloud nodes
* Copy the build ssh key to authorized\_keys on all hosts for stack
* Add functions to look for port IP addresses
* Wraps 'hostname' command
* Fix class constructor
* Fix import order
* Remove files added accidentally to the repo
* Check pacemaker resources
* Fix os-fault CLI command executor
* Add report files to Git ignore files
* Configure upstream DevStack CI jobs with Octavia
* Add support for SSH proxy in os-faults integration
* Safely generate os-faults file to temporary files
* Disable colorized log files on DevStack CI jobs
* Fix clouad.yaml support debug message
* Add support for clouds.yaml file in DevStack plugin
* use subunit2junitxml for junit-xml report otherwise jenkisn can't read the results
* Handle multiple ping commands dialects
* collect junit xml results
* Debug local process brute termination
* Use OpenStack default config files and directories
* Workaround SSH command timeout problems
* Add ping timeout functional test case
* Generate subunit results XML file report
* Fixes: ansible shell non needed quotes :
* Write to log the begin and the end of every test case
* ir plugin conditional python3 / 2 :
* Skip functional test case that is producing undebuggable failures
* add report collection for downstream jobs
* Update get\_exit\_status for shell process classes
* Set path for tobiko logs in devstack tobiko jobs
* Execute single node upstream CI job checks
* Refactor OS-faults integration
* Enable Neutron L3 agent on sub-nodes on upstream CI
* Wait for server console output if empty
* Debug ping command output
* Fix remote process get\_exit\_status method
* Remove RTD Pip requirements file
* Fix ping error command handler when unknow host error is received
* Disable often failing test cases
* Update tox.ini style
* Add single node devstack upstream CI job
* Enable PEP8 extensions
* Enable ignored PEP8 verifications
* Fix centos 7 DevStack CI job
* Fix shell process execution:
* Fix docs building requirements
* Check stack status before fetching Nova server details
* Fix Nova quota instances for upstream CI
* Prevent unestable openstack-three-node-centos-7 job from voting
* Use the IPv6 documentation prefix as the default cidr
* Fix code style for passing PEP8 verifications
* Don't threat as an error when OS\_CLOUD env variable is not defined
* Reduce custom MTU value because of restrictions
* Make clouds file support configurable
* Update OpenStack clouds file support
* Add Fedora image and flavor fixtures
* Enable DevStack os-fault plugin
* Add SSH connectivity to overcloud nodes
* Change server console output format to JSON
* Add support for clouds config file
* Use fedora-29 instead of fedora-28
* Update server stack details dumping
* Add functions to get overcloud nodes IP addresses
* Add functions to list overcloud nodes
* Add functions to connect to undercloud APIs
* Update tripleo configuration
* Use tobiko.makedirs instead of os.makedirs to avoid concurrency problems
* Allow to gather detail content from a json object
* Increment SSH connection tries intevals
* Debug and fix execution loop in comunicate process
* Ignore encoding errors
* Add CentOS image and flavor fixtures
* Check hostname without domain name
* Add VM to VM L3HA connectivity test cases
* Re-enable functional test case for Ubuntu based VMs
* Fix test case for getting server console output from server stack
* Fix typo in NeutronClientManager class name
* Fixed incorrect default directory mode
* Take out overcloud stuff from undercloud module
* Fix duplicated details gathering
* Add functions to list or find nova server instances
* Create fixture to translate OS\_\* env variables to Keystone credentials
* Add functions to fetch OS\_\* env variables from stackrc and overcloudrc files
* Add Nova server console output as test failure detail
* Add functions to ssh connect to undercloud-0 as stack user
* Add API call to capture Nova servers console output
* Add captured log lines to test case details
* Patch HTTP proxy environ variable in unit tests
* Export no\_proxy option always when it's set in config file
* Add functional test case for undercloud SSH connection params
* Rename skip\_until to skip\_unless
* Fix default username and port for SSH client connection
* Create unittest for tripleo tobiko.conf section
* Create TripleO section in tobiko.conf
* Delay tobiko config initialization
* Fix logging line in tobiko.config
* Add possibility to prevent Tobiko from creating test image
* Update VM to VM conectivity test case
* Skip different host test if there are less then two hypervisors
* Test VM to VM connectivity
* Remove old resource searching modules
* Update Glance image search
* Update Keystone resource search
* Update Neutron resource search
* Update ipervisors selection by attribute
* Fix concurrent SSH key file creation
* Update neutron agent listing
* Add test floating IP test case with HA router
* Skip Ubuntu server test case because of flaky failures
* Add toools for listing hypervisors and skiping when missing some
* Add function to select objects by attribute values
* Update and test nova\_client function
* Add API to list neutron agents and skipp tests if missing some
* Look for tobiko.conf into current direcory and its parents
* Fix build autogenerated config files doc on RTD
* Switch from py36 to py37 as default python3 interpreter version
* Add autogenerated tobiko.conf example file
* Remove publishing to docs.openstack.org
* Add possibility to prevent Tobiko from creating test resources
* Add requirements file for RTD builds
* Automatically create SSH key file if it doesn't exists
* Update documentation after some required resources creation has been automated
* Remove unused default nova flavor
* Add tobiko.conf to .gitignore file
* Add glance client to requirements file
* Adds octavia client integration
* Add find\_service\_endpoint keystone function
* Fix typo in keystone client integration
* Separate keystone monkey patching from base openstack test case
* Create base mixin class for patching in unit tests from test cases and fixtures
* Allow to override fixture initialization in FixtureManager class
* Autogenerate config options and sample config file
* Add Ubuntu image and flavor fixtures
* Allow skipping in case service is not available
* Add Keystone client API
* Fix default tobiko configuration file location
* Move default server fixture to new cirros module
* Add support for XZ image decompression
* Fix SSH connectivity issues
* Increase RAM to 128Mb for CirrOS based VMs
* Check code complexity
* Reduce code complexity of tobiko/tests/unit/cmd/test\_fixture.py
* Reduce shell process 'communicate' method code complexity
* Reduce ping code complexity
* Fix local command execution
* Implement glance image files decompression (zip, gz, bz2)
* Fix check\_image\_status function
* Handle Glance image concurrent creation
* Fix find\_resources functions
* Remove configuration of flavor in InfraRed plugin
* Fix flavors concurrent creation
* List stack resources in HeatStackFixture
* Update documentation after adding fixture to create flavors
* Remove configuration of flavor in DevStack plugin
* Create a loop for defining image configuration option
* Add fixture to create flavor for CirrOS images
* Fix CirrOS image fixture configuration (URL, container\_format, disk\_format)
* Fix shell package
* Restructure shell package
* Fix DevStack jobs: mark files as irrelevant
* Let KeystoneCredentials.to\_dict() method to return a dictionary
* Add tool to print out yaml file to js format
* Bug fix for : https://trello.com/c/Jjij9ktA/131-fix-tox-not-found-in-downstream-job
* Use CirrosGlanceImageFixture to fetch CirrOS image on Infrared
* Add command to print out keystone credentials used by Tobiko
* Increase default ping timeout from 60 to 90 seconds
* Update documentation after cirros image creation has been automated
* Use CirrosGlanceImageFixture to fetch CirrOS image on DevStack
* Implement Glance image management (setup and cleanup)
* Create wrapper to sys.exc\_info
* fix for typo when: test.refsec for https://trello.com/c/NOgGkEXH/123-add-infrared-plugin-option-gerritchangeid-to-select-specific-patch-for-ir-plugin
* Recursively list required fixtures
* Add tobiko-fixture CLI wrapper to CI tools
* Update CI tools with an openstack wrapper
* Use stack fixture name as seed for random CIDR generation
* allow specifying custom tobiko gerrit refsec for checking out and testing a specific patch
* changes missed for: https://review.opendev.org/#/c/665966/13
* - allow rerunning of infrared tobiko configure tasks - also set external net name according to osp version - fix the string bug when using multiple words with --tests : http://pastebin.test.redhat.com/773150 Change-Id: I1d217f179be13498bb5f21b777d39636292da835
* Generate random subnet CIDRs
* Skip test cases for broken CIDR subnet assignation
* Restore execution of FloatingIpWithMtuWritableTest
* Use CirrosImageFixture in existing stacks
* Add package for OpenStack Glance client
* Fix tests to check network network stack subnet gateway ips
* Add support for dynamic parameters allocation in Heat stacks
* Update Neutron Client
* Update OpenStack clients to improve 'lazyness'
* Improve keystone client 'lazyness'
* Add check valid type function
* Add reset fixture function
* Use NetworkWithNetMtuWriteStackFixture for testing net-mtu-write extension
* Improve neutron client integration
* Add n-api-meta and q-agt services to DevStack subnodes
* Rename fixture: NetworkWithNetMtuWriteStackFixture -> NetworkWithNetMtuWriteStackFixture
* Use FloatingIpServerStackFixture in test\_floating\_ip
* Use connect SSH client method to wait for networking connectivity
* Update fixtures for creating networks
* Create functional test case for NetworkStackFixture
* Add basic ssh connection test cases
* Remove test case properties
* Rename "floating\_ip\_stack" attribute name as "stack"
* Update test\_floating\_ip docstrings
* Get stack otputs direclty from stack attribures
* Add support for net-mtu-write to NetworkStackFixture
* Remove .outputs reference when not needed
* Optimize getting stack outputs
* Let get\_fixture\_name skip calling \_\_getattr\_\_ method in shared fixtures
* Update heat stack template and outputs
* Try to fix failing RTD web hook
* Move security group stack fixture to shared package
* Verify shared stack hostname
* Use shared floating ip server stack in test\_floating\_ip
* Update shared fixture classes

0.1.1
-----

* Configure documentation upstream CI jobs
* Update tobiko documentation page URL
* Fix test\_ssh after Include directive is being ignored
* Implement async shell result handling
* Refine tobiko faults
* Update irrilevant files for Devstack CI jobs
* Fix keystone credentials

0.1.0
-----

* Fix : /bin/sh: line 1: wget: command not found
* Use NovaKeyPairFixture in neutron scenario test cases
* Create reusable Heat staks
* Add info about Heat in Devstack
* Disable SSH agent formarding by default
* Update SSH client integration
* Test SSH connectivity via floating IP
* Update SSH client integration
* Compare port security groups as sets
* Cleanup zuul configuration
* Add compute host service to single-node functional job
* Run all scenario test cases
* Automatically select python version on scenario and fucntional tests
* Update CI job irrelevant files
* Update docs requirements and fix link
* Pass to default python for static analisys tests
* Pass statical analisys wiht Python2
* Rename package: tobiko.shell.paramiko -> tobiko.shell.ssh
* Rename package: tobiko.tests -> tobiko.tests.unit
* Override fixture manager in every unit test
* Add tox environment to generate HTML test case reports
* Fix SSH connection procedure when server instance is booting
* Add fixture\_property decorator
* Update Paramiko integration
* Reduce fixture managing verbosity
* Add paramiko SSH client integration
* Add infrared plugin to tobiko
* Fix tobiko-fixture subcommand
* Update requirements after ansible 2.8 release
* Update DevStack plugin after Keystone auth params improvement
* Improve KeyStone credentials parameter handling
* Fix ping when no stdout is given
* Update project goals in README.rst file
* Sort Zuul project templates and jobs by name
* Document how to configure Tobiko and run scenario test cases
* Fix requirements and use ReadTheDocs HTML documentation theme
* Create Nova key pair with random name
* Addition of (nova ssh) key\_pair\_fixture with cmdline,heat template, and a stacks fixture class to be used in test\_floating\_ip scenarios
* Clarify README.rst, remove duplication in docs/index.rst
* Add missing copyrigths
* Refine and add docstrings to fixture module
* Refactor exceptions message formatting on top of format method
* Update README file
* Add quick start guide to RST documentation
* Document and refine scenario tests
* Create docs job and environment
* Restore voting flag to CentOS 7 CI job
* Add copypastable quick start section
* Use CI pipelines from upstream project templates
* Add PyPi pubblication CI jobs
* Add devstack functional job
* Move shell test cases to functional package
* Add cover CI job and tox env
* Let run test cases of the same class by the same parallel executor
* Add Jinja2 to requirements file
* Skip FlatingIpWithMtuWritableTest when net-mtu-writable is not available
* Remove neutron-requirements.txt file
* Handle "No route to host" ping error message
* Refactor tox.ini to match OpenStack Project Testing Interface
* Call again setup\_fixture and cleanup\_fixture after they fails
* Skip test cases by setUp method instead of setUpClass method
* Update README.rst after OpenDev Migration Patch
* OpenDev Migration Patch
* Re-assign voting flag to Fedora 28 job
* Revert "Enable voting to CentOS 7 jobs (Rocky and trunk)"
* Refactor fixtures test cases
* Refactor test\_floating\_ip using the new required\_fixture\_setup function
* Enable voting to CentOS 7 jobs (Rocky and trunk)
* Modify quick-start doc
* Refactor required fixtures listing
* Remove "constants" module
* Remove stack manager class
* Remove duplicate method
* Add required fixtures to tobiko-fixture list command
* Test net-mtu-writable networking API extension
* Allow skipping test cases when missing networking extensions
* Allow to decorate for skipping fixtures or test case classes
* Make setup\_stack aware of Heat concurrency issue
* Check it gets something from stderr before handling ping errors
* Remove voting from Fedora 28 and CentOS 7 jobs
* Temporarly remove vote to CentOS stable branches
* Allow pylint to execute paralled processes to speedup execution
* Replace tobiko.common.utils.network with tobiko.shell.ping
* Re-enable voting to Fedora-28 job and add stable branches CentOS jobs
* Implement ping command wrapper
* Create base tool to execute shell commands
* Move tobiko.common.managers.fixture to tobiko.common package
* Import base exceptions from main tobiko module
* Update requrements files
* Substitude class attribute 'parameters' dict to an easier to read individual class attributes
* Update Ubuntu version in Vagrantfile
* Disable dns-integration in Neutron in Fedora job
* Import base exception from tobiko package
* Add Tobiko credentials to devstack plugin
* Add reno for release notes management
* Test sending oversized ICMP packages over floating IP
* Remove old test cases based on stack manager classs
* Remove commands test cases
* Rewrite floating IP test case
* Create CentOS Neutron job
* Rename tobiko.openstack.nova.client module
* Rename tobiko.openstack.neutron.client module
* Rename tobiko.openstack.keystone modules
* Rename tobiko.openstack.heat modules
* Adding an installation guide for Tobiko
* Disable voting for Neutron Fedora job
* Fix fleaky failures on Python 2.7
* Remove ClientManager class
* Create Heat stack fixture
* Create Heat template loader
* Rename tobiko.conf options and split openstack config module
* Addition of verbose / quiet options to tobiko cmd
* Add tobiko-neutron job based on Fedora 28 images
* Use only pep8, pylint, py36 and py27 as default tox envs
* get\_fixture with fixture instance return instance itself
* Create OpenStack clients using new tobiko.openstack package
* Disables Swift on tobiko-devstack job
* Replace openstack.org git:// URLs with https://
* Add fixture to create nova client
* Add install command to IR plugin
* Add fixture to create neutron client
* Check actual client/session instance classes
* Create fixture for creating heat client
* Implement base classes for Openstack clients
* Fix get\_keystone\_session
* Remove tempest.conf integration
* Make sure default credentials exists in openstack unit tests
* Add tobiko-fault command
* Add licence type to cryptography extra requirement
* Initialize Keystone session using the new keystone package
* Create Keystone session manager class
* Create Keystone session fixture class
* Get default credentials using new keystone package
* Patch default credentials when executing command unit tests
* Fix typing error
* Create fixtures for default Keystone credentials
* Make Heat and Neutron clients creation lazy (just-in-time)
* Rename "identity" section as "keystone" in tobiko.conf
* Create model class to store Keystone credentials
* [Devstack] Use devstack's install\_python3 function
* Get parsed test results in tobiko-devstack job
* Reduce logging verbosity in fixture manager
* Patch "http" section in HTTP proxy configuration test case
* Write to log undefined variables and options
* Use openstack-three-node-bionic nodeset in tobiko devstack job
* Move HTTP proxy support behind a fixture. Make it more reliable
* Move tobiko test config to new tobiko.openstack package
* Fix return type for cleanUp override method
* Implement get method on SharedFixture class to shorcut get\_fixture method
* Refactor fixture manager test cases
* Make shared fixture class smarter to use
* Enable services according to DevStack multinode configuration
* Restrict n-cpu service to subnodes
* Move HEAT from subnodes to controller
* Add compute2 to subnodes and peers groups
* Implement "help" subcommand and handle setup/cleanup errors
* Implement "setup" and "cleanup" fixture sub-commands
* Implement "tobiko fixture list" subcommand
* Parse additional stestr paramters
* Start implementing tobiko-fixture command
* Implement shared fixture base class
* Use mock library to verify setUp and cleanUp are called
* Rebase fixture management on top fo fixtures library
* Capture Python warnings
* Discover test case method dependencies using load\_object function
* Add passenv vars to tox neutron virutalenv to allow connecting to OS
* Remove Nova from controller node
* Use multinode configuration for DevStack CI jobs
* Add Nova client
* Disable "unsafe" os-fault operation (for the second time)
* Remove dependency from crayons library
* Revert "Disable "unsafe" os-fault operation."
* Add Tobiko run command
* Implement load\_module function
* Limit max default concurrency for tox jobs
* InfraRed Integration Skeleton
* Resolve stack outputs when required
* Remove load\_modules method
* Add object loader
* Disable "unsafe" os-fault operation
* Add support for faults
* Allow disabling tempest integration
* Create method to load test case modules
* Create method to list test case IDs unsing stestr
* Create abstract fixture manager
* Improve stack error reporting
* Add licence type into requirements files
* Update project requirements
* Vagrantfile: configure to pass neutron test cases
* Vagrant: syncronize resolf.conf and Tobiko files
* Pass options from local.conf ot tobiko.conf
* Expand floating allocation pool
* Enable heat services
* Disable devstack job for gate trigger
* Execute existing neutron tests on upstream CI
* Allow to run playbooks in delete mode
* Add method to Ansible manager to run playbooks
* Prepare devstack environment for executing tox -e neutron command
* Create Vagrantfile for manual testing via DevStack
* Ignore log files
* Fix environment configuration options retrieval
* Execute unittest with py37 tox env in upstream CI
* Fix unit tests when checking for os.walk calls
* Add password config option
* Read OS credentials from tobiko.conf
* Add Ansible manager
* Configure DevStack job
* Modify some simple error
* Refactor test\_mtu test case after base scenario test case changed
* Recreate stacks before executing scenario tests
* Refactor scenario test case to create template in setUpClass method
* Rebase list command unit test on top of base command unit test
* Add wait flag to delete command
* Add wait flag to create command
* Move CREATE\_COMPLETE constant to stack.py
* Write log messages to STDERR in tobiko commands
* Add devstack Zuul job
* Add  openstack-discuss
* Document proposed Tobiko workflow in a short quick start guide
* Fix doble writes of logging messges to STDERR when using stderr
* Use tobiko/tests as test\_path discover directory for stestr
* Split tox environments requirements files
* Improve ping command tracing
* Use Python3 for running neutron tests
* Improve ping utils
* Create test case stack (self.stack) from setUp base class method
* create\_stack and wait\_for\_stack\_status return get\_stack result
* Check for stack status before getting outputs
* Check ip\_address in ping\_ip\_address function
* Write log messages to STDERR by default and silence tempest DEBUG messages
* Fix ping shell when not SSH proxy is given
* Run zuul jobs for pylint, py35 and py27 tox environments
* Split tox environments (pep8, pylint, py27, py35 and neutron)
* Add Ansible playbooks directory and first playbook
* Review pylint violation warning adn fix setup\_tobiko\_config function
* Remove MissingTemplateException
* Add pylint static analysis test
* Pass pylint test with networking scenario tests
* Pass pylint test with unit tests
* Remove unused process utils
* Fix stack manager exception handling and pass pylint
* Refactor base exception
* Refactor config management for passing pylint
* Use logger lazy formatting
* Make sure absolute\_import is active in all modules
* Remove copyrigth notices from empty \_\_init\_\_.py files
* Get code coverage when running test cases
* Remote unused module "plugin"
* Remote duplicate stack module
* Remove duplicate module net\_utils
* Correct tobiko-list command args patching in test case
* Use sys.stdout.write to write out command output
* Fix comment in test\_delete
* Delete stack by name and assume no stacks means all stacks
* Allow calling tobiko-create without stack
* Fix create command and create test case for it
* Fix base command and create test case
* Fix or skip test cases after framework refactory
* Udate client allocation after client manager refactory
* Allow to ping from a remote proxy by configuring a shell command
* Take default config parameters from tobiko.conf and tempest.conf
* Get credentials from environ and lazly allocate clients
* Set base test class default attributes at class level
* Fix dummy ping assert command bug when should succeed is False
* Get config options from environment first, then tobiko.conf, then tempest.conf
* Split framework dependencies from test dependencies
* Add list CLI util
* Add MTU tests
* Add security groups tests
* Move to template per test class
* [Clients] Add support for env variables
* Add a cleanup utility
* Add a utility for setting up resources
* Add network manager
* Add additional instance to the default template
* Allow test classes not using the default stack
* Use class name as identifier for background ping
* Clean tests and move code to framework
* Create background ping helpers
* Add continuous ping tests
* Share stack across tests
* Update clients code to support v3 auth
* Use image from tempest configuration
* Add tobiko tempest to gate queue
* Add CI jobs
* Create tox.ini file
* Add files required for making this project a tempest plugin
* Add common module for handling clients
* Add common stack methods
* Add heat template for creating the stack
* Add two tests for testing instance connectivity
* Add initial structure
* Add minimal jobs file
* Added .gitreview
