[tool:pytest]
norecursedirs = 
	.git
	dist
	build
addopts = 
	--strict
	--doctest-modules
	--durations=0
	--color=yes

[coverage:run]
parallel = True
concurrency = thread

[coverage:report]
exclude_lines = 
	pragma: no-cover
	pass
	if __name__ == .__main__.:
omit = 
	pl_bolts/datamodules/*_datamodule.py
	pl_bolts/datamodules/*_dataset.py

[flake8]
max-line-length = 120
exclude = .tox,*.egg,build,temp
select = E,W,F
doctests = True
verbose = 2
format = pylint
ignore = 
	E231  # Ignore "Missing whitespace after ',', ';', or ':'"
	E731  # Ignore "Do not assign a lambda expression, use a def"
	W503  # Ignore "Line break occurred before a binary operator"
	W504  # Ignore "Line break occurred after a binary operator"
	W605  # Ignore "Invalid escape sequence 'x'"

[yapf]
based_on_style = pep8
spaces_before_comment = 2
split_before_logical_operator = true
split_before_arithmetic_operator = true
column_limit = 120
coalesce_brackets = true
dedent_closing_brackets = true
allow_split_before_dict_value = false
blank_line_before_nested_class_or_def = true
no_spaces_around_selected_binary_operators = false

[check-manifest]
ignore = 
	*.yml
	.github
	.github/*
	.circleci

[metadata]
license_file = LICENSE
description-file = README.md

[isort]
known_first_party = 
	pl_bolts
	tests
	notebooks
line_length = 120
order_by_type = False
multi_line_output = 3
include_trailing_comma = True

[mypy]
files = pl_bolts, tests
pretty = True
disallow_untyped_defs = True
ignore_missing_imports = True
show_error_codes = True
warn_redundant_casts = True
warn_unused_configs = True

[mypy-pl_bolts.datasets.*]
ignore_errors = True

[mypy-pl_bolts.datamodules]
ignore_errors = True

[mypy-pl_bolts.datamodules.experience_source]
ignore_errors = True

[mypy-pl_bolts.datamodules.sklearn_datamodule]
ignore_errors = True

[mypy-pl_bolts.datamodules.vocdetection_datamodule]
ignore_errors = True

[mypy-pl_bolts.losses.*]
ignore_errors = True

[mypy-pl_bolts.metrics.*]
ignore_errors = True

[mypy-pl_bolts.models.*]
ignore_errors = True

[mypy-pl_bolts.models.autoencoders.*]
ignore_errors = True

[mypy-pl_bolts.models.detection.*]
ignore_errors = True

[mypy-pl_bolts.models.gans.*]
ignore_errors = True

[mypy-pl_bolts.models.regression.*]
ignore_errors = True

[mypy-pl_bolts.models.rl.*]
ignore_errors = True

[mypy-pl_bolts.models.self_supervised.*]
ignore_errors = True

[mypy-pl_bolts.models.vision.*]
ignore_errors = True

[mypy-pl_bolts.optimizers.*]
ignore_errors = True

[mypy-pl_bolts.transforms.*]
ignore_errors = True

[mypy-tests.*]
ignore_errors = True

[egg_info]
tag_build = 
tag_date = 0

