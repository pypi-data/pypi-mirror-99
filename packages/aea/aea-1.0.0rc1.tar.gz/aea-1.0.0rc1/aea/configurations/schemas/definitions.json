{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Definitions",
  "type": "object",
  "additionalProperties": false,
  "definitions": {
    "dependencies": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9._-]*[A-Za-z0-9])$": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "index": {
              "type": "string",
              "pattern": "^http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$"
            },
            "git": {
              "type": "string",
              "pattern": "^http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$"
            },
            "ref": {
              "type": "string",
              "pattern": "^[A-Za-z0-9/\\.\\-_]+$"
            },
            "version": {
              "$ref": "#/definitions/version_specifiers"
            }
          }
        }
      }
    },
    "resource_name": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]{0,127}$"
    },
    "component_type": {
      "type": "string",
      "enum": ["protocol", "connection", "contract", "skill"]
    },
    "private_key_path": {
      "type": "string"
    },
    "contract_interface_path": {
      "type": "string"
    },
    "license": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "ledger_api": {
      "type": "object"
    },
    "author": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]{0,127}$"
    },
    "package_version": {
      "$ref": "definitions.json#/definitions/semantic_version"
    },
    "semantic_version": {
      "type": "string",
      "description": "A semantic version number. See https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
    },
    "pep440_version": {
      "type": "string",
      "description": "Version number that matches PEP 440 version schemes. Differently from 'version_specifiers', this type matches only one version number, without comparison operators. See: https://www.python.org/dev/peps/pep-0440/#examples-of-compliant-version-schemes",
      "pattern": "^(([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?)(, *(( *(~=|==|>=|<=|!=|<|>) *)([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?))*$"
    },
    "fingerprint": {
      "type": "object"
    },
    "public_id": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_]{0,127}/[a-zA-Z_][a-zA-Z0-9_]{0,127}:(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
    },
    "version_specifiers": {
      "type": "string",
      "description": "A comma-separated list of PEP 440 version specifiers. See https://www.python.org/dev/peps/pep-0440/#version-specifiers",
      "pattern": "^(( *(~=|==|>=|<=|!=|<|>) *)([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?)(, *(( *(~=|==|>=|<=|!=|<|>) *)([1-9][0-9]*!)?(0|[1-9][0-9]*)(\\.(0|[1-9][0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\\.post(0|[1-9][0-9]*))?(\\.dev(0|[1-9][0-9]*))?))*$"
    },
    "aea_version": {
      "type": "string",
      "description": "The version of AEA framework to use. It can be either a list of version specifiers (e.g. >0.2.0,<=0.2.3), or just a version number interpreted with the equality operator (e.g. 0.2.0, interpreted as ==0.2.0) (according to PEP 440).",
      "oneOf": [
        {"$ref":  "#/definitions/version_specifiers"},
        {"$ref":  "#/definitions/pep440_version"}
      ]
    },
    "class_name": {
      "type": "string",
      "description": "The class name of a skill component.",
      "pattern": "^[A-Za-z_][A-Za-z0-9_]{0,127}$"
    },
    "fingerprint_ignore_patterns": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "definitions.json#/definitions/ignore_pattern"
      }
    },
    "build_entrypoint": {
      "type": "string"
    },
    "build_directory": {
      "type": "string"
    },
    "ledger_id": {
      "type": "string",
      "pattern": "^[A-Za-z_][A-Za-z0-9_]{0,127}$"
    },
    "ignore_pattern": {
      "type": "string"
    },
    "max_reactions": {
      "type": ["integer", "null"],
      "minimum": 1
    },
    "period": {
      "type": ["number", "null"],
      "minimum": 0,
      "exclusiveMinimum": true
    },
    "execution_timeout": {
      "type": ["number", "null"],
      "minimum": 0
    },
    "skill_exception_policy": {
      "type": "string",
      "enum": ["propagate", "just_log", "stop_and_exit"]
    },
    "connection_exception_policy": {
      "type": "string",
      "enum": ["propagate", "just_log", "stop_and_exit"]
    },
    "loop_mode": {
      "type": "string",
      "enum": ["async", "sync"]
    },
    "runtime_mode": {
      "type": "string",
      "enum": ["async", "threaded"]
    },
    "task_manager_mode": {
      "type": "string",
      "enum": ["threaded"]
    },
    "storage_uri": {
      "type": "string"
    },
    "keep_terminal_state_dialogues": {
      "type": "boolean"
    },
    "logging_config": {
    	"type": "object",
    	"additionalProperties": true,
        "properties": {
        	"disable_existing_loggers": {
              "type": ["boolean", "null"]
            },
            "version": {
              "type": "number"
            },
            "handlers": {"type": "object"},
            "formatters": {"type": "object"},
            "loggers": {"type": "object"}
        }
    },
    "framework_handler": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dotted_path",
        "file_path",
        "config"
      ],
      "properties": {
        "dotted_path": {
          "type": "string"
        },
        "file_path": {
          "type": ["string", "null"]
        },
        "config": {"type": "object"}
      }
    },
    "cert_requests": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "definitions.json#/definitions/cert_request"
      }
    },
    "cert_request": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "public_key",
        "identifier",
        "ledger_id",
        "not_before",
        "not_after",
        "save_path"
      ],
      "properties": {
        "public_key": {
          "type": "string"
        },
        "identifier": {
          "$ref": "definitions.json#/definitions/resource_name"
        },
        "ledger_id": {
          "$ref": "definitions.json#/definitions/ledger_id"
        },
        "not_before": {
          "type": "string"
        },
        "not_after": {
          "type": "string"
        },
        "message_format": {
          "type": "string"
        },
        "save_path": {
          "type": "string"
        }
      }
    }
  }
}
