"""Initial Shema

Revision ID: 22d6bbf0a926
Revises: 
Create Date: 2020-11-19 10:07:26.718334

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "22d6bbf0a926"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attribute_value",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "observation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("key_indices", sa.PickleType(), nullable=True),
        sa.Column("data_indices", sa.PickleType(), nullable=True),
        sa.Column("values", sa.PickleType(), nullable=True),
        sa.Column("errors", sa.PickleType(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="uq_observation_name"),
    )
    op.create_table(
        "parameter_prior",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group", sa.String(), nullable=True),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("function", sa.String(), nullable=True),
        sa.Column("parameter_names", sa.PickleType(), nullable=True),
        sa.Column("parameter_values", sa.PickleType(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="uq_project_name"),
    )
    op.create_table(
        "ensemble",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column(
            "time_created",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "name", "time_created", name="uq_ensemble_name_time_created"
        ),
    )
    op.create_table(
        "observation_attribute",
        sa.Column("observation_id", sa.Integer(), nullable=False),
        sa.Column("attribute", sa.String(), nullable=True),
        sa.Column("value_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["observation_id"],
            ["observation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["value_id"],
            ["attribute_value.id"],
        ),
        sa.PrimaryKeyConstraint("observation_id", "value_id"),
    )
    op.create_table(
        "parameter_definition",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("group", sa.String(), nullable=False),
        sa.Column("ensemble_id", sa.Integer(), nullable=False),
        sa.Column("prior_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ensemble_id"],
            ["ensemble.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prior_id"],
            ["parameter_prior.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "name",
            "group",
            "ensemble_id",
            name="uq_parameter_definition_name_group_ensemble_id",
        ),
    )
    op.create_table(
        "prior_ensemble_association_table",
        sa.Column("prior_id", sa.String(), nullable=True),
        sa.Column("ensemble_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ensemble_id"],
            ["ensemble.id"],
        ),
        sa.ForeignKeyConstraint(
            ["prior_id"],
            ["parameter_prior.id"],
        ),
    )
    op.create_table(
        "realization",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("ensemble_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ensemble_id"],
            ["ensemble.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "index", "ensemble_id", name="uq_realization_index_ensemble_id"
        ),
    )
    op.create_table(
        "response_definition",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("indices", sa.PickleType(), nullable=True),
        sa.Column("ensemble_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ensemble_id"],
            ["ensemble.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "name", "ensemble_id", name="uq_response_definiton_name_ensemble_id"
        ),
    )
    op.create_table(
        "update",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("algorithm", sa.String(), nullable=False),
        sa.Column("ensemble_reference_id", sa.Integer(), nullable=False),
        sa.Column("ensemble_result_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ensemble_reference_id"],
            ["ensemble.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ensemble_result_id"],
            ["ensemble.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("ensemble_result_id", name="uq_update_result_id"),
    )
    op.create_table(
        "observation_response_definition_link",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("response_definition_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.PickleType(), nullable=True),
        sa.Column("observation_id", sa.Integer(), nullable=True),
        sa.Column("update_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["observation_id"],
            ["observation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["response_definition_id"],
            ["response_definition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["update_id"],
            ["update.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "response_definition_id",
            "observation_id",
            "update_id",
            name="uq_observation_response_definition_link_response_definition_id_observation_id_update_id",
        ),
    )
    op.create_table(
        "parameter",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("value", sa.PickleType(), nullable=True),
        sa.Column("realization_id", sa.Integer(), nullable=False),
        sa.Column("parameter_definition_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parameter_definition_id"],
            ["parameter_definition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["realization_id"],
            ["realization.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "realization_id",
            "parameter_definition_id",
            name="uq_parameter_realization_id_parameter_definition_id",
        ),
    )
    op.create_table(
        "response",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("values", sa.PickleType(), nullable=True),
        sa.Column("realization_id", sa.Integer(), nullable=False),
        sa.Column("response_definition_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["realization_id"],
            ["realization.id"],
        ),
        sa.ForeignKeyConstraint(
            ["response_definition_id"],
            ["response_definition.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "realization_id",
            "response_definition_id",
            name="uq_response_realization_id_reponse_defition_id",
        ),
    )
    op.create_table(
        "misfit",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("response_id", sa.Integer(), nullable=False),
        sa.Column(
            "observation_response_definition_link_id", sa.Integer(), nullable=True
        ),
        sa.Column("value", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["observation_response_definition_link_id"],
            ["observation_response_definition_link.id"],
        ),
        sa.ForeignKeyConstraint(
            ["response_id"],
            ["response.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "response_id",
            "observation_response_definition_link_id",
            name="uq_misfit_response_id_observation_response_definition_link_id",
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("misfit")
    op.drop_table("response")
    op.drop_table("parameter")
    op.drop_table("observation_response_definition_link")
    op.drop_table("update")
    op.drop_table("response_definition")
    op.drop_table("realization")
    op.drop_table("prior_ensemble_association_table")
    op.drop_table("parameter_definition")
    op.drop_table("observation_attribute")
    op.drop_table("ensemble")
    op.drop_table("project")
    op.drop_table("parameter_prior")
    op.drop_table("observation")
    op.drop_table("attribute_value")
    # ### end Alembic commands ###
