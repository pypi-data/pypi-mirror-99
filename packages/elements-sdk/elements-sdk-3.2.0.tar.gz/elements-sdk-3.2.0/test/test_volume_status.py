# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.volume_status import VolumeStatus  # noqa: E501
from elements_sdk.rest import ApiException

class TestVolumeStatus(unittest.TestCase):
    """VolumeStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VolumeStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.volume_status.VolumeStatus()  # noqa: E501
        if include_optional :
            return VolumeStatus(
                online = True, 
                size_total = 56, 
                size_used = 56, 
                size_free = 56, 
                snfs = elements_sdk.models.volume_snfs_status.VolumeSNFSStatus(
                    stripe_groups = [
                        elements_sdk.models.snfs_stripe_group.SNFSStripeGroup(
                            name = '0', 
                            status_tags = [
                                '0'
                                ], 
                            affinity = '0', 
                            size_total = 56, 
                            size_used = 56, 
                            size_free = 56, )
                        ], ), 
                lizardfs = elements_sdk.models.volume_lizard_fs_status.VolumeLizardFSStatus(
                    master = elements_sdk.models.storage_node_mini.StorageNodeMini(
                        id = 56, 
                        name = '0', 
                        address = '0', 
                        type = 56, ), 
                    nodes = [
                        elements_sdk.models.lizard_fs_node.LizardFSNode(
                            node = elements_sdk.models.storage_node_mini.StorageNodeMini(
                                id = 56, 
                                name = '0', 
                                address = '0', 
                                type = 56, ), 
                            host = '0', 
                            online = True, 
                            version = '0', 
                            chunks = 56, 
                            size_total = 56, 
                            size_used = 56, 
                            size_free = 56, 
                            chunks_for_removal = 56, 
                            label = '0', )
                        ], 
                    disks = [
                        elements_sdk.models.lizard_fs_disk.LizardFSDisk(
                            host = '0', 
                            mountpoint = '0', 
                            to_delete = True, 
                            damaged = True, 
                            scanning = True, 
                            error_chunk = 56, 
                            error_timestamp = 56, 
                            size_total = 56, 
                            size_used = 56, 
                            size_free = 56, 
                            chunks = 56, )
                        ], ), 
                beegfs = elements_sdk.models.volume_bee_gfs_status.VolumeBeeGFSStatus(
                    nodes = [
                        elements_sdk.models.bee_gfs_node.BeeGFSNode(
                            node = elements_sdk.models.storage_node_mini.StorageNodeMini(
                                id = 56, 
                                name = '0', 
                                address = '0', 
                                type = 56, ), 
                            host = '0', 
                            roles = [
                                '0'
                                ], 
                            addresses = [
                                '0'
                                ], )
                        ], 
                    targets = [
                        elements_sdk.models.bee_gfs_target.BeeGFSTarget(
                            id = 56, 
                            host = '0', 
                            storage_pool = 56, 
                            size_total = 56, 
                            size_used = 56, 
                            size_free = 56, 
                            online = True, 
                            consistent = True, 
                            errors = [
                                '0'
                                ], )
                        ], )
            )
        else :
            return VolumeStatus(
                online = True,
                size_total = 56,
                size_used = 56,
                size_free = 56,
        )

    def testVolumeStatus(self):
        """Test VolumeStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
