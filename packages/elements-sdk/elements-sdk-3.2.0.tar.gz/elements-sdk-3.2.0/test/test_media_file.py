# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.media_file import MediaFile  # noqa: E501
from elements_sdk.rest import ApiException

class TestMediaFile(unittest.TestCase):
    """MediaFile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MediaFile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.media_file.MediaFile()  # noqa: E501
        if include_optional :
            return MediaFile(
                id = 56, 
                volume = elements_sdk.models.volume.Volume(
                    id = 56, 
                    name = '0', 
                    path = '0', 
                    display_name = '0', 
                    visual_tag = '0', 
                    type = 'generic', ), 
                info = elements_sdk.models.info.Info(), 
                custom_fields = elements_sdk.models.custom_fields.Custom fields(), 
                resolved_permission = elements_sdk.models.resolved_permission.Resolved permission(
                    id = 56, 
                    user = elements_sdk.models.elements_user_mini.ElementsUserMini(
                        id = 56, 
                        avatar = '0', 
                        display_name = '0', 
                        email = '0', 
                        full_name = '0', 
                        is_anonymous = '0', 
                        is_cloud = True, 
                        username = '0', ), 
                    group = elements_sdk.models.elements_group.ElementsGroup(
                        id = 56, 
                        permissions = [
                            '0'
                            ], 
                        members_preview = [
                            elements_sdk.models.member_preview.MemberPreview(
                                id = 56, 
                                avatar = '0', 
                                email = '0', )
                            ], 
                        effective_permissions = [
                            '0'
                            ], 
                        name = '0', 
                        ldap_dn = '0', 
                        unix_groupname = '0', 
                        gid = -2147483648, 
                        ancillary_path = '0', 
                        ancillary_path_read_only = True, 
                        ldap = 56, 
                        members = [
                            56
                            ], ), 
                    full_path = '0', 
                    path = '0', 
                    allow_create = True, 
                    allow_write_fs = True, 
                    allow_write_db = True, 
                    allow_proxy_download = True, 
                    allow_original_download = True, 
                    allow_upload = True, 
                    allow_sharing = True, 
                    allow_delete_fs = True, 
                    allow_delete_db = True, 
                    show_tags = True, 
                    show_comments = True, 
                    show_locations = True, 
                    show_custom_fields = True, 
                    show_ratings = True, 
                    show_subclips = True, 
                    show_ai_metadata = True, 
                    show_markers = True, 
                    root = 56, ), 
                parent = '0', 
                root = elements_sdk.models.root.Root(
                    id = 56, 
                    name = '0', 
                    full_path = '0', 
                    custom_fields = [
                        elements_sdk.models.custom_field.CustomField(
                            id = 56, 
                            labels = [
                                '0'
                                ], 
                            options = [
                                '0'
                                ], 
                            name = '0', 
                            order = -2147483648, 
                            type = '0', 
                            use_for_uploads = True, 
                            require_to_upload = True, 
                            non_user_editable = True, 
                            validation = 'number_of_digits', 
                            regex = '0', 
                            range_min = -2147483648, 
                            range_max = -2147483648, 
                            number_of_digits = -2147483648, 
                            metadata_prefill = '0', 
                            highlight_expiration = True, 
                            multiple_response = True, )
                        ], 
                    custom_field_definitions = [
                        56
                        ], 
                    volume = elements_sdk.models.volume.Volume(
                        id = 56, 
                        name = '0', 
                        path = '0', 
                        display_name = '0', 
                        visual_tag = '0', 
                        type = 'generic', ), 
                    path = '0', 
                    prefetch_thumbnail_strips = True, ), 
                effective_custom_fields = {
                    'key' : '0'
                    }, 
                modified_by = elements_sdk.models.elements_user_mini.ElementsUserMini(
                    id = 56, 
                    avatar = '0', 
                    display_name = '0', 
                    email = '0', 
                    full_name = '0', 
                    is_anonymous = '0', 
                    is_cloud = True, 
                    username = '0', ), 
                full_path = '0', 
                search_highlight = '0', 
                name = '0', 
                path = '0', 
                pathhash = '0', 
                is_dir = True, 
                total_files = -2147483648, 
                size = 56, 
                mtime = 56, 
                present = True, 
                needs_rescan = True, 
                is_showroom = True, 
                bundle_index = 56, 
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                bundle = 56
            )
        else :
            return MediaFile(
        )

    def testMediaFile(self):
        """Test MediaFile"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
