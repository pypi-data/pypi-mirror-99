# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.mounted_workspace import MountedWorkspace  # noqa: E501
from elements_sdk.rest import ApiException

class TestMountedWorkspace(unittest.TestCase):
    """MountedWorkspace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MountedWorkspace
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.mounted_workspace.MountedWorkspace()  # noqa: E501
        if include_optional :
            return MountedWorkspace(
                id = 56, 
                workspace = elements_sdk.models.workspace.Workspace(
                    id = 56, 
                    name = '0', 
                    production = elements_sdk.models.production.Production(
                        id = 56, 
                        name = '0', ), ), 
                mountpoint = '0', 
                address = '0', 
                protocol = '0', 
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                user = 56, 
                client_session = 56
            )
        else :
            return MountedWorkspace(
                workspace = elements_sdk.models.workspace.Workspace(
                    id = 56, 
                    name = '0', 
                    production = elements_sdk.models.production.Production(
                        id = 56, 
                        name = '0', ), ),
                address = '0',
                user = 56,
        )

    def testMountedWorkspace(self):
        """Test MountedWorkspace"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
