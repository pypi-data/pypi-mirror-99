# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.volume_lizard_fs_status import VolumeLizardFSStatus  # noqa: E501
from elements_sdk.rest import ApiException

class TestVolumeLizardFSStatus(unittest.TestCase):
    """VolumeLizardFSStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VolumeLizardFSStatus
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.volume_lizard_fs_status.VolumeLizardFSStatus()  # noqa: E501
        if include_optional :
            return VolumeLizardFSStatus(
                master = elements_sdk.models.storage_node_mini.StorageNodeMini(
                    id = 56, 
                    name = '0', 
                    address = '0', 
                    type = 56, ), 
                nodes = [
                    elements_sdk.models.lizard_fs_node.LizardFSNode(
                        node = elements_sdk.models.storage_node_mini.StorageNodeMini(
                            id = 56, 
                            name = '0', 
                            address = '0', 
                            type = 56, ), 
                        host = '0', 
                        online = True, 
                        version = '0', 
                        chunks = 56, 
                        size_total = 56, 
                        size_used = 56, 
                        size_free = 56, 
                        chunks_for_removal = 56, 
                        label = '0', )
                    ], 
                disks = [
                    elements_sdk.models.lizard_fs_disk.LizardFSDisk(
                        node = elements_sdk.models.storage_node_mini.StorageNodeMini(
                            id = 56, 
                            name = '0', 
                            address = '0', 
                            type = 56, ), 
                        host = '0', 
                        mountpoint = '0', 
                        to_delete = True, 
                        damaged = True, 
                        scanning = True, 
                        error_chunk = 56, 
                        error_timestamp = 56, 
                        size_total = 56, 
                        size_used = 56, 
                        size_free = 56, 
                        chunks = 56, )
                    ]
            )
        else :
            return VolumeLizardFSStatus(
                master = elements_sdk.models.storage_node_mini.StorageNodeMini(
                    id = 56, 
                    name = '0', 
                    address = '0', 
                    type = 56, ),
                nodes = [
                    elements_sdk.models.lizard_fs_node.LizardFSNode(
                        node = elements_sdk.models.storage_node_mini.StorageNodeMini(
                            id = 56, 
                            name = '0', 
                            address = '0', 
                            type = 56, ), 
                        host = '0', 
                        online = True, 
                        version = '0', 
                        chunks = 56, 
                        size_total = 56, 
                        size_used = 56, 
                        size_free = 56, 
                        chunks_for_removal = 56, 
                        label = '0', )
                    ],
                disks = [
                    elements_sdk.models.lizard_fs_disk.LizardFSDisk(
                        node = elements_sdk.models.storage_node_mini.StorageNodeMini(
                            id = 56, 
                            name = '0', 
                            address = '0', 
                            type = 56, ), 
                        host = '0', 
                        mountpoint = '0', 
                        to_delete = True, 
                        damaged = True, 
                        scanning = True, 
                        error_chunk = 56, 
                        error_timestamp = 56, 
                        size_total = 56, 
                        size_used = 56, 
                        size_free = 56, 
                        chunks = 56, )
                    ],
        )

    def testVolumeLizardFSStatus(self):
        """Test VolumeLizardFSStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
