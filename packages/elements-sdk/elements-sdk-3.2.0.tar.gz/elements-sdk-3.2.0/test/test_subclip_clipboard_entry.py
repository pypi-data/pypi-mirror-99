# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.subclip_clipboard_entry import SubclipClipboardEntry  # noqa: E501
from elements_sdk.rest import ApiException

class TestSubclipClipboardEntry(unittest.TestCase):
    """SubclipClipboardEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SubclipClipboardEntry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.subclip_clipboard_entry.SubclipClipboardEntry()  # noqa: E501
        if include_optional :
            return SubclipClipboardEntry(
                id = 56, 
                cut = elements_sdk.models.subclip.Subclip(
                    id = 56, 
                    asset = elements_sdk.models.asset_mini.AssetMini(
                        id = 56, 
                        sync_id = '0', 
                        default_proxy = elements_sdk.models.urls.Urls(
                            id = 56, 
                            urls = {
                                'key' : '0'
                                }, 
                            profile = elements_sdk.models.profile.Profile(
                                id = 56, 
                                name = '0', ), 
                            failed_reason = '0', 
                            generated = True, 
                            failed = True, 
                            name = '0', 
                            variant_id = 'default', 
                            variant_config = '0', 
                            asset = 56, ), 
                        urls = elements_sdk.models.urls.Urls(
                            id = 56, 
                            failed_reason = '0', 
                            generated = True, 
                            failed = True, 
                            name = '0', 
                            variant_id = 'default', 
                            variant_config = '0', 
                            asset = 56, ), 
                        type = '0', 
                        display_name = '0', 
                        info = {
                            'key' : '0'
                            }, 
                        thumbnail_generated = True, ), 
                    shared = True, 
                    date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '0', 
                    t_in = 1.337, 
                    t_out = 1.337, 
                    user = 56, 
                    root = elements_sdk.models.root.Root(
                        id = 56, 
                        name = '0', 
                        full_path = '0', 
                        custom_fields = [
                            elements_sdk.models.custom_field.CustomField(
                                id = 56, 
                                labels = [
                                    '0'
                                    ], 
                                options = [
                                    '0'
                                    ], 
                                name = '0', 
                                order = -2147483648, 
                                type = '0', 
                                use_for_uploads = True, 
                                require_to_upload = True, 
                                non_user_editable = True, 
                                validation = 'number_of_digits', 
                                regex = '0', 
                                range_min = -2147483648, 
                                range_max = -2147483648, 
                                number_of_digits = -2147483648, 
                                metadata_prefill = '0', 
                                highlight_expiration = True, 
                                multiple_response = True, )
                            ], 
                        custom_field_definitions = [
                            56
                            ], 
                        volume = elements_sdk.models.volume.Volume(
                            id = 56, 
                            name = '0', 
                            path = '0', 
                            display_name = '0', 
                            visual_tag = '0', 
                            type = 'generic', ), 
                        path = '0', 
                        prefetch_thumbnail_strips = True, ), ), 
                bundle = elements_sdk.models.media_file_bundle_mini.MediaFileBundleMini(
                    id = 56, 
                    asset = 56, 
                    name = '0', 
                    location = 56, 
                    mainfile = elements_sdk.models.mainfile.Mainfile(
                        id = 56, 
                        name = '0', 
                        bundle = 56, 
                        full_path = '0', 
                        custom_fields = elements_sdk.models.custom_fields.Custom fields(), 
                        mtime = 56, 
                        parent = '0', 
                        path = '0', 
                        present = True, 
                        size = 56, 
                        volume = elements_sdk.models.volume.Volume(
                            id = 56, 
                            name = '0', 
                            path = '0', 
                            display_name = '0', 
                            visual_tag = '0', 
                            type = 'generic', ), ), ), 
                date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return SubclipClipboardEntry(
                cut = elements_sdk.models.subclip.Subclip(
                    id = 56, 
                    asset = elements_sdk.models.asset_mini.AssetMini(
                        id = 56, 
                        sync_id = '0', 
                        default_proxy = elements_sdk.models.urls.Urls(
                            id = 56, 
                            urls = {
                                'key' : '0'
                                }, 
                            profile = elements_sdk.models.profile.Profile(
                                id = 56, 
                                name = '0', ), 
                            failed_reason = '0', 
                            generated = True, 
                            failed = True, 
                            name = '0', 
                            variant_id = 'default', 
                            variant_config = '0', 
                            asset = 56, ), 
                        urls = elements_sdk.models.urls.Urls(
                            id = 56, 
                            failed_reason = '0', 
                            generated = True, 
                            failed = True, 
                            name = '0', 
                            variant_id = 'default', 
                            variant_config = '0', 
                            asset = 56, ), 
                        type = '0', 
                        display_name = '0', 
                        info = {
                            'key' : '0'
                            }, 
                        thumbnail_generated = True, ), 
                    shared = True, 
                    date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '0', 
                    t_in = 1.337, 
                    t_out = 1.337, 
                    user = 56, 
                    root = elements_sdk.models.root.Root(
                        id = 56, 
                        name = '0', 
                        full_path = '0', 
                        custom_fields = [
                            elements_sdk.models.custom_field.CustomField(
                                id = 56, 
                                labels = [
                                    '0'
                                    ], 
                                options = [
                                    '0'
                                    ], 
                                name = '0', 
                                order = -2147483648, 
                                type = '0', 
                                use_for_uploads = True, 
                                require_to_upload = True, 
                                non_user_editable = True, 
                                validation = 'number_of_digits', 
                                regex = '0', 
                                range_min = -2147483648, 
                                range_max = -2147483648, 
                                number_of_digits = -2147483648, 
                                metadata_prefill = '0', 
                                highlight_expiration = True, 
                                multiple_response = True, )
                            ], 
                        custom_field_definitions = [
                            56
                            ], 
                        volume = elements_sdk.models.volume.Volume(
                            id = 56, 
                            name = '0', 
                            path = '0', 
                            display_name = '0', 
                            visual_tag = '0', 
                            type = 'generic', ), 
                        path = '0', 
                        prefetch_thumbnail_strips = True, ), ),
        )

    def testSubclipClipboardEntry(self):
        """Test SubclipClipboardEntry"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
