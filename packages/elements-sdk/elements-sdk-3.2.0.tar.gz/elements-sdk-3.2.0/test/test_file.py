# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.file import File  # noqa: E501
from elements_sdk.rest import ApiException

class TestFile(unittest.TestCase):
    """File unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test File
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.file.File()  # noqa: E501
        if include_optional :
            return File(
                path = '0', 
                name = '0', 
                size = 56, 
                total_size = 56, 
                is_dir = True, 
                files = [
                    elements_sdk.models.basic_file.BasicFile(
                        path = '0', 
                        name = '0', 
                        size = 56, 
                        total_size = 56, 
                        is_dir = True, 
                        files = [
                            elements_sdk.models.recursive_field.RecursiveField()
                            ], )
                    ], 
                parent = '0', 
                modification_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                access_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                mode = '0', 
                uid = 56, 
                gid = 56, 
                user = '0', 
                group = '0', 
                recursive = True, 
                affinity = '0', 
                mode_setuid = True, 
                mode_setgid = True, 
                mode_setvfx = True, 
                mode_user_read = True, 
                mode_user_write = True, 
                mode_user_execute = True, 
                mode_group_read = True, 
                mode_group_write = True, 
                mode_group_execute = True, 
                mode_others_read = True, 
                mode_others_write = True, 
                mode_others_execute = True
            )
        else :
            return File(
                name = '0',
                parent = '0',
        )

    def testFile(self):
        """Test File"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
