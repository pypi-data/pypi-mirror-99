# coding: utf-8

"""
    ELEMENTS API

    The version of the OpenAPI document: 2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import elements_sdk
from elements_sdk.models.workspace_partial_update import WorkspacePartialUpdate  # noqa: E501
from elements_sdk.rest import ApiException

class TestWorkspacePartialUpdate(unittest.TestCase):
    """WorkspacePartialUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test WorkspacePartialUpdate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = elements_sdk.models.workspace_partial_update.WorkspacePartialUpdate()  # noqa: E501
        if include_optional :
            return WorkspacePartialUpdate(
                production = elements_sdk.models.production.Production(
                    id = 56, 
                    is_special = True, 
                    special_type = 56, 
                    name = '0', 
                    obscure_name = True, 
                    description = '0', 
                    long_description = '0', 
                    active = True, 
                    template = 56, 
                    default_group = 56, ), 
                volume = elements_sdk.models.volume.Volume(
                    id = 56, 
                    name = '0', 
                    path = '0', 
                    nodes = [
                        56
                        ], 
                    display_name = '0', 
                    visual_tag = '0', 
                    is_default = True, 
                    use_for_homes = True, 
                    use_for_workspaces = True, 
                    type = 'generic', 
                    snm_enabled = True, 
                    snfs_name = '0', 
                    simulated_quotas = True, 
                    fs_properties = elements_sdk.models.fs_properties.Fs properties(
                        supports_quotas = True, 
                        supports_soft_quotas = True, 
                        supports_user_quotas = True, 
                        supports_group_quotas = True, 
                        supports_xattrs = True, 
                        supports_snapshots = True, 
                        creating_quota_destroys_content = True, 
                        removing_quota_destroys_content = True, ), 
                    backend = elements_sdk.models.backend.Backend(
                        name = '0', 
                        properties = elements_sdk.models.properties.Properties(
                            supports_sharing_rw_permissions_priority = True, 
                            supports_sharing_afp = True, 
                            supports_sharing_smb_require_logon = True, 
                            supports_sharing_smb_recycle_bin = True, 
                            supports_sharing_smb_xattrs = True, 
                            supports_sharing_smb_symlinks = True, 
                            supports_sharing_smb_custom_options = True, 
                            supports_sharing_nfs_permissions = True, ), ), ), 
                sharing_nfs_permissions = elements_sdk.models.sharing_nfs_permissions.Sharing nfs permissions(), 
                name = '0', 
                description = '0', 
                long_description = '0', 
                is_template = True, 
                active = True, 
                mac_protocol = 'smb', 
                win_protocol = 'disk', 
                win_drive = 'a', 
                linux_protocol = 'smb', 
                linux_mountpoint = '0', 
                share_name = '0', 
                share_nfs = True, 
                share_afp = True, 
                sharing_hidden = True, 
                sharing_require_login = True, 
                sharing_read_only = True, 
                sharing_allow_execute = True, 
                quota_size_hard = -9223372036854775808, 
                quota_size_soft = -9223372036854775808, 
                affinity = '0', 
                emulate_avid = True, 
                emulate_capture = True, 
                emulate_preopen = True, 
                emulate_ntfs_streams = True, 
                emulate_recycle_bin = True, 
                emulate_fruit = True, 
                smb_extra_config = '0', 
                afp_extra_config = '0', 
                recycle_bin_exclude = '0', 
                is_external = True, 
                external_mac_url = '0', 
                external_win_url = '0', 
                external_linux_url = '0', 
                allow_symlinks = True, 
                rw_permission_priority = True, 
                template = 56
            )
        else :
            return WorkspacePartialUpdate(
        )

    def testWorkspacePartialUpdate(self):
        """Test WorkspacePartialUpdate"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
